Description: Upstream changes introduced in version 1.2.3-87-gf7d8711-1~ppa1~maverick1
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 mumble (1.2.3-87-gf7d8711-1~ppa1~maverick1) maverick; urgency=low
 .
   * PPA Upload of 1.2.3-87-gf7d8711 for Ubuntu maverick
 .
 The person named in the Author field signed this changelog entry.
Author: Thorvald Natvig <thorvald@debian.org>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- mumble-1.2.3-87-gf7d8711.orig/LICENSE
+++ mumble-1.2.3-87-gf7d8711/LICENSE
@@ -1,12 +1,12 @@
-Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 Copyright (C) 2007, Stefan Gehn <mETz AT gehn DOT net>
 Copyright (C) 2007, Sebastian Schlingmann <mit_service@users.sourceforge.net>
-Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+Copyright (C) 2008-2010, Mikkel Krautz <mikkel@krautz.dk>
 Copyright (C) 2008, Andreas Messer <andi@bupfen.de>
 Copyright (C) 2007, Trenton Schulz
-Copyright (C) 2008-2011, Stefan Hacker <dd0t@users.sourceforge.net>
-Copyright (C) 2008-2011, Snares <snares@users.sourceforge.net>
-Copyright (C) 2009-2011, Benjamin Jemlich <pcgod@users.sourceforge.net>
+Copyright (C) 2008-2010, Stefan Hacker <dd0t@users.sourceforge.net>
+Copyright (C) 2008-2010, Snares <snares@users.sourceforge.net>
+Copyright (C) 2009-2010, Benjamin Jemlich <pcgod@users.sourceforge.net>
 
 All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/main.pro
+++ mumble-1.2.3-87-gf7d8711/main.pro
@@ -1,5 +1,5 @@
 TEMPLATE = subdirs
-CONFIG *= ordered debug_and_release
+CONFIG *= ordered debug_and_release no-11x no-plugins no-g15 no-overlay 
 
 !CONFIG(no-client) {
   unix:!CONFIG(bundled-speex):system(pkg-config --atleast-version=1.2 speexdsp) {
@@ -14,6 +14,9 @@ CONFIG *= ordered debug_and_release
   !CONFIG(no-bundled-celt) {
     SUBDIRS *= celt-0.7.0-build celt-0.11.0-build
   }
+  !CONFIG(no-11x) {
+    SUBDIRS *= src/mumble11x
+  }
 
   SUBDIRS *= src/mumble
 
@@ -48,6 +51,10 @@ CONFIG *= ordered debug_and_release
   SUBDIRS *= src/murmur
 }
 
+!CONFIG(no-actd) {
+  SUBDIRS *= src/actd
+}
+
 DIST=LICENSE INSTALL README README.Linux CHANGES
 
 include(scripts/scripts.pro)
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/NDN_CHANGES
@@ -0,0 +1,620 @@
+commit 7757c89ca4178f9c0f7cd55e7f7346d4e815fed7
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri Jun 3 01:02:26 2011 -0700
+
+    add murmur.pro
+
+commit 7aef3d37e02470cbe0234b88ee81a81a74a506e4
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri Jun 3 00:43:00 2011 -0700
+
+    delete
+
+commit edb088bcf72a952e4511521fa8189a3506412192
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Jun 2 22:48:27 2011 -0700
+
+    delete files that are not modified by us
+
+commit 421281f85026346c509c3024314a03660f3351d3
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Mon May 30 22:17:22 2011 -0700
+
+    adjust debug info
+
+commit 86c4a582d5bce682d9fbbb534e49730e4fd593bb
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Mon May 30 22:01:09 2011 -0700
+
+    add debug
+
+commit 6049763dc8c0d515bd1cbb674ffa8c775a5891bb
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Mon May 30 21:47:08 2011 -0700
+
+    Revert "send interest in batch mode"
+    
+    This reverts commit 24346909d04cfabb557eda981f76eafacae93ef5.
+
+commit 24346909d04cfabb557eda981f76eafacae93ef5
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Mon May 30 11:01:42 2011 -0700
+
+    send interest in batch mode
+
+commit ede48f02c91f1e2c21d247a2a509dcc86c64f81b
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri May 27 13:15:49 2011 -0700
+
+    remove useless code
+
+commit a1879647e051326b9881fa8a7332f897046f12a3
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri May 27 11:37:33 2011 -0700
+
+    simplify the test for to see whether it is the first interest
+
+commit 18ce4b0cf6c3ed3cc427c5ede132238e8508293f
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri May 27 11:33:30 2011 -0700
+
+    reexpress the first Interest if lost
+
+commit b35e9238ba77229d7dc8015680a4d359a51299cc
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri May 27 11:09:45 2011 -0700
+
+    do not send periodical interest if seq < 0
+
+commit d3e024639ab7cfb9bef699563aaa871e961c2fd2
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri May 27 10:55:02 2011 -0700
+
+    fix signed_info bug
+
+commit 12fa77c460f5f53573efba7adf755e0401dab12d
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri May 27 00:37:19 2011 -0700
+
+    fix keystore init bu
+
+commit aac9514c920a0b57a685c24522ba5891636f8fa2
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri May 27 00:34:19 2011 -0700
+
+    save signed_info
+
+commit 72cc4512b8ff26529bdf425aee0d5eb11f84b9a8
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri May 27 00:24:01 2011 -0700
+
+    udp behavior; del C style name and related func in UserDataBuf
+
+commit ae2988c2e6ac48c330bfd8c2244599852665a636
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu May 26 19:51:38 2011 -0700
+
+    udp behavior
+
+commit dab0ee67439fcfde3ab91433a199cd2b13b5113f
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu May 26 17:03:29 2011 -0700
+
+    still fighting with the free bug
+
+commit 20ccf537819ad2d1b35ec6a634731a76a0042040
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu May 26 16:48:14 2011 -0700
+
+    debugging weird memory bug
+
+commit f464d7ab4a606c41256a129c9d847ce7afd7f7f4
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu May 26 15:50:00 2011 -0700
+
+    fix ccn init bug
+
+commit dca3199f6fb22cbfc28e7e99b47b868b2b758208
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu May 26 15:23:42 2011 -0700
+
+    re-structure GroupManager
+
+commit 9e2793702706a14a56fd6685590fa2dbedf4fdcf
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu May 26 12:47:50 2011 -0700
+
+    free memory bug fixed
+
+commit 184085bff25c879fc679e8616812a4c225e0bea0
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri May 20 15:05:36 2011 -0700
+
+    200
+
+commit 0634c64cd9219609851f68860ecff71268e4b2f6
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri May 20 15:02:24 2011 -0700
+
+    hint_ahead = 100
+
+commit fe6a7c2365415ca698da549cb7dffe44b51d3996
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri May 20 14:21:10 2011 -0700
+
+    fetch next via exclude filter
+
+commit efc6e5c115f758048b8a3c6d321a97479aa524b6
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu May 19 20:07:55 2011 -0700
+
+    modified default permission of user
+
+commit f4cbb8154be56014fd76096d93a9b854338b2b51
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue May 17 17:55:29 2011 -0700
+
+    free buffer after decryption
+
+commit 3a1fecb49f884aa7cd615e9be6b3e90984a88a7e
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue May 17 17:43:22 2011 -0700
+
+    correctly handle user leave (normal works)
+
+commit d0efe07d442ece0f43211d574b8813d95be45451
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue May 17 15:10:41 2011 -0700
+
+    init NdnContext after we read the config file
+
+commit af9de56eb9cd13e763eaa0d9ab2a98974fbecb3a
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue May 17 00:22:22 2011 -0700
+
+    read config from ~/.actd/.config in xml format
+
+commit a6a9181c65902ba4881c6428b6b6fd827f6eb6b9
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu May 12 17:18:46 2011 -0700
+
+    enumerate before start voice thread; mysterious bug seems to be disappeared as a result (ran 30 tests and the bug did not happen, and it usually happens within 15 tests)
+
+commit c27bb3db89ceb958829952926aad7ada60dde7ae
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu May 12 17:03:07 2011 -0700
+
+    add enc/dec for private conferences
+
+commit 257ed677742513bdd69f9832caaccb8529b0d374
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu May 12 15:58:01 2011 -0700
+
+    set isPrivate for G/M; key for G/M
+
+commit 4001549be1224c6121afe8710fc3dfb3ac5076b8
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu May 12 15:33:27 2011 -0700
+
+    add debug for the mysterious bug (interest-corrupted); but does not help much: the interests are the same!!
+
+commit 6965025781cc371990ddca3cd5e47a78435ada0a
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu May 12 13:27:17 2011 -0700
+
+    init cached_keystore before use
+
+commit 4bc66fea0ce8b08b4cc4a0e8cd38a178f2e86ed3
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu May 5 14:08:16 2011 -0700
+
+    add keylocator
+
+commit ff8956feb0dcfc7a51bf94a49dd39b32bfdbdec8
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue Apr 19 13:07:57 2011 -0700
+
+    add description of the interest corrupt bug
+
+commit 6256736d0f696add5e63e8eacc43ecec4ca569c5
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue Apr 19 12:49:34 2011 -0700
+
+    include conf name in interest
+
+commit 588b286dedf0db923e4dcba993aed672a560de93
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Mon Apr 18 16:21:02 2011 -0700
+
+    change readme
+
+commit f1fb2f1c463bce5f7f5025f395c07fa2ea9331ae
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Apr 14 21:09:24 2011 -0700
+
+    user conference in name
+
+commit 89cffe2fc42048dced0e6d70765a3a7ef15a5d66
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Apr 14 20:59:37 2011 -0700
+
+    actually use leave handler
+
+commit 6123fdcba42acebbc9b600ea9ce4eece593d23b1
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Apr 14 20:52:20 2011 -0700
+
+    send leave
+
+commit f1bf325eee638dced2f59cffc63795b1d6da9759
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Apr 14 20:47:37 2011 -0700
+
+    enable leave
+
+commit 21207f4163637f53638a6b7109a4174d1bfed27a
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Apr 14 18:52:18 2011 -0700
+
+    it works! fix bug (infinite loop in iterating qmRemoteUsers)
+
+commit 5c181081addef9b60e81292ceac2afcde066f6bf
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Apr 14 18:25:21 2011 -0700
+
+    whatever
+
+commit 7b86f548f24e5ebfbc57c1eac661869b5030ede6
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Apr 14 16:28:39 2011 -0700
+
+    media seq set init to 0
+
+commit 58e0f88709d8af8bcd436fe2f46dd809abbf39f3
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Apr 14 16:11:16 2011 -0700
+
+    add debug infor
+
+commit 8ddfdadc77abf4140f0a21f8c96d28a834a07cd1
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Apr 14 13:37:37 2011 -0700
+
+    disable feature of skipping segment in mediapro
+
+commit 0de9efab5b97bc9acfb6c95cec97f3af230a1b88
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Apr 14 13:13:47 2011 -0700
+
+    fix small bug about name and prefix
+
+commit 0865687ee7b37df5745cbc657d5dfdb4a0b3ca52
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Apr 14 13:01:44 2011 -0700
+
+    fix bug that swap user and prefix
+
+commit 4ffd06efbdfcd5c082c70dc43f2b811407db2107
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Apr 13 23:54:45 2011 -0700
+
+    do not send interest when timed out; use timer to trigger
+
+commit ed4d6862c56dfdf0e9bb3ea8f38eab5dd578ff65
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Apr 13 21:19:16 2011 -0700
+
+    nothing much
+
+commit b77374518d9bc21ba92e0ce703a950c243fe621c
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Apr 13 20:52:34 2011 -0700
+
+    fix bug about content name
+
+commit e97158ba7b953e0ccda455d0f32086fbf9bb68ab
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Apr 13 20:41:31 2011 -0700
+
+    get rid of exit added for debug
+
+commit 2f5923ec9019a1d344dd839dd65bbefab2fefa85
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Apr 13 20:39:24 2011 -0700
+
+    temporarily remove channel from interest for debugging
+
+commit 56ecd30740070a91617c18c1d0ddc5576b676496
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Apr 13 19:54:49 2011 -0700
+
+    server exits when the connect is torn down
+
+commit e5094991204641c2c8f8c02505c5215c70eb002c
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Apr 13 19:21:01 2011 -0700
+
+    store username in Groupmanager
+
+commit 2b07dcb733b21ff32e4e12507ea30f8b5fed2a3a
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Apr 13 17:55:01 2011 -0700
+
+    get rid of DBus in .pro. Fix crash caused by pNdnContex
+
+commit 516b832063582737031c7248c322ff4f9aaae546
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Apr 13 17:02:41 2011 -0700
+
+    fix bugs about names of remote users
+
+commit 6abacd764d82162c794df10395f037f5fdfed190
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue Apr 12 20:06:50 2011 -0700
+
+    it runs
+
+commit 62db1751bc7e053ef6fe440385c49049c1aa2f48
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue Apr 12 16:56:17 2011 -0700
+
+    almost compiles
+
+commit 8b18f37d185837570fc984024379ec50c97aff63
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Mon Apr 11 23:13:49 2011 -0700
+
+    1. remove timers in RemoteUser class. 2. get rid of signal interests (used to announce conference and do the refresh), except leave interest. 3. get rid of a large amount of unnessary code (may be several hundreds lines). 4. revision unfinished (need to sleep). 5. oh man, the new design is much simpler to implement! especially after I implemented the conference management tool!
+
+commit 008ebf83491792ebba7fa24a6e9467b72df51578
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Feb 23 20:25:07 2011 -0800
+
+    fix the leave interest bug (channel comp incomplete)
+
+commit ce346a005c03486c30a74a630b1407e2752b83a2
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Feb 23 16:52:03 2011 -0800
+
+    basically revert the effect of commit "add FINAL statement to ccn upcall"
+
+commit 83eec4732c4a00ab8b4d440e7ed592ae6946fba3
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Feb 23 15:58:20 2011 -0800
+
+    disabled the QMutexes in GroupManager and MediaProcessor
+
+commit 39d7588ed3b61535d74bc817fa88c08a472f8182
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Feb 23 15:09:44 2011 -0800
+
+    diable passive templ on GroupManager; set freshness in GroupManager to be 10 seconds
+
+commit 3bc9a9370fee9f52c8ec4103eb651695946788e0
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Feb 23 12:48:51 2011 -0800
+
+    changed ACL.cpp to grant "MakeTempChannel" permission
+
+commit 9b9d55cc3b9f82a30b6e4d5f8a4e3136e76c3975
+Merge: de5228c b084e2e
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Feb 23 11:56:22 2011 -0800
+
+    Merge branch 'tdd' of github.com:zhenkai/nurnur into tdd
+
+commit de5228c4ace5bc52c24e690dfac028f29ee17130
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Feb 23 11:55:38 2011 -0800
+
+    add change log (NDN_CHANGES)
+
+commit b084e2e11d63ab86e60344bcd7573c51861ffa06
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Feb 23 00:20:45 2011 -0800
+
+    add FINAL statement to ccn upcall
+
+commit 4bd93b7ae94a623c00543c7cb77c723911c5f58f
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue Feb 22 21:59:20 2011 -0800
+
+    actually send leave message
+
+commit bf49cb96cab3b30eeacddc06c20ea849bed63a9e
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue Feb 22 21:28:51 2011 -0800
+
+    add optional leave notification
+
+commit 68ffe1c27d4fcfac27dc952723aa980712629817
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue Feb 22 19:15:43 2011 -0800
+
+    enable interest lifetime
+
+commit 2cbb75bb5d0cd916fd6ec583dfed81dab3301ef7
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue Feb 22 18:15:02 2011 -0800
+
+    small bug in last commit fixed
+
+commit 0fb346d1468eaf326718495c2d1c99e6bbcb0918
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue Feb 22 18:10:45 2011 -0800
+
+    append responder's username to the name in reply, so the exclude filter can work
+
+commit 23f87550484f8d92c74a585f974c3f8d83b5ca94
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Mon Feb 21 22:10:25 2011 -0800
+
+    skipping enabled; use tagged_blob in exclude filter
+
+commit a4258c204de96f003767111b8fcbc18cb7f5abb7
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 21:30:59 2011 -0800
+
+    update NDN_INSTALL
+
+commit 955fe81ff74b2ade3a78182b64d512f076255f02
+Merge: d849d07 1cda135
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 20:17:12 2011 -0800
+
+    Merge branch 'tdd' of github.com:zhenkai/nurnur into tdd
+
+commit d849d07a939ce6f21d09e664e95d3f888c276323
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 19:02:38 2011 -0800
+
+    Revert "trash"
+    
+    This reverts commit 4117bdc65b1369f9663d84a9bf9c317f04361ba9.
+
+commit 4117bdc65b1369f9663d84a9bf9c317f04361ba9
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 19:02:23 2011 -0800
+
+    trash
+
+commit 1cda1359e2a9ef9742af223a788604e914cfa0ff
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 18:39:39 2011 -0800
+
+    changed log message
+
+commit 8bb19c27493b17a48a77b0e61e2f61895d97b5af
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 18:18:56 2011 -0800
+
+    disable skipping function;
+
+commit 86ec2f67b35926c32e55a2b0baadbf5959c04fa8
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 18:16:17 2011 -0800
+
+    small changes to comments
+
+commit db525bc59396b64e8e8b9cf951c66613be936bed
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 17:27:09 2011 -0800
+
+    enable skipping missing segment
+
+commit b93061b5edb185ab6c8df587900ab8b64bd96443
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 16:47:38 2011 -0800
+
+    return LONG_MAX for seq when the queue is empty
+
+commit 2141569048517c256f5f321b793a008be6466167
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 16:27:48 2011 -0800
+
+    pipeline handler, seq position changed from comps->n -3 to comps->n-2
+
+commit afe18e78c6f4b10cb3a4e1ee57fed51e1f88bcd9
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 14:31:22 2011 -0800
+
+    queue based fast recovery
+
+commit a68357a37425b637c1eb00d935c8a2cbe459eb9b
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 13:45:52 2011 -0800
+
+    get rid of words "rtp"
+
+commit 1ec3dd15766df92ba18ea71214206070d625e218
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 13:11:03 2011 -0800
+
+    gitingore and fix a bug for pipeline handler
+
+commit b142709b1986eccbc488563021b71c6e3cc05081
+Merge: b38c6f5 811d5f5
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 01:03:29 2011 -0800
+
+    Merge branch 'tdd' of github.com:zhenkai/nurnur into tdd
+
+commit b38c6f52771824defe287f0191294e836115374d
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 01:03:11 2011 -0800
+
+    Revert "trash"
+    
+    This reverts commit 2ba4f3ea7a37b96fc5b58ba60dceedbaf0add83b.
+
+commit 2ba4f3ea7a37b96fc5b58ba60dceedbaf0add83b
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 01:02:39 2011 -0800
+
+    trash
+
+commit 811d5f557723cfd2c58007d9ca5b22a93234339a
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Feb 17 00:55:53 2011 -0800
+
+    Fast recovery works with multiple parties call`
+
+commit 99a55790eb0420df143d9c717bae0e3e93032119
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Jan 19 22:49:42 2011 -0800
+
+    debug msg for GroupManager
+
+commit 7571cf6bf83222d489510ae3369da4be510056a5
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue Jan 18 15:16:00 2011 -0800
+
+    get rid of further printing..
+
+commit 67b0d52515548b87fd284d52a8ca65fff77ebfda
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue Jan 18 15:06:50 2011 -0800
+
+    get rid of a lot of printing statements
+
+commit a5db28e5d9e8305bbcfe3238a6088726687e65d1
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri Jan 14 22:40:01 2011 -0800
+
+    install doc updated
+
+commit adf8cbcce4166db19bb8208430e938367cba6b4a
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri Jan 14 22:22:04 2011 -0800
+
+    polish writeups
+
+commit 2484619528061248184a72d7f62ed3b968d94a72
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Fri Jan 14 13:45:24 2011 -0800
+
+    attach user prefix to the refresh interest and compare this user prefix with the stored one; user is regarded as the same user only if both username and user prefix remains the same
+
+commit c108c2a8d2de3a12e996488be95ac6f7d5707ec6
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Thu Jan 13 17:30:47 2011 -0800
+
+    longer refresh interval
+
+commit f3b77eabbed0f7483ef3bc6bc9562f572f0bac65
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Wed Jan 12 14:38:27 2011 -0800
+
+    added debug
+
+commit be56e7bc6f68becf6db06c05d8c128b407d0619f
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Tue Jan 11 15:18:10 2011 -0800
+
+    improved doc
+
+commit 9193e2c3fbc8a8eb4b52805c2269b544e7909ba5
+Author: Zhenkai Zhu <zhenkai@cs.ucla.edu>
+Date:   Mon Jan 10 20:11:02 2011 -0800
+
+    Initial Commit
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/debug_script
@@ -0,0 +1,9 @@
+set width 0
+set height 0
+echo \nCurrent Thread Backtrace:\n
+thread
+backtrace
+echo \n-----\n\nThread Info:\n
+info threads
+echo \n-----\n\nAll Threads:\n
+thread apply all backtrace
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/NDN_INSTALL
@@ -0,0 +1,40 @@
+There is a draft instruction on compiling NDN murmur.
+
+The default setting now is to compile murmur only (server only, no client), without ice support.
+
+We assume you install your ccnx code to /usr/local, otherwise you may need to modify and LIBPATH and INCLUDEPATH in murmur.pro. 
+
+For Debain/Ubuntu user, the following command will make sure you have the needed libraries and dependencies:
+apt-get install qt4-dev-tools libqt4-dev libboost-dev \
+				libssl-dev g++ \
+				libpulse-dev libcap-dev  \
+				libprotobuf-dev protobuf-compiler  \
+				libavahi-compat-libdnssd-dev libsndfile1-dev libxi-dev
+
+And yes, some of them are not necessary as they are only for Mumble client. We will take them off in the next release.
+
+Now type the following command to compile murmur:
+qmake main.pro -recursive
+make  
+
+For Mac OS X user, we also have a pre-built build environment for you:
+http://www.scorpius-project.org/mumble-osx-dev/MumbleDeveloper.tar.bz2
+
+Unarchive it to your / (root directory).
+To set up your environment for a build, execute
+source /MumbleDeveloper/bin/mumble-x86-64-build-env
+
+now type the following command to compile murmur:
+qmake main.pro -recursive
+make
+
+If you want to build the dependency by yourself, you can refer to:
+http://mumble.sourceforge.net/BuildingMacOSX
+
+Note that if you encounter problem with "lipo", try to the following:
+rm `find . -name "Makefile*"` 
+qmake -config no-universal -recursive main.pro
+
+If you are compiling against the ports openssl for the code, you have to compile your ccnx against the same (version of) openssl.
+
+(Thanks to Nick Briggs for reporting these tips)
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/NDN_README
@@ -0,0 +1,22 @@
+This is a draft description on how to use the NDN version of murmur.
+
+1. Go to the follow link to download the mumble client:
+http://mumble.sourceforge.net/
+If you are using Linux, you may want to look at this instead:
+http://mumble.sourceforge.net/Installing_Mumble
+
+2. Launch the ccnd and connect to the ccn hub near you.
+Type the following command:
+ccndstart
+ccndc add / udp ccnhub.near.you 9695 
+(if you want to use ucla hub, it's spurs.cs.ucla.edu)
+
+3. Find the executable of murmurd when prompted by actd
+
+4. Launch the Mumble client and start chatting! If you use this code for the first time, you need to click "Add New" when prompted to select server. Put whatever you want in the "Servername" field. Put "localhost" or "127.0.0.1" in the "Address" Field. Leave "Port" field as is. And choose a username you like. This server will appear in your "favorite" list, and next time you don't have to go through this process again.
+
+Footnote: 
+Mumble does not pay much attention to feedback elimination as Skype does, so we recommend you use earbuds or headsets.
+
+If it does not work and you see an error msg "URP!! interest has been corrupted ccn_client.c:1358", please click "join" in the actd again to restart the murmurd.
+
--- mumble-1.2.3-87-gf7d8711.orig/CHANGES
+++ mumble-1.2.3-87-gf7d8711/CHANGES
@@ -1,8594 +0,0 @@
-2011-03-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ee6bccf  Fix speexbuild pro and mysql installer path
-    973790f  Update win32 build paths
-
-2011-03-09
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    fb61d50  Fix Timer includes all over the codebase and fix some pro/pri
-	     buildfiles.
-
-  Martijn Stolk <github@netripper.nl>
-    db2538f  Overlay: add sorting options, including ability to sort on
-	     last state change
-    6d62ae7  Overlay: add support for displaying active users
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9682d7d  Allow some leeway in the timer atomicity test
-
-2011-03-07
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    e83cec0  Instead of warning when casting from ASCII to QString in the
-	     client disable it completely.
-
-2011-03-06
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    8c952c3  Remove duplicate overlay debug output code.
-
-2011-03-04
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    b986e84  Fix possible access violation in Overlay
-
-  Jamie Fraser <jamie.f@sabrienix.com>
-    d2a023e  Added "Copy URL" to channel context menu.
-    e83173c  ICE: Add udpPing and tcpPing to User
-
-2011-03-03
-  Tsbook <tsbook@users.sourceforge.net>
-    630d712  Czech Translation Update
-
-2011-03-01
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    05096f7  Add some comments to hooking code
-
-  Jamie Fraser <jamie.f@sabrienix.com>
-    188b652  Fixed Ice method getLogLen() requiring write secret instead of
-	     read secret.
-
-2011-02-28
-  Mark-Willem Jansen <rawnar@users.sourceforge.net>
-    c245e2d  PulseAudio: Fix multi speakers configuration.
-
-2011-02-27
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    4774dab  Moved windows self detection mechanism into Windows specific
-	     Overlay code instead of special casing it in generic one
-    3db23e6  Make mumble overlay able to detect mumble independent of
-	     executable name
-
-  Jamie Fraser <jamie.f@sabrienix.com>
-    296ee6f  Fixed typo: "staring" -> "starting" in OSS.cpp
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2cd9863  Work around broken XI2 master devices
-
-2011-02-26
-  Mikkel Krautz <mikkel@krautz.dk>
-    ad3926a  Kill the nagging accessibility dialog from GlobalShortcutMac.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    fcc8c2b  Split AudioInput::encodeAudioFrame
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ffbeaa2  XInput 2.0 support
-
-2011-02-22
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    ddd9c97  Add no-elevation build-flag to prevent the need of signing
-	     win32 release builds during testing
-
-2011-02-21
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    a65bb68  Make message read back user configurable
-
-2011-02-20
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    859d7a4  Remove leftover launchCompatibilityClient signature
-    4188575  mumble:// links without or with invalid version parameter now
-	     refer to 1.2.0 by default. Also remove version hardcoding in
-	     checker and fix version check in general.
-    cb39dc6  Save current input when using the history
-    8fa3b10  User ctrl+up/down for chatbar history
-    ee21456  Fix violation of abstraction in ChatbarTextEdit
-    127a09c  Fix setenv called on windows build
-    f07d33b  Add history to chatbar
-    ae024c8  Remove obvious "FPS:" text from overlay leaving only the
-	     number
-    0e155a5  After downloading a new snapshot delete all snapshots older
-	     than 30 days from the snapshot folder
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    91a4fe6  Don't try launch compatibility client anymore.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f11d097  Protobuf 2.4.0a on Win32 (and static)
-    873282b  Update ASIO path
-    064a5a3  Bump version to 1.2.4
-    d294ccd  Fix pch
-    2b84bd7  Suppress vendor lockin suggestions
-    2400cae  Unify snapshot/release defines
-    1161c9a  Remove 1.1.x - no longer maintained
-
-2011-02-18
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    df0f290  Add some other applications to the overlay blacklist
-
-2011-02-17
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    520ad96  Add Photoshop, Blender and GoogleEarth to the overlay
-	     blacklist
-
-2011-02-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3ccbe53  Experiment with immediate overlay delete
-
-2011-02-15
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    263338e  Add Windows Live Suite and Secunia PSI to default overlay
-	     blacklist
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ed8ab35  No, events from deleted objects are really not ok.
-    1e74ee5  Upgrade to CELT 0.11.1 in-place
-
-2011-02-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f6b6f21  Don't spam console for release build
-    9f2c927  No variance without averge
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    2da7fb6  Plugin update run
-
-2011-02-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d694432  Update mumble-overlay script
-
-2011-02-07
-  karokatona <karokatona@users.sourceforge.net>
-    3c1d24c  Hungarian Translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    685809c  Remove CELT 0.10.0
-
-  Zuko <zuczeq@gmail.com>
-    e027b3f  Updated Polish translation
-
-2011-02-06
-  Zuko <zuczeq@gmail.com>
-    1601fb8  Password is now not visible in the Import Certificate window
-
-2011-02-04
-  Mikkel Krautz <mikkel@krautz.dk>
-    775165f  Add CELT 0.11.0 to OS X dist script.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    d256a9f  Add missing celt-0.11.0-build dir
-    04a3fcd  Fix overlay editor font dialog opens behind MainWindow
-    58aba64  Add CELT 0.11.0 support
-
-2011-02-01
-  Mikkel Krautz <mikkel@krautz.dk>
-    cd52bf6  Re-add menu roles to Settings and About menu items. The
-	     default (text heuristic) only yields the correct result when
-	     the texts are in English.
-    4199de4  ShortcutActionWidget: Use default size for OS X. With
-	     AdjustToContents, the QComboBox *is* bigger than the contents.
-
-2011-01-27
-  Zuko <zuczeq@gmail.com>
-    cebb2dd  Fixed 'nan' in user information (average ping) for newly
-	     connected users
-
-2011-01-26
-  Zuko <zuczeq@gmail.com>
-    e067269  User Information improvements
-    6755b81  Added gg, xmpp, skype and mailto to allowedSchemes
-
-2011-01-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e0ba383  Work around timestamp update for mysql
-    53e5c75  Fix ID of new server if all servers deleted
-    4559674  Add Qt 4.6 Guard to QAppMumble::event
-    c61522e  Remove older CELT 0.9.0
-
-2011-01-22
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    421833e  Fix bIsSpeech logic
-    95d13a5  Style fixes in ACLEditor.cpp
-
-2011-01-21
-  Joshua Kocinski <git@cl0secall.net>
-    dc662e0  Set bAutoUnmute flag properly when deafening while muted.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    324338f  Iterator oddness in ACL Editor
-    460e489  Ok, slightly less verbose, then
-
-  Spaccaossi <spaccaossi@users.sourceforge.net>
-    a7f91b7  Updated italian translation
-
-2011-01-20
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1cafc8b  Add overly verbose proxy widget adding.
-    e1b24d2  Clean up a few compiler warnings.
-    832f5aa  Include ancient ice path as well
-
-2011-01-12
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    1e5cd08  Fix benchmark client to compile on Windows
-
-2011-01-11
-  Mikkel Krautz <mikkel@krautz.dk>
-    51223e9  Remove unused AppleEvent parameter hack from os_mac.mm.
-    db1b92a  Update Mac OS X URL handling to be compatible with current Qt.
-    eeac069  Fix "freeze on launch" issue on OS X. It turns out that
-	     sending blocking AppleEvents to oneself is not such a good
-	     idea.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    cd1f4b3  Add a workaround for broken CodecVersion messages on 1.2.2
-	     servers
-
-2011-01-10
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    08904af  Use TLSv1 in the benchmark client
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    82879ed  Re-add 0.9.0 to package script
-    ce85721  Change CELT 0.9.0 to 0.10.0 in package script
-
-2011-01-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    41af016  Make active-state of shortcuts be data-dependent
-
-2011-01-07
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    194ab56  Fix overlay causing stack overflow when closing vs2010
-	     solution
-    ce51f28  Prevent random fluke in ip/port readout in bf2 plugin
-
-2011-01-06
-  B0nuse <mumble@mumble.ru>
-    032546b  Updated mumble_ru.ts
-
-2011-01-04
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    c30e964  Create the RecordInfo object before adding a new RecordBuffer
-
-2011-01-03
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    48c3c07  Set bDisconnectEmitted in the client code
-
-2010-12-30
-  Antoine Bertin <diaoulael@users.sourceforge.net>
-    d90cf06  Updated french translation for Mumble
-
-2010-12-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f9089d8  Auto-rename tarfiles
-
-2010-12-27
-  Mikkel Krautz <mikkel@krautz.dk>
-    f38d1ad  Add CELT 0.10 to osxdist.py.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5bdf525  Timestamp table upgrades
-
-2010-12-24
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    b50a0ac  Update bf2 plugin to use json instead of xml for
-	     context/identity representation
-    357725a  Fix AudioWizard focus after invalid shortcut entry
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    87f41f4  Add CELT 0.10.0 DLLs to the installer
-    03a8634  Change MySQL table creation statements to work with 5.5.x
-    ecf3bdd  Save last channel on user registration
-    606658e  Always set umtType to the correct version
-    7c66886  Move bDisconnectEmitted down by one level
-
-2010-12-23
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    ee8dcd8  Fix some problems with overlay backlisting not preventing dx
-	     hooking. Improve checking for WPF.
-    0813b58  Add 'M:' prefix to fods/ods overlay debugging function output
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    90e1f7e  Fix unreliable commander state memory address
-
-2010-12-22
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    50a136c  Fix Timer class for systems with unusually high performance
-	     frequency numbers or long uptime
-
-2010-12-21
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    2077aa0  Fix previous wizard patch
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    83dcdc3  Add CELT 0.10.0
-    d82a608  Use QElapsedTimer if it's available
-
-2010-12-20
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    f642271  Prevent server from forward audio from muted clients
-    90f5f78  Fix possible client/server mute state mismatch
-    b36c879  Fix attenuation not being disabled on disconnect
-    04a5b5c  Fix possible crash in MainWindow::talkingChanged()
-
-2010-12-19
-  Tuck Therebelos <snares@users.sourceforge.net>
-    6d332cb  Update Steam support for BC2
-    09008e6  Fix semicolon omission
-    120fa9e  Plugin updates for release
-
-2010-12-16
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    4c1e473  Restore Qt < 4.6 compatibility
-    495c8c3  Remove Qt dependency in the LOTRO plugin
-
-2010-12-13
-  Mark-Willem Jansen <rawnar@users.sourceforge.net>
-    283b935  Added information to the warnings, to help trace problems on
-	     windows systems
-
-2010-12-11
-  Ilmar Kruis <seaeagle1@users.sourceforge.net>
-    f8d393c  'November Update' for Lord of the Rings Online plugin
-
-2010-12-05
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    223d0a9  Unbreak send message on double click
-    fcb681c  Fix another chatbar size bug
-    be86148  Release the plugin lock before calling about/config on a
-	     plugin
-    be7ad39  Fix updateMenuPermissions() after context menu change
-
-2010-12-04
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    079f1ad  Remove local variable in getOSVersion
-    ece6a89  Readd the scrollbar changing to the chatbar in way that
-	     doesn't crash and doesn't break everything
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c0bf2c2  Update release script
-    012dfc6  Use bzip2 for static build
-
-2010-12-03
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    b8a2745  Fix two signed|unsigned comparison warnings
-    e8a2bb5  Prepare murmur for user defined server locations
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    c857a99  CoreAudio: Use AudioUnitPropertyListener instead of
-	     AUEventListener to listen for AudioUnit stream format changes.
-    405ef1a  OverlayMac: Don't use NSBundle#objectForInfoDictionaryKey to
-	     determine whether we're up to date.
-
-2010-12-02
-  Mikkel Krautz <mikkel@krautz.dk>
-    c85be07  Use Audio::start() and Audio::stop() in ConfigDialogMac.
-    8366832  CoreAudio: Restart AudioInput/AudioOutput on stream format
-	     changes.
-
-2010-12-01
-  Mark-Willem Jansen <rawnar@users.sourceforge.net>
-    da83cdd  Overlay: On windows sync the settings to registry when overlay
-	     config is changed
-
-2010-11-29
-  Finessi Manuel <fino.manu@gmail.com>
-    ef07a72  Patch for bug: 3117145
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    acf85af  Drop the date from Mac OS X snapshots.
-    2ffa671  Don't include newline character from 'git describe' in
-	     osxdist.py.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    8c4abd2  Use default indentation in the treeview
-    39039c2  Disallow RequestBlob for unauthenticated users
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1893804  Changing scrollbars in chatbar causes infinite loops. Remove
-	     it for now.
-
-2010-11-28
-  Mikkel Krautz <mikkel@krautz.dk>
-    b8cb9d0  Update Boost path for OSX to 1.45.0.
-    a0207d5  Use 'git describe' in osxdist.py.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    4f5089f  Fix context menu handling for disconnected users
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5dfd1f0  Try to be slightly more tolerant of third-party tables in the
-	     DB
-
-2010-11-26
-  Michael Ziegler <diese-addy@funzt-halt.net>
-    5072837  work around linux (that is, kde) switching channels on a
-	     single click
-
-2010-11-25
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    b38e264  Make TTS link simplification case insensitive
-
-  Necromancer <necromancer3@users.sourceforge.net>
-    03b5df8  [translation] Hebrew update
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    df7dc3a  Don't crash if someone tries to add an ACE for an unknown user
-	     id
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a085d26  Use git describe for server snapshots
-
-2010-11-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    35c6e03  Unify link detection regexps
-    84884ba  Boost 1.45
-
-2010-11-23
-  Ilmar Kruis <seaeagle1@users.sourceforge.net>
-    c435d5c  Update Lotro plugin to Vol III Book 2
-
-2010-11-22
-  Mikkel Krautz <mikkel@krautz.dk>
-    07c0813  TCD -> TCP in Danish translation.
-    091d9be  Fix Group::members() to include members of the channel that
-	     the group is defined on even if it's marked as inheritable.
-
-2010-11-21
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    8eb1b7e  Fix user sorting in UserEdit form
-    ac10fe4  Fix muted/deafen indicator offset in overlay default
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    933a9dd  Don't reset the connection timeout until the user is
-	     authenticated
-
-2010-11-20
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    1fa0c3c  Refactor overlay preset code. Switch default layout. Try to
-	     make new default look better.
-    ecff17a  Set min width for log as first aid to #3109452
-    cb9dee6  Fix custom TTS setting saving in wizard and make switching to
-	     TTS always enable main TTS switch.
-    576c9ee  Fix regression in user sorting
-
-  Kissaki <kissaki@gmx.de>
-    2a48fa0  correct ice-doc description for auth-callback idToName()
-
-2010-11-19
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    6c78711  Print the correct filename in the error message
-    34ff2e7  More potential a_ucTexture == NULL crash fixes
-
-2010-11-18
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    ce8cedf  Unify User/ClientUser sorting. Fix "usernames in overlay are
-	     in different order" #3110572 . Fix other sorting issues. Fix
-	     OverlayTest compilation.
-
-2010-11-17
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    426c411  Simplify iIsSpeech logic
-    c644952  Fix a crash in the overlay if a_ucTexture is NULL
-
-2010-11-15
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    c2f0c53  Fix mumble packet image in documentation
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    907c41f  Fix compile without PCH
-    3994350  Fix #3090083
-
-2010-11-09
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    ca23daf  Add no-vld and no-plugin qmake flags
-
-2010-11-08
-  Mikko Rantanen <jubjub@jubjubnest.net>
-    77827af  Documented no-bundled-celt option in INSTALL with a note
-	     concerning CELT 0.7.x
-    2131364  Documentation: Added a note concerning the codec requirements
-	     and clarified UDP tunneling. Also some minor float/margin
-	     tweaks.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    42930a7  Update CELT 0.9 submodule to get the PLC fixes
-
-2010-11-07
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    ec0e463  Add firefox.exe to overlay blacklist
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    42fc791  Don't use DBus for the client on OS X.
-    409aaa7  Use CELT 0.9 in osxdist script.
-
-2010-11-06
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    01e2247  Fix rounding behavior in conjunction with iroundf macro in
-	     lots of places.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    11ff9b1  Remove more unused files
-    7186e61  Replace CELT 0.8.1 with 0.9.0
-
-2010-11-03
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    f7aec20  Fix VoiceRecorder::sanitizeFilenameOrPathComponent: When a 255
-	     character filename/path-component ends on '.' infinite
-	     recursion might have occurred on windows machines.
-
-2010-11-02
-  Arcenciel <arcenciel@users.sourceforge.net>
-    b1340c3  Updated Japanese Translation for 1.2.3
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    f21ecfa  Use the Wix custom action to launch Mumble
-    7139599  Fix use of uninitialized variables and unused assignments
-    c865e05  Add swedish Qt translation
-    bee5338  Readd overlay hook on DLL_THREAD_ATTACH
-
-2010-10-30
-  Spaccaossi <spaccaossi@users.sourceforge.net>
-    2a26a18  Italian translation for 1.2.3
-
-  Svenne33 <svenne33@users.sourceforge.net>
-    97e4bd6  Swedish translation for 1.2.3
-
-  Jonathan <zentriple@users.sourceforge.net>
-    6f7435f  Danish translation: small update
-
-2010-10-29
-  Rafael Correia <rafaeljpc@gmail.com>
-    99cc86d  rework to improve the quality of the code of the patch (bug
-	     3067616 - DUAL Head PTT)
-
-2010-10-24
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    f913b99  Updated Spanish translation for 1.2.3
-
-2010-10-22
-  Arcenciel <arcenciel@users.sourceforge.net>
-    ec2b987  Updated Japanese Translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1d05e6e  Patch build patch
-
-2010-10-21
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    d84fa5d  Add a winpaths_default.pri to contain all windows dependency
-	     paths and make them easily overridable by a custom
-	     winpaths_custom.pri
-
-2010-10-19
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    c4211c1  Merge remote branch 'rantanen/master'
-
-  Mikko Rantanen <jubjub@jubjubnest.net>
-    0b14cb3  Clarified varint encoding
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    99ddd8f  Updated Spanish translation for 1.2.3
-
-  morris <tkmorris@users.sourceforge.net>
-    7f3d833  Brazilian Portuguese translation update
-
-  Jonathan <zentriple@users.sourceforge.net>
-    aca189b  Updated Danish translation for 1.2.3
-
-2010-10-18
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    65e4071  Switch VAD default from SnR to Amplitude and adjust UI
-	     accordingly. Run audio wizard without asking first. Add update
-	     counter to config for future updates. Add abstraction for
-	     Version query/parsing.
-
-  Mikko Rantanen <jubjub@jubjubnest.net>
-    e90d14f  Described varint decode function in documentation
-
-  Kissaki <kissaki@gmx.de>
-    4bb38b8  updated german translation
-
-  Mark-Willem Jansen <rawnar@users.sourceforge.net>
-    848d242  ALSA: added Rear Center and boosted the channel count to 9
-    66fa813  Plugins: Manual plugin corrected.
-
-  Zuko <zuczeq@gmail.com>
-    84c611c  Updated Polish translation
-
-2010-10-17
-  Mikko Rantanen <jubjub@jubjubnest.net>
-    90b46fc  Boredom?
-    23408f8  Fixed a reference and UDP packet size unit
-    594f950  Updated message documentation and fixed some errors based on
-	     pcgod's input. Fixed some references as well.
-    4b71e41  Rather complete documentation of Messages
-
-  morris <tkmorris@users.sourceforge.net>
-    4731d82  Brazilian Portuguese Translation
-
-2010-10-16
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    ce79583  Fix easter time and a compiler warning
-
-  Mikko Rantanen <jubjub@jubjubnest.net>
-    00fb3c6  More additions to the packet descriptions
-    4606a71  Further documented some of the Messages in the reference
-    96c80d0  More documentation. - Some tweaks to TCP connecting, mainly in
-	     form of figures. - Initial Proto buffer message descriptions
-	     as tables that contain field descriptions. Most descriptions
-	     missing.
-
-  Svenne33 <svenne33@users.sourceforge.net>
-    854f5da  New update of Swedish translation
-
-2010-10-15
-  Arie <allochtoon@zonnet.nl>
-    f4b0278  Better Engrish for button
-
-  Mikko Rantanen <jubjub@jubjubnest.net>
-    b4cdc19  Further enhancements to the documentation
-    cc5137e  Why not include the updated pdf as well?
-    46f27d7  - Added message structure env/command - Added initial
-	     description on UDP protocol
-
-  Svenne33 <svenne33@users.sourceforge.net>
-    4a684df  Swedish translation updated
-
-2010-10-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9fee66e  Speed up SQLite for client even more
-    8eef3c0  Speed up SQLite for client
-
-2010-10-12
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    8d97167  Fix "Optimize for high contrast" makes volume bars disappear
-	     (#3085154)
-
-2010-10-11
-  Mark-Willem Jansen <rawnar@users.sourceforge.net>
-    45ea514  ALSA:re-ordered the speaker mapping to ALSA standards.
-
-2010-10-09
-  B0nuse <mumble@mumble.ru>
-    fd6faf1  Updated mumble_ru.ts with fixes.
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    bdd383c  Fixed unreliable Steam linking for BFBC2
-
-2010-10-08
-  Justin McGrath <justin.m.mcgrath@gmail.com>
-    52a8f39  Added FR 2109227: limit the chat log size.
-
-  Natenom <natenom@googlemail.com>
-    1eaee4b  Updated German translations.
-
-2010-10-07
-  DK <davidk@mail.org>
-    52f7090  String fixes
-
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    2a1bd18  Add no-vorbis-recording buildflag for disabling vorbis for
-	     older libsndfile versions
-    9fd2611  Fix support for older libsndfile
-
-  Justin McGrath <justin.m.mcgrath@gmail.com>
-    4170dc7  Added *.jpeg to image filter for avatars as per Feature
-	     Request 2998995
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1a8da34  Make the icon valid
-    76df86a  Alternative svg rendering for application icon
-    7df254a  Sync alternate icon render
-    f52fb66  Update to new G15 SDK
-
-  Zuko <zuczeq@gmail.com>
-    bb3cb7f  Updated Polish translation
-
-2010-10-06
-  Arcenciel <arcenciel@users.sourceforge.net>
-    3556898  Updated Japanese Translation
-
-  Justin McGrath <justin.m.mcgrath@gmail.com>
-    8ac8b45  Fixed bug #3062825
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    392333a  String fixes in the ACL edit dialog found by fwaggle
-    ba6bd1e  Fix codec selection and outdated bitstream constants
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    bd121b5  Support older libsndfile
-    31488de  Experimentally switch back to "real" boost typeof
-
-2010-10-05
-  Natenom <natenom@googlemail.com>
-    e8810bf  Limit name label width in ban editor to 500 to not break the
-	     UI with very long names.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    ac2b6ca  Remove unused code, spotted by rawnar
-
-2010-10-04
-  Arcenciel <arcenciel@users.sourceforge.net>
-    3a703dd  Updated Japanese Translation
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    343510e  Flush client ACL cache after registration
-
-  Mark-Willem Jansen <rawnar@users.sourceforge.net>
-    87f3c8c  Plugins: Borderlands updated to version 1.40.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0369e8e  Fix English source strings
-
-2010-10-03
-  Mikkel Krautz <mikkel@krautz.dk>
-    bd2f257  Bundle intermediate CAs for the overlay installer to make Mac
-	     OS X 10.5 play along nicely.
-
-2010-10-02
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    ac49c60  Prevent GUI password editor from leaking token ACLs into
-	     inherited channels.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    f0b3af6  Recorder string fixes
-
-2010-09-29
-  Mikkel Krautz <mikkel@krautz.dk>
-    a72dfa8  Explicitly specify which events to intercept via EventTap.
-	     Fixes random crashes on Leopard.
-
-2010-09-27
-  Svenne33 <svenne33@users.sourceforge.net>
-    8a5998f  Swedish Translation (#3071209 & #3071223)
-
-2010-09-18
-  Natenom <natenom@googlemail.com>
-    5f774af  Fixed a translation typo submitted by Radioactiveman in IRC on
-	     #mumble, German translation updates
-
-2010-09-15
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    9374b51  Adding new favourite server now completes from clipboard.
-	     Added password edit field to favourite edit dialog (only shown
-	     for SuperUser or favourites which already have a password)
-
-2010-09-12
-  Natenom <natenom@googlemail.com>
-    fe52c22  Fixed a German translation typo which caused the overlay
-	     editor to save mumblelay files without extension. Submitted by
-	     Thomas <moes_taverne@gmx.li> via email.
-
-2010-09-09
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    979c415  Fix typo in qaSelfComment patch
-    4c739e9  Fix qaSelfComment not disabled on startup
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    f4b7ff2  Reformat this block and reword the comments
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    25e7ebb  Move qmake profile lines to single line to work with release
-	     script
-
-  Zuko <zuczeq@gmail.com>
-    10625c9  Update polish translation
-
-2010-09-07
-  Mikkel Krautz <mikkel@krautz.dk>
-    0b34efb  Hide system cursor when in interactive overlay on Mac OS X.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6e3fc04  Give the overlay text a bit more space
-    eb3479b  Disallow suppressing left mouse button
-    1f4be58  Use slice path for Ice 3.4.1
-    ccb9350  4.7.0 cross-compatible qmake
-
-2010-09-06
-  Mikkel Krautz <mikkel@krautz.dk>
-    07b7533  Alternative way to enable overlay debugging on OSX.
-    0f355bd  Only disable GL_TEXTURE_GEN_* if they're already enabled.
-	     Fixes black screen issue with EVE on OSX (via Cider)
-
-2010-09-05
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    a8a2129  TextMessage recording warning for pre 1.2.3 clients + Comments
-	     + minor refactoring
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    dba101a  Re-add NSOpenGLContext awareness to Mac OS X overlay to
-	     improve resolution detection in SC2 and Source Engine games.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    c8bfedb  Added launch checkbox and new bitmaps for the installer
-
-2010-09-03
-  Mikkel Krautz <mikkel@krautz.dk>
-    803a6d5  Update jp filenames for mumble11x as well.
-
-  B0nuse <mumble@mumble.ru>
-    09c23f8  Russian translation update.
-
-2010-09-02
-  Arcenciel <arcenciel@users.sourceforge.net>
-    f78a58b  Updated Japanese Translation (#3058069)
-
-  Nicos Gollan <gtdev@spearhead.de>
-    8dccb14  Improve Overlay Font Resizing
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    518b2aa  Make overlay injection work on Mac OS X Leopard.
-
-  Natenom <natenom@googlemail.com>
-    83d2ee8  Updated German translations
-
-  zuczeq <zuczeq@users.sourceforge.net>
-    a3518d4  Translation update - Polish (#3054197)
-
-2010-08-31
-  Mikkel Krautz <mikkel@krautz.dk>
-    f0a8051  Re-add missing codesign files from overlay installer.
-    1ac9afa  Unix/MacOSX overlay library: Tell OverlayClient when we've
-	     mapped SharedMemory so it can safely be released.
-
-2010-08-30
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    47fcb76  Add a mutex locking for plugin strings to fix race condition
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    3bae17a  ConnectDialogEdit: Use "Add Server" title when adding a new
-	     server.
-    f1a0740  Report bIs64 for OSX. The arch info stuff returns the arch of
-	     the kernel, which is almost always i386.
-    212ed93  Remove Mac OS X overlay launcher.
-    9e5d846  Only disallow opening external URLs when overlay-embedded,
-	     internal URLs are still allowed.
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    dd3d537  Make toolbar icons skinnable
-
-2010-08-29
-  Mikkel Krautz <mikkel@krautz.dk>
-    37faf24  Fix comment of the previous commit.
-    092784e  Disallow clicking links in the log when embedded into the
-	     overlay on OSX.
-    531bb4e  Use Cleanlooks style when embedded into the overlay on OSX.
-    16170ad  Manually embed OverlayUserGroup into QGraphicsScene on Mac OS
-	     X to get correct positioning.
-    52dcfb1  Use event->widget() as parent for OverlayUserGroup context
-	     menu when not embedded (fixes non-embedded OverlayConfig menu
-	     on OSX)
-    c477395  Disable unifiedToolbar hack for Qt >= 4.7.
-
-  Mark-Willem Jansen <rawnar@users.sourceforge.net>
-    8b3dee1  Plugins: Borderlands extended support and changed context
-	     handling.
-
-2010-08-28
-  Mikkel Krautz <mikkel@krautz.dk>
-    fb9f982  Allow semi-transparent windows on our overlay for Mac OS X
-	     again. Fixed in mumble-developers-qt.
-
-  Natenom <natenom@googlemail.com>
-    4f1ff20  This patch adds a read-only recording flag to the User object
-	     that is returned by getState() over Ice. Polished by Svedrin
-	     (Michael Ziegler <diese-addy@funzt-halt.net>)
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    95233ce  Change german translation to match the english text
-    0fc10ed  Remove CWD from DLL search path on Windows
-    cbd8457  Qt's japanese translation file was renamed in 4.7
-
-2010-08-27
-  Mikkel Krautz <mikkel@krautz.dk>
-    f9fb2fd  Forward events through Qt instead of using
-	     performSelector:onThread: to be able to properly forward
-	     events in nested event loops.
-    ae18413  Don't call activateWindow on qteText. It cancels the window's
-	     Qt::WA_DontShowOnScreen state on Mac OS X.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0afaf58  ifdef jitter reporting
-
-2010-08-26
-  Mikkel Krautz <mikkel@krautz.dk>
-    a4c33cc  Only allow interactive overlay for fullscreen apps on Mac OS
-	     X.
-
-2010-08-25
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    ab16dfc  Add sound for recording state change notifications
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    f7aa9be  Add no-crash-report to INSTALL. Fix wording for
-	     CONFIG+=universal.
-
-  B0nuse <mumble@mumble.ru>
-    81005bf  Update of Russian translation with Fixes.
-
-2010-08-23
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    a74fdf8  Exclusive input is now disabled by default
-
-  Nicos Gollan <gtdev@spearhead.de>
-    82aae29  Portable OverlayTest, disable exception on Linux
-    a53926e  Fix config layout, some code fixes
-    a6a6823  Add FPS functionality to OverlayTest
-    d398718  Overlay corrections
-    fa3529f  Import/export of overlay settings
-    616d5b9  Extended the overlay settings
-    49558f7  Broke up monster Overlay.cpp
-    f649795  Overlay text refactoring and refining
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    685954c  Source updates
-
-2010-08-22
-  Mikkel Krautz <mikkel@krautz.dk>
-    1eb4c72  Fix my broken hide-overlay logic.
-    433c5f6  Use QT_MAC_USE_COCOA instead of MACOSX_UNIVERSAL_BUILD. Fix
-	     universal build.
-    89b8307  Move around a few calls that make the overlay-embedded
-	     MainWindow usable on OSX.
-    132add5  Use ConfigDialogMac for empty g.qsCurrentStyle as well.
-    0f0e141  Fix restoreGeometry for Mac OS X when using
-	     unifiedToolbarOnMac.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    630fe7d  Don't crash using local loopback / recording + overlay
-
-2010-08-21
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    f6c98e4  Add backend to frontend error reporting for recorder
-    cb8ddcf  Fix compile errors
-    8faf40f  Add support for ASIO format ASIOSTInt24LSB
-
-  Jamie Fraser <jamie.f@sabrienix.com>
-    71e9029  Ice method: int getLogLen()
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    c88692b  csShape is no longer a member variable.
-    f6d9c4f  Use system cursors for OSX interactive overlay.
-    24fb17f  Don't restore/store geometry for overlay-embedded
-	     ConfigDialog.
-    326f5b0  Fix crashbug where forwarded ocIntercept events were processed
-	     after we were out of the interactive overlay.
-    c101191  Add PID message to OSX overlay lib.
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    ab81d38  Add player-specific context information to BF2
-
-2010-08-19
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    ab2ed68  Blacklist WPF apps in the overlay
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    92fe3c7  ServerHandler as shared_ptr
-    81f9d9f  Boost 1.44
-
-2010-08-18
-  Arcenciel <arcenciel@users.sourceforge.net>
-    c19821c  Updated Japanese Translation
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    11edcd6  Bump Boost to 1.44.0 for OSX.
-    5ec6c9c  Fix CrashReporter build for Mac OS X.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    1a88c2e  Fix old version uninstall
-
-2010-08-17
-  Natenom <natenom@googlemail.com>
-    f5eeaaf  Updated German translations.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    fb784a5  Merge branch 'recording-clean' of
-	     git://github.com/arrai/mumble-record
-    e5c668f  Add more keyboard shortcuts in the settings dialog
-    1a51db9  Installer fixes
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ccf4b33  Use .mm ending in 11x as well
-    f6a3e82  Add cpu type and SSE2 state to usage stats
-
-2010-08-16
-  Arcenciel <arcenciel@users.sourceforge.net>
-    1d32a33  Japanese translation for current git
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    4518147  Fix recorder error messages.
-    3870798  Add comments in VoiceRecorder
-
-2010-08-15
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    22a74ac  Add log messages/notifications for recording state changes
-    66ef598  Add vcheck
-    163ae5a  Prevent turning / into // at the beginning of filenames (d'oh)
-    3c4fbd5  Maybe fix linux absolute paths + Minor stuff.
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    a4b5217  Arma2 conditional to prevent premature linking; L4D2 update
-
-2010-08-14
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    7b9ca2c  Add path and filename templating. Fix recording mode restore.
-	     Add missing licensing headers.
-    324d43e  Make sure recorder is aware of connection state. Don't show
-	     recorder icon in menu.
-    d876cab  Fix browse button
-    2622533  Fix deadlock on codec change while recording. Various minor
-	     style fixes.
-
-  B0nuse <mumble@mumble.ru>
-    172d060  More fixes for mumble_ru.ts file
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    2926e6f  Use Qt's StringBuilder where available and add pch include
-    7732ca1  Add a namespace for VoiceRecorder format functions
-    7301003  Fix multichannel recording
-
-2010-08-13
-  Mikkel Krautz <mikkel@krautz.dk>
-    8376c46  Fix permission issue with OSX overay installer when no
-	     /Library/ScriptingAdditions/ directory exists prior to
-	     install.
-
-  Mark-Willem Jansen <rawnar@users.sourceforge.net>
-    95cdca8  Borderlands plugin: added support for german version of
-	     Borderlands
-
-2010-08-11
-  Mikkel Krautz <mikkel@krautz.dk>
-    40c04a1  Don't use ConfigDialog_macx for compat client.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    a6423d9  Delete dialog and possible crash fixes
-    3a29bdc  Possible crash fix
-    7e18e35  Use the correct way to add the WIX UI extension
-    c333198  Always install libmysql.dll
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a40cd34  Fix a few more SSE/SSE2 installer issues
-    00f405c  Add SSE2 export to installer
-    ff47838  SSE2 build using MSVC
-    6cf5ac9  Update Ice embedded doc
-
-2010-08-10
-  Mikkel Krautz <mikkel@krautz.dk>
-    0bd663f  Split out native-looking OSX ConfigDialog into a fully
-	     separate class. Allows us to pick which one to use at runtime.
-    1db53c6  Call winId() in MacOS ConfigDialog to ensure is backed by a
-	     native window.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    331da15  Correct debug path and Ice version in installer
-    d6f8076  Machine-dependent installer settings
-
-2010-08-09
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    03009a9  Fix crash on close + recording dialog behavior when stop is
-	     pressed
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    e555a83  Add a namespace for the enum
-    fad3790  Fix crash on recording stop
-    4ad437a  Use the MSVCRT 2010 merge module and readd the translation
-	     files
-    4bb0bf2  Add MSI-based installer
-
-  Mark-Willem Jansen <rawnar@users.sourceforge.net>
-    1a0e643  Borderlands plugin updated to version 1.31
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1009e97  Include MSVC version in plugin query
-    38ffcfb  Avoid NULL on sendmessage to invalid sessions
-    dac82c9  VS 2010 build
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    06dd3ab  Gmod update; minor plugin fixes/updates
-
-2010-08-08
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    598b7c3  Add recording UI
-    4a2d48d  VoiceRecorder backend extension for UI needs
-    32017ea  Settings load and restore for recording feature
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    a34f73a  Fix URL and Mac OS X install instructions in README.
-    451c11d  Fix mumble11x GlobalShortcut_macx symlink.
-    8b298ba  Forward intercepted events directly to NSView rather than
-	     going through NSApplication first...
-    f9f142f  Forward more events to ocIntercept.
-
-2010-08-07
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    2e99628  Style fixes and safer pointer handling
-    0321c24  Add recording icon
-
-2010-08-05
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    3d6ef0f  Ignore zero scopeId in ping replies
-
-2010-08-04
-  Jamie Fraser <jamie.f@sabrienix.com>
-    bf561d3  Toggle setting (rememberchannel) for remembering a registered
-	     users last channel.
-
-2010-08-03
-  Jamie Fraser <jamie.f@sabrienix.com>
-    ab31fc2  added timestamps to foreground log output
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    b4dc0e6  Forward ocIntercept events on Mac OS X to viewport instead of
-	     QGraphicsView. QAbstractScrollArea does not propagate
-	     QEvent::Mouse* events.
-
-  B0nuse <mumble@mumble.ru>
-    ff56005  Updated Russian translations.
-
-2010-07-31
-  Mikkel Krautz <mikkel@krautz.dk>
-    6a05cd6  Attempt at forwarding Mac OS X mosue events to QGraphicsView
-	     during ocIntercept.
-
-2010-07-30
-  Mikkel Krautz <mikkel@krautz.dk>
-    41cdc04  Diable overlay for universal Mac OS X builds.
-    ba654a5  Auto-updating overlay installer on Mac OS X.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    a2e2a82  Fix crash when connecting to a different server
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    019c47a  l4d2 update
-    1a2ea89  Fix last commit
-    aa0fc95  Add context support to BFBC2
-    0c69d52  Gmod update
-
-2010-07-29
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    e681802  Add Qt's russian translation
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    d0a6627  Source plugin updates; clarify regName parameter usage in
-	     Murmur.ini
-
-  Imre Botos <zokny@users.sourceforge.net>
-    3e91919  Counter-Strike 1.6 plugin fix
-
-2010-07-28
-  Jamie Fraser <jamie.f@sabrienix.com>
-    85feea3  Added ability to disable logging to DB
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    6422f37  Fix appdata migration when no ~/Library/Application
-	     Support/Mumble exists.
-    8aeda4d  Move Mac OS X data dir to ~/Library/Application Support/[...]
-
-2010-07-27
-  Nicos Gollan <gtdev@spearhead.de>
-    2debbf0  Refining overlay font rendering
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    8f63e4d  Check overlay installer for version info instead of the Mumble
-	     app bundle.
-
-  B0nuse <mumble@mumble.ru>
-    b8f14d8  Translation fixes (Russian)
-
-  Natenom <natenom@googlemail.com>
-    e0163bd  Updated German translations
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    8f73beb  Fix a possible race condition on reconnect
-
-2010-07-26
-  Mikkel Krautz <mikkel@krautz.dk>
-    e0d1de4  Don't stop device initialization in CoreAudio in cases where
-	     reading BufferFrameSizeRange fails.
-    f88ca84  Fix typo in CoreAudio.
-    bf8d005  Zero out AudioBufList in CoreAudioInput constructor. Could
-	     lead to nasty crashes in cases of failing CoreAudio input
-	     initialization.
-    1c39e8d  Bump overlay version to get users to test the new installer.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    385f256  Fix overlay dll debug output
-    8f0a2bd  Revert "Overlay blacklist wmpnscfg.exe and fix the
-	     mumble_ol.dll's debug output" because it breaks the overlay
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    f5f526d  Fix multiple issues with ArmA 2 plugin, and update it to 1.07
-
-2010-07-25
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    dd93a58  Prevent Russian language file for installer from overwriting
-	     the English source strings
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    acb93fb  Switch Mac OS X overlay installer to a signed Apple .pkg
-	     installer.
-
-2010-07-24
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    c8dfd56  Fix typo in last patch
-    f5704a0  Clicking tray icon now activates the window if it is inactive
-	     instead of hiding it
-    c24b79e  Overlay blacklist wmpnscfg.exe and fix the mumble_ol.dll's
-	     debug output
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    9ba3eb3  Dist script fixes for universal build.
-    cbc880e  New LGLCD SDK path on Mac OS X.
-    3c936c2  Make CONFIG+=universal imply no-cocoa
-
-2010-07-23
-  Nicos Gollan <gtdev@spearhead.de>
-    022772e  More uniform font rendering in overlay
-
-2010-07-22
-  Mikkel Krautz <mikkel@krautz.dk>
-    41f8041  Work around the overlay preview resizing problem by minimizing
-	     the amount of unnecessary style changes we do.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    dcc541a  Add Qt's accessibility dll to the installer
-
-2010-07-20
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    0a880fe  Add local voice recording
-    4335312  Add another QThread::yield in the audio output code
-    8bd2060  Added/updated russian installer and client translation,
-	     submitted by B0nuse on #mumble.
-    4315190  Add russian translation file to the resource file.
-
-2010-07-18
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    7208fcc  Fix more crashes if we have no ServerHandler
-    cf3c151  Lazy init the ServerHandler object and don't crash if we have
-	     no ServerHandler
-
-2010-07-17
-  Nicos Gollan <gtdev@spearhead.de>
-    8bd79b6  Use noise-filtered amplitude for VAD
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    1b3d329  Fix AudioStats for compat client.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    bfa01db  Fix reconnecting when using Qt 4.7
-    63b84d3  Disable system CA override in Qt 4.7
-    0dc54d7  Fix MSVC compile errors
-    3b594af  Workaround for the client certificate verification bug in Qt
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    173ebf8  Allow getRegistration with read pw
-
-2010-07-16
-  Mikkel Krautz <mikkel@krautz.dk>
-    932fe13  Fix logic error in osxdist.py. Also make copied libraries
-	     explicitly owner-writable (OpenSSL wasn't).
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    75df5b7  Handle external auth with whitespace
-
-2010-07-15
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    2997897  Fix some gcc and cppcheck warnings
-    fe9ae2d  Disable crash reporter on linux
-    89d30a9  Fix possible fd leak in OSS code
-
-2010-07-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c4eefe7  Use local OpenSSL for static build
-    470a089  New servers have DB version 5
-
-2010-07-13
-  Natenom <natenom@googlemail.com>
-    e4615e6  Add -n (suppress certificat) to the command line options.
-
-2010-07-12
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    fe2e3e5  Some minor cleanup in the bfbc2 plugin
-    10e5299  Prevent l4d2 plugin from crashing Mumble on trylock
-    a8efbbf  Fix display bug in Audio Wizard
-
-2010-07-11
-  Mikkel Krautz <mikkel@krautz.dk>
-    0cf351e  Only copy mumble-g15-helper to app bundle if it exists.
-    e925ec6  Update Mac OS X build for Ice-3.4.1, Boost 1.43.0 and detect
-	     the presence of LGLCD SDK (disable g15helper if not present)
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    288dab9  Update to CELT 0.8.1
-    6c61371  Report OpenSSL version to console
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    bbd417b  Fix typo in L4D2
-
-2010-07-10
-  Tuck Therebelos <snares@users.sourceforge.net>
-    492ffa4  See if state value causes L4D2 bug
-    25e833b  Source plugin updates; BFBC2 update, works with Steam now
-
-2010-07-09
-  Jamie Fraser <jamie.f@sabrienix.com>
-    9c9983b  Added default root certificate store on FreeBSD.
-
-2010-07-05
-  Andreas Bibok <biboka@users.sourceforge.net>
-    3c4fe52  Partial translation to Hungarian
-
-  Necromancer <necromancer3@users.sourceforge.net>
-    1d155a1  Hebrew translation update: translated audio input, audio
-	     output, user interface and shortcuts sections.
-
-  Sergey Ivanov <randomei@users.sourceforge.net>
-    e6514f0  Updated russian translation
-
-2010-07-03
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    cb9c5bd  Customize labels for high contrast mode so they talk about
-	     what is actually visible
-
-  Jamie Fraser <jamie.f@sabrienix.com>
-    ea20c4c  Fixed Murmur Build on FreeBSD
-
-2010-07-02
-  Karl Dietz <dekarl@users.sourceforge.net>
-    d1dd3e7  wow: update to 3.3.5
-
-  Mark-Willem Jansen <rawnar@users.sourceforge.net>
-    d135236  Plugins: Changed the pointers for the camera information of
-	     Borderlands
-
-2010-06-29
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    5c40cfe  Don't validate the name before we are sure it wasn't already
-	     validated by an authenticator
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    6b33dda  Don't crash on long usernames
-
-2010-06-27
-  Kissaki <kissaki@gmx.de>
-    0c38e42  correct inline-doc and make it clearer
-
-2010-06-21
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    cb223d4  Add a wrapper for the new CELT 0.8.0 API
-
-2010-06-20
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    4d79d80  Allow <img> tags with an empty source url
-
-2010-06-19
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    73f3ac2  Fix WASAPI exclusive output for some broken drivers
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a0593c9  s/input/output/ for warning
-
-2010-06-18
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    54f1a03  Fix server compilation on Debian Lenny (Qt 4.4, Ice 3.2)
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    33990fb  Fix output buffer size for exclusive mode WASAPI
-    c3f587b  WASAPI Exclusive Mode output and 11x compile fix
-
-2010-06-14
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    74fc0b0  Increase murmur log window size on windows
-    47af935  Enable Windows security stuff for release builds
-    2493907  Fix qmake 4.7 deprecation warnings
-    6f52a68  Add VS 2010 pdb files to .gitignore
-
-2010-06-06
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    1f56580  Add basic recording logic
-    773f05a  Fix some warnings in the chatbar code
-
-2010-06-04
-  arrai <array.of.intellect@gmail.com>
-    3ef3ea8  Add recording state handling to the client
-
-  Mark-Willem Jansen <rawnar@users.sourceforge.net>
-    d187857  WINAPI update: WinVerifyTrust() returns a LONG instead of
-	     HRESULT
-
-2010-06-02
-  Arcenciel <arcenciel@users.sourceforge.net>
-    a6d75b5  Updated Japanese Translation
-
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    fe9496d  Fix: Option "Don't hide in tray when minimized" partly broken
-	     (#2975969). Also remove unused custom signal
-
-2010-06-01
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    671a3e3  Remove margins for p tag in the default style to get rid of
-	     unwanted double spacing
-
-  Mark-Willem Jansen <rawnar@users.sourceforge.net>
-    3f353e8  Fixed: Passing zero length string in Borderlands plugin
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    84088f8  Experimental WASAPI exclusive input mode
-    99fb316  Remove desktop shortcut for 1.1.x
-    e5b8627  Fix download path for bonjour
-
-2010-05-31
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    6d7408f  Add text to the DockTitleBar so its purpose is clearer
-    6a2c230  Restore nickname auto-completion for TextEdit based Chatbar
-    2f5db27  Prevent richtext from being pasted into the chatbar and make
-	     sure we escape html entities before sending. Also rename of
-	     ChatbarLineEdit to ChatbarTextEdit.
-
-  Karl Dietz <dekarl@users.sourceforge.net>
-    dc11bc5  wow update plugin to 3.3.3a
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d10747f  Updated installer
-
-2010-05-29
-  rdb <git@rdb.name>
-    68d4371  recieve -> receive
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    502c8ad  Remove mention of deprecated no-xevie in INSTALL
-
-2010-05-28
-  Mark-Willem Jansen <rawnar@users.sourceforge.net>
-    e84fbbb  Updated Borderlands plugin for the new API.
-    2201bdd  Added a postional audio plugin for Borderlands.
-
-2010-05-27
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e4c5071  Only show tray config if tray exists
-    a8268d7  Add recommended user CAs explicitly
-
-2010-05-22
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1741e72  Direct G15 support
-
-2010-05-19
-  Tuck Therebelos <snares@users.sourceforge.net>
-    36e3950  DoDS, TF2 updates
-
-2010-05-18
-  Semion Tsinman <Necromancer3333@gmail.com>
-    91cef12  Hebrew update
-
-  Ludwig Nussel <ludwig.nussel@suse.de>
-    70a528a  fix build for Qt 4.5
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    230c942  Update to new Boost and Bonjour
-
-2010-05-16
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    491de61  Enable multi channel audio by default to prevent problems with
-	     bad audio drivers
-
-2010-05-15
-  Tuck Therebelos <snares@users.sourceforge.net>
-    69aaf67  Plugin updates
-
-2010-05-08
-  Álvaro Manuel Recio Pérez <naproxeno@kepis.(none)>
-    0846a64  Updated Spanish translation
-
-2010-05-06
-  Ilmar Kruis <seaeagle1@users.sourceforge.net>
-    57d55c0  Update lotro to Vol 3, Book 1 patch 1
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    5fe803e  MW2, gmod updates; BFBC2 address fix
-
-2010-05-05
-  Kissaki <kissaki@gmx.de>
-    fb7dbfe  make icesecret comments clearer
-
-2010-05-04
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    ec31de1  Add black/whitelist icon loading for Windows. Make lists match
-	     on full path as well as executable names
-    532c3f2  Fix compile on non OSX systems
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    e75ec48  Hide overlay black-/whitelist on Linux
-
-2010-05-03
-  Mikkel Krautz <mikkel@krautz.dk>
-    ae4244a  Move FPS counter checkbox below 'Enable Overlay' checkbox.
-    9238e32  Hook up the last missing piece for overlay exclusion on Mac OS
-	     X.
-    a768909  Use mumble.icns instead of mumble.osx.png now that we can load
-	     .icns with QIcon.
-    1f6d202  Bump OSX overlay version because of the FPS counter.
-    28056d1  CFBundleIdentifier-based overlay app-exclusion. Also, show
-	     icons for excluded apps.
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    d8e8909  TF2, DODS update
-
-2010-04-29
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    11fda9b  Fix *nix OpenGL overlay and add FPS counter code to OSX
-	     overlay.m
-    58bf724  Fix mkwrapper.pl for Ice 3.4 and update MurmurIceWrapper.cpp
-    1beb966  Fix SCALESIZE macro for overlay editor. Rename fHeight symbol
-	     to fZoom to prevent confusion.
-    6380a88  Transmit fps more often and represent them as float
-    02811bc  Make sure temporary group memberships of a user are purged
-	     once he disconnects
-
-2010-04-28
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    d8f1ac1  Add an optional FPS counter to the overlay
-    fbb54cb  Set a title for the Overlay Editor
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    6b5b738  L4D2 update
-    ebdcfa1  BFBC2 update; attempt at using position array to determine
-	     gamestate
-
-2010-04-26
-  Kissaki <kissaki@gmx.de>
-    8cfb579  fix string
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    7d8d6cd  Don't try to do overlay stuff if we're in an invalid GL
-	     context. Bump overlay version once again.
-    6d3567b  Sanity check viewport size in overlay. Bump version.
-
-2010-04-25
-  Kissaki <kissaki@gmx.de>
-    9e9fe0a  updated German translation
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    3deff65  Update Mac OS X dist script to build with new Xcode and new
-	     libcelt.
-    a74a0f6  Specify absolute path for slice2cpp for macx.
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    e1eacae  Updated Spanish translation
-
-2010-04-23
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    44fb5c9  Fixed misleading label in ConnectDialogEdit.ui (Servername ->
-	     Label) (#2991173)
-    aad4de1  Enter a channel with keyboard (#2981163)
-    974a1ee  Prevent debug version from checking for updates
-    4e57b3a  Limit debug version to only loading PA plugins from
-	     executable/plugins folder
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e016c4c  Fix ice compile of static server
-
-2010-04-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    02071e4  Fix compile of cs plugin
-    0f7a141  Add dynload of CELT 0.8.0
-    e5858a6  Add config.h for 0.8.0 on Win32
-    b6e2574  Add CELT 0.8.0 module
-
-2010-04-18
-  Semion Tsinman <Necromancer3333@gmail.com>
-    5f98de7  [translation] Hebrew
-
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    beb7708  Make sure context string in cs1.6 plugin is zero terminated
-	     before doing anything with it
-    653434f  Add Counterstrike 1.6 plugin to installer
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c365656  Add Hebrew to dist files
-
-  Anton Romanov <theli.ua@gmail.com>
-    ec7e78d  in case GL_ARRAY_BUFFER is bound, store and reset it before
-	     rendering overlay and restore after
-
-  Imre Botos <zokny@users.sourceforge.net>
-    7b77dea  Counter-Strike 1.6 Positional Audio support
-
-2010-04-17
-  Arcenciel <arcenciel@users.sourceforge.net>
-    472296f  Updated japanese translation.
-
-  Sergey Ivanov <randomei@users.sourceforge.net>
-    2d3a791  Russian Translation
-
-  Imre Botos <zokny@users.sourceforge.net>
-    fa066e5  Counter-Strike 1.6 Positional Audio support
-
-2010-04-16
-  Kissaki <kissaki@gmx.de>
-    372f763  add some detail to the ini-comment
-
-2010-04-11
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    3c34514  Disable local TTS playback of messages you sent
-    74b56d6  Remove UTF-8 BOM from all python scripting samples as they
-	     mess up the shebang on *nix
-    9019afb  We do not need to rely on ICE env after all. Just use the
-	     relative path.
-    00c1d7d  Make testdynamic.py work on windows systems
-    e6d84a8  Add UserLastActive to UserInfo so it is available over Ice.
-    9d32c71  Make slice include path rely on ICE environment variable on
-	     win32
-
-2010-04-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a21e814  Fix Ice compile on RHEL
-    87e2ba9  Relabel automute to autodeafen
-    61f1cf2  Fix ice compile on Win32
-
-2010-04-04
-  Tuck Therebelos <snares@users.sourceforge.net>
-    e336340  Attempt to fix unreliable BFBC2 addresses
-
-2010-04-02
-  Mikkel Krautz <mikkel@krautz.dk>
-    8e9f260  Move overlay loader from our app bundle to the loader itself.
-	     Bump loader version.
-    4441ccc  Refine overlay uninstall.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    8a3f9ee  Fix changing ban timestamps
-
-2010-03-31
-  Mikkel Krautz <mikkel@krautz.dk>
-    9e15f34  Force single applaunch observer.
-    6354747  Override --signature-size passed to codesign in osxdist.py.
-    6c63e2a  Pass user's current priority speaker flag in DBus. Not false.
-    c982354  Fix OSX overlay installer. Create ScriptingAdditions directory
-	     if needed. Rename destination plist key.
-    6691d62  Pass false for priority speaker on DBus.
-    9e6a3b4  Update OSX Ice path to 3.4.0, fix slice command too.
-    335ab7b  Add GL symbol availability checking to OSX overlay.
-
-2010-03-30
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    9b296bc  Don't require a secret for getSliceChecksums()
-    80a7907  Fix some Ice examples
-    77e70aa  Add Ice checksum and priority speaker flag
-    359d01c  priority speaker - server side
-    d556ca3  priority speaker - client side
-
-2010-03-29
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    8ce81fe  Allow read-only access to the logfile on Windows
-
-2010-03-27
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e9ed414  Change session queue dynamically
-
-2010-03-26
-  Tuck Therebelos <snares@users.sourceforge.net>
-    a030ee8  BFBC2 update
-
-2010-03-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ee679ba  Fix width/height mixup for scale factors
-
-2010-03-22
-  Mikkel Krautz <mikkel@krautz.dk>
-    c63cfa0  Installable overlay for OSX.
-
-2010-03-21
-  Tuck Therebelos <snares@users.sourceforge.net>
-    4b426f3  TF2 update
-
-2010-03-20
-  Mikkel Krautz <mikkel@krautz.dk>
-    7fea437  Add stubs needed for new installable overlay on OSX.
-    55992db  Add (Mac OS X specific) overlay installation and overlay
-	     upgrade pages to the Overlay config.
-    a8b96ce  Remove frame from chat QTextEdit box on Mac OS X.
-    9215dbe  Re-enable unified toolbar for OSX.
-    b5ec788  Always center the alert dialog in the Mumble.compat binary.
-    e5e7fed  Remove wrong include in macx.pro.
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    9358a16  Add alpha-testing BFBC2 plugin
-
-2010-03-19
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    52c8931  Fix array index
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    02115d6  MW2 update
-
-2010-03-18
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    69a34a9  Fix copy&paste from the log window
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0485e2e  Add timeout to authenticators
-
-2010-03-16
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    620f169  Make sure the overlay closes its registry handle
-
-2010-03-15
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    55aee09  New default_avatar.svg "Mr.Jibberish" *Work in progress*
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    e97a7a1  QTextEdit doesn't have a setFrame() method.
-
-2010-03-13
-  root <root@DiskStation.(none)>
-    2903d05  Updated French Translation
-
-2010-03-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b5b0a4d  Handle mixed case groups in group editor
-    710dfb7  Use new slice doc syntax
-    136cac0  Add a few testgroups to the testauth
-    10a069b  Save geometry when embedding in overlay
-    8776329  Create SU account if it doesn't exist yet when setting
-	     password
-    d723a63  Update addban to use new Ice init
-    7a0d75d  Update weblist.php to work with both Ice 3.3 and 3.4
-
-2010-03-10
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c5736e3  QDateTime seems to think time_t should be local time. It's not
-    06fec27  Work around WSAAsyncSelect and WSAEventSelect overlapping on
-	     Win32
-    2b6bad6  Flash in browser workaround
-
-2010-03-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    413ea83  Only give UserInfo parent when in overlay
-    96765f5  Add workaround for creeping gain
-    ab21722  Fix restore to maximize state on tray click
-    2ba4270  Fix inherit/inheritable for groups in editor
-    6d4c13f  Work around QGraphicsScene's boundingrect including invisible
-	     items
-
-2010-03-08
-  Ilmar Kruis <seaeagle1@users.sourceforge.net>
-    505e046  Update lotro to Vol 3, Book 1
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7fa0529  Remove user from talklist on disconnect
-    c27debc  Unify talkstate and s/WhisperChannel/Shouting/
-    c5b6a84  Adjustable column number
-    4ab0a3d  Remove leftover overlay code
-    8f2fddf  Render text to pixmap, not qimage
-    d26b54c  Don't update geometry when only updating state
-    8f0bd7f  Sort overlay users
-    b7bc978  Add filter to overlay
-    e5e7797  Add simple instructions to overlay config
-    9c5086c  Greatly improve rendering quality of overlay preview
-    c06f54b  Reintroduce logic to ensure either avatar or username is
-	     visible
-    94a8d14  Parent UserInformation to g.mw; fixes overlay bug
-    ec6b3c6  Drop additional old triggers when upgrading
-
-2010-03-07
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    10175ef  Windows build fix (warning in gcc -> error on windows...)
-
-2010-03-06
-  Natenom <natenom@googlemail.com>
-    49ae4cb  Translation Updates to German
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    47cbf78  Another build fix
-    048ae07  Fix whisper target bitmask
-    3f420f9  Multiline chatbar
-    141488d  Linux build fix
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5437170  Preserve murmur.ini during upgrades, and switch to Ice 3.4
-
-2010-03-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7f01023  Draggable anchor for overlay
-    ef947aa  Have config-based editor update config settings, not global
-	     settings
-
-2010-03-04
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    4455854  Fix drag and drop into Chatbar
-    4b58f15  Frontend part of "Editable Overlay blacklist" (#2881663)
-    c2397ee  Backend for user controlled overlay Black-/Whitelisting
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d73b644  Start of config-based editor
-    7efcd52  Move userhandling directly to OverlayUserGroup
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    f0b40a6  Gmod, L4D2 updates
-
-2010-03-03
-  Arcenciel <arcenciel@users.sourceforge.net>
-    9b8d1be  Updated Japanese Translation
-
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    1e6b573  Do not minimize to tray on windows 7 by default (#2947574)
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a4d90a9  Mention that we need lsb_release in the INSTALL
-    47ef042  Switch to utf8_bin collate for MySQL
-    38f059c  Proper bounding box and padding for overlay painter
-    2a9dbee  Save/load overlay
-    1e35f54  Refactor overlay config var names and clean up old
-	     configdialog
-    ebcb6d9  Fix zoom factor and add grid background
-    2ee79f2  Standalone overlay editor
-
-2010-03-01
-  Karl Dietz <dekarl@users.sourceforge.net>
-    d6d2e4a  wow: unbreak plugin after regexp experiment
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    dde4708  Scaled alignment for elements
-    030ed4d  Bounding box and element toggle
-    2b12585  Same transparency for all speakstates text
-    9fa00c3  Use premultiplied alpha textures
-    b658561  Speed up rendering slightly
-    b7d97dd  Add two preset layouts
-
-2010-02-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d44c84c  This is not the window you are looking for
-    f223a82  Update weblist.php to use Ice 3.4b
-
-2010-02-27
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    47a4538  Reprotect WindowFromPoint after patching
-    0abb9e5  Don't use widget functions on embedded widgets, they misbehave
-	     in release mode
-    4ee7782  Hold shift for square resize and scale with wheel
-    f1ab7fa  Editable overlay
-
-2010-02-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ed8f3e2  Fix unlink over Ice
-    0f377b1  Don't strip header in Ice getTexture
-
-2010-02-25
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    5da308f  Fix image selection in the german translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7cfe0b2  Constrain avatars to visible screen
-    3f7287c  Avatar placement based on Settings
-    9022177  Context menu for avatars
-    3fcb682  Add example users to overlay
-    ed39267  Update STO plugin
-    6d11c22  Use process map in initialize
-    f2c191d  The grand plugin multiregexp experiment
-    63adacd  Common dwPid var
-    71e5e85  Backwards compatible plugin structure
-    c263aa0  Update plugins to new trylock signature
-    6d9bc4e  Send pidmap to plugin trylock
-    b23d6fa  Require write lock to lock/unlock plugins
-    1856143  Fix autoconnect
-
-2010-02-24
-  Mikkel Krautz <mikkel@krautz.dk>
-    1df4b0d  Handle symbol-generation for plugin_bundles on Mac OS X.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    56406e3  Fix a possible null pointer deref
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f9091f0  Add option to autoconnect to last used server on start
-    a2f724e  Handle VirtualProtect failures
-    3d31674  Add logo to overlay
-    26a2a3c  Work around a few utf8 qssl issues and change window title on
-	     userinfo to be user name
-    2de762a  Restore maximized state on trayicon click
-    41724d8  Clientside idletimer counts keypresses, and deafens instead of
-	     mutes
-    aef4c71  Try switching back to Move action for UserModel
-    76d9960  Unify log message of chatbar and rmb message
-    0f7d727  Reset shared_ptr so it can be released
-    c463029  We don't have plugins for NULL items
-    add15dc  Assume input URLs are valid-ish
-
-2010-02-23
-  Arcenciel <arcenciel@users.sourceforge.net>
-    eda6b17  Updated Japanese Translations for 1.2.2
-
-  Kissaki <kissaki@gmx.de>
-    eda77d2  Fix spelling error in murmur.ini
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0e65387  Update lotro plugin to use win32 generic functions
-    aa41d15  Fix HookWindowFromPoint for 11x
-    caee7c8  Merge branch 'overlay'
-    c157f6e  Fix overlay to compile on nix
-    46288be  Cleanup unused Scene
-    e4c7724  Grab cursor from Win32 directly
-    3b38ac2  Override DoDragDrop's window detection
-
-  Zuko <zuczeq@gmail.com>
-    952a837  Some fixes in Polish translation
-
-2010-02-22
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    dac5d96  Honor Win32 focus/capture override
-    b52344d  Fix keyboard input state and remove mouse as valid click
-	     object
-
-2010-02-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    145fbce  Doubleclick and direct mouse update
-    44d8c7c  Clone cursor bitmap from system
-
-2010-02-20
-  Mikkel Krautz <mikkel@krautz.dk>
-    1be405b  Add targets for x86_64 and universal (i386 and ppc) to
-	     osxdist.py.
-    a309532  Move OSX dist scripts to macx directory.
-    8934d91  Add automatic overlay injection for OSX (Snow Leopard only,
-	     for now).
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6725d88  Cursor with offset support
-    f6ed071  Temporary cursors
-    e71a214  Eventloop fixing; gracefull enter/exit
-
-2010-02-19
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    fde785e  Re-modalize about dialog
-    f690f2f  Use non-native dialogs when embedded, and unembed on window
-	     hide
-    2c2918e  Doublebuffer painter
-
-2010-02-18
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0d45ea6  Async about dialog
-    46bb060  Somewhat threaded input handling
-
-2010-02-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5a9b23d  WIP: Overlay
-
-2010-02-16
-  Mikkel Krautz <mikkel@krautz.dk>
-    4a31df9  Sneakily fix MUMBLE_PREFIX envvar detection.
-    e815da0  Bail if no MUMBLE_PREFIX envvar is set during OSX build.
-    c0791fb  Add CONFIG+=universal for the traditional (i386,ppc) build of
-	     Mumble.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1576957  Calculate overlay offset correctly
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    59d6d67  Attempt to fix Arma 2 rotation addresses using pointers; fix
-	     DoDS typo
-
-2010-02-15
-  Mikkel Krautz <mikkel@krautz.dk>
-    80863d5  Add compat stub-app to instruct users that they're using an
-	     unsupported arch, and how to get a version that will work for
-	     them.
-    2dbba84  Move OSX overlay and overlay launcher into macx subdir.
-    ffe8fe2  Use new OSX install prefix for Murmur.
-    e268627  Rename 'installer_macx' to 'macx'. We don't have an installer
-	     anymore. Use it for more general OSX stuff.
-    6fa6411  CFLAGS fix for multiarch OSX overlay.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    79fc874  Expand dynamic slice-fetch example to show fallback
-    a2b4f85  Example of on-the-fly slice-fetch for Python
-    7ba42b7  Split icesecret in icesecretread and icesecretwrite
-
-  Zuko <zuczeq@gmail.com>
-    aa6250d  Updated Polish translation
-
-2010-02-14
-  Mikkel Krautz <mikkel@krautz.dk>
-    cbc5380  Change default OSX build to x86_64.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    eca8b3c  Fix compile error on gcc
-
-2010-02-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6e430ca  Add irc:// protocol to whitelist
-    11ec4b4  Only allow register for users with a cert
-    bdbd480  Grey out autoupdate for snapshots
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    9d3a304  Gmod, Insurgency updates
-    0de84db  DoDs, L4D2, TF2 updates
-
-2010-02-12
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    7f459eb  Update some license stuff we missed
-
-  Ludwig Nussel <ludwig.nussel@suse.de>
-    0bec6cc  function must return a value
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f0583b1  Add error message on snapshot installer fail
-    31cd532  Use ShellExecuteEx instead of QProcess to launch installer
-    97e8720  Remove gone users from overlay
-    c551d63  QGraphicsLayout based overlay render
-    d97d55c  Remove period in tooltip
-
-2010-02-11
-  Natenom <natenom@googlemail.com>
-    c067589  Add few German translations strings
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    fb5a618  Fix crash when dropping nonexisting channels
-    c473d5f  Update STO plugin
-    58cbf0e  Hopefully fix a compilebug I introduced on OSX
-    91cf6c7  Pipeline http fetch and set user-agent
-    61a1074  /dontskip for dxdiag requires Win7, so skip it
-    15a299a  Remove debug define from VersionCheck
-
-2010-02-10
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7d74f37  Fix new audio compile problems in 11x
-    1ef46ba  Add steam:// as allowed URL scheme
-    926e4fe  Create isAlive() to check runstate instead of bRunning, and
-	     unify stop/start of audio threads
-    e411773  Debian/kFreeBSD compile fixes
-    7c33c9b  Fix X11 compile of VersionCheck
-    b33d3b8  Automatic snapshot download and install
-    dd75b31  Make plugin config be name-based instead of pointer based
-    e31b265  Bump version to 1.2.3
-
-2010-02-09
-  Mikkel Krautz <mikkel@krautz.dk>
-    b2cd5de  Do not add menus to user/channel context menus on OSX. Menus
-	     that are added to the global menu bar on Cocoa/OSX must not be
-	     added to other menus or menu bars, according to the Qt docs.
-    b303856  Disable unified toolbar on OSX. Too buggy at the moment. Get
-	     rid of graphical artifacts on launch.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c41a192  Zap commenthash when switching servers
-
-2010-02-08
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    1e36860  Placeholder default_avatar.svg
-
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    070692d  Small style fixes in some plugins
-    dfaa2d5  Zero camera position if manual plugin is deactivated
-
-  Karl Dietz <dekarl@users.sourceforge.net>
-    d8e25b0  LOTRO use Pi from math.h
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3938ebe  Move plugin system-level includes to common header
-    99366f3  Disable config/about buttons if plugin doesn't have that, and
-	     add a generic_unlock
-    de21a22  Update STO plugin and add common initialize() function
-    effc993  Template helpers for Win32 plugins
-    e207ef6  Zero camera positions in plugins' fetch()
-    5271bc0  Disable PLUGIN_DEBUG as the console spams breaks up audio
-    33b90aa  Spawn state for STO
-    f1c66fb  STO plugin, and use camera position for positional audio and
-	     rotate top vector properly
-
-2010-02-07
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5595aba  Add vertical space for empty lines and add some space around
-	     the avatar
-    f7d3dc7  Deprecate the OverlayUserTextures option; they are now
-	     on-demand loaded avatars, so always on
-    8a1705d  Work around colors lost when application style lost
-
-  Zuko <zuczeq@gmail.com>
-    1ec8726  Small fixes in Polish translation
-
-2010-02-06
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    cf75490  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    031a0fa  Add a hackish workaround for people who ignore reboot warnings
-    a349a08  Use symlinks in release tarball
-    3a05189  Work around bug in g++ on Jaunty
-
-2010-02-05
-  Karl Dietz <dekarl@users.sourceforge.net>
-    1615b47  WOW update to 3.3.2
-
-  Kissaki <kissaki@gmx.de>
-    29b65b8  german translation update
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    298bbb7  Boost 1.42.0 for Mac OS X.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9bd867f  Fix overlay crash in Killing Floor when
-	     IDirect3DDevice9::Reset() fails
-    4c2ffdf  Fix SocketRPC on nix
-    228e9ed  Local socket RPC for mumble self-RPC
-
-  Spaccaossi <spaccaossi@users.sourceforge.net>
-    9a58ef1  Updated Italian translation 1.2.2
-
-2010-02-04
-  Mikkel Krautz <mikkel@krautz.dk>
-    4529500  Hide tray-options in LookConfig on OSX, where we don't have a
-	     tray.
-    121e6ec  Use unified window/toolbar on OSX.
-    37430b1  Make sure to pop the whole GL error stack when cleaning up.
-    d15128e  Resync GL overlay code.
-
-  Ilmar Kruis <seaeagle1@users.sourceforge.net>
-    985af69  Fix heading readout for lotro.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7a0d844  Only send texture if it changed.
-    cd6667b  Boost 1.42 for Win32
-
-  Jonathan <zentriple@users.sourceforge.net>
-    0f630bf  Updated Danish translation for 1.2.2.
-
-2010-02-03
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    9929a44  Add getUptime() function returning uptime in seconds to murmur
-	     and individual virtual servers
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e0c6b91  Only switch unpack buffer if we have to
-    7d73e62  Add icon maker, sort of
-    1b3dadf  Use QImage::fill instead of QPainter::eraseRect
-    5a7beda  Limit avatar sizes to iMaxImageMessageLength
-    35fbbcd  Only use integer decimation in tooltip avatars
-    ef9de69  Precache texture/comment when sending to server
-    1679e06  Drop qaUserComment in favor of qaSelfComment, and query
-	     comment/desc on view/edit
-    346755d  Handle SVG for overlay properly, and fix a crashbug in
-	     ~Overlay
-    3b33b67  Clean up default channel logic slightly
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    936779d  MW2 updates
-
-  Zuko <zuczeq@gmail.com>
-    2becf4f  Updated Polish translation
-
-2010-02-02
-  Netbios Domain Administrator <admin@gameserver2.(none)>
-    97a15a8  User join defaultchan if last channel is not permitted
-
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    2e816c7  Make idleseconds not only reset on voice but on all actions
-	     caused by the user
-    7218413  phpBB3 and SMF authenticator moved to
-	     http://gitorious.org/mumble-scripts/ . From now one all
-	     non-sample scripts will be placed in this repository.
-
-  DWM|G <gallaghermumble@gmail.com>
-    38b47ec  Added Icon Toolbar.
-
-  Jamie Fraser <jamie.f@sabrienix.com>
-    a9e9922  Added a crappy example of an auto idle-move written in PHP.
-
-  Natenom <natenom@googlemail.com>
-    11e4cec  Added some new strings to German translations
-
-  Ilmar Kruis <seaeagle1@users.sourceforge.net>
-    59e10d1  Update lotro plugin to Book 9 Patch 1.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b6bd51c  Add disambiguation for "Bandwidth" in UserInformation
-    c372eb4  Windows XP doesn't have DXGI or D3D10
-    fd0bbfb  Save state for dock widgets when going minimal
-    83f8d64  Add dontskip for dxdiag
-    aa9616e  Work around QLocalSocket NOT closing sockets when it is
-	     deleted
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    1afffff  Fix unstable TF2 state address
-    7ef0e7f  TF2 update; hopefully more update-friendly arrays now
-
-  Zuko <zuczeq@gmail.com>
-    7925624  Polish translation
-
-2010-02-01
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    dfd5e43  Hide high contrast option from audio wizard on windows
-    e40ea57  Make notification settings in wizard reflect current settings
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    9a9ad5c  Fix no-overlay option.
-    3203941  Add CONFIG+=no-overlay for devices where an overlay doesn't
-	     make sense.
-    6f28020  Unbind PBO buffer before we draw our GL overlay.
-    1b99c94  Remove overlay from Mumble11x. Codesign libmanual.dylib.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    f375d2b  Re-Regroup the UI config page
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    99a8546  Send userstate to pre 1.2.2 clients without textures as well.
-	     Oops.
-    f9c3d34  Don't send new-style textures to old clients
-    e6b585d  Fix compat textures without proper alpha, make the avatars be
-	     memoryblob://avatar/ and expand the fileengine slightly
-    07e0d90  Send only the avatar hash on login
-
-  Zuko <zuczeq@gmail.com>
-    3ca49eb  Polish translation
-
-2010-01-31
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    a7e7171  Auto-enable high contrast mode when high contrast theme is
-	     detected (Win only)
-    95e41b8  Make high contrast mode of AudioBar use color to brush
-	     replacement table instead of fixed values
-    48cc272  Add High contrast option for visually impaired. For now only
-	     affects AGC/VAD config bars
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    3ae5144  Updated Spanish translation
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    62272b4  Regroup UI options
-    584ab54  Always start the channel context menu at the first option
-    5c17dbe  Fix TTS plaintext for long text messages
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    bd97e45  Proof-of-concept image filesystem
-    e99122c  Fix qt<4.6 overlay render
-    0901e3a  Allow removing of texture without downloading it
-
-2010-01-30
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    c1515fe  Special case for Speak right in the ACLEditors indicate scope
-	     for WriteACL functionality
-    03f5930  Do not hide group/acl tabs from non-experts and visualize that
-	     WriteACL grants all rights by graying out the others if it is
-	     set.
-
-  Natenom <natenom@googlemail.com>
-    82e3d5c  German Strings updated
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5004a8e  Fix snapshot path in binserver
-    28641d2  Fix texture in D3D9 after reset
-    3ebcd23  s/Texture/Avatar/ in menus
-    93a4c7f  Fix mouseover textures and 1.2.1-compatibility
-
-2010-01-29
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    e70d404  Allow the use of realName in smfauth and make it possible to
-	     read avatars from local file system
-    ff36e04  Make smfauth display realName instead of memberName
-    d30713c  Added Simple Machine Forums (SMF) authenticator to scripts
-	     folder
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1070713  Make channel_info and user_info be utf8 on mysql
-    e913f4b  Have testauth return a dummy avatar
-    705738a  Server-side avatar support
-    75fc50a  User avatars
-
-2010-01-28
-  Arcenciel <arcenciel@users.sourceforge.net>
-    f816fe6  Updated and fixed japanese translation
-
-  Erik Bouvin Pedersen <erikbp@users.sourceforge.net>
-    eda8b2f  Update Danish translation.
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    b2181bc  Re-enable Intel-specific hacks in OSX overlay.
-    5f4fcb1  Socket-based overlay for Mac OS X.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    eba8bb3  Add strong cert link to cert wizard
-    8b90d2e  Show tooltip warning in rich text editor when over message
-	     limits
-    7a2061c  Propagate a few server config options to the client
-    7d81002  Split ServerUser from Server.cpp
-    d878550  Use glPixelStorei for subtexture updates on Win32
-    fc76734  Fix LCD enable state
-
-2010-01-27
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    cdf21bc  Some untranslatable strings were marked translatable
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    202d1bb  Only enable Join Channel if we can join the channel.
-    d891807  Always visible Join Channel context menu option
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f54a142  Fix endian on ARM
-    af4ac7a  Fix enable-state for mute/deafen
-
-2010-01-26
-  Arcenciel <arcenciel@users.sourceforge.net>
-    8bd520e  Updated Japanese Translation
-
-  Natenom <natenom@googlemail.com>
-    b502e7f  Updated German Translations
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    57ef6e6  Fix texture assignment in server
-    cf9c337  Fix enable-state of usermenu
-    7f019a7  Remove last parts of old SharedMemory
-    4568886  Be quiet about expected suppress state
-    38015bf  Use the new blob/sha1 functions
-    89a0f32  Make database work on sha1 for comment seen state
-    63568fd  Client-side blob cache for comments
-    e51a048  Make Win32 OGL overlay work in windowed mode
-
-  Zuko <zuczeq@gmail.com>
-    8b56834  Polish translation
-
-2010-01-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c00b9bf  Socket-based linux overlay
-    eaf4fc0  Make new overlay drawer Qt 4.5 compaible and use QDir::home()
-	     for sockets
-
-2010-01-24
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    e548546  Initial import of WIP mumble protocol description
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    59b0d54  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    036c6c3  Remove dependence on sm.sm from Win32 overlay
-    0baf758  D3D9, D3D10 and OpenGL/Win32 pipe-based overlay
-    2322bec  Clean up texture assignment
-
-2010-01-23
-  Natenom <natenom@googlemail.com>
-    b1884ac  Updated German Translations
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7b30742  Add placeholder SharedMem unix implementation
-    9dfc063  Add missing SharedMem files
-    d173452  New SharedMemory2 class for communication client/server
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    d24d29b  Added alpha-testing ArmA 2 plugin; plugin version bumps
-
-2010-01-22
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    909d515  Add menu bar config option
-    f07dc00  Disable auto expand in the user list
-    64f30a4  Add text before the welcome message to fix weird QTextDocument
-	     behaviour
-    588975a  Fix two compiler warnings
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b915976  Explicitly name 'struct' for C89 compliance
-    6d885b2  Shared texture based overlay (client part)
-    1f51f0c  Shmem based overlay (still WIP)
-
-2010-01-21
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    345d96b  Replace URLs in TTS with more ear friendly strings
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    30b63c2  socket-based overlay (WIP)
-    8d64449  Fix a few strings in AudioInput.ui
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    295bc08  MW2 updates
-    71fd273  Add L4D2 plugin
-
-2010-01-20
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    179159c  Fix overlay cropping (used blue instead of alpha channel)
-    02805c7  Give phpBB3auth.py auth the ability to display username next
-	     to avatar
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6b75459  Instead of showing selfsigns as red, show strong certs as
-	     green, also in browser
-    019224c  Upgrade CELT to 0.7.1
-
-2010-01-19
-  Mikkel Krautz <mikkel@krautz.dk>
-    0216000  Fix OSX dist script for new libcelt-naming.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    e28919d  Fix log time coloring & text object too large text object
-	     error message
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    bf008bb  Mark untrusted servers with a pale red color
-    8b0cbe8  Qt 4.6.1 for static snapshots
-    0835890  Reset document iterator after editing
-    416a742  Fix icon contextmenu
-    fd8dd9d  Update mkwrapper to generate astyle-compatible output
-
-2010-01-18
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    7d8102f  Display errorString on listen failure
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    20e73fc  Texture on demand
-    56bff0a  Fetch comment/desc on demand
-    b1bb8a8  Show cert expiry in wizard, and warn on startup if cert
-	     expires in <14 days
-    5cd6a1b  Add icesecret .ini parameter to "protect" local Ice
-	     connections
-    c129ba4  Add imagemessagelength limit to server
-
-2010-01-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    731d293  Make the client compile, even if it's missing blob support
-    d89423b  On-demand stuff for Ice
-    60e7151  Serverside comment/texture send-on-demand
-
-2010-01-16
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    dd6a310  Round out the redirectWhisperGroup doc in Murmur.ice
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d109910  Update to new naming for libcelt0
-    7ec36ab  Update CELT
-    814752a  Request CAP_SYS_RESOURCE and dynamically increase nofile on
-	     demand
-    3a50ef5  Clean up suppress state messages
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    ad0f30f  MW2 version update
-
-2010-01-15
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    838697d  Update LICENSE file for 2010
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0fc5d55  Fix bandwidth estimate for UserInformation and Ice
-    8463c82  Increase userinfo update frequency and show stddev instead of
-	     variance
-
-2010-01-14
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    221626f  Make click on client/channel link focus the chat bar
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    e5fbc07  Fix stylesheets in log messages
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2f2012f  Use Qt 4.6.0 for static server snapshots
-    31ff2e6  Use Protobuf 2.3.0 on Win32
-    a14e3f2  Specify that we want crashreport descriptions in English,
-	     please
-
-2010-01-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    daa8341  Don't set appusermodelid for 11x
-    c876409  Include dxdiag in crashreport
-
-2010-01-12
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    1e0ec8c  Fix coding style in ServerHandler
-    68ac664  Unbreak log messages containing invalid links
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c9f005b  Save/restore connectdialog state
-    0671d7b  Show server name in trayicon tooltip
-    cac28da  Show remote host in Server|Information
-    95d667b  Show channel user count in G15
-    c39492f  Unify 'IsThisVista?' checks to one place, and use release
-	     build apppath for jumplist
-
-2010-01-11
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    c12f127  Fix focus tracking hiccup on disconnect in chat bar
-    09dd4a3  Fix mumble-auth.py for 1.2.0 (#2926521)
-
-  Natenom <natenom@googlemail.com>
-    759480f  Updated German Translations
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    0bfb9c7  Update comment in updateRegistration for connected users
-    16a38a1  Add QThread yield calls
-    c34a38c  Make cert details dialog in the user info dialog window modal
-    5a567c0  Set last servername in URL handler
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    da6ef89  Use QNetworkAccessManager to register, QHttp is deprecated
-    876fd2f  Remove 'ulimit -r' from init script as it requires bash
-    cbee6c8  Only show userinformation if server >= 1.2.2
-
-2010-01-10
-  Arcenciel <arcenciel@users.sourceforge.net>
-    5eed139  Fixed Japanese Translation for 1.2.1
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    7213a00  Add a Self menu and remove the context menus from the menubar
-    cf33de4  Move assembly of some protobuf messages to ServerHandler
-    170fd04  Disable translation for some invisible strings
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    01b78bb  Show strong certificate state in client
-    fd87e5b  Zero packet stats on startup (oops) and export strong
-	     certificate state
-    a3cb3fb  Make UserInfo fields copyable
-    3a2280f  Bump version to 1.2.2
-    360085f  Hide empty statistics fields
-    070f316  Show bandwidthrecord stats in client
-    fba3df2  Export bandwidthrecord statistics
-    73dc378  Clientside user information
-    e233e6e  Fix mixed up stats sent from server
-    08c753b  Userinfo (serverside)
-
-2010-01-09
-  Kissaki <kissaki@gmx.de>
-    de2208e  German translation updates
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e11e8a7  Fixed patch for sqlite syntax
-    ad833d6  Revert "Don't use mysql syntax in sqlite path"
-    114d4ea  Don't use mysql syntax in sqlite path
-    c85e37d  Try using skin: in a few more places
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    a27bda5  Add top vector to UT2004
-    77713c8  Fix unreliable pointer on 1942; fix UT3 top[1] reversal issue
-	     when looking down
-
-2010-01-08
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    a6a6680  Fix possible memory leak in tasklist code
-    625fbc4  Fix multiple recent list entries with different usernames
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0457bb0  Have G15 default as unavailable until proven otherwise
-    2e177ba  Use uiAccess only for mumble.exe
-
-2010-01-07
-  Mikkel Krautz <mikkel@krautz.dk>
-    d43d38c  Tell codesign where the mumble-overlay binary resides now.
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    9a38eee  Updated Spanish translation
-    5989b9c  Updated Spanish Translation
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    3ec3f5e  Fix compiling mumur on FreeBSD
-    7426294  Update LICENSE
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2e36c68  Process disconnect events before connecting to new server
-    10e4c19  Add Africa
-    f6dd2b7  Intel C++ 11.1.054 on Win32
-    b5b6ba2  Add getCertificateList to Ice
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    57e8b77  Update remaining plugin licenses
-    58081c6  Update licenses; add UT3, 2004, 1942 plugins; update some
-	     Source plugins
-
-  Jonathan <zentriple@users.sourceforge.net>
-    2e2652b  Update Danish translation for 1.2.1.
-
-2010-01-06
-  Arcenciel <arcenciel@users.sourceforge.net>
-    a8d4b61  Updated Japanese Translations
-
-2010-01-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    16339bf  Update license to 2010
-    45da4e1  Add license info to a few plugins
-
-2010-01-04
-  Tuck Therebelos <snares@users.sourceforge.net>
-    85e5429  Add licenses to plugins
-
-2010-01-03
-  Arcenciel <arcenciel@users.sourceforge.net>
-    b9a647b  Updated Japanese Translations for 1.2.1
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    eee808d  Updated Spanish translation
-
-  Ilmar Kruis <seaeagle1@users.sourceforge.net>
-    2701266  Positional audio plugin for Lord of the Rings Online.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2950634  Fix a few spelling problems
-    cfcc962  Fix stuck PTT input in audiowizard
-    6a8a20d  Roll back mumble_de.ts
-    d150ba1  Fix spelling error in manpage
-    64a7d22  Honor CONFIG+=no-crash-report for 11x
-
-  Spaccaossi <spaccaossi@users.sourceforge.net>
-    9019991  Italian translation for 1.2.1 and 1.1.x
-
-  Zuko <zuczeq@gmail.com>
-    336d02d  Updated Polish translation
-
-2009-12-31
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    064969a  Allow setChannelState on root channel
-
-2009-12-30
-  Natenom <natenom@googlemail.com>
-    c9f7a54  Updated German Translations
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    0434d8f  Hide the custom quality text if the checkbox is not visible
-
-2009-12-29
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    3f9be33  Fix QWindowsVistaStyle hack when using stylesheets
-    530bc5e  Add a default stylesheet for log messages
-    3983bd1  Fix log CSS classes and remove "'s around channel/usernames
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    52b5939  Don't showpage() on exit
-    764151d  Fix a few leftover column 1 dataChanged()
-    7825b04  Allow viewing comments in richtexteditor
-    ef1b9ff  Search for mumble.ini in APPDATA as well
-    feef4ef  Per-channel userlimits (usersperchannel in .ini, hidden
-	     option)
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    dec2ba8  Link AW PA setting to TransmitPosition
-    c70af3e  Fix qcbHeadphone
-    fce765a  Remove leftover stub
-    d58af53  Fix remaining plugin bugs; ensure console connects get handled
-	     properly; link PA in AW to bTransmitPosition; set default
-	     minimum volume of PA to 85%
-
-2009-12-28
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    32d4490  Replace bitwise operators with boolean ones in attenuation
-	     handling
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    827cab2  Hack around Qt's Vista Style weirdness and drawing code
-	     cleanup
-    9caba4f  Rewrite UserView drawing code
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    04f3e4f  Handle permissiondenied for user rename in client
-    338ea0f  Validate usernames on user rename
-    02214c0  New PLC code in CELT master
-    bef7408  Show and react immediately to tranmission changes in
-	     audiowizard
-
-  Zuko <zuczeq@gmail.com>
-    243f5c7  Update Polish installer
-
-2009-12-27
-  Arcenciel <arcenciel@users.sourceforge.net>
-    6364d67  Updated Japanese Translations for 1.2.1
-
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    117f396  Make audio quality selection in audio wizard apply immediately
-    afb7b45  Add "Attenuate applications while other users talk" check box
-	     to the audio wizard's device selection page
-    26a5f9c  Make other applications volume slider represent attenuation.
-	     Fix surrounding strings.
-    8bc620d  Add what's this and correct tooltip for attenuation feature
-    6412b3a  Disable new attenuate others controls if the sound system does
-	     not support them
-    c24b7f0  Make Gui for volume attenuation of other applications more
-	     useful
-    347ef1d  Fix bug in attenuate others while you talk code
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    1b52809  Fix 11x crashreporter for OSX.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    69a05b8  Small fixes for the german translation
-    1c2a5b3  Change some translated strings
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ff50167  Use ShellExec to launch mumble in installer
-    484aa0b  Add symlink for os_win
-    676f6da  Backport crash reporter to 1.1.x
-    1831073  Compile fix for 11x
-    19d171c  Update changelog script to skip language updates
-    a42f160  Set uiAccess to true
-    eac3c5a  Allow spotify links
-    107aedb  No, really, use short instead of char
-    075098e  Listen to IPv4 explicitly if IPV6_V6ONLY is 1
-    357e016  Fix bandwidth monitor to handle larger frame sizes
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    c0ecbd2  Fix vehicle V/H floats
-    86f851f  Add ETQW plugin files
-    417ae98  Unified string messages; added ETQW plugin; various plugin
-	     fixes, improvements and updates
-
-  Jonathan <zentriple@users.sourceforge.net>
-    48646e1  Update Danish translation
-    b24f793  Danish translation for 1.2
-
-2009-12-26
-  Tuck Therebelos <snares@users.sourceforge.net>
-    2566014  Linkcheck is different if loading movies
-    87ec3c5  Fix BF2 link bug; improved context address
-    98cd01e  Update MW2; remove useless context
-
-2009-12-25
-  Natenom <natenom@googlemail.com>
-    60ca8ee  Added some new translations for 1.2.1
-
-2009-12-24
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    7a058a9  Add possibility to attenuate other applications while talking
-    a7a18de  Show talking state in tray icon
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    b39f73b  Remove the flags column and draw the flags icons right aligned
-    a6a4bba  Fix 11x compile error
-    e2568ea  Added/Fixed accelerator keys and tab ordering
-    f3a3d1d  Add channel join action to context menu
-    4a45dd8  Fix TTS output for user links
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    9f48958  TF2 update
-
-2009-12-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    27ad7ea  Update Qt license text
-    8389b64  Print a big, fat warning if resource limits indicate
-	     insuficient descriptors are available
-    c360c5c  Update path to G15SDK 3.04
-
-2009-12-22
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    20e65f8  Automatic certificate creation with backup and restore
-
-2009-12-21
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    bb55b37  Fix current index on item move + chatbar default text update
-    a9bd564  Only enable comment reset if there is a comment
-
-  Karl Dietz <dekarl@users.sourceforge.net>
-    6da2259  update wow plugin
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    c25a624  Fix joined server link for registered users
-    9f19fe4  Fixed typos and missing types in log messages.
-    fa8a98d  Change getPathToChannel to return a QString instead of
-	     modifing it's arguments
-    902fe58  Add links to the log window
-    17f619e  Remember last channel on disconnect
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    546b35c  Quickgenerate certificate for lazy users
-    06f3542  Make celt compile on msvc again
-    cb5c323  Add a few more CELT fixes
-    32c256b  Delay plugin rescan
-    ffed0d8  Don't update user plugins if userdir == systemdir
-
-2009-12-20
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    dc0cee5  Add the possibility to disable individual plugins (#2868251)
-    2b70c8e  Add rename context menu entry in "Registered User" (#2885100)
-    608650b  Disable qaUserComment/qaUserCommentReset action when no user
-	     is selected
-    a193f1b  Improve robustness of custom chatbar context menu
-    315ff84  Paste and send context menu entry for Chatbar (#2915069)
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    d6ac81e  Fix resampling in PortAudio backend.
-    04725ad  Attempt at better OSX 10.4 support.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b392119  Fix help text for shortcut bind
-    3593ead  Remove a leftover else for red->blue transition
-    ed33707  Disable foreign key checks during database migration
-
-2009-12-19
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d179b5d  Allow exact match of server bandwidth
-    b3e2cd6  Avoid red->blue flash transition on incoming whisper
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    75fbf02  TF2 update
-
-2009-12-18
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    ebef80e  Fix audio wizard page visibility and layout
-    ec9c1d7  Resend mute status after deleting a channel
-    13d7225  Fix join subchannel shortcuts
-
-2009-12-17
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    c421faf  Fix faulty function call in phpBB3auth.py
-
-  Kissaki <kissaki@gmx.de>
-    f5260da  indendation fix, normalization
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    9d16137  Set correct target for the last whisper frame
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    2c83e67  TF2 update; update DOS build number
-    7b2d347  DODS update
-
-2009-12-16
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    53346cb  Only show comment reset for other users
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    90e945c  Add CONFIG+=analyze for VC. Needs a lot more filtering to be
-	     really usefull.
-
-2009-12-15
-  unknown <LoL@.(none)>
-    725c4cf  Update French translation
-
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    d2114f2  Enhance adjustability of always on top setting
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    0e241d1  Save server specific shortcuts on quit
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    718da15  Avoid a potential divide by 0 under really bizarre
-	     circumstances
-
-2009-12-14
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    39ba54f  Fix RichTextEditor resizing in edit channel dialog
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    9aaa8cc  TF2 update
-
-2009-12-13
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    76c2c4d  Add quality & notification page to Audio Wizard
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2ed1710  Reupdate the CELT rev
-
-2009-12-12
-  Phrag <info@clanwars.cz>
-    6efe83a  Czech installer
-
-  Julien Pardons <j.pardons@redline-hosting.eu>
-    8d76b5a  Patch for icedemo.php (user edit)
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    18a3e80  Fix permissiondenied on invalid channel
-    a1114e4  Enable connect to freshly added servers
-    11a6e94  Cache result of doEcho
-
-2009-12-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9716748  Include varlength array fix for CELT
-    842769a  Use a bit more forgiving bandwidth estimation on the server
-    7dcc10e  Add frame header when computing bandwidth on client
-    43c4def  Try the new LPC-based LPC for CELT
-    f0298e3  Bump version to 1.2.1
-    867da14  Order channels when importing to MySQL
-
-2009-12-10
-  Arcenciel <arcenciel@users.sourceforge.net>
-    d5e0afb  Japanese Translation for 1.2.0
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    9171b43  Add missing .plists to DIST.
-    e9f7e0a  Add no-cocoa CONFIG option, to allow Mumble to build against
-	     non-Cocoa Qt.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    68d33ba  Disable unfinished translations
-    84c63d8  Update release scripts for new host
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    a4ea89c  Added BFHeroes plugin; updated BF2 and BF2142 with IP contexts
-	     and improved linkstates
-
-2009-12-08
-  Cristian Gattamelati <cristian.gattamelati@gmail.com>
-    75f5b37  Italian Installer update
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    e595948  Fix overlay launcher for Snow Leopard. Update bundle
-	     identifiers.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f4093f7  Work around bug in 4.4 compat emitDataChanged
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    eb9ab11  Various Source plugin updates, fixes; CoD4, MW2 context fixes
-
-  Bartek "stranded" Sumowski <sumowski@gmail.com>
-    58f9726  Updated Polish translation
-
-2009-12-07
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    be4786d  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5554295  Use Qt4.4 compatible datastream for jitter report
-
-2009-12-06
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a0908d5  Only reload stylesheet when necesarry
-    8f09a06  Set context for 4.6.0 translations
-
-2009-12-04
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    332b143  Make phpBB3auth.py python 2.4 compatible and improve avatar
-	     resizing
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    acb7642  Better fix for zerosized voice packets
-    5819780  Ignore zero-sized voice packets
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    e77beae  AOC, CSS string updates; Dys, Insurgenccy, TF2 IP:Port context
-	     support. DODS IP:Port+Team context support; CoD4 context fix;
-	     Manual plugin shortname fix
-
-2009-12-03
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4023e4c  Back to the updated master branch of CELT
-
-2009-12-02
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    22f70fb  Usage format 2
-    a4f1ff7  Don't bother sending short jitter reports
-
-  Bartek "stranded" Sumowski <sumowski@gmail.com>
-    0521e38  Update 11x Polish translation
-
-2009-12-01
-  lolo_32 <Alex@.(none)>
-    d8188f7  Translations in French of new strings, and some minor write
-	     and grammar errors corrected
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    fdc8261  Fix up dylib refs for libmanual.dylib.
-    84099e5  Fix Mac ConfigDialog for Qt 4.6.
-    36c015c  OSX build fixes for Qt 4.6.
-    7aa6e67  Fix graphical glitch on OSX.
-    0e676a1  Strip debug symbols after extracting them for CONFIG+=symbol
-	     for macx.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    8533e2a  Fix manual positioning plugin on linux
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    45ebdb6  Quiet down a few compiler warnings
-    a908b5a  Use WId explicitly
-    7b30399  Commit shortcut editor before adding/removing
-    ad9c725  Use SEH magic to work around __HrLoadAllImportsForDll oddities
-    ff4057b  Try to promote libGL.so to global scope if we can't resolve it
-	     directly
-    14ff24f  Add magic 0.7.0 detector
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    53fcb70  Gmod update
-
-2009-11-30
-  lolo_32 <Alex@.(none)>
-    0632e82  Add the new strings
-
-  arrai <array.of.intellect@gmail.com>
-    00f3aa2  Fixed linking temporary channels
-
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    3a3926c  Extend TestLink plugin with comments so its code can be used
-	     directly in the documentation page
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e7f089b  String updates
-    334fe4d  Upgrade deps to 4.6.0-rc1, openssl 1.0.0b4, boost 1.41
-    6d9a0e0  Change to straight 4-byte encoding for floats
-    dfd87b0  For fresh IP bans, don't clone hash and username
-    1f6e1dd  Fall back to -ldns_sd if pkgconfig for avahi isn't found
-
-2009-11-28
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    1c8d127  Fix mistake in previous message patch
-
-  Natenom <natenom@googlemail.com>
-    f392cb6  Updated German translations for 1.2.0
-
-2009-11-27
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    aa59399  Manual positioning plugin
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    3089fbe  Fix typo in ConfigDialog fix for OSX.
-    f61dd13  Make sure ConfigDialog is sized properly on OSX.
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    85919ce  Remove uncommitted game plugin
-    f6c26d6  CoD5 version bump; fix MW2SO .pro
-
-2009-11-26
-  Mikkel Krautz <mikkel@krautz.dk>
-    a7f4bea  Fix mumble11x build.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    fbb9989  Fix crash with importing a passworded cert
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4b9941f  Update the celt codec yet again to fix more bugs
-    4d64a01  Update celt version
-    6bce206  Delay restoreGeometry to after windowflags are set
-    d042b70  Add jitter data to usage report
-
-2009-11-25
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    b2b8c10  Fix #2903204: wrong status message displayed for deafened
-	     (server) event
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    760bf63  Fix no-dbus build.
-    e0e8bc0  Fix OSX compatibility client launching and URL handling for
-	     unversioned and ?version=1.1.x URLs.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    a22567a  Fix cert name display with non ascii chars
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    23ada59  Update 0.7.0-src to a version that builds on Win32
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    9766240  MW2 string updates, TF2 identifier update
-
-2009-11-24
-  lolo_32 <Alex@.(none)>
-    47d2398  Translations in French of installer and Mumble
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    1d07f8a  Store the comment in the user object if it's changed via RPC
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    62aa53b  Don't deref the mainwindow before it's created
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    50af882  MW2SO fix state value
-
-2009-11-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3f7ad99  Fix a few strings
-    39cd472  Upgrade celt to exp_time_pitch
-    67fc2c4  Change qwave loading to avoid a few XP bugs
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    b7bc917  Fix MW2 positional data
-
-2009-11-22
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    0c60717  Add channelname and username var to murmur.ini to make them
-	     more visible
-    6150c78  Fix Unicode handling in phpBB3auth.py and make it able to load
-	     raw Ice configuration tuples
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    860c105  Update Mac OS X Boost to 1.41.0.
-    a3cc6a2  Property list fixup for OSX binaries.
-    e96809e  Extract .dSYM debug symbols on Mac OS X when using
-	     CONFIG=symbols.
-    c365ac6  Clean up overlay_mac build.
-    ae45a2f  Use -dead_strip linker option on OSX.
-    0a2ef0e  Clean up Unix section of compiler.pri. Keep platform specific
-	     flags in their own sections.
-    8a10baf  Add phpBB3auth to OSX dist script. Remove dead PackageMaker
-	     code.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    839cf4c  Add a command line option to allow multiple clients
-    3172ae4  Fix client ban timezone handling
-    c180869  Check bans using UTC time
-    248d44a  Fix ban expiration
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f16570e  Stop findDesiredChannel while still connecting
-    2dc541b  Fix lingering channel comments
-
-2009-11-21
-  BAYSSE Laurent <lolo_32@users.sourceforge.net>
-    6390d4a  French translation update for 1.2.0
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    88c1b27  Refine MainWindow aesthetics on OSX.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    3e66866  Use a new instance for each iteration so we don't leak
-	     information of previous items in Ice replies
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    54a487e  AOC, CSS full context support
-    765c399  MW2 MP update
-
-2009-11-20
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    01a72bb  Integrate default sound pack into mumble
-    4ad97d3  Add Server connect timeout of 30s.
-    99b99e9  Reduce TTS/Notification Spam in defaults and reclassify some
-	     unimportant log messages to info level.
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    447ac82  General LCD fixups and make G15 on OSX a bit prettier.
-
-2009-11-19
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    7f0ba42  Centered dD0T type authenticated.svg.
-    62f9a8b  dD0T version of authenticated.svg. Attempt two.
-    b803a43  Making comment icons less 3D.
-    421d778  Replaced authenticated.svg
-
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    6144233  Revert to second draft for authenticated.svg.
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    81c9e78  Revert AudioDevice{set,get} parameter change in CoreAudio.
-    da18c1f  Make sure G15 works on OSX.
-
-2009-11-18
-  Arcenciel <arcenciel@users.sourceforge.net>
-    a8a25e9  Japanese Translation
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    a3cbe21  Don't disable for CoreAudio builds on Mac.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5254448  Initialize bCertRequired
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    1176bdf  MW2 plugins version updates
-
-2009-11-17
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    34f9ea9  Raise default quality to 40kbit/s
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    fd830d7  Add the ability to colorize log messages
-    3c050e9  Add an option to reject connections without a certificate
-    298d342  Add a warning if the settings database is read-only
-    2a582a6  Change reject type field to uint32
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0c36a80  Add some type safetyp to denytype
-    c8b81b6  Make rejecttype optional
-
-2009-11-16
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    c4d99f5  New comment icons for review.
-
-2009-11-15
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    d28e95f  Some comments and minimal refactoring of
-	     Server::recheckCodecVersions()
-    0eea7b5  Make hl2dm PA plugin compile again.
-
-  Kissaki <kissaki@gmx.de>
-    640d91e  German translation update minor English text fix
-
-2009-11-14
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    4911c8a  Update Spanish translation
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    5ec2225  Ins, TF2, L4D updates
-    ac11b54  Fix CoDMW2SO state value
-    9cc7f15  Add MW2 plugins to installer
-    b560789  Add MW2 plugins to plugins.pro
-    d5777ef  Fixed state and V/H for MW2; MW2SpecOps plugin added
-    dfd7909  Fixed state for MW2; MW2SpecOps plugin added
-
-2009-11-13
-  Mikkel Krautz <mikkel@krautz.dk>
-    c81ff65  CoreAudio: Allow devices to run even if they have to use their
-	     default buffer length (when we can't set it ourselves)
-    71e1b7b  Add buffer range debugging to CoreAudio. Fix isInput parameter
-	     for setting buffer size.
-
-2009-11-12
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    7411fc9  Use localeAwareCompare for overlay sorting.
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    382bca6  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3df0dce  Add direct dependent libraries under X11
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    7f146f2  CRLF
-
-2009-11-11
-  Mikkel Krautz <mikkel@krautz.dk>
-    aba1fc2  Update osxdist script for beta and fix diskimage window
-	     dimensions.
-
-  Patrick Matthäi <pmatthaei@debian.org>
-    ec48050  Spelling fix
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ada9d58  Allow setting version on binserver script too
-    f3b2395  Allow release script to specify custom version
-    f3e9ed7  Automatically use system CELT if it's >= 0.7.0
-    66c2261  Change initialization order to allow direct-copy constructor
-    bd33712  .ts file update
-    a59ce15  Don't distribute older celt versions in tarball either
-    f765851  Initialize ucFlags properly
-    786ed67  First check SSL cert errors, THEN check the SSL version
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    ddb16ce  CoDMW2 plugin; HL2DM context example
-
-2009-11-10
-  Karl Dietz <dekarl@users.sourceforge.net>
-    6019fc1  plugins/wow: disable context in release builds
-
-  Ludwig Nussel <ludwig.nussel@suse.de>
-    7dae3ed  silence integer/pointer cast warning
-    1b2647b  Qt 4.4 doesn't have emitDataChanged(), the function is the
-	     replacement
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    3efd3dd  Fix reference to two sliders in Audio Wizard VAD strings.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    0917b0a  Deny category dragging
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7e4ce0e  Build only 0.7.0, 0.6.1 etc are deprecated for the beta
-    505e774  Source string fixes from naproxeno
-    9239379  Punctuation fixes for tooltips
-    2f7e430  Use TLSv1 on server
-    75b9256  Use CONFIG+=packaged when building official packages from git
-    6fdad28  TLSv1 by default -- fallback to 1.1.x for SSLv3
-    8b0549b  Display bitrate correctly for Speex, and default to 2x10ms
-	     packets
-    64d16b8  Remove input policy from dist list
-
-  Spaccaossi <spaccaossi@users.sourceforge.net>
-    aed4569  Italian translation for 1.2
-
-2009-11-09
-  Karl Dietz <dekarl@users.sourceforge.net>
-    8589e57  Clarify condition in PA context handling
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0a0c83f  Add overlay safety checks for 11x too
-    51f4bf3  Update benchmark test
-    997c5f3  Fix player removing from overlay when they disconnect
-    52aead7  Use UAC NSIS plugin
-
-2009-11-08
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    0bfaea9  Updated Spanish translation.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    5f8aedf  Add tasklist entries for recent connections
-
-  meanracoon <racoon@meanclan.org>
-    6db9fb1  Dutch Installer Translation
-
-2009-11-07
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    4c5930b  Make channel moving require ChanACL::Write privileges.
-
-  Ludwig Nussel <ludwig.nussel@suse.de>
-    e2a8a20  allow to disable crash report dialog
-    c7f93ed  fix build with qt 4.4
-    317a2bf  add support for certificate directories
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    1ef709d  show user count on channels
-    966f34d  fix memory leak with ptt audio cue
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    72d78aa  Arch-dependant library load on Win32
-    e5dab47  Make celtbuilds symlinks
-    ede39c7  Ice options in murmur.ini
-    5e71c19  Use 0x040500 instead of QT_VERSION_CHECK()
-    cf437d9  Make no-crash-report a config option
-    b46694b  And fix the same leak in speech itself.
-    47f8d8f  Usr \r\n on Win32 for murmur.ini
-
-2009-11-06
-  Mikkel Krautz <mikkel@krautz.dk>
-    8dcb531  Catch and handle kCGEventTapDisabledByTimeout Snow Leopard
-	     behavior in GlobalShortcutMac.
-    af80da5  Catch 'disable' events in GlobalShortctMac.
-    13e7d21  Allow Default Device in CoreAudio to be translated.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    3a6e97a  pass commandline arguments to Ice
-
-2009-11-05
-  Arcenciel <arcenciel@users.sourceforge.net>
-    cd3e90f  fixed japanese translation
-
-2009-11-04
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    bf23ffc  Show client versions in the log
-
-2009-11-03
-  Arcenciel <arcenciel@users.sourceforge.net>
-    26d77a2  Japanese Installer Translation
-    48d03a5  Japanese Translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5f07255  Add workaround for Chrome cut&paste URL on Win32
-    e3aae8c  If not connected, use highest codec version
-    c9117e1  Use SO_PRIORITY on nix to set packet queue priority
-    2ea8ede  Clientside QoS option
-
-2009-11-02
-  Karl Dietz <dekarl@users.sourceforge.net>
-    e0c0609  stabilty improvements
-
-2009-11-01
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    2308cf5  Minimal fixes in German translation.
-    68536c3  Switch default overlay font for Windows and OSX to Verdana.
-    cad983b  German Translation (1/3)
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    7acf3ff  Change QPushButton -> QToolButton in ShortcutTargetWidget.
-	     Fixes ShortcutTargetWidget glitch on OSX.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    aab13b4  German Translation (2/3)
-
-  Timo K <timer@dbclan.de>
-    7a66764  German Translation (3/3)
-
-2009-10-31
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    7cb7803  Fix regression in regression Fix (phpBB3auth.py)
-    122cfcb  Fix regression in boolean config value parsing in
-	     phpBB3auth.py
-    9f36caa  Fix getRegisteredUsers in phpBB3auth.py and restrict
-	     operations to normal and founder users.
-
-  Kissaki <kissaki@gmx.de>
-    91f536b  fix some obvious English text issues
-    c9112a2  German Translation
-
-  Spaccaossi <spaccaossi@users.sourceforge.net>
-    366110e  Italian installer translation
-
-2009-10-30
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    5207473  Daemon mode and py25 compat for phpBB3auth.py. Fixed line
-	     endings of phpBB3auth.ini + minimal changes.
-
-  Karl Dietz <dekarl@users.sourceforge.net>
-    d6de243  Transmit position from avatar and heading from camera.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ccbe964  Sort overlay
-
-2009-10-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d899cc2  Update bFirstTime to be unique to 1.2.0 -- get people through
-	     the audio wizard again
-    c1a4cb0  Allow ftp:// links through whitewash list
-
-2009-10-28
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    9c3351c  Fix phpBB3auth.py encoding/line endings + small style changes.
-    9dd0edc  phpBB3 authenticator written in python + ice
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    893f8c1  Keep references to volume objects around, should improve
-	     WASAPI volume ducking.
-    471b2df  Remove debugging output from addMic
-    b8192cf  Qipo still produces SSE2 opcodes in pure-float paths, even
-	     without QxSSE2.
-    351c1b3  Replace echo-jitterbuffer with a queue
-
-2009-10-27
-  Mikkel Krautz <mikkel@krautz.dk>
-    c1c0025  Re-add bRunning to CoreAudio. encodeAudioFrame() uses it to
-	     determine if AudioInput is running.
-    9e7e9f2  Add small warning message to help debug GlobalShortcutMac
-	     strangeness.
-    80a2baf  Change libcelt filename in osxdist.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1260b95  Speed tests for resamplers
-    e7b4688  Fix crash if sharedmemory is missing
-    e3bfc2f  Clean up compiler flags on Win32
-    e24c809  Update scripts for 1.2, remove deprecated input policy
-    1b2bf32  Mention the s/UserInfo/byte/ hack in the .ice
-
-2009-10-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0e6214f  Don't put unpushed speex reference in the tree.
-    dba7de2  Re-enable IPO now that we have a workaround, and add the
-	     missing speex file
-    2045012  Use correct includes for celt, and update packaging script
-    2de0060  Build CELT 0.7.0
-
-2009-10-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9b9b5eb  Libspeex's resampler misbuilds with -Qipo, disable until
-	     analyzed
-    384c0df  Blacklist explroer.exe from the overlay
-    54adcf8  Make protobuf a dll
-    f05f8a1  Use speex_lib_get_mode instead of direct linking
-    62b1536  Enable edit menuentry if write on parent (sync with server
-	     permissions), and fix speex compile bug
-    6a4a2b6  Precache permission on parent channel
-    0c05ca0  Don't send superuser in msgUserList
-    9d3274b  Enable more SSE optimizations and compile Speex as dll
-
-2009-10-24
-  Mikkel Krautz <mikkel@krautz.dk>
-    aa5cdbc  Remove superfluous bRunning's from CoreAudio.
-    94ecb90  Don't sleep in CoreAudio thread when waiting for output data.
-	     Clashes with TextToSpeech.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a517f5a  Permission denied for missing cert
-
-2009-10-23
-  Mikkel Krautz <mikkel@krautz.dk>
-    720b0e4  Crash Reporter implementation for OSX.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    874c03a  Source strings for 1.2.0 alpha
-    580655f  English source strings
-
-2009-10-22
-  Karl Dietz <dekarl@users.sourceforge.net>
-    b5b4777  Update WoW plugin.
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    6cde32b  Remove custom speex fatal handler as well.
-    ae0d2db  OSX ConfigDialog for 11x.
-    470f6ed  Remove old unused OSX overlay code.
-    3bfe5b3  Proper debug handling for OSX overlay launcher.
-    94f4542  Add CoreAudio source files for 11x, as well.
-    4d08538  CoreAudio for 11x.
-    01a4770  Build OSX client without PortAudio.
-    9d78c54  CoreAudio audio backend for OSX.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    af09b09  CELT with proper VBR
-    1ca8016  Use proper symlinks for shared files
-
-2009-10-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9a7e709  Allow EINTR during poll
-    572b530  Allow setInfo with name if it doesn't change
-    02ccd34  Clear ACL cache when removing users
-    0104375  Disable echobox on wizard init unless supported
-    e73c9b0  Compile released snapshots with IPP
-    6216f4a  Distribute dbghelp.dll on Win32 so it can work on older XP
-	     installations
-    99ba4f4  Clean up STACKVAR for murmur
-    79d7461  We don't really support plaintext anymore, so remove detection
-	     from the rich text editor
-    146cc63  Cache pingsort
-
-2009-10-20
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    1813b2e  channel_linked.svg now with blue glow.
-    fa3f1e9  Different style edge for better rendering?
-    025138d  New test muted_local.svg
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3b23451  Explicitly set DirectInput device pointer to NULL to ease
-	     debugging
-    866214d  Save localmute state
-    2a2417a  If sighup when not detached, interpret as quit
-    be58259  Allow murmurd to compile under Qt 4.4.3
-    e6037df  Update release script for multiple celt versions
-    488f252  Fix crash when removing last shortcut after editing it
-    a4c6556  Compile new celt juggling on Intel compiler
-
-2009-10-19
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    a2426bf  Test icons/muted_local.svg
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    3cf23bd  Properly save expert state in OSX ConfigDialog.
-    a484529  CELT dynload paths for OSX.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    5917312  Don't allow to disable the temporary checkbox
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    59678e2  Delete 1.1.x shortcut from desktop on uninstall
-    8a7b17e  Allow serverpassword as alias for password in setConf
-    d97a49f  Check if name is already in use before allowing a rename
-    d71202b  Fix more compiler warnings
-    12a2644  Fix a few compiler warnings
-    9958660  Clean up compiler warnings on Win32
-    943f241  Moc turbo-mode
-    aed0eda  Update Win32 installer with celt dynlibs
-    a122549  Reset encoder when restarting sending
-    d655742  Default codec to 0x800000a on client
-    53bb306  Clientside celt codec juggling
-    73388f3  Force alpha-preference for bitstream 8000000a
-
-2009-10-18
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7dbaf74  Use full version filenames for celt lib
-    925dd22  Serverside alpha/beta celt version choice
-    5f8c841  Use int instead of uint to represent version
-    f00341b  Set permission value to heuristic to avoid quadruple query
-    a3aea25  Send celt version on login
-    2abfacf  Multicelt build fixes on nix
-    5247bf7  Clientside celt juggling library load
-    b8813f3  Build CELT dynamic
-
-2009-10-17
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    a879bf8  Fix 2880700 : [8af721] wrong chat line text
-    fe8789c  Fix behavior if we don't get permission query replies.
-    aa88607  Fix permission poll on connect + docs for involved functions
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    465cbbd  Use 0 to express missing permissions
-    94035cf  Add CELT version vector to authenticate packet
-    d9335a5  Move user before clearing cache, not after
-
-2009-10-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    20ec12c  Don't query channel permissions when disconnected
-    1ba7c2d  Clear permission cache on root on connect
-
-2009-10-15
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    696bfed  Avoid overcopy for multichannel echo
-    d1e5d7f  English source strings
-    8fdfabe  Include image dimensions in document size
-    7a8ca97  Remove texture option and fix chantemp default
-
-2009-10-14
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    62c3531  Disable chatbar if it is not usable anyway.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    d0b371c  fix text cursor in chatbar
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5ae7c8c  SuperUser can't query permissions
-    2c92c17  Clientside permission query
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    7eee5f5  Source plugins update
-
-2009-10-13
-  Chosi <chosi@choseh.de>
-    f75ae8b  L4D plugin update to rev 3986
-
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    56f5f97  Tab and Ctrl+Space completion for chatbar.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ff70bc7  Clientside dummy for permission query
-    7439bc4  Permission query (serverside)
-    055c13f  Force config iconlist size
-    6076cc0  Restrict comments to message size limit, and only allow admins
-	     to clear (not set) other people's comments)
-
-  Timo K <timer@dbclan.de>
-    d0bd7b8  COD5 plugin update to rev 1.6.1252
-
-2009-10-12
-  Mikkel Krautz <mikkel@krautz.dk>
-    a974dc8  Fix Mac OS X ConfigDialog.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4ddc686  Add (2), (3) etc to servernames when drag&dropped, and allow
-	     drag from public->favorite
-    e4bc4a2  Don't initialize D3D etc if sharedmem fails
-    0693714  Whisper target redirect and session-based tempgroups
-    6a30255  Inproc draw for d3d10
-    e8f46da  Delete bonjour servers from the list when they go away
-    36de491  Reset stats when editing hostname
-
-2009-10-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    fe9fee3  Make items in connectdialog selectable, eases keyboard
-	     navigation
-
-2009-10-10
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c780f4b  Fix overlay images
-    e7a37de  Fix crash if GetMixFormat fails.
-    67b12ee  Use Qt4.5 as path instead of 4.5.2
-
-2009-10-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    bad2c33  Fix 11x to work with new config
-    f1977b2  Update ts2html script
-    77570c4  Spelling fixes
-    bfceb94  Merge expert config and advanced acl options
-    498a0db  Change a few expert/nonexpert settings
-    0ac3cde  Switch back to listbased config dialog
-    df8e907  Mime demangler for richtexteditor
-
-2009-10-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f3a6e64  Don't crash without bonjour
-    f7dfa10  Scroll dd0t to the top
-    a7a7c04  Don't add context menu for parent items
-    6261bbc  Hierarchical connect dialog
-
-2009-10-07
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    0043285  Very small style fix ;-)
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f065c2b  Fetch continent of public servers and grab geoip of user
-    a9fdf25  Flush denormals on Win32
-    e6a49ff  Force text to be interpreted as basic html
-
-2009-10-06
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    42c9d8c  Make chatbar indicate target.
-
-2009-10-02
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c935e13  Make binrelease script use IPv4 too
-    1989a19  Add overlay magic number and check memory size
-    7ecfc7b  Make release script use IPv4
-
-2009-10-01
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    052d23f  Italitcs for the chatbar
-    ce46ab4  Make keyboard search on userview do recursive, delay-expanded
-	     search
-    8d0b279  Fix dbus compile on Win32
-    ba1ae14  Allow ghost from same hash
-    2e93363  Show texture images in tooltip
-
-2009-09-30
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    ddeb79f  Fix translatability of ChatbarLineEdit
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    da6e842  Use service.name instead of :x.y in DBus calls
-
-2009-09-29
-  Natenom <natenom@googlemail.com>
-    9a1ec81  Rename Name to Servername
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    85dbca3  Fix bonjour in new DNS resolver
-
-2009-09-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4179db1  Separate dns loop and stabilize pingsort. Probably breaks
-	     bonjour
-
-2009-09-27
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    8c197b3  Remove deprecated WoW plugin.
-    5082c26  Add TemporaryChannel permission deny type.
-    b0384b6  Fix Channel DnD crash bug.
-    b6357cc  Do not allow channels to be dropped in temporary channels.
-    fb41646  Fix CustomElements.h/cpp license headers and update some
-	     others.
-    c30ac51  Slight chat bar behavior change + mumble.pro style revert
-    1fcfddb  Merged channel tree and normal messages.
-    080ab96  Make chat bar clearly indicate its purpose.
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    e9b84b4  Don't do TextMessage symlinks in mklinks.sh
-
-2009-09-26
-  Natenom <natenom@googlemail.com>
-    c54a7ed  Dont use always muted_self icon in tray. Show wether muted
-	     self or by server or suppressed.
-
-2009-09-25
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    812e6b1  Comments for GlobalShortcut.cpp
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    cf662aa  Add initialization to ValidDocument
-    5d6637b  Add local TextMessage for 11x
-
-2009-09-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4e675bc  Add selfreference for OpenGL
-    ae2984b  Use longtext instead of varchar for infos
-    0963a3a  Rich Text Editor
-    0419b34  Start of rich text editor
-
-2009-09-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e41dbbe  Show focus message when running snapshots
-    511773d  DX10 fullscreen texture test
-
-2009-09-20
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    79a9abd  data: handling support, and proper washing of harmfull links
-	     in all contexts
-
-2009-09-19
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    90cb11c  Wash URLs if not http, https or mumble
-    e43d963  Send allowhtml state to client
-    8e79eae  Allow stripping of HTML serverside
-
-2009-09-18
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    c2b8f3b  Disable port field if address is bonjour identifier.
-    224be19  What's this + tooltips in Log.ui and ConnectDialogEdit.ui
-    5a79945  Tooltips for GlobalShortcutTarget.ui dialog.
-    d75ee9c  TextMessage.ui What's this + slight change in looks
-    88a10c0  Introduce permission denied type TextTooLong.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    03516cc  Send full cert details to external authenticator
-
-2009-09-17
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    8466232  Server side limit on text message length.
-    d44ff93  Unify browsing for sound files.
-    60fb1cb  Fix What's this for image dl switch
-    5962a14  What's this + tooltip for DoublePush time
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c1db2c8  QScrollArea's background seems to be bugged in a QTabWidget,
-	     so stick our head in the sand and ignore it.
-
-2009-09-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    537fe05  Fix display of default permissions when not inheriting ACLs
-    8528a23  Fix background on scrolled config widgets
-
-2009-09-15
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    b4d2491  int boundary handling and more intelligent insertion for
-	     Channel DnD
-    948d772  Make Channel DnD MVC compliant.
-    ff34f7f  Fix obvious faults in channel DnD
-    4cc09d9  Drag and drop placement for channels.
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    c0a490c  Enable 11x overlay for OSX.
-
-2009-09-14
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    3a0cf23  Prevent TTS/Sounds from being triggered when user deafened
-	     himself.
-    155bb16  Use localeAwareCompare for channel sorting
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c3421d7  Workaround for qsystemtrayicon::activated
-    2051568  Check patchlevel in URLs
-    d212243  Add version queryitem to URLs
-
-2009-09-10
-  Mikkel Krautz <mikkel@krautz.dk>
-    4026950  Programatically generate .DS_Store file for OSX disk images.
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    2f0821c  Source games build updates
-
-2009-09-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    db919c0  @strong group for strong certificates
-    75062d4  Remove leftover debug output
-    eb34fad  Support copy/paste from ConnectDialog
-    d9e706c  Make default bandwidth on server be 72 kbit/s
-    a022487  Show date rollover in log window
-    6b5daa5  Clear comment on connect to new server
-    96b99d5  Show website and version on tooltip
-    8293a5d  Drag and drop URLs to connect dialog
-
-2009-09-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    cf0192a  Switch to P^2 estimator for ping
-    63fc19e  Update installer to use qt.conf
-
-2009-09-07
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    18e9f17  New prefix broke UDPTunnel messages.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9e65ae8  Add ServerShow as boost type
-    7710c86  Update 11x to have new global var
-    75356e1  4 byte packet length, 2 byte type, and use SSL compression to
-	     encode it
-    96ae2b2  Variable length packet length encoding
-
-2009-09-06
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    62b83d8  Support for regional servers for server list
-
-2009-09-05
-  Mikkel Krautz <mikkel@krautz.dk>
-    fa95e61  Update OSX license script.
-
-  Natenom <natenom@googlemail.com>
-    6c90415  Updated German translations.
-
-2009-09-04
-  Mikkel Krautz <mikkel@krautz.dk>
-    a078791  Don't use the installer on OSX. Go back to 'Copy to
-	     Applications folder to install!'-method. Disable .DS_Store for
-	     disk image (for now).
-    345852e  Switch to new manual overlay injector on OSX.
-
-  Natenom <natenom@googlemail.com>
-    a74e859  Changed translations and fixed errors.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5d0e14c  Show you muted X messages properly.
-    40e8431  Maintain stable ServerItem list
-    2c3f8f8  Only one pingsweep per second
-    a87e113  Filter to show only favorites
-
-2009-09-02
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    e7aacbc  cache hostname lookups
-    38a8581  Don't retry already running DNS lookups. QT will never send us
-	     any reply if we do.
-    730e7d0  Restart timers earlier so we don't block pinging other servers
-	     while waiting for DNS response
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d9d7f36  use .value and .insert, and use toLower() for hostnames
-
-2009-09-01
-  Mikkel Krautz <mikkel@krautz.dk>
-    4ed8d8f  Remove superfluous welcome text from the welcome screen of the
-	     OSX installer.
-    ca68ce2  Fix installer_macx to properly install IM-based overlay. Allow
-	     building both an InputManager and a pure .dylib overlay (for
-	     manual injection, for example).
-    9b3ab4b  Working InputManager-based OSX overlay.
-    63c9e94  Add proper Qt plugin support to OSX dist script.
-    4315a94  License scripts for OSX.
-    fdb578a  Update OSX installer for 11x and prepare for new overlay. Make
-	     macx build with pch on by default.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6e8e547  Auto-unmute on un-deafen
-    8f0b374  Clean up sorting
-    a73d60c  Update includes in RPC so it works under feature-less compiles
-
-2009-08-31
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    475c9c5  Fix unregistation of users
-    b534867  Fix color for amplify audiobar
-    c6fdcc5  Remove "Add New..." from context menu, it's a button
-    b16e765  Share pings for multiple entries for same host/port
-    558f787  Ping randomimzation
-    8194a21  Make Quit from menu always quit, without asking
-    d9a2d47  Order tray menu according to screen position
-
-2009-08-30
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    cafe559  Fix typo in SAVELOAD for audio/pushclickoff.
-    076f6fb  Customizable sound for PTT Audio Cue.
-    6742f2b  Add Channel position QSpinBox to advanced ACL editor.
-    4393235  Add group "Add" button to ACL dialog.
-
-  Hengqing Hu <esrms@users.sourceforge.net>
-    acbb44f  Add BOM and s/LANG_SIMPCHINESE/LANG_TRADCHINESE/
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    37d26c8  Corrected Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    31c8de9  Make Filters a group, and add a "Add New..." button
-    4b66e47  Filters
-    46f3f23  Show slightly more pingstats
-
-2009-08-29
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    7800978  Focus name field in channel add/edit.
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    ea311ff  Boost 1.40.0 for OSX.
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    279ca01  Fix crypto on FreeBSD amd64
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    440f16e  Default sort by ascending ping
-    23275df  Allow up to 1024 byte UDP packets, to contain up to 6*127bytes
-	     audio
-    8911fdc  Update .ini text for pidfile
-    d9cea2c  Digest-based shortcut/token storage
-
-2009-08-28
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    00e8be8  Clean output buffer when skipping frame to avoid crackling.
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    80e82e3  Fix MumbleSSL for no-pch.
-    62cf549  Fix Bonjour build for no-pch.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    61391cf  Modify whatsThis in overlay to not mention D3D9 specifically
-    c183557  Boost 1.40 on Win32
-    9ba05ce  Add data() fetcher for ServerItem and tooltips
-    e5c38f4  Show single-value ping again, and show max users
-    ed45391  Accumulator-based ping stats
-    66c0433  Send maxusers in ping
-    383f394  Send maxbandwidth in ping query
-    6e2b006  Validate ConnectDialogEdit
-    093f98f  Always include bonjourrecord.
-    46da19c  Add icon for LAN servers
-    522c27a  Grand Unified Connect
-
-2009-08-27
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    0f5a49d  Make virtual server specific bonjour switch work.
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    a2a687d  Remove qt.conf reference in scripts.pro.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7fe654a  Set default value for bBonjour
-    3a8c8b3  #ifndef MUMBLE_VERSION for release script
-    f3c3546  Make Glacier2 example actually use the proxy
-    491108f  Glacier2 example
-    3a941fd  Show ping and usercount in public server list
-    b13d7f0  Add iSampleRate for 1.1.x
-    c38e741  Drain UDP socket even when thread is not running, and answer
-	     ping requests
-
-2009-08-25
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    baad944  Forward/backward password update in add/edit dialog.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f1c4138  Fix DirectSound 32khz mode
-    c663db3  Remove ods() for addref/release, impossible to run real apps
-	     with it on
-    8e0cbc8  Release heuristic
-    cafb24c  Include fxo binary in overlay
-    93b6c57  Proof-of-concept DX10 overlay
-
-2009-08-24
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    7057604  Actually impose restrictions on users without password.
-    0dd931c  Add password edit capability to Channel edit dialog.
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    9c620aa  Don't try to look-up Avahi packages on the Mac.
-    c2a92d9  Rename 1.1.x plist file to mumble11x.plist.
-    c3a21f8  Do not copy in our own qt.conf for Mac builds. We will move to
-	     using the macdeployqt utility for preparing our app bundle
-	     instead.
-    82a4373  Don't pass incompatible parameters to the Darwin linker.
-    9e9b032  Build fix for g15helper utility.
-    23aff3c  Add InputManager for automatic overlay injection on Mac OS X.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ad845f5  Fix typo in debug mode for d3d9ex
-    d2a64ee  Start of DXGI Hook
-
-2009-08-23
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    849aa9c  Improve ACL editor layout.
-
-2009-08-22
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    8b7f1d6  Added checkbox to disable image download
-    bbba5fc  Move advanced channel editor switch to options menu.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    865cdab  Precache support for d3d9ex
-    d7b53b0  History-based jitter buffer initialization, and power-based
-	     activity detector.
-    d2b467a  Revert "Fix indenting in changelog script"
-    dc658e2  Fix indenting in changelog script
-    040f16d  Make sure audio bandwidth never falls below 8kbit/s
-    449cc31  Remove a bunch of compiler warnings
-    2e87ec0  Update config dialog to have minimum 24kbit/s for 10ms mode
-    10c0e74  Add some hardening source flags, to make sure we can be
-	     compiled with them
-    ce7ce45  Work around the ducking in Win7; we always have the device
-	     open.
-
-2009-08-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e4d3485  Add RegisterSelf permission to Ice.
-    c3d2198  Copy, don't ref frame to decode
-    403c95b  Don't use post-1.2rc-only speex functions
-    1c88786  Use new whisper icons
-    d41afda  Move mumble/murmur specific state out of User
-    950b104  Server-side low-bandwidth mode
-    9c6b1d0  Re-enable red color for high bandwidth in the
-	     AudioConfigDialog, and allow 8kbit/s transmissions.
-    a4579d2  Fix typo when reducing bandwidth.
-    6479de3  Low bandwidth mode
-
-2009-08-20
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    0fd52da  Parameter change in inkscape to prevent bugging in QT...
-
-2009-08-19
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    b5ba5db  Fixed artifacts in talk icons
-    add5e12  Fixed metadata for mumble.svg, and added talking_whisper.svg.
-
-  unknown <d0t@.(none)>
-    55179d9  Make build environment more flexible
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4ff3993  Get rid of some compiler warnings on Win32
-    6707c8d  Support 10, 20, 40 and 60ms audio packets
-    f8ba374  Make the bandwidth limit on the server be in bit/s instead of
-	     byte/s
-    eb668a1  Add placeholder icons
-    9653d4e  Disallow image links in comments
-    7a7a9b2  Use blank image instead of "missing link" for invalid image
-	     URLs
-    a40cf25  Switch last few icons to temporary svgs, and change formatting
-	     of whatsthis messages.
-    e62f502  Update checkstate for Mute if suppressed
-    1a7f024  Honor requested audio bandwidth slightly better, and lower
-	     minimum allowed
-
-2009-08-18
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    c696a8f  Next test of in UI icons.
-
-  Hengqing Hu <esrms@users.sourceforge.net>
-    2fd9a62  Traditional Chinese translation for Mumble 1.1.8 included
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    cce8c3f  Don't display tooltip/whatsthis for abnormally large
-	     comments/descriptions
-    cf17684  Update testauth script to use new index-based userinfo map
-    028cf24  Use group-GUUID based volume history for other applications
-    8377f00  Don't include test things in the changelog
-    ed384bf  More volume testing
-    95a9af7  Use group-GUUID based volume history for other applications
-    4848a2d  Don't include test things in the changelog
-    29cc812  More volume testing
-
-2009-08-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    07b5a12  Check session states on Vista.
-    a5a2c66  Don't explicitly state WinSDK path, it will be pulled in by
-	     vcvars. And replace DXSDK with a env var.
-    40d4998  Unified Win7/Vista volume control. I hope.
-    847ed7a  Make NO_UPDATE_CHECK hide options completely
-    b27f0d4  On X11, you can minimize the parent window while a modal
-	     dialog is shown, without reactivating the parent's event loop
-    0978bc7  Protobuf 2.2.0 for Win32
-    4683c46  Fix ALSA periods for raw HW
-    b17f3b2  Check session states on Vista.
-    a11c188  Don't explicitly state WinSDK path, it will be pulled in by
-	     vcvars. And replace DXSDK with a env var.
-    b6208a7  Unified Win7/Vista volume control. I hope.
-    1077335  Make NO_UPDATE_CHECK hide options completely
-    7e7b3f3  On X11, you can minimize the parent window while a modal
-	     dialog is shown, without reactivating the parent's event loop
-    4923f42  Protobuf 2.2.0 for Win32
-    e4935a8  Fix ALSA periods for raw HW
-
-2009-08-16
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    2acd26f  Removed yellow circle from icons/mumble.svg
-    95dc226  Fixed bugged icons/mumble.svg, verified.
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    b0aaa8e  Fixed installer' Spanish translation
-    59b741f  Updated installer' Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2544297  Volatile the iMixerFreq
-    99cd9d4  Add a dummy thread for pulseinput/output, so we don't delete
-	     it during start()
-    02ec1f0  Switch weak to unique-checking for 11x too
-    7da8e1b  Fix abort on quit with Pulse due to wrong thread deleting a
-	     dummy object.
-    4f9e599  Volatile the iMixerFreq
-    5688781  Add a dummy thread for pulseinput/output, so we don't delete
-	     it during start()
-    8361a1c  Switch weak to unique-checking for 11x too
-    a71e118  Fix abort on quit with Pulse due to wrong thread deleting a
-	     dummy object.
-    45fad10  Threaded pulseaudio
-    12f9c69  Locking test
-    20eadb6  Make pulseaudio play nice again
-    bcf77b7  Make ALSA work under Pulse on karmic.
-    c70caee  Don't double-delete (G15 unix)
-
-2009-08-15
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    9958cfe  Attempt to fix corrupt icons/mumble.svg
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    304f12c  #ifdef protobuf 2.1 features
-    afa6f35  Get rid of global memory from ConfigRegistrars
-    ce3df76  Use enum for InfoMap
-    bcaa6c7  Use VLD for debug builds
-    c63e4f5  Use the new SVG icons
-    f62ae27  Make hardcoded ACL default be without selfregister, and make
-	     it a part of initial ACLs added to new servers
-
-2009-08-14
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    edf3369  New attempt of icons for 1.2.0 release.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3a686bd  Fix ASIO config save
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    4884458  Cod5 update for 1.5
-    a1767db  TF2, DODS updates
-
-2009-08-11
-  Mikkel Krautz <mikkel@krautz.dk>
-    df9b900  Use system CA certificates on OS X.
-
-2009-08-08
-  Patrick Matthäi <pmatthaei@debian.org>
-    c957ff4  Spelling fix in ACLEditor
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    88dcb4c  Don't show lip icon if suppressed
-    c7cffde  Build protobuf earlier, so header is generated
-
-2009-08-07
-  Mikkel Krautz <mikkel@krautz.dk>
-    203a125  Allow *.pkcs12 file extension for certificate import and
-	     export.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5b3c901  Allow specifying SYSTEM_CA_BUNDLE define to force CA path
-    6296282  Share a bit more of .pro files, and add win32 ca store
-    8159eec  Add system-installed CAs
-    b8dc011  GPG sign and upload source snapshots
-    7294099  Allow expired/not-yet-valid certificates as non-strong certs
-    d9a5206  Add cert-send/pw-store suppress option (nonsaved)
-
-2009-08-06
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    cab2850  Always require password for SuperUser
-    379f88b  Clientside selfregister
-    7a84624  Serverside SelfRegister
-    91c230f  Remove warnings when cleaning indexes
-    0b107aa  Clean out MySQL indexes and foreign keys on upgrade, and
-	     remove multithreaded logging
-
-2009-08-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a391d01  Add Message.h to tarball for 11x
-    e4eabb5  Dummy manpage for mumble11x
-    91c5176  Nmake can't handle self-dependencies, so give up and provide a
-	     shell script for the symlinks
-    585b0dd  Symlinks and ugly copy hacks. I want gitsymlink on win32.
-    e3261db  Mumble11x in source tree
-    36e2059  Mark email field in crashreporter as optional, so users aren't
-	     compelled to put bogus addresses there
-    1f52513  Update installation strings to default english ones
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    06d48b9  L4D, Gmod updates; DODS version bump
-    ae26954  TF2 build 3897
-
-2009-08-04
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d20e27e  Include celt in tarball
-    52c42bd  Mystery contexts
-
-2009-08-03
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    8835385  Tooltips and What's this for Add/Edit dialog. Saveload
-	     advanced cfg checkbox. Prevent root channel name change.
-    b78c706  Fix channel description loading.
-    2bfb54c  Display client version in tray tooltip
-    af08aee  Do lookups with Channel::get()
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    018d5a1  Fix crash while trying to rename the root channel
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0cb7485  uniquie => unique
-    bbd9bfd  Clickable comment icons
-    e6b623e  Remove tempchannels on disconnect too
-
-2009-08-02
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    df86a73  Channel Add/Edit dialog.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d559445  Send uid=-1 to all clients when unregistering connected user
-    a651dce  Various jitter fixes, and audio fade
-    237b9e2  Update position-stripping in server to mach updated voice
-	     packets
-
-2009-08-01
-  Alex Maclean <monkeh@monkeh.net>
-    b08972a  We use boost even without Ice now
-
-  Benjamin Jemlich <pcgod@users.sourceforge.net>
-    7c27178  Fix column sizes in shortcut dialog
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ccbd3d7  Slightly less blunt obscurity report
-    d10cdb8  Remove some debug noise from plugin download
-    4fe8ea8  Update benchmark
-    7b983c1  Widen the shortcuts again. *Sigh*
-    413dc8c  Time-distribute plugin link attempts
-    91b94d7  Reduce shortcut columns even further
-    5b644a6  Obscure security
-    dd0320f  Ensure cConnection is deleted from serverhandler thread, as Qt
-	     throws a fit if the deleted() signal is emitted from another
-	     thread.
-    8016d1d  Allow shortcut columns to scale slightly better
-    edf7d48  Support not sending any os/build info to the client
-    8abceec  Use CELT 0.6.1 for now
-    835dfec  s/dbServerUsername/dbUsername/
-
-2009-07-31
-  Mikkel Krautz <mikkel@krautz.dk>
-    e923c0d  Add CrashReporter. Generate minidumps on Win32 and report them
-	     via CrashReporter.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ffaca57  If no cert, return an empty list, not a list with a null cert
-    1238f2b  Binary != Boolean
-    01cf723  Allow to add email/comment on crash
-    a2812c4  Compile without bonjour
-    16a44d9  Use basepath in minidumpwrite, and add some comments and a
-	     progress bar
-    7530b91  Global qdBasePath
-
-2009-07-30
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b30efc5  Explicitly remove output buffers when clients disconnect
-    8cec38e  Updated release scripts for new files and paths
-    b5b94c0  http://support.microsoft.com/kb/971092
-    6991334  Replace XEViE with XInput
-
-2009-07-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1141eee  Autoexpand usermodel on hover, and use QStyledItemDelegate
-
-2009-07-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    113a294  Fix a few compiler warnings
-
-2009-07-27
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d0690b8  Use local copy of manifest/cat for vc90.crt
-    f2c804a  Disable LTCG also for new Intel versions
-
-2009-07-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2082b4b  Compile with Intel C++ 11.1
-
-2009-07-25
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    65a0f65  Make the fix actually work.
-    144c631  Fix argument injection.
-
-2009-07-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5893adc  With the data column, there's now 4 columns for the shortcut
-	     editor
-    9e25322  Use new QColorDialog::getColor for alpha-editing for overlay
-	     colors
-    e2ebe02  Raw Message => Disable formatting
-
-2009-07-23
-  Mikkel Krautz <mikkel@krautz.dk>
-    f67a93a  Add CELT and Speex fatal error handling for Mac OS X.
-
-2009-07-22
-  Mikkel Krautz <mikkel@krautz.dk>
-    4eac398  Memory management fixes for ConfigDialogDelegate.
-
-2009-07-21
-  Mikkel Krautz <mikkel@krautz.dk>
-    2b96f33  Native-feeling ConfigDialog for Mac OS X.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    057df90  Default-ACL for @all shows default deny as well as default
-	     allow
-    fe47903  Show suppress state in client
-
-2009-07-20
-  Mikkel Krautz <mikkel@krautz.dk>
-    1ef334b  Disable GlobalShortcutMac for debug builds.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f1ec2d8  Use translated section strings
-    d095fd9  Allow SuperUser to move self
-
-2009-07-19
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    d3c9806  Channel sorting.
-    d552f0b  Fix comment save
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9510ab8  Always initialize qtTimeout
-    5a41af1  Don't bind to IPv6 if no interfaces has a v6 address
-
-2009-07-18
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    0e1b3f3  Improve forced shutdown behavior
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    947a420  Certhash-based ACL, and creators have full write on created
-	     channels
-
-2009-07-17
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    a89e7c6  Added layout default value
-    cc57d13  Layout presets
-    fb8ca85  Removed wrong tooltip
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f1c926e  Quiet the Avahi warnings for now, and make the static murmur
-	     compile with bonjour
-
-  Bartek "stranded" Sumowski <sumowski@gmail.com>
-    95fd031  Bonjour installer strings in Polish
-
-2009-07-16
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    b236e4c  Allow cancel while bj resolving
-    aa82976  Update German installer translation
-
-  Hengqing Hu <esrms@users.sourceforge.net>
-    9555bf6  Simplified Chinese Installer
-
-  Matthias Vogelgesang <matthias.vogelgesang@gmail.com>
-    b3fa0e5  * fix german translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    43ac694  Bonjour download in installer
-    477a065  Grey out LAN tab with suitable tooltip if empty
-    45705e2  Re-add variable buffer to WASAPI; hardware-reported minimums
-	     are often false
-
-2009-07-15
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    a89c5e2  Switch bonjour identifier to _mumble._tcp
-    ca0f1c8  Fixed cancel button and added resolver delay workaround.
-    b94dd05  Update INSTALL and LICENSE file
-    12e0e80  Reorder murmur tray menu
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    6270d5d  Don't use Avahi compatibility layer on Mac OS X.
-    5cc3d0d  Update Mac OS X build environment.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    69ebadc  No, really don't replace CRLF in the signed manifest, please
-    34b5e28  Preserve CRLF in signed manifest
-    9f2b29d  Final CRT
-    31106d3  More AssemblyCRT
-    1a38dd4  Build bonjour on nix
-    19fde80  AssemblyCRT again
-    1062965  Send channelRemove after userState for temp channel removal
-    b11d633  Clientside tempchannels
-    8562704  CRT Assemblies
-    efbba85  Temprary channels protocol changes
-
-2009-07-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1ba33d0  Update installer for new v1.1.x plugins, and fix start menu on
-	     undelete
-
-2009-07-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    34eea53  The Norwegian translation isn't in English
-    892cf9f  Plugins in the plugin directory
-    416cfb8  Distribute Qt plugins
-    3e281c1  Update WhatsThis for new # groups
-    6b5b174  Send access tokens on authenticate
-    e2875f5  Access Token Editor
-    9c5ecca  Use QStringList for tokens
-    37076e3  Token-based ACL
-    866a66d  ifdef out module-specific parts of shared code
-
-2009-07-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    85c9c78  Fix Ice callbacks and examples
-    5ccce13  Fix bandwidth()
-
-2009-07-11
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    3861102  Updated German installer
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b45eac1  Revert murmur static to Qt 4.5.1; 4.5.2 crashes
-    96fe83c  Link QtSvg. I really mean it.
-    8483892  Explicitly link svg
-
-  Bartek "stranded" Sumowski <sumowski@gmail.com>
-    0afb4c7  Updated Polish installer
-
-2009-07-10
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    55233df  1.1.x doesn't have BF2142 plugin
-    cc4263d  Update Norwegian installer
-    ba4c405  Add 11x plugins to installer
-
-2009-07-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4391a12  Use UTF-8 ini files, and support importing partial configs
-
-2009-07-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0f3d2dc  Installer link for compatible client
-
-2009-07-06
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1d23889  Store server-specific whisper in a per-server config
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    ecef2b6  AOC offsets update
-
-2009-07-04
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    29c26d6  Don't focus on URL open
-    2c74fa1  Qt 4.5.2 for murmur static
-    6738419  Make HostAddress a movable type for faster containers
-    1c6ac0c  Update ASIO driver to use new format
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    606bff7  CSS, AOC updates
-
-2009-07-03
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    44439c6  Rediscover DInput devices on hotplug
-    37886d4  Don't show dragbar over scroll buttons
-
-2009-07-02
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    801a9e9  Add the QtSvg4 library to the installer. Kind of necesarry to
-	     actually show those SVGs.
-
-2009-07-01
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c06ca3e  Updated Intel compiler on Win32
-
-2009-06-30
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4703fa7  Single-slider VAD for the wizard
-    f99300b  Don't compare bool to 0
-    5e539d8  Qt 4.5.2 for Win32
-
-2009-06-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    59dff3c  Use git:// instead of http:// for xiph submodules
-    3fe520c  Update echo jitter buffer
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    10f4572  Source game updates
-
-2009-06-22
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    44dfffa  Notify on connection attempt start
-    4ec866a  Remove silly debug output
-    a83592e  Multibind for Win32
-    3976433  Multibind for nix
-    9b226ca  Clientside IPv6 support
-    c1c460b  Allow IPv6 control connections
-
-2009-06-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3c8745f  Add proper names instead of label_123 in .ui files
-
-2009-06-19
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6f9c7d6  Use QDesktopServices for datalocations
-
-2009-06-18
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5074ef0  Option to only accept whispers from friends
-
-2009-06-10
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    6582af7  Bonjour support.
-
-2009-06-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0b9c19b  s/RGBA/BGRA/
-    d1689db  Make the default be 48kbit/s rather than 16 kbit/s
-
-2009-06-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5248ca4  Avoid cert warning when falling back to .ini cert
-    26e4f3a  Remove player from ACLs / Groups when unregistered
-    2635598  Re-disable DirectSound on Vista
-    fb96eed  VBR for CELT, and auto-readjust based on server quality levels
-    19e91f5  Replace AudioSine with samples
-    709289f  Make centerpos be a whisper option
-
-2009-06-05
-  Christoph Hofmann <christoph.hofmann@vfc2.eu>
-    733ee3d  Make compile on Qt from Lenny
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2191991  Remove a few FIXMEs
-    c5874e1  Remove redundant flag from Group
-    6b9ab90  Glue code for the experimental zero-latency preprocessing (not
-	     merged yet)
-
-2009-06-02
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e6c9d33  Use new svg icons
-
-2009-06-01
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    e2e75ae  fixed metadata. still need to find way to include bsd license
-	     information. Added test of talking_on.svg for review.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    75262e9  Fix typo of QsslKey
-
-2009-05-31
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    68deaf3  Second batch of test icons in .svg for review.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    90e189a  Fall back to .ini cert if one is specified, currently using
-	     selfgenerated, and bind address matches
-    8bdc1a2  Use new svg icon for linked channels
-    26b3449  SoundFile class which wraps QFile to allow resource-based
-	     samples
-
-2009-05-30
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    4d5b94e  First test of svg icon.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ce76715  .ui based AudioWizard
-    29df24c  Speech sample in Ogg/Vorbis
-
-2009-05-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    71853df  Force database to .ini path in roaming mode and fix a banlist
-	     crashbug
-
-2009-05-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    07a1e49  Store textures for registered users.
-    0c67135  Change texture from client
-    2738bb6  Add libsndfile to installer
-    0c66fe4  Protobuf 2.1.0 for Win32
-    b9b5cd5  s/AltSpeak/Whisper/
-    47fe8d2  Whisper
-    ac75cef  Skeleton for server-side voicetarget
-    10a359d  VoiceTarget clientside
-
-2009-05-27
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    fa5d4e5  Workaround for focus bug in itemdelegate editors with dialogs
-    e3efc68  Forgot group name for whisper
-    2009992  Shortcut Editor for Whisper
-
-2009-05-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2dab6a2  ShortcutTargetDialog (WIP)
-    f7f7da7  Make shortcuts mute/deafen take parameter
-
-2009-05-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b43f237  Shortcut target editor (WIP)
-
-2009-05-23
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    6cfb223  Fixed script for newer cherrypy versions
-
-2009-05-22
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6d82782  Add workaround for MSVC for __int64_t
-    39e2f5a  Allow adding CA chain to cert files
-
-2009-05-21
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    e5cdd85  Remove libogg
-    177a58c  Optimized mixer code.
-    6c5b9e6  Use libsndfile for audio file processing.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ae02f97  Add sndfile pkgconfig for *nix, switch to utf8 const char *
-	     paths, and fix a leftover compilebug in Plugins
-
-2009-05-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e3a122c  Allow empty messages
-    3b0c702  Clientside useredit
-    73131d2  Server-side unregister
-
-2009-05-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f1859f2  Automatically download updated plugins
-
-2009-05-15
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8750f00  Validate bans before adding to the list
-    a98d45a  Faster quint64 based netaddress handling
-    9f7ef74  Updated Ban Editor
-
-2009-05-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    03ef639  Fix SQL for udp database
-
-2009-05-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9df364f  Automatically switch to TCP mode.
-    a826a9e  Only count voice packets as "switch to UDP" signal
-
-  withgod <withgod@users.sourceforge.net>
-    a30fc85  weblist.pl modified
-
-2009-05-08
-  Tuck Therebelos <snares@users.sourceforge.net>
-    8415c87  L4d, TF2 build update
-
-2009-05-07
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    1c1cb64  Reorder tray actions
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f56fca0  Submodule update
-    23389b3  Remove password from ConnectDialog gui
-    226402f  Flags in public server list
-    dc41e53  CRLF
-    8634a9c  Avoid vacuum in initialization
-
-2009-05-06
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    39ec136  Flags
-
-2009-05-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e3cc00c  Store date, duration, username, reason and hash with bans
-    53a9b08  Recreate SQL when upgrading
-
-2009-05-04
-  Mikkel Krautz <mikkel@krautz.dk>
-    dc6e8d1  Fix blank email corner-case. Abort in-progress host lookups on
-	     email change. Show proper error on invalid email.
-    92e9ef6  Show '(none)' for email-less certificates in CertView.
-    67ed2b0  Delayed email validation in CertWizard.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4194703  Avoid encoding empty packet at end-of-speech
-    534753f  Optimize audio framing, and preserve flags
-    c6b204c  Add missing disable_copy()
-    3cc160b  Trim whitespace from ConnectDialog input
-
-2009-05-03
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    3c9ea0e  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4a7251b  s/SuperServerUser/SuperUser/
-    a067f2e  Support enabling noise
-    a65ebd0  Cleanup speexbuild.pro file
-    df6c8ed  Move DX Input initialization to one thread
-    803781d  Remove libspeex, as we only use libspeexdsp
-    32d16cd  Fix PulseAudio
-    9b21329  Rescale .spx to float
-    5de517f  Link channels over Ice
-
-2009-05-02
-  Mikkel Krautz <mikkel@krautz.dk>
-    d3915cb  Fix certificate genration on OpenSSL 0.9.7.
-    21da51d  Fix PCH for Protobuf on OSX. Apple's headers really pollute
-	     the preprocssor with all sorts of junk.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    51120fe  s/Player/User/
-
-2009-05-01
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    e3b0a63  Remove restriction to root channel.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7dcfa00  Valgrind run
-    5049bea  Mention that we really prefer SQLite in the .ini files
-    ade79f8  description is also an info-value
-    42b53e4  `fieldname` for SQL
-    fabb1ef  email is now an info-value, not a db field
-    d8f5d4b  Persistent BFF
-    b0632cf  Add combobox for usernames in ACLEditor, and fix a few bugs
-    d110fef  Send proper case for name on QueryUsers
-
-2009-04-30
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    53d2343  Fix crash on SuperUser connect
-
-  Hengqing Hu <esrms@users.sourceforge.net>
-    faa55b0  Chinese translation for Mumble 1.1.8 update
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5c0730e  Distribute hash with the UserState, to allow players to
-	     recognize friends
-    317cfe5  Add Q_OBJECT for CertView
-    8ab8c51  Remove character LCDs, which we never had an implementation
-	     for
-    38ad1a0  Remove a few fixed FIXME
-    0764034  Use ACLGroup for ACLEditor instead of base Group
-    58f15cb  Convert last deny messages to identifiers
-    a787cb1  Fix a few more compiler warnings
-    936ef86  Remove a lot of compiler warnings
-    4760546  Add script to convert ts files to HTML for proofreading
-    55513e7  The big spelling fix
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    4a560b6  Dys, gmod, tf2 build updates
-
-2009-04-29
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    bf8ccda  Replace speex event sound support with celt support.
-    1ccf22e  Fix chatbars session detection
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    b564f33  Add cancel button for Certificate Wizard on OSX.
-    3cf945a  We may now resize QWizards on OSX again, so enable that for
-	     the OSX AudioWizard again.
-    66bbbd0  Fix Cert.cpp for OpenSSL >=0.9.8.
-    ae3ee8a  Fix constness issues with OpenSSL versions prior to 0.9.8.
-	     (Allows us to build against vendor-provided OpenSSL libraries
-	     on OSX)
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    389175d  Fix a few HTML errors
-    a88d62b  de-doctype
-    b015fc7  Build static releases with Qt 4.5.1
-    ec40b7b  Fix a few warnings in the ACLEditor
-    cff157f  Add tooltips and whatsthis to cert dialog, and add some icons
-    c35c6e8  Update changelog script to fix silly email mistakes
-    702fe90  Write permission on root is good enough for registrations
-    962a2d4  Server-side support for in-client registration
-    98eb6a5  Fix error messages from celt/speex build files
-    0efd1dc  Clientside user registration, and hide ban/kick if not allowed
-	     to use
-    d3f6874  Use session instead of actor for permissiondenied
-    efe0420  Update ACL Editor for new permissions
-    7925e61  Support flag sets for permission
-    d6b878a  Expand ACL permissions serverside
-    53e9b9d  Print strong cert identities in log
-    56c139c  Show current certificate (if any) on welcomepage of certwizard
-    e7606f6  Rename qt translations to match 4.5.1
-    906cd1a  Always reset certs if the user returns to the start of the
-	     cert dialog
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    6c760f0  Need avatar_ for top
-    5c4d8c5  Add back dummy top vector to Quake based games
-
-2009-04-28
-  Mikkel Krautz <mikkel@krautz.dk>
-    1ffbd81  Remove cdecl delcarations from g15helper_macx.
-    91a9f16  Add (untested) G15 LCD support for Mac OS X.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6015d4a  Fix double :: :: in Server
-    0e54cfa  Use SHA1 instead of MD5 for selfsigned certs
-    b76ad9e  Certificate based authentication and account recovery
-    3727bf9  Use native dialogs
-
-2009-04-27
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    34a4b1f  Use Qt 4.5.1
-    6ecfa23  Check IDs on client (get those A icons back)
-    9f37777  Finish Cert Wizard
-    380205c  Accept certificates
-    c12d03c  Start of Certificate Wizard
-    3f61167  Multichannel echo cancellation
-    f916473  Avoid constref initializers of std::wstring inside const
-	     structs
-
-2009-04-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f32c878  Intel C++ 11.0.074 for releases, and fix a bug with linked
-	     speaking
-
-2009-04-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    103df83  Measure idle time and export over Ice
-    3e4c38a  Export client address and TCP state over Ice
-    031bf2b  Export channel description over Ice
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    f594ce8  Plugins update for 1.2 PA; Cod5 and L4D patch update
-
-2009-04-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    139d4e0  Ice comment support
-    b038dac  Store infopairs in DB
-    4a83072  Clientside comment support
-    13dc3d6  Serverside comment support
-
-2009-04-22
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    922d9e8  Warn of incompatibilities among 1.2 snapshots
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    128a669  SQL Schema is version 4, not 3
-    6a4fa30  info-based storage for registration
-
-2009-04-21
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    151240e  Prevent deletion of root channel via Ice.
-
-2009-04-20
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8a716dc  Always use shortname as part of context
-    e59ca71  Zero-terminate context, so it can be used as a string
-    1a36b56  Handle positional audio distribution server-side
-    820194a  Export identity/context over Ice
-    6ec2d36  Store context
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    25bdfb0  Source plugins update for 1.2 PA
-
-2009-04-18
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4ef52e9  Send plugin context/identity to server
-    965a354  Check magic signature on plugins
-    5e79b06  Link 1.2.0 for nix
-    82c7cdc  Link 1.2.0 for Win32
-
-2009-04-16
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    67f0459  Add resolution restriction to images.
-    e89759a  Added size restriction for image download.
-    39a3b77  Disable 1.2 incompatible plugins until they get updated.
-    a9a5574  Add auto formating capability to chatbar.
-
-  Hengqing Hu <esrms@users.sourceforge.net>
-    686df2c  Chinese Translation in UTF-8 coding for Mumble 1.1.8
-
-  He Tal <hetao29@users.sourceforge.net>
-    9243dbd  to support Chinese languages need a patch
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0fff088  Allow reject message to be sent before we close the socket
-    7c6ec3e  Add tooltip and whatsthis for chedk updates on startup
-    0f18efb  Add .it to project files
-    cb45da6  Add zh_CN to project files
-    027bc04  Have the client actually send the os info. Oops.
-    86d61cb  OS info in version exchange
-    f67b83e  Add version info to mumble
-    c760d4d  Have murmur accept and send version packets
-
-  Spaccaossi <spaccaossi@users.sourceforge.net>
-    d48588a  italian translation - finished for 1.1.8
-
-2009-04-11
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    7a6b6ae  Fix crash on player left
-
-2009-04-09
-  Mikkel Krautz <mikkel@krautz.dk>
-    f195dc7  Remove setgid hack from overlay OSX injector. We're now
-	     properly signed, and can access the task_for_pid() API without
-	     being part of the procmod group.
-    b810504  OSX codesign fix.
-    eef5e81  Initial codesigning changes to osxdist.py
-
-2009-04-07
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b597f4c  Have setPlayerState only emit messages when something actually
-	     changed
-
-2009-04-02
-  Mikkel Krautz <mikkel@krautz.dk>
-    09a775a  Rename some framework extensions for OSX overlay.
-    89886d9  Make 1.2 branch build on OSX.
-
-2009-04-01
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    122a104  Make mumble use new plugin type
-    3ebfe2b  Have plugins use std::basic_string, and use l4d as example
-    14d59e1  Make context and id length signed, so we can return -1
-    65aef28  Update plugin header
-    6b04d81  Add fixme for audiowizard path length
-    ab2ee8d  Fix loopback
-
-2009-03-31
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c95557c  CELT as audiocodec
-
-2009-03-30
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0a0ab34  CELT for Win32
-    8421f29  CELT build
-    ffe7929  Add CELT submodule
-
-2009-03-29
-  Arcenciel <arcenciel@users.sourceforge.net>
-    1399c24  Updated Japanese Translation
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    fbf395c  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a33b3d1  Make ConnectDialog use QNetwork stuff and use a new URL for
-	     1.2.x
-    a4b1b1b  Fix custom textures
-    3a6e2ae  Murmur prints version info in log on startup
-    94aaf63  Fix crash with playercontext and context action
-
-2009-03-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    34c0788  Fix treemessage
-    cdfd8b7  Fix QueryUsers
-    c18b1a2  Fix ACL Editor
-    5ec7a58  ProtoBuf for Ice/DBus
-    c971091  Add experimental warning to installer
-    9f56cbf  Use generated sendX handlers
-    64cdec6  Use Player to precache textures
-    95bf2c8  Textures aren't optional
-    c2efc69  Use cache for textures
-    1803b93  Use MUMBLE_MH_ALL for headers
-    b388ef0  Have UserQuery automatically follow ACL
-    47485ed  Move accumulator to ServerHandler, avoid having murmur depend
-	     on boost::accumulators
-    715239c  Accumulator based pingstats
-    52d386d  Pass User instead of Connection to murmur message handlers
-    54466d5  Message references instead of pointers, and make UDPTunnel
-	     work
-
-2009-03-27
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    561b7f2  Make preprocessing tokens gcc compatible
-    ef1ea0c  UDP Voice data works
-    c0da46e  Working TCP communication
-    68d3159  Update build instructions
-
-2009-03-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1718cde  Make Mumble compile with protobuf.
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    e36f901  Gmod addresses update
-    efe2334  Updated L4D for Build 3790
-    35d6fd2  crlf
-
-2009-03-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2fd181a  Make ProtoBuf work on Win32
-    b377df8  Allow Tray to compile without DBus/Ice
-    3a05740  Fix TextMessage when AlwaysOnTop
-    feca72d  Revert "Make init script stop complaining", because it really
-	     should complain.
-    4518e1a  Make init script stop complaining
-    d4d7f36  Allow changing SuperUser email
-    b831cfc  Bump version to 1.2.0
-    1e9c437  Merge branch 'v1.1.x'
-    40884a3  Allow no-dbus to work for mumble
-    0f46c9e  Update gitignore
-    481760c  ProtoBuf for murmur (no DBus/Ice yet)
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    b7a974d  Added BF2142 plugin
-
-2009-03-22
-  Mikkel Krautz <mikkel@krautz.dk>
-    fc80d64  Add addban.php script to osxdist.
-    5fcee7b  Copy qt.conf into AppBundle via qmake instead of dist script.
-    629fabc  Be more explicit in postflight script.
-    fbd9fa2  Remove dead code from OSX overlay contextmenu.
-    5b42a49  Handle symlinks properly in osxdist.py.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    dff9e3a  Make the logrotate fail gracefully if murmur isn't running
-    e710a84  Update indent script
-    46e1e60  Update release script to work without a make
-    a0d5920  Add mumble_plugin.h to distribution
-
-2009-03-21
-  Mikkel Krautz <mikkel@krautz.dk>
-    e17401d  Require a logout for OSX installer.
-    15e4cb7  Apparently, only hooking CGLFlushDrawable is just fine. This
-	     didn't seem to work first time I checked. :(
-    4ebaedd  Reduce OSX overlay logspam.
-    2b81e4a  Make contextmenu call `mumble-overlay' to launch apps.
-    ae2ffcf  Add 'mumble-overlay' app-launcher to OSX overlay.
-    0d3dd3b  Add contextmenu.h to HEADERS.
-    276938f  Add an overlay context menu for Mac OS X. Allows for launching
-	     apps with the overlay enabled by right clicking on them.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5edfee0  Fix a few more odd writing cases for authors
-    e0fe5c7  Update changelog script to credit SVN authors properly
-    4eb6d7d  New changelog script
-    3732dce  Fix WASAPI device selection
-
-  Bartek <sumowski@users.sourceforge.net>
-    b79e2a2  Polish translation quick fix
-
-2009-03-20
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    5e460af  Fix crash of config dialog when always on top is set
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    ba56432  Update to the MIT licensed version of mach_star.
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    f48f816  Updated Spanish translation for 1.1.8
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a295819  Extended protobuf testing
-    0bd7c1c  Workaround for alwaysontop bug
-    17537bd  Fix broken output from lupdated, and remove empty 'tr'
-	     translation
-    b4d4b86  Update source strings.
-    b246faa  Fix capitalization.
-    9a49e4f  Revert "Fix crash of config dialog when always on top is set"
-
-  Bartek <sumowski@users.sourceforge.net>
-    0f54d3c  Polish translation - completed for 1.1.8
-
-2009-03-19
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    845f2d3  Always allow SuperUser in mumble-auth.py + style update
-
-  Kissaki <kissaki@gmx.de>
-    0d45cd8  minor German translation update (double spaces)
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    14616d7  Add protobuf compiler
-    27b7e15  Example of how to use structs from PHP
-    027ae42  Start of new protocol
-
-2009-03-18
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    75868a3  Added Chatbar dock widget to MainWindow
-
-  Matthias Vogelgesang <matthias.vogelgesang@gmail.com>
-    68ba119  German translation for latest changes
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5cb0d27  Update for new intel compiler
-
-2009-03-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    15052fb  Qt 4.5.0 has fixed signal emitting when deleting sockets,
-	     remove workaround
-
-2009-03-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b2029dd  Fix lousy UTF8 handling in most browsers
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    50b3f50  L4D build number update
-    97098ab  Fixed typo in installer for DODS plugin
-
-2009-03-15
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ab0089c  Fix input/output switch in tooltip and whatsthis in config gui
-    3cd95b5  Fix punctuation in ACL editor
-    6ff4b14  Fix typo
-    bf867ed  Fix message type of join/leave channel
-
-2009-03-14
-  Kissaki <kissaki@gmx.de>
-    4ca05b9  updated German translation
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    5cc524f  Fix osxdist.py optparser.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5a7f04a  Avoid locking mutex unless plugin has lock
-    b35fdce  Avoid setting duration on WASAPI
-    f2e4aff  Fix duplicate string
-    3a85112  Language file resync
-    ae2d336  Switch to boost 1.38 for Win32
-
-2009-03-13
-  Mikkel Krautz <mikkel@krautz.dk>
-    cc9e795  Fix various typos in osxdist.py.
-    eb5fc92  Use plain messages for Growl. It doesn't do HTML.
-    a977546  Remove old osxdist.sh script.
-    8b72150  Update Mac OS X dist script.
-    ae1ba55  More OSX header fixes.
-    37c854f  Don't try to detect Growl via AppleScript. It doesn't work.
-    dbb0eb2  Fix header mess on Mac OS X.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a66cf2d  Add speex as submodule
-
-2009-03-12
-  Matthias Vogelgesang <matthias.vogelgesang@gmail.com>
-    143589b  Apply patch from mumble-tower
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    ac83eb0  Add qt.conf to the source-tree.
-    390e291  Use qt.conf in app bundle to set Qt plugin path. Remove dirty
-	     hack from main.cpp.
-    bbb4f92  Fix osxdist script.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c865f2f  Update OpenGL overlay to recheck hook
-    d7e070b  Fix description message so it comes after the welcome message
-    1e324f2  Add a few periods to whatsthis
-    0558722  Update a few english strings
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    4f35872  Updated Gmod plugin, added better spawn state
-
-2009-03-11
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    5202447  Detailed WhatIs strings for Log config
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    0fddab0  Add additional Murmur scripts to OSX .dmg. Launch mkini.sh in
-	     osxdist.py.
-    3c38350  Update OSX installer with new license information.
-    ae8bcbd  New overlay paths for OSX injector. Load proper bundle when
-	     asked for it.
-    83c363a  Add LGPLv2.1 license (new for Qt 4.5). Update Speex license.
-	     Add PortAudio license.
-    ab63d65  Make GlobalShortuctMac build with 10.4 SDK once again.
-    95de017  Fix up permissions in OSX installer.
-
-2009-03-10
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    e7dd7ed  Updated strings for log configuration
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    844af75  Added Dystopia plugin
-    8034ec1  Fixed v,h addresses
-    8c91027  Update for 1.3 patch
-    c9ea6a0  Added Dystopia plugin
-
-2009-03-09
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    383e025  Removed secondary option for eventsound configuration
-    b6a6e31  Correct invalid if in eventsound fallback code
-    c92a410  TTS fallback and filecheck for eventsound
-
-  Kissaki <kissaki@gmx.de>
-    cb67fc1  updated murmur.ini documentation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    080c586  Create .ini files based on template
-
-2009-03-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    266a2b8  setSuperuserPasssword => setSuperuserPassword
-
-2009-03-07
-  Kissaki <kissaki@gmx.de>
-    665edfe  German translation: 'Main Window' updated Thus German
-	     translation was checked throughout now
-
-  Matthias Vogelgesang <matthias.vogelgesang@gmail.com>
-    cf7cfb8  Apply patch from mumble-tower
-    455ebe9  Changed one awkward translation.
-    bb2406e  apply patches provided by kissaki
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    1c95ce9  Use weak binding to determine whether to use Leopard-specific
-	     key-to-name translations in GlobalShortcutMac.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9ced3f7  Fix comment parameters for Channel::add
-    d26bb4c  Add about to tray context menu
-    34fad98  Use consistent naming of channel actions
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    ac6a5d4  DOD PA lacked sourcefiles
-    8be4101  Day of Defeat Source PA plugin
-    633a403  TF2 build 3771 update
-
-2009-03-06
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    c370c9f  Some fixes in eventsound
-    d9e6ff2  Merge branch 'eventsound'
-    1d677c4  Implemented the GUI part of the static sound for event feature
-
-  Kissaki <kissaki@gmx.de>
-    507e799  updated english translation some smaller flaws (typos, missing
-	     ., grammar) and made some things clearer
-
-  Mikkel Krautz <mikkel@krautz.dk>
-    03fc6ba  Growl notification support.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a90db97  Support HTML editing for channel descriptions
-    6901c4c  Final merge and CIA test
-    88fdb0c  Merge test
-    da96d6b  Update path for ruby
-    2e778f6  Indent
-    e880109  Resize minimum size of shortcut config
-    4d60fbd  Remove HTML for trayicon balloon.
-    c4ff017  Add function to check sample validity.
-
-2009-03-05
-  Mikkel Krautz <mikkel@krautz.dk>
-    c048a02  Add 'proper' Mac OS X installer.
-
-2009-03-04
-  Mikkel Krautz <mikkel@krautz.dk>
-    ae0c8b5  We don't want the OSX overlay to live inside the app-bundle.
-    fe8c40a  Make the OSX overlay injector live outside the Mumble
-	     app-bundle.
-    6d6c67d  Fix Murmur build in OSX/Darwin.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ac0b3cf  Indenting
-    a2765a6  CRLF merge
-    1561941  Add mute/deafen to icon context menu
-    467cd16  Update release script
-
-2009-03-03
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    792ca1f  Merge branch 'sourceplugs'
-    f199f0b  Add new PA plugins to the installer
-    64914f4  Backend support for playing sound files on events.
-    76e6416  Save/Load for soundfile paths
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    df69aef  Update static murmur for Qt 4.5.0 and lzma compression
-    f2232a5  Use realtime threads on Linux, as posix threads aren't
-	     prioritized under SCHED_OTHER
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    b58cea3  INSURGENCY: Modern Infantry Combat Positional Audio
-    5fe671b  Garry's Mod Positional Audio
-    d9ecf7d  Age of Chivalry Positional Audio
-    8f1f066  Half-Life 2 Deathmatch Positional Audio
-    3c9cfae  Counterstrike Source Positional Audio
-    1b3c71b  TF2 PA fix
-
-2009-03-02
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    71957d8  Fix typo for channel description
-    f71a815  Support extended keys
-
-2009-03-01
-  Arrai <arrai@users.sourceforge.net>
-    aee1e23  Don't idlemute after self muted
-
-  nomad <gmc_holle@users.sourceforge.net>
-    7bd80f8  Adding channel descriptions
-
-  Matthias Vogelgesang <matthias.vogelgesang@gmail.com>
-    5929962  correct installer translation
-    fb41b75  Standardgeraet
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1f8364b  Avoid spamming log on description change
-    6ef0a0c  Indent
-    d8f994c  Update documenation for Server.getLog
-    f2022a0  Use non-cached Ice connections
-    ab2d992  Support clearing texture over Ice/DBus, and remove qcompress()
-	     header from getTexture on Ice
-    9bb37b9  Add .gitignore for win32
-    bbeda39  Add .gitignore files
-    b207e3d  A few testcases for collections and hashes
-    a41c00b  Fix typo
-
-2009-02-28
-  kissaki <kissaki@users.sourceforge.net>
-    608a90c  Patch #2625917: really simple PHP + ICE registration script
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5db28fa  Even with dropped capabilities, running murmurd as root is not
-	     a good idea, so always warn the user
-    796afe0  Avoid messing with ulimits in murmurd, and first part of
-	     updated init script to use privileged capabilities
-
-2009-02-27
-  kissaki <kissaki@users.sourceforge.net>
-    944501f  Patch #2645062: Installer Translation: German
-    89d5f51  Patch #2638107: Installer Translation: German
-
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    56426af  Overlay for Mac OS X.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7515e31  Update default system ini to include the uname tag
-    5d9edfb  Don't keep CAP_DAC_OVERRIDE after switching users
-    a5a3a73  Unbreak QoS on Unix
-    f56a47f  qWave (QoS for Vista)
-
-  Bartek <sumowski@users.sourceforge.net>
-    0ddd167  Patch #2645933: Polish translation (small fix)
-
-  theblackstorm <theblackstorm@users.sourceforge.net>
-    c317abe  Patch #2645641: NSIS French Translation
-
-2009-02-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b34cbc7  Clean up logic for capabilities, add resources automatically
-	     if root, and update the limits test
-    2c9f4f0  Add a umask, add the CAP_SETGID capability, and print a
-	     warning if running murmurd as root without a username to drop
-	     to.
-    7fc01d6  Use Linux capabilities to allow us to really use high priority
-	     threads
-
-2009-02-25
-  Arcenciel <arcenciel@users.sourceforge.net>
-    9f8f3cd  Patch #2637281: NSIS Japanese Translation update
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0df61d2  Kill running mumble, murmur etc on uninstall.
-    2350c48  Sections for the installer.
-    428bc1b  Fix spelling error in NetworkConfig.ui
-    788b3f4  Distribute Murmur.ice with win32 install.
-    13ea9af  Avoid using QPainter::scale() as that produced a few artifacts
-	     in Qt 4.5.
-
-2009-02-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    468ed6d  Replace previous notification -- needed on new Ubuntu notifier
-    e73613a  Clarify Ice documentation for verifyPassword
-    9ea9089  Handle lost textures
-    ada9056  Update vertex shader
-
-2009-02-23
-  lewellyn <lewellyn@users.sourceforge.net>
-    7041b3f  murmur_pch.h cleanup
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    db3c781  Update Linux overlay to guess window size on GLX<1.2
-    c58df3f  Qt4.5.0 on Win32.
-    39c8094  Mutex cleanup
-    3568c5d  Valgrind run for mumble.
-    66d04b2  Fix a few gcc warnings
-
-2009-02-22
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    fb84f8e  Fix RPC.cpp to compile even with CONFIG+=no-dbus
-    ba56098  registerPlayer throws InvalidPlayerException, update .ice to
-	     match
-    5de1027  Shader-based OpenGL same-context linux overlay, with ELF
-	     linkmap iteration
-
-2009-02-21
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    f308c58  Fixed possible bug in several plugins and did some minor style
-	     tweaks
-
-  Tuck Therebelos <snares@users.sourceforge.net>
-    35f52a9  Team Fortress 2 PA plugin
-
-2009-02-20
-  Arcenciel <arcenciel@users.sourceforge.net>
-    4fd1812  Patch #2620308: NSIS Japanese Translation
-    17a6814  Patch #2620179: NSIS Japanese Translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    58b6aa8  getServer() for Ice doesn't throw, it returns a null proxy.
-    5932d65  Use Ogg-Speex for samples.
-
-2009-02-19
-  kissaki <kissaki@users.sourceforge.net>
-    f74911e  German Installer Translation Updated
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    cec4fae  Check unlink state every second.
-    50e58c2  Correct L4D plugin.
-    ebdc34c  Show which channel has been moved to/from when moving a
-	     Player.
-    2a9dcfd  Allow modification of ACL if you have Write on parent channel.
-    6c6b3b8  Multiple keycombos per shortcut.
-    5257860  Fix typo; murmur now compiles on Win32 again.
-    879d3b2  Indenting and moving of a few code blocks
-    1d9b576  Support KDE notifications as well
-
-2009-02-18
-  nomad <gmc_holle@users.sourceforge.net>
-    990ab72  Patch #2613323: Support for QT System tray balloon tool-tips
-	     or libnotify
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b6fbe4a9  Don't use embedded speex if system speex >= 1.2
-    46b1594  Use the correct interface for QDBusInterface for focus
-    eb97048  Use default ice port in the example scripts
-    b36bfdf  hasPermission for Ice
-    5001daa  External Ice Authentication
-
-2009-02-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ff728cd  Indenting run
-    96b5158  Use QString based logging instead of const char *
-    08c7814  Reduce server stack usage
-    3fb59f9  QNetworkAccessManager for http loading. Support images in
-	     welcome text.
-
-  ueber <ueber@users.sourceforge.net>
-    cff1c68  Ruby Ice example
-
-2009-02-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7148a0b  Add a thread count test
-    39519d2  Speedtest of Protocol Buffers
-
-2009-02-15
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e2586a4  Indenting
-    23af558  Client-side resource usage.
-    c64cd11  Server-supplied resource support
-    c3f993b  Start UDP thread on demand
-    100a9a3  Clean ACL cache on server shutdown
-
-2009-02-14
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    cfba8f0  New sample script which uses the server controlled context
-	     menu entries to create registration tickets from a client
-
-  kissaki <kissaki@users.sourceforge.net>
-    07741df  Patch #2598251: german translation (mumble) updated
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    675c10a  Oops, didn't mean to commit empty directories
-    64e3381  Example on how to use DBus with C#. Forgot I made this one.
-    e68d920  Be kinder to systems without working lsb_release
-    c7f4f3a  Set current index on context actions for the playerview.
-
-2009-02-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b0aea9f  Fix LFLAGS_ADD
-    dd82270  Add support for building 32-bit library on amd64
-    6fc929e  Fix typo; the overlay isn't speex
-    1ff3076  slice2html doesn't count ? as a terminator, so reword things
-	     slightly
-    75205b3  Initialize menus on startup so context shortcuts are activated
-    0091cdc  Don't refresh the ALSA card list, it causes ALSA to crash
-
-2009-02-12
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    e64d33b  Replaced the 'while' with close on keyboard interrupt
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    94c73a5  Client-side context menus.
-    261483e  Context actions for Ice
-    307a198  Iterate servers at startup instead of abusing stop/start
-	     callback
-
-2009-02-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7517a5c  ServerCallback for Ice
-    e9d8601  Meta callbacks for Ice
-    03aaf77  Dynamic connect() for authentication
-    86ac8d3  Fix volume attenuation when max volume is 0.
-    6db5ccb  Delete event filter first, so it won't get called with its own
-	     delete event during recursive delete.
-
-2009-02-10
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    554763e  Indenting run
-    ed7c412  Readd started/stopped signal propagation
-    146d7c6  Signal/Slot based RPC callbacks
-    3d6ae39  Signal and slot test
-    8c97da4  Start of Ice callbacks
-
-2009-02-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6242768  Add L4D to installer.
-    abbaf57  log based rolloff for audio.
-    667ce05  Sample-based output.
-    701c1a4  When already connected and clicking Server|Connect, default to
-	     adding current server to the list.
-
-2009-02-08
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    3798014  Patch #2580353: bf2 PA increased possible mapsize
-    29c0464  Patch #2579216: cod5 new version 1.2 pa patch
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    49d3385  Positional support Left 4 Dead.
-    dfa7a82  Switch to "MaxDistVolume" for distancce attenuation.
-    3fa2818  Put MumbleScript on ice for the time being, as it is hard to
-	     get gui elements secure.
-
-  theblackstorm <theblackstorm@users.sourceforge.net>
-    ad0a14f  Patch #2574499: NSIS French Translation update
-
-2009-02-04
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    d56a85d  Remove Window->Close menu item on OSX. Disconnect uses Cmd+W
-	     as well, and we should really only quit on Cmd+Q.
-
-2009-02-03
-  kissaki <kissaki@users.sourceforge.net>
-    6004a57  Patch #2557593: Installer Translation German improved
-
-  theblackstorm <theblackstorm@users.sourceforge.net>
-    c7b215c  Patch #2560147: NSIS French Translation
-
-2009-02-02
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    d02a587  Spanish translation for installer
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b3a171b  Start of clientside scripting.
-    38c52b5  Have the installer check for SSE, and complain if it isn't
-	     found.
-
-2009-02-01
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    db7b312  Allow playername and channelname config to be set live
-
-2009-01-31
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    bab2100  Patch #2550233: German Installer Translation Updated
-    feb2dcf  Patch #2549845: Win32 installer Polish translation [sumowski]
-	     Use Unicode NSIS installer
-
-2009-01-30
-  m0ta <m0ta@users.sourceforge.net>
-    2be3586  German translation for installer
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    02378c5  Localized Win32 installer.
-    e9b3fe8  Clean up a few leftover code lines
-    412be5d  First pass at adding inline documentation to the slice file.
-	     Could probably do with a spelling check or three.
-
-2009-01-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a3a362d  Version bump
-
-2009-01-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4aa85bb  1.1.7 release
-    971a164  Changelog update
-    a0c9671  Indenting fixes
-
-2009-01-27
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    878fff7  Updated Spanish translation
-
-2009-01-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    51510ff  Debian Bug#513119: murmur-user-wrapper: confused about dbus.
-	     Patch by janbraun@gmx.net
-
-2009-01-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7508be1  Delay fetching OSInfo, as QProcess doesn't deal well with
-	     fork/detach
-    4a07c67  Update distribution scripts
-    b4258dc  Add elide mode for the audio devices, and store configdialog
-	     geometry.
-    048343f  Updated mumble-overlay to support biarch systems, based on
-	     patch by ludwig.nussel@suse.de
-
-  Bartek <sumowski@users.sourceforge.net>
-    901ffe7  Polish translation hotfix
-
-2009-01-23
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    e611b15  Include Mumble's LICENSE file instead of the GPL in the Mumble
-	     disk image.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8eb7359  Dont use tool windows on OSX
-    70344b3  Preserve config menu settings entry.
-
-2009-01-22
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    b6cd05d  Allow the i386-part of OSX Universal Binaries to be built with
-	     MMX/SSE/SSE2 optimizations.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9277b53  Transparent background for extended images in the murmur.cgi
-    9ccba72  More consistently pick the same interface
-    386a8f2  If we don't find an active IPv4 interface, pick any other
-
-2009-01-20
-  julian7 <julian7@users.sourceforge.net>
-    887368a  Patch #2524995: DBus started/stopped signals
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ae08a5e  On FreeBSD, just link -lcrypto directly
-    f3fa9ad  Older input.h doesn't have KEY_CNT
-    cad89be  Attempted workaround for screeching.
-    d0bd009  Strip " from lsb_release
-    1be6e51  Update to support G15 SDK 3.01
-
-  Bartek <sumowski@users.sourceforge.net>
-    490728e  Polish hotfix
-    00bf4ac  Updated polish translation
-
-2009-01-19
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    6e01e25  Stop frameless window from creeping around.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    30460fd  Language update
-    e3f271b  Indenting update
-    dfecfd3  Use just parts of uname() for OS info
-    2afcd0e  Don't use /dev/input devices that are grabbed, and don't use
-	     /dev/input at all unless we find a keyboard
-    c451437  Fix of the fix of the fix for the frameless mode
-    34acfe4  ALSA Locking
-
-2009-01-18
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    9fca9fb  Patch #2516734: Independent geometry for Mumbles' Minimal View
-    0112a1a  Patch #2516400: Self Mute/Deaf via DBus for Mumble client
-
-  jerhum <jerhum@users.sourceforge.net>
-    7814dba  Patch #2518154: French translation update
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6786ed6  Minor cleanup of the noframe patch.
-    49fbd6b  Brutally simplified LCD overlay.
-    2970f91  Qt 4.4.3 for Win32.
-    763a061  Fix for QScrollArea in ConfigDialog.
-    4a414a4  Remove debug output from Overlay_win Use QTreeView::scrollTo()
-	     for the playerview.
-
-2009-01-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    695074f  Multiapp overlay for *nix
-    1faac99  Support simultaneous overlay in multiple applications.
-    e90dd48  Prefetch offset for createdevice.
-    c168a48  Always show that we attached to OpenGL in the debug log.
-    061aa70  Trampoline-based, chaining, push/ret calling overlay.
-
-2009-01-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    cb9dfc4  Remove a debug string from AudioOutputDialog
-    eaacf2f  Lrelease seems to merge a few contexts, so turn nounfinished
-	     and compress off.
-
-2009-01-15
-  m0ta <m0ta@users.sourceforge.net>
-    318e002  German translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7121374  WASAPI doesn't need output delay, or so it seems.
-    1023428  Add a outputdelay config for AudioOutputRegistrar
-    e3d63c5  Stop g15helper from spamming debug log.
-    88f0732  Typo fix.
-    852f60d  Thread-safe AddRef/Release for overlay. Delayed-insertion D3D9
-	     hook, work around bug in SupCom.
-
-  Bartek <sumowski@users.sourceforge.net>
-    7afa56f  polish_for_1.1.7_release_update_v50-FINAL.tar
-
-2009-01-14
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    bf34571  Updated Spanish translation.
-
-2009-01-13
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    04825a7  Use sheets for ConnectDialog-related dialogs on OS X.
-    1fd2ae4  Prettify OSX OSInfo and include architecture.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d10b798  Locale-aware version queries.
-    729b7a4  Fix bug where muted trayicon wasn't shown on startup.
-    fde3748  Apparantly -arch:SSE (SSE1) and -QxK (SSE1) at the same time
-	     becomes SSE2. This compiler is quite buggy.
-    97abe97  Fix exit crash of overlay. Also include interface replacement
-	     code. Not used yet though, it would fail if the game did
-	     device->GetSwapChain->GetDevice, unless we patch all of those
-	     as well.
-
-2009-01-12
-  ikasamah <ikasamah@users.sourceforge.net>
-    10aaace  Updated Japanese translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1948c1d  Fix positional test in Audio Wizard.
-    1fe8a5d  Default IdleAudioMute to off.
-    3282f3c  Update murmur-static script
-    058e073  Qt 4.3 doesn't have -removeidentical for lrelease
-    a450608  Descriptor test only works on *nix.
-    f7d5644  Add a descriptor test
-    4325826  Fix editor oops in Register.cpp
-    864a40a  Updated installation documentation
-    d28a8a8  Language file updates
-    b13cd6a  Report true Windows version.
-
-  Bartek <sumowski@users.sourceforge.net>
-    e2701fa  Updated polish translation
-
-2009-01-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    949a8c2  Make canEcho const, unify XML for OS info and don't start UDP
-	     thread if the socket failed
-    0f93c33  Default Console.txt path to %APPDATA%, and add a "Run Mumble"
-	     to the installer.
-    1087de9  Use UTF-8 for CStrings too, fixes a Mojibake
-    6a6ca34  When using WASAPI, decrease the volume of other applications
-	     during speech.
-
-2009-01-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    31e2c53  Fix string playerid ->  string name
-    4320a6f  Explicitly use UTF8 for all output from murmur.
-    976f17e  Spelling fix for wizard.
-    27fa1bc  Workaround for distros that rename qmake and lrelease without
-	     providing mkspect pointers
-    bf6844a  Add the Linux OS for the VersionCheck. oops :)
-    36c9d56  Mute loopback in wizard during welcome and finish pages. Add
-	     question about statistics to the end of the audio wizard.
-    e36d650  PTT in audio wizard.
-    8f5da0f  Use qCritical where it makes sense.
-    130416e  On Unix, detach even if logfile fails
-
-2009-01-08
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    3f2c634  Fix universal build on Mac OS X (and other non-pch targets).
-    7565edb  Only enable XEvie when building against an X11 version of Qt.
-	     Disable g15daemon support on Mac OS X.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3fc100d  If Mumble is already installed, call the uninstaller.
-    68a6d8f  Ok, only disable DirectSound if we actually compiled with
-	     WASAPI (it is optional, after all). Add a diagnostic output
-	     from ASIO when no devices are found.
-    3e25021  Merge DirectSound code into single file, and disable
-	     DirectSound if WASAPI is found.
-    af7c056  Anonymous statistics.
-    d2af1eb  Enable tab scrolling to save a bit of space in the config
-	     dialog.
-    3cad4a2  Anonymous statistics.
-    4bdf757  Register Win32 version in hex.
-    770a421  Include version and OS with global server registration
-    a93e270  Readd the untranslated English as a selectable language.
-
-2009-01-07
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e0ea5df  qCompress global server list.
-    46d8c8a  Register current # of users and channels on global server list
-    63cca58  Whitelist the global serverlist callback from the reconnect
-	     tempbans
-
-2009-01-05
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    e9fb2ff  Allow global volume shortcuts to increase the volume up to
-	     200%.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6bea0e5  Intel C++ 11.0 compiles -Qipo into buggy code, so turn that
-	     off.
-    6d373a7  Translation file updates
-    ec7f8cb  Indenting update
-    1f33cb8  Write/Admin -> Write ACL
-    ad2b8e2  Update copyright for 2009
-    219c8c9  Add desktop shortcut on Win32.
-    82bb384  Allow channel/player regexp to be changed
-    6a4e383  Rename "Write" to "Write/Admin" in the UI so people stop
-	     thinking it's for message writing.
-    e8c9e47  CONFIG+=no-embed-qt-translations to load translations from Qt
-	     from the system installed directory.
-    4751c3c  Remove a few missing translations
-    4294ad7  -jX safe make targets for translations
-    60c2877  Build updates for newer boost and C++ compiler.
-
-2009-01-04
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b0162ef  Experimental notify-less DirectSound, using estimated
-	     positions.
-
-2009-01-02
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6a494c8  Tab-based config widget.
-
-2009-01-01
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    974ced3  Update Win32 Overlay to inject LoadLibraryA. With the CBT
-	     hook, this should hopefully be enough.
-
-2008-12-30
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    81cec84  Fix for the regression introduced by the hanged connect fix.
-
-2008-12-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8037b8d  Fix G15 on Linux
-    6c68408  Avoid stuck ServerHandler when server is unreachable.
-
-2008-12-24
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    02d47ea  Patch #2457331: Make murmur use its own icon
-
-  mokomull <mokomull@users.sourceforge.net>
-    82e4966  Patch #2463387: Add configuration option for hiding main
-	     window to tray
-    28636ed  Patch #2462928: Reload ALSA device list when settings dialog
-	     is opened
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e87688b  Fix for crash with no LCD devices present.
-
-2008-12-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b39c862  Don't show LCD Config if no devices are detected. Also minor
-	     cleanups of G15 helper.
-
-2008-12-15
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    56ee577  Update G15 helper to use standard input/output Show all
-	     players/linked channels. Fudge the font metrics.
-
-2008-12-13
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    b4806cc  Add g15helper.ico.
-    98da0f9  LCD Support
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5ab03f2  Fix some Boost/Qt stuff for icl for the G15 code.
-    62d3ac4  The G15 library doesn't handle multiple devices.
-
-2008-12-12
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    f838215  Add LCD config dialog icon.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f151df1  If the UDP socket failed. don't close it. Also, enable
-	     obfuscate parameter.
-
-2008-12-08
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    5665131  Patch #2393239: PA div by zero fix (/ bf2 plugin fix)
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1b264fb  Add MSVCRT to the plugins directory as well.
-
-2008-12-02
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    41aff5b  Fix unaligned access issue on picky 64-bit platforms (such as
-	     IA64)
-
-2008-12-01
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    913cd1e  Keep expanded state of items when moved.
-    ffa5621  Updated translation sources
-
-  Bartek <sumowski@users.sourceforge.net>
-    5eb15b1  Updated polish translation
-
-2008-11-29
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    a76f1f0  Treat incoming and outgoing mumble:// URLs as URL encoded.
-    5f3d243  Fix typo in "What's This" for Noise Supression. Fixes bug
-	     #2238867.
-    b6fdc6e  Add all the new positioaln audio plugins to the installer.
-	     Fixes bug #2294035.
-
-2008-11-28
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    3eaff86  Patch #2293077: Tray icon update on disconnect
-    d0f05fd  Patch #2293288: Disable PA when position is reported as
-	     (0,0,0)
-    d798227  Patch #2301216: Positional audio for Call of Duty 5
-    8d72daf  Patch #2338606: Positional audio for Wolfenstein:ET
-
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    b5cdef7  Fix rounding issues in AudioConfigDialog. Fixes bug #2293514;
-	     Based on patch #2293714 by dd0t.
-
-2008-11-01
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6be3542  Change tray icon when muted/deafened.
-    d9cecff  Idle timer in client to auto-mute.
-    073c72e  Fix so you can use minimal view and AlwaysOnTop at the same
-	     time.
-    a5a4a33  Allow boosting volume to 200% (with warning about it's
-	     quality).
-
-2008-10-22
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    d57321b  Patch #2183224: Call of Duty 2 positional audio
-
-2008-10-19
-  mystic_sam <mystic_sam@users.sourceforge.net>
-    b40cf89  Patch #2178031: AudioBar in config dialog
-
-2008-10-18
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    9d6f296  Sanity checking for CoD4 plugin
-
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    b535225  Make GlobalShortcutMac build again.
-    e61870e  Fix version number in BF2 plugin about dialog.
-
-2008-10-11
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    71684f1  Make sure LogTitleBar is properly hidden when launching
-	     Mumble.
-    0e48e6e  Initialize DirectInput in the same thread as we are polling it
-	     in.
-    37e60be  Move DirectInput handling to the same thread as the Win32
-	     input hooks. Fixes GlobalShortcut signal delivery.
-
-2008-10-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d680eb9  Add Q_DISABLE_COPY to most classes
-
-2008-10-08
-  Stefan Hacker <dd0t@users.sourceforge.net>
-    2ed7d0f  Patch #2151618: Positional audio for Call of Duty 4
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6bedde8  Add _USE_MATH_DEFINES to the .pro for Win32 so M_PI is
-	     defined, instead of locally changing the file. Oops.
-
-2008-09-30
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a53239f  Compile on platforms where qreal is float
-
-2008-09-29
-  entitaet <entitaet@users.sourceforge.net>
-    2cecce4  Patch #2133288: Correction in mumble_de.ts
-
-2008-09-26
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    42b0508  Updated Spanish translation
-
-2008-09-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7460e13  Distribute Qt 4.4.2 for Win32.
-
-2008-09-23
-  jakobdettner <jakobdettner@users.sourceforge.net>
-    2a6ae35  Patch #2119472: tray icon exit menu entry on right klick
-
-  l-n <l-n@users.sourceforge.net>
-    0e86bb4  Remove C++ flags from CFLAGS
-    3bd6814  Patch #2122639: fix build with older alsa
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    270040d  Deny duplicate channel names
-    46ba719  Check valid player ID on texture get/set
-
-2008-09-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    be9a94b  Bump BF2 plugin version.
-    30c144d  Add uninstaller section for configuration settings and
-	     databases.
-    e94da5f  Version bump
-    9e33a86  Changelog update
-
-  Bartek <sumowski@users.sourceforge.net>
-    9589f64  Updated Polish translation
-
-2008-09-12
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    3b124ce  Add dbOpts setting. Allows users to specify custom connect
-	     options for their QSqlDatabase.
-
-2008-09-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7e0368e  Language updates
-    2488f6f  Indenting
-    1cc6bcd  Implement "Always on top" and "Ask on Quit".
-    256e218  Include stereo decorrelatation in speex builds.
-
-2008-09-10
-  derandi <derandi@users.sourceforge.net>
-    b8ff5ee  Patch #2104222: Workaround for buggy Alsa lib 1.0.17a
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f34ca68  getVersion() for DBus/ICE
-
-2008-09-08
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    5b0322d  Distribute Murmur.ice along with the other Murmur-related
-	     files on OS X.
-    1430ecb  Make setChannelState() rename channels for DBus and Ice. Add
-	     getChannelState() to DBus. (Fixes bug #2098835)
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3a393fe  sendMessage and sendMessageChannel for ICE/DBus
-    2bceafa  Version bump
-    65fb1bc  Distribute fake manifest for VCR90.
-    4498fd6  Support source-less text messages.
-
-2008-09-06
-  m0ta <m0ta@users.sourceforge.net>
-    4d89809  Updated German translation
-
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    5fd6da8  Add mumble.icns to mumble.qrc.
-    6dbc29f  Add mumble.plist to DIST.
-    168e007  Add icedemo.php to OSX dist scripts.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a30e610  Polish
-    a68f72c  Fix translation loader.
-    4c19239  Remove link.pl from distribution list
-    84a0d6d  Changelog update
-    3dc145d  Fix minor typo in GlobalShortcutMac
-
-2008-09-04
-  jerhum <jerhum@users.sourceforge.net>
-    502512d  Updated french translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    92d9f1a  Add warning to user if speex hasn't been checked out.
-    b41fc5b  Remove unused FMODAudio
-    b146db0  Remove outdated link.pl (which hasn't worked for several
-	     releases)
-    a47fea8  Remove unused DSound/OpenAL hooks from overlay source
-    9b32d99  Remove debian/ and debian-hardy/ from SVN as debian builds are
-	     maintained in the official debian SVN.
-
-2008-09-03
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    bd660ad  Final version of polish translation
-
-2008-09-02
-  ikasamah <ikasamah@users.sourceforge.net>
-    61f7ce3  Updated Japanese translation
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    aa3c45d  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    02da74b  Remove obsolete translations from polish file
-    01d6c1c  Updated language files to match new context
-    2d6d90a  Add context to text "Unlink" for translators (Channel or
-	     Plugin?)
-    16a9832  Work around bug in QDir::addSearchPath() and
-	     QTranslator::load()
-
-  Bartek <sumowski@users.sourceforge.net>
-    f1dc16c  Updated polish translation
-    df503d5  Polish translation
-
-2008-09-01
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4a4231d  Updated language source files
-    2ff806e  Indenting
-    62f8b23  Silky smooth positional audio mixer.
-
-2008-08-31
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6dc327f  Include all necesarry files to compile in .tar.gz
-    3b4cbea  Distribute Murmur.ice and php scripts with static binary
-    bf16e9b  Update binary snapshot to update front page
-    d42e60e  Switch to name hints for iterating PCM devices on ALSA.
-
-2008-08-30
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    9ffa6f1  Use 'MBLE' process signature on OSX for easier identification.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    509bba6  Be slightly more forecefull when disconnecting timed out
-	     clients
-    61fc898  Try using the CBT hook to avoid IE slowdowns. Might be games
-	     that aren't catched by this one, though :(
-    c9ff1db  Use a separate message loop for the lowlevel input hooks on
-	     Win32. (Fixes bug #2083383)
-
-2008-08-29
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    2e227c0  Fix urlCallback prototype on non-x86-64. Sigh.
-    8e99df7  More general Boost include path on OSX.
-    d3e6a7c  Support for building against Cocoa Qt4 in compiler.pri
-	     (CONFIG+=cocoa)
-    3d167b5  Bundle Info.plist for Mumble AppBundle instead of generating
-	     it on-the-fly.
-    e88f98f  Fixes for x86_64 Cocoa version of Qt4.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b8a995c  Overlay blacklist and "override" added (put a file named
-	     "nooverlay" next to the executable to disable it).
-    942e4a6  Work around Qt 4.4.1 "feature" of default buttons.
-    4013745  Work around setRecord() being broken in Qt 4.4.1
-
-2008-08-28
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    78d6ca4  GlobalShortcutMac cleanups.
-    13037b5  Use ~/Library/Logs/Mumble.log for our log on Mac OS X.
-    d066df9  Convert GlobalShortcut on OSX to use the Quartz Event Tap API.
-	     Fixes bug #1929509. Enables key suppression and proper key
-	     names in the config dialog.
-
-2008-08-27
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    c468b39  Show version in title of Win32 Murmur log window.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    638fe72  Distrubute Murmur.ice with .tar.gz
-    9303b29  Holding VersionCheck::on_Agent_requestFinished with a
-	     messagebox means we'll get a second finish event when the
-	     connection is closed, which goes through before we've finished
-	     the first. Switch to msgBox
-    45753b6  Under win32, ICE has wstring as wchar_t, Qt as unsigned short,
-	     so we're switching to utf8
-    5a457e8  Small cleanup of Win32 output modules.
-
-2008-08-26
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    19a4b0a  Repair broken Murmur output formatting introduced by --version
-	     change.
-    ab5df06  Do not output an AppBundle for Murmur on OSX.
-    eed23df  Add version parameter to commandline Murmur.
-    f9952e2  Fix server thread termination on Darwin/OSX. Murmur will now
-	     properly shut down when receiving a SIGTERM.
-
-2008-08-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b4b8df3  Full fledged ICE/PHP example
-    5ea8d53  Make ICE unicode safe (switch to utf16 strings)
-
-2008-08-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a9c89d5  Package dbus-send on Win32 installs.
-    3d14c72  Add DBus setRegistration call
-
-2008-08-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ed38530  Use unfiltered input for "amplitude" VAD.
-    93e2e0b  Move boost path to compiler.pri and use Boost 1.36 on Win32.
-    cc57019  Switch to using event-based async ICE functions; Meta::start
-	     is now safe to use. Fix a memory leak when stopping a virtual
-	     server.
-    f4064df  Statically compiled and linked ICE for static server.
-
-2008-08-18
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8bf0437  Update defaults slightly.
-
-2008-08-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e560cff  Allow AudioWizard audio loopback to work even if we're muted
-	     on the server.
-
-2008-08-15
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b12e705  Remove a bit of debugging that snuck into the last update.
-    8a59b41  Qt 4.4.1 develops a few visual quirks if you reparent GUI
-	     elements during their creation, so switch to explicitly
-	     setting the parent.
-    a29d68d  Fix ICE link bug on Win32.
-
-2008-08-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    764487e  Add suppression for XEvie and fix Qt4.4ism for context menu
-
-2008-08-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    be7961f  Update static packaging script
-    d748461  Remove some SSL debugging
-    7d9b553  Possible support for key suppression with XEvie, but untested
-	     as Xevie itself is broken on i386
-    48959a2  Add a "clear" to the context menu of the log window.
-    4e1ff3f  Remember correct input device for WASAPI.
-    00fa259  Indenting
-    11eea44  Use explicit static_cast<> instead of implicit conversions for
-	     float<->int etc
-
-2008-08-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    38da8ad  No longer need bin/ in path for Win32.
-    3c03642  Fix voice activation buglet. Updated Win32 build environment
-	     for VS2008 SP1 and Qt 4.4.1.
-
-2008-08-08
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    e4b4a27  Update Benchmark.cpp to use current Auth message.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    15dd890  Make it slightly easier to use TAB and other UI changing
-	     characters as shortcut keys.
-    9490153  Wrong default port in ConnectDialog
-    20594f5  Update installation instructions slightly.
-    57a79eb  Suppress shortcuts from other applications.
-    a9db643  Use frame power instead of peak sample for "amplitude" VAD.
-	     Also use post-filtering signal instead of raw.
-    ac59593  DBus/ICE getLog now uses limit offset instead of seconds
-
-2008-08-07
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b36270d  Log channel id when a player moves
-    cf962e6  Bit more cleanup of AudioOutput.
-    b55d6c3  Use softmixer for DirectSound.
-
-2008-07-31
-  derandi <derandi@users.sourceforge.net>
-    e1ecd33  Patch #2031394: Call set_rate_near() instead of set_rate_min()
-	     in ALSA Output.
-
-2008-07-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    dae48d8  CIA bot on #mumble
-    0cea5b9  Update documentation.
-    253fbc5  For those crazy enough to want it, we actually support quality
-	     1 now.
-
-2008-07-20
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    9b7b713  Consolidate player/channel name validation into validateName()
-	     functions. Fix bug that allowed users to rename channels to
-	     otherwise invalid channel names. The registerPlayer() function
-	     now correctly validates its name before performing its
-	     actions.
-    22d8808  Call correct removeChannel method for DBus as well.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    45d553c  Remove some debugging output from PulseAudio
-    e1d9798  Fix typo in registration
-
-2008-07-19
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f56a687  Fix compile bug with ICE. Attempt to fix PlayerModel bugs.
-
-2008-07-10
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    3bb651c  Default to ICE for Murmur on OS X as well.
-
-2008-07-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1b1be13  Default to ICE for Win32 murmur
-
-2008-07-07
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    325022b  SSL PassPhrase
-    3056df3  Taborder in AudioInput
-
-2008-07-04
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    5246e8e  Ice for Mac OS X.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5459683  Intel C++ release build with ICE breaks with inlining.
-
-2008-07-03
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7791fa4  ICE for Win32
-    38b6224  Include weblist.php using ICE
-    93a9638  Update slice definition with idempotent and exceptions
-    a95c1e5  Allow specification of ICE endpoint
-    c8ffe27  Possible fix for PTT cue crash
-    833c2fc  ICE fixes for Ubuntu
-
-2008-06-27
-  prosper_spurius <prosper_spurius@users.sourceforge.net>
-    b2f70a7  Patch 2003574: Cannot save current connection
-
-2008-06-26
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    91abf12  Add a new icon for the Mac OS X port. Contributed by Karsten
-	     Bruns.
-
-  prosper_spurius <prosper_spurius@users.sourceforge.net>
-    60479dd  Patch #2002867: Patch for Bug: 1986292 Tray Icon disappears on
-	     minimize
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2f51d05  Fix locking bug with ICE
-    c8d5d87  Complete basic implementation for ICE
-    98b1156  More ICE
-
-2008-06-25
-  prosper_spurius <prosper_spurius@users.sourceforge.net>
-    f8fe0bd  Patch #1998399: Patch for Feature Request 1934842 Channel
-	     Locking
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c9ffada  Framework for ICE in Murmur
-
-2008-06-24
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    05dcd3b  Use OS X system langauge instead of locale data for
-	     translation determination. (Fixes bug #1952855: Mac: Mumble
-	     uses wrong language setting)
-    dca353c  Better XRUN handling in PortAudio. (Fixes bug #1993878: (OSX)
-	     No Audio from other after some time)
-
-2008-06-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    fa6a569  Install for all users, not current user.
-    2caf10b  Align crypt buffers
-
-2008-06-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a3501d8  Add DBus types on Win32 too.
-
-2008-06-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    46991af  Add _cs translation to qrc file
-
-2008-06-06
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e28b561  Support speex.git master
-    aed770f  Remove external speex SVN
-    4c5157b  Add logging to phpBB auth script
-
-2008-06-05
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    41025c8  Fixed some strings in the Spanish translation
-
-2008-06-04
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    23da58d  Make sure Mumble will even build with CONFIG=no-dbus.
-
-2008-06-03
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    cd41589  Remove unconditional DBus disablement on OS X. Qt can load
-	     libdbus at runetime now, yay!
-    29d857b  Enable proper mumble:// protocol support on OS X. Likewise for
-	     Console.txt logging.
-
-2008-05-28
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    f1835a8  More useful PlayerModel tooltips (feature request #1942941:
-	     Additional tooltips)
-
-2008-05-27
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    97d2d09  Hide 'Expand'-label in LookConfig for non-expert mode.
-    d4ef1a8  Explicitly focus the text input field of the text message
-	     dialog. Win32 doesn't do this by default.
-    e0617e0  Implement volume shortcuts (for feature request #1954994:
-	     volume keybind)
-
-2008-05-17
-  m0ta <m0ta@users.sourceforge.net>
-    ab53c51  Updated translation
-
-2008-05-11
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    bb952c1  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5da1ea3  Version bump
-    573a614  Make XEvie optional
-
-2008-05-10
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ae9ebca  Changelog update
-    05f0da7  Another translation sync from debian's pkg-voip team
-    0b43cb1  Update persistent indexes for children in PlayerModel
-    20e9aae  Fix crash when moving populated channels to parents.
-    4f74fd7  Avoid crash when no audio systems worked
-    4479f08  Try to speed up filling the public server list on X11. Set a
-	     name on the GlobalShortcutConfig for skinning.
-    6092849  Fix crashbug when %APPDATA% is unset for some reason.
-
-2008-05-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b4cce78  PulseAudio detection should be slightly more stable.
-    7eec3b6  Cure for Qt 4.4 SSL slowness.
-    196cfd5  Changelog update
-    18bb1f3  Static build with Qt 4.4
-    b9936a6  Indenting
-    1355a0a  AGC tests
-    8aae8a1  Only enable ASIO devices are found.
-    8e5bf73  Renamed murmur-wrapper to murmur-user-wrapper
-    3980fd7  Debian packaging fixes
-
-2008-05-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a6b4d92  Sync debian/po translations from debian's pkg-voip team
-    079e6ac  Compiler warning cleanups
-    00b954a  PulseAudio detection (sort of), and sound system priority
-    b4454a2  Save dock state when switching to/from minimal mode.
-    c1fccd5  Timed drag-grab for the log.
-    28dd945  Make the player model the central widget.
-    d4b0e25  Drop the splitter and make the log and playermodel dock
-	     widgets.
-
-2008-05-07
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    3166fa4  Workaround for the, now as of Qt 4.4.0 yet worse, QWizard bug.
-    8ac6be5  Fix automatic version parsing in OS X distribution scripts.
-    d1c0313  Avoid loading system Qt plugins on Mac OS X.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a2c4d46  Update Win32 for Qt 4.4.0
-
-2008-05-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    11db737  Translation sync
-
-2008-04-29
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    f88d0cb  Hah. Correct 'passford' typo in Murmur usage output.
-
-2008-04-28
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    ce01bdc  Linux only -> Unix-like systems only
-
-2008-04-27
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    444dfd2  Oops. Remove MacVersion variable from TextToSpeech_macx.cpp as
-	     well.
-    96e395b  Use qMacVersion() instead of Gestalt() in
-	     TextToSpeech_macx.cpp.
-    fe36a5f  Distribute Murmur on Mac OS X. Update dist scripts and README
-	     to reflect that.
-    7ba3737  Move RC_FILE into win32 conditional in murmur.pro.
-    2ef7c5a  Don't use internet enabled disk images for OSX distribution.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f4a9042  Yet more resampler fixes
-
-2008-04-26
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    83e782f  Refactor MacOS X TTS engine and disable it when running on
-	     10.4 (Tiger). Thanks to Christoph Pirkl for tracking down the
-	     bug.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    72f70e4  Fixed regexp bug in channel name matching
-    3a25186  Update to resampler test
-    709ad57  Move menus up one level when in minimal mode
-    e4d647f  Debian/Ubuntu packaging updates
-
-2008-04-25
-  derandi <derandi@users.sourceforge.net>
-    7ff1e6e  Patch 1950979: Repair broken ALSA, Changes to Plugins
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3cae4d8  Remove static reference to database
-    c7a2d8a  Explicitly clear SQL queries
-    d0e2cb6  Fix crashbug when reconnecting to removed channel
-    59c8bf8  Support live changing non-critical murmur parameters
-    7d87303  Indenting
-    d0ac8bf  Update for Speex visibility
-
-2008-04-23
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    83793af  Add VersionCheck QueryItem for OS X.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8863fc3  Polled X input support, for OSes that lack both xevie and
-	     inputdev
-    5e136dc  Dumbing down the ALSA a bit
-
-2008-04-22
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    79ef80e  PortAudio: Get rid of crackling noise when opening output
-	     streams.
-    c15dd01  Mention that we also run on OS X in the README.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    625825d  Add UID to shared memory and semaphore names on *nix, to allow
-	     multiple users at the same time.
-    ebe7e0e  Add HAL policy to give access to /dev/input
-    cf1fb3d  Add more debugging info to ALSA, stop using advanced
-	     functionality
-    2ed86fd  Gracefully handle lost directsound devices. Ensure shortcuts
-	     work in the application context and not just the mainwindow
-	     context.
-
-2008-04-21
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    3beb2b4  Disable the overlay ConfigWidget on OS X - we have no overlay
-	     implementation yet, so showing the widget just confuses
-	     people.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5820e0f  Add libspeechd dependency for debian
-    89d892c  Update DBus Auth for phpBB3 release
-
-2008-04-20
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    19f54d5  Fix missing pages with resized config widgets.
-    4a2d277  Delay database matching for URLs to better work with "already
-	     connected" URLs.
-
-2008-04-19
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    6eec5d5  Stereo support for PortAudio.
-
-2008-04-17
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    6849be2  Prefer ~/Library/Preferences to ~/.config/ on OSX for Mumrur
-	     as well.
-    68a7bc0  TextToSpeechMac: Fix the parameters for our SpeechDone
-	     callback. I confused it with another function. This doesn't
-	     change any code, as we were only using the first parameter
-	     anyway.
-
-2008-04-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2991d20  Wizard for positional audio.
-
-2008-04-13
-  inequation <inequation@users.sourceforge.net>
-    9952748  Patch #1940944: getCurrentUrl DBus method
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e64d938  Updated README and INSTALL
-    082e9ec  Minimal mode.
-
-2008-04-12
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    44afd7a  Distribute plugins on OSX.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    923dfa4  Show defaults in ACL Editor
-    6a2a7f7  Make URL handler not reconnect if same server, and fetch
-	     username and pw from the server database.
-    c0e7da4  Expand channels with players.
-    0eddca3  Update default voice hold to 1 second.
-    ede276c  Make ConfigWidget depend on smallest screen in multiscreen
-	     setup, and fix the non-expert mode icons having spaces between
-	     them.
-
-2008-04-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f6e9798  Path fixes for installer.
-    8f6afa7  Indenting
-    df4967f  Use slightly more sane resampler for ASIO.
-    2ed8a4b  Multichannel pulseaudio
-    c50afb3  OSS fixes
-    cfe94fa  Fix multichannel ALSA
-    88d872c  nix compile fixes
-    b90733f  Input/Output mixer speedups.
-
-2008-04-09
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    e02770f  Make sure srs is set to NULL if we're not doing resampling.
-    865effb  OSX build system updates. Add dist scripts.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3dd8c55  Moved resampler for input.
-
-2008-04-06
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4132161  Add float->short conversion to the mixer. Hope it works.
-    53e4a7d  Bring *nix audio backends in sync with new mixer
-    8dcb7d7  Fix a few compiler warnings
-
-2008-04-05
-  derandi <derandi@users.sourceforge.net>
-    8a2fad6  Patch 1934642: A few linkplug fixes
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    67de848  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ee9397e  Make the surround mixer include a resampler and default to
-	     floats. This breaks all *nix audio targets.
-    6c78cc7  Forgot plugins.pri and updates to the resampler test
-
-2008-04-04
-  derandi <derandi@users.sourceforge.net>
-    e917075  Patch 1931477: Linux port of Link Plugin, Minor changes to
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8d67fd1  Don't break Win32 API for link plugin -- there's no need.
-    45121cd  Work on the speex resampler
-
-2008-04-03
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    8438405  Prettify Mumble icon on Mac OS X (mumble.icns)
-    ff58997  Fix about dialog icon on Mac OS X
-
-2008-04-01
-  mark7 <mark7@users.sourceforge.net>
-    b08b47e  Patch 1930045: Man page spelling error
-
-2008-03-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    353ad07  Explicitly fetch plugin position from both input and output.
-    6025c47  Fix bug if users are deleted while an admin has the ACL dialog
-	     open, then applies
-
-2008-03-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2c0a0ff  Patch 1927186: Reorder some function calls in the AudioWizard
-    3acf851  Fixed installer and use explicit widechar in TestLink.cpp
-    2db85f4  Plugin updates.
-    7e0e525  Support setting supw from standard input
-
-2008-03-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    bb3322f  Minor update to WASAPI
-    8e6bd0d  Fix for logic of Link plugin.
-    113804b  Translation source updates
-    21ee2fd  Indenting
-
-2008-03-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    71ac0a2  Make Linux soundsystems use new config
-    9e6d1d2  Remove config for OSS, ALSA, PulseAudio and PortAudio
-    324540e  Refactor "Basic Audio" config dialog, and remove most of the
-	     system-specific audio configs.
-
-2008-03-24
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    3002066  Patch 1923982: Always unmask the NoCancelButton flag in the
-	     AudioWizard
-    ff72785  Patch 1923965: TextToSpeech OSX Update
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ccdcb68  Bug 1923716: mute -> audio assistant -> bug
-
-2008-03-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    cfe1dfc  Seemingly working surround mixer for WASAPI. Though it only
-	     knows about the "left" and "right" speaker for now.
-    2fd3801  Infacy of surround mixer
-
-2008-03-22
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    46510a9  Patch 1922968: Remove old reference to ALSAOutputPlayer in
-	     ALSAAudio.h
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    416e061  Updates Ubuntu packaging
-    7114684  Bump version to 1.1.4
-    fa43ba7  Fix iOutputDelay on *nix
-
-2008-03-21
-  Arrai <arrai@users.sourceforge.net>
-    1baed7e  Patch 1921066: Option to disable html messages
-
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    c577d45  Patch 1922328: More OSX UI cleanups
-    264bbd0  Patch 1921277: Use powf instead of exp10f in PositionalSound.h
-    d224c59  Patch 1920346: Disable QSysTrayIcon on OSX - use the dock
-	     instead
-    ce7b093  Patch 1919733: Update for GlobalShortcutMac
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    21c33ff  Rename iDXOutputDelay to iOutputDelay and move it to the
-	     general config pane.
-    677a399  WASAPI Input and Output
-    6f904ef  Add an icon for the network config
-    4a901b1  Minor cleanup of PositionalSound and some indenting fixes
-
-2008-03-20
-  derandi <derandi@users.sourceforge.net>
-    0f22bcf  Patch 1920119: ALSA Stereo
-    3b43d94  Patch 1920117: Stereo Mixing
-    013c29b  Patch 1920115: Positional Sound Widget + Volume Models
-
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    83c5b45  Patch #1920346 Disable QSysTrayIcon on OSX - use the dock
-	     instead
-    d296102  Patch #1920332 Add a cancel button to Server Browser of the
-	     Connect Dialog
-    7e79880  Patch #1920239 Prefer /home/xeno/Library/Preferences/Mumble on
-	     OSX
-    5a151a1  Patch #1919466 About Dialog cleanups
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1231db2  Make the stereo-enabled output compile on Win32 as well.
-    e93c194  Indenting run
-    7c71309  Support system-installed speex (if it's 1.2b4 or newer)
-
-2008-03-19
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6bef650  WASAPI Input
-
-2008-03-18
-  dark-storm <dark-storm@users.sourceforge.net>
-    b489aeb  Path #1916131 Compilation Fixes for Visual C++ 2008
-
-  l-n <l-n@users.sourceforge.net>
-    ab6f5e1  Patch to fix no-speechd
-
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    831aa39  Patch #1917558 Implement GlobalShortcut for OSX
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    ec619c7  Updated Spanish translation.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9ff6c4b  Update to patched speex API.
-    1f89fdd  Move compiler settings to compiler.pri Fix a lot of warnings
-	     with msvc
-    716b39e  Add VersionInfo to the .rc files.
-
-2008-03-17
-  jerhum <jerhum@users.sourceforge.net>
-    d90d605  Language update and new french translations
-
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    bcd9c81  Patch #1916734 Fix TTS on OS X and add volume capability
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    99aafd9  Spread registrations out a bit in time
-    46ea093  Add no-client and no-server for qmake.
-    703f08e  Open Console.txt in User directory if current directory is not
-	     writeable.
-    5fc4580  Make Win32 audio modules optional. Don't crash if no modules
-	     are enabled/working.
-    77a914c  Add Deafen/Mute self to the player menu if self is selected,
-	     and remove "Local Deafen" (can be done by setting output
-	     volume to 0%).
-    a58ff30  Support skinning of the style sheet of the log window.
-    10edfac  Sort server browser based on alphanumeric only (ignore
-	     whitespace and punctuation)
-    f391624  Remove lefotver festival settings
-    033c466  Updated license script
-    2afb03d  Initial support for plugins on non-win32, but disable GUI for
-	     now [Ludwig Nussel <ludwig.nussel@suse.de>]
-    0ccde72  Make all audio modules for Unix optional, as well as dbus and
-	     speechd (CONFIG+=no-whatver)
-
-2008-03-16
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    49bb6aa  Patch #1914863 Override TARGET for better OSX integration
-    862186f  Patch #1915779 Add window titles to Mumble's about dialogs
-    731d349  Remove the empty line at the beginning of the log view and
-	     speed it up a bit. Based on patch #1915590
-    093c378  Patch #1915523 enable _MSC_EXT only for MSVC
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2bb285b  Don't use boost typeof for GCC [Ludwig Nussel
-	     <ludwig.nussel@suse.de>]
-    7894e07  Quit => Quit Mumble
-
-  vader42 <vader42@users.sourceforge.net>
-    5399fff  Make murmur compile on freebsd
-
-2008-03-15
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    279919a  Patches #1914820: OSX patches (from bug #1914742)
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ea9820f  Only reload dbus if installed for postinst
-    9a01814  Basic WASAPI querying.
-    48ecb5e  Minor pulseaudio cleanup
-
-2008-03-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8527d41  Fix compile warning in PulseAudio, add --as-needed to linker
-    b5a4963  Add version checking to overlay
-    361d01f  Use speech-dispatcher for TTS on *nix
-    9f58eb2  Add replaces: for mumble-server-web
-    ebeac46  Add tooltip to systray icon so settings are saved by OS.
-
-2008-03-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2d34ee1  Fix vcredist options.
-    e4156de  Fix reference-to-just-deleted in DirectX output.
-
-2008-03-04
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1fa16a1  Fix for bug #1904336 -- renaming channels could crash the
-	     clients
-    99ce07b  Use new murmur icon
-    134dc30  More compilation and installation tunings for Win32.
-    5f16fc3  Directory cleanup when purging package
-    b05691c  Use floats instead of doubles where it makes sense.
-
-2008-03-02
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    77e5ad9  Remove ASCII warning
-
-2008-03-01
-  mit_service <mit_service@users.sourceforge.net>
-    3900560  Patch: #1902036 small fix to make mac version compile
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    677dc28  More directory fixes
-    0779a0f  Default databases to ~/.config/Mumble on Linux
-    9845a40  Make Vista-friendly paths for sqlite databases.
-    d4cc0fe  MSVC doesn't need the thiscallresolver.
-    58712ba  Fix home directory for mumble-server
-    d6ef7b8  Compile Win32 with Visual Studio + Intel C Compiler
-
-2008-02-29
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    8b5507d  Test 16x16 icons/murmur.ico for review by slicer. Will make
-	     proper 32x32 and 64x64 if OK.
-
-2008-02-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6b75830  Add SpeexMark.pro again
-
-2008-02-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4c5f56d  Support profile-optimized libspeex. Slim gain so far, waiting
-	     to test on Core2
-
-2008-02-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a9adffb  Compat 6 for debian
-    9fd4692  Build static binaries with a qt snapshot to fix library
-	     loading
-
-2008-02-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7091532  Made VAD defaults more sane
-    6df7073  Clean up
-    e2718e5  Fix dates in changelog
-    7e9c963  Make mumble-server suggest mumble-server-web
-    a20297f  Minor textchanges in changelog
-    40c8e02  Changelog update
-    01ac1f5  Small update to changelog script
-    897eb98  Update PulseAudio buffering to use bytes and not shorts
-
-2008-02-22
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    078c49c  Reread list of sinks and outputs when someone adds/removes a
-	     audio card for PulseAudio
-
-2008-02-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a3a9166  Add DBus path for Murmur on Win32
-    401dc37  Major packaging cleanups. Getting ready for 1.1.3
-
-2008-02-18
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    0c96725  Updated Spanish translation.
-
-2008-02-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    799641a  Escaping a few - in manpages
-    7a93357  Small update to registration script
-    6ac1563  Minor updates to ubuntu packaging
-
-2008-02-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3a2e0c3  Language file sync.
-    a413722  Make "Remove" disabled if there are no entries in the server
-	     list.
-    5c773fa  Refresh public server list every 24 hours. Change the "Add"
-	     button into a context-sensitive "Update"/"New"/"Add" button.
-
-2008-02-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    75abc3e  Unembedding of speex FFT functions -- Mumble should now be
-	     able to build with a system-installed Speex >= 1.2.0
-    1d30b3e  Merged most of our speex changes into speex upstream; first
-	     patch to unembed Speex.
-
-2008-02-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    696f397  Improve visibility of linked channel state
-    f745174  Fix "move to parent" bug.
-
-2008-02-01
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    e094fc9  Automatically add/remove /dev/input devices
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    595bd13  s/proprietary/non-standard/
-
-2008-01-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    786a5d7  Ask "Are you sure?" if quitting while connected.
-
-2008-01-20
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    20bf4ab  Fixed some strings in the Spanish translation
-
-2008-01-17
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    5cda451  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a17a335  Restore linked state on server restart
-
-2008-01-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8cca0fa  manpage updates and .config fix from patrick.matthaei@web.de
-    abc6336  Disallow local mute of self
-
-2008-01-15
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    15709d0  Changelog update
-    ee05b27  Add template and config file for .deb
-    c3276f5  Final touches for debian package
-    0ada0c0  Extensive updates to ubuntu package (not quite done)
-
-2008-01-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    67010a3  Rename ubuntu package from murmur back to mumble-server
-
-2008-01-12
-  ikasamah <ikasamah@users.sourceforge.net>
-    d67f7e0  Japanese translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5235be7  Work around bug in newer debian
-
-2008-01-08
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    f8c5319  Proxy support
-
-2008-01-07
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    dae8d2f  Modified manpages
-
-2008-01-06
-  Mikkel Krautz <mkrautz@users.sourceforge.net>
-    e83fcc8  Change the size parameter for EVIOCGBIT, based on patch by
-
-2008-01-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    dbaaa61  Increase safety size for config widgets
-    fdf7ee6  Translation updates
-    dc7e438  Update copyright for 2008
-    9ee2657  Fix messageType for CryptSync [Mikkel Krautz]
-
-2007-12-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ea46e42  Handle SIGTERM and SIGHUP in Murmur
-
-2007-12-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8b43b42  Clean SQL log after adjustable interval, fetch logs via DBus
-    680a5f1  Add rotateLogs and quit methods for DBus
-    2724239  Make ALSA errors logwindow entries instead of popup boxes
-    c024189  Show hostname when connecting.
-    598359f  Revert to seconds instead of centiseconds for registration
-	     delays
-    0c74573  Use SSL callback to verify bound IP for multihomed machines
-
-2007-12-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d0c6510  Update lintian override
-    2ba1d59  Support espeak, add festival suggestion for ubuntu
-    a8579e1  Rename user from Murmur to murmur
-
-2007-12-10
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a78b7ca  Add murmur.default for init script
-    f59fa90  Speex benchmark, used to test optimization flags
-    ea32c9f  Early bail for non-SSL
-
-2007-12-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ed0acc9  ALSA labling fix. Softmixer fix.
-    756749d  Standards 3.7.3 for Ubuntu
-    8ae34f4  As it breaks packaging policy for many distros, don't default
-	     to MMX/SSE for Linux
-    d91a17f  Various UNIX audio fixes
-
-2007-12-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    254671d  Installer now kills dbus-daemon.exe if found.
-
-2007-12-07
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3356227  Various dbus fixes
-    e21e236  Log -h to stdout for murmurd
-
-2007-12-06
-  ars3niy <ars3niy@users.sourceforge.net>
-    d2b7357  Patch 1845022 for delayed Global (fixes fonts on X11)
-
-  metz <metz@users.sourceforge.net>
-    5106764  Patch #1844930 macx: add app icon / remove window icon
-
-2007-12-03
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9859554  Use SSE for Speex if compiler flags enabled
-    e7449cd  Clarify source license in debian/
-    b70ac9a  Language updates
-
-2007-12-02
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ddebe8f  Build PortAudio and PulseAudio only if pkg-config finds them
-    621c8d8  Bump version to 1.1.2 (for all but debian/)
-    64f9511  Changelog update
-    c286eed  Minor Ubuntu fixes
-    2449c35  Fix yet another Win32 UDP bug.
-
-2007-11-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c432df7  Threadsafe sockets for Win32
-    345f554  Oops. Added collation fix to sqlite instead of mysql. Fixed.
-    f40e3eb  Move audio input/output system to mumble.ini if present.
-    f63c019  Use utf8 for Unicode
-
-2007-11-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7ae7fb6  Better audio path detection. Fix race bug in AudioOutput
-
-2007-11-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0133055  Bug 1835662: fixed caching bug in murmur dbus
-
-2007-11-20
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2238c6d  Audio latency testing
-
-2007-11-18
-  fitti_01 <fitti_01@users.sourceforge.net>
-    fed3ae2  Support setting dbus servie name
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e1c36ec  Use the new defines for Ubuntu
-    ff829e1  Support NO_UPDATE_CHECK
-    4447a28  DeferInit -- avoids thread races for global initializers
-    d47fa08  Support setting DEFAULT_SOUNDSYS
-    9257279  Better support for small desktops
-    4839b07  More Ubuntu Fixes
-
-2007-11-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ff0a5b6  Multiscreen configdialog resize support
-    3a49d77  PulseAudio fix. More Ubuntu fixes
-    8de19f7  Patch #1832382 by metz
-    d05df59  Indent
-    25e5995  Support all protocols for textmessage auto-URLing. Fix icon
-	     for win32 murmur.
-    d403c42  Allow all usernames if they are registered
-    67dafef  Echo support for PulseAudio (untested)
-    a4c0cef  Remember wizard settings for OSS/ALSA.
-    579a429  PulseAudio (very basic)
-
-2007-11-15
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    20f8847  More Ubuntu updates
-
-2007-11-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6ac9d66  Updates for systemwide cgi installations
-    a84aa6c  More Ubuntu fixes
-    2854f19  DBus based murmur.pl registration script
-
-2007-11-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    495eaf8  Update CryptState unit test
-    f76f28b  Typo in murmur.init
-    00e9835  More Ubuntu packaging fixes
-
-2007-11-07
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    dfa2c00  Start of more complex Ubuntu package
-
-2007-11-06
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    25a6bac  setTexture for DBus
-    ba41b1c  Update for latest Speex
-    051fa33  User registraion in DBus
-
-2007-11-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    714258f  Auto-XHTMLify TextMessage
-    5376461  Cleanup for non-expert mode
-    9851873  Updated AudioStats. Added voice detect to AudioConfigDialog.
-
-2007-11-04
-  m0ta <m0ta@users.sourceforge.net>
-    42f0f2a  more spelling errors corrected
-    94ef85c  german translation updated and 1825370 fixed
-
-2007-11-03
-  fitti_01 <fitti_01@users.sourceforge.net>
-    5570be1  Defaultchannel for murmur
-
-2007-11-02
-  fitti_01 <fitti_01@users.sourceforge.net>
-    940521e  Fix lastchannel when using DBus auth
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    379bd6a  Try to work around a few QSslSocket bugs
-
-2007-10-31
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1661ebe  PlayerModel keeps persistent indexes and has a root item.
-
-2007-10-30
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    186dc71  Root channel name is server registration name
-    dbaa00c  Updated changed channel names in database
-
-2007-10-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a1ec12e  LICENSE updates
-    69112b4  Fix SQLite trigger
-    c3995ff  Doubleclick PushToTalk to Continous
-    0810a0f  Delay MessageBox for win32 murmur
-    2d1ec93  QVariant Shortcut for Linux
-    98a1f8f  QVariant based GlobalShortcut
-
-2007-10-27
-  m0ta <m0ta@users.sourceforge.net>
-    9db7eb0  german translation updates
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8513f99  Tighten database restrictions
-    b47696b  Unified GlobalShortcut
-
-  vegars <vegars@users.sourceforge.net>
-    4c6231f  Hide MainWindow on trayicon click
-
-2007-10-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a332fb8  Set SHA1 pw from murmur.pl
-
-2007-10-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    dc05737  Fix Linux overlay for older GLX
-    5fd89af  Global shortcuts on Linux were completely broken
-
-2007-10-22
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4f2494a  Add weblist.pl to distribution
-    9ad04e0  Logic fixes for ConnectDialog
-    974a742  More Speex build fixes
-
-2007-10-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2e56c3a  Crash with MySQL without dbprefix
-    267542d  Update for SVN release of Speex
-
-2007-10-20
-  m0ta <m0ta@users.sourceforge.net>
-    dbe4a15  german translation updated
-
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    729c5e0  Fixed some strings in the Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c097640  Include libmySQL.dll on Win32
-    23eb4ff  Make ServerDB less chatty to avoid numerous messages on Win32.
-    fbf83d3  Fix bugs in bandwidth quality adjuster and show quality in
-	     server information tab.
-
-2007-10-19
-  m0ta <m0ta@users.sourceforge.net>
-    5b337d1  german translation updated
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1cb276e  Bump version to 1.1.1
-    eb428c3  Changelog update script fixed
-    f94cf14  Ubuntu updates
-    4832ad9  Changelog update
-    ab2721b  Release script updates and last batch of text fixes
-    b9e7412  Changelog update
-    81ce7a6  Ubuntu packaging updates
-
-2007-10-18
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    bb17b2b  Updated Spanish translation
-
-2007-10-17
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    705ebf2  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    dff89ba  Fixes from Klocwork analysis (http://www.klocwork.com/)
-    4c6e200  Typo fix
-    c97eec2  tr() bug in ALSAEnumerator
-    48dc9ca  Support prehistoric OpenSSL
-    dbacc6a  Minor text fixes.
-
-2007-10-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d7d2a2a  Language update
-    f63a308  Ensure labels are updated in config widgets.
-    98b43c2  tarbuilder updates
-
-2007-10-15
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e5a6b3e  Compile against OSS3 as well
-    2407f3a  OSS4
-    983f067  no pch mode for klocwork
-
-2007-10-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    98dfb02  Updated WhatsThis for ACLEditor.ui
-
-2007-10-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b8df275  Local Deafen wasn't checkable.
-
-2007-10-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    13f67ff  Update DBus examples and fix reentrancy bugs
-
-2007-10-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    50c912a  Qt 4.3.2 in installer Fix buglet in bandwidth auto-adjust.
-
-2007-10-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    fae3c30  Portaudio support by metz
-    0b97396  Rename murmur to murmurd on Unixes and add a pid file
-    7e7d5b1  Various compile fixes for Linux
-    7990f39  Expert config mode
-    7d26a57  Memory map bugfixes
-    fdd190d  Support explicit linked games.
-    74f6e5c  Add a volume slider.
-    a82b296  Save state of playerview. Bump AGC to 30000
-    952d3c4  Autolower bandwidth on connect
-    496a6e4  Add TextMessage to svn.
-
-2007-09-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d2b7a5a  Fix bugs in ConnectDialog
-    57ad881  Serverside text-to-channel support
-    64b5b2d  Multiline and multichannel messages.
-
-2007-09-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    334fe8d  Allow a few more characters for channel and user names
-
-2007-09-07
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    568fdeb  More gracefully handle oversized outgoing packets from murmur
-    2f046d8  Add username limit of 512 bytes. Bugs reported by Luigi
-	     Auriemma
-
-2007-09-01
-  m0ta <m0ta@users.sourceforge.net>
-    14c660e  new batch of translations
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1b048e6  mumble.desktop patch from cesare.tirabassi@gmail.com
-    3c2dcd6  Fix D3D9 textures stacking. Fix OpenGL grey texture. Fix
-	     CrashLog dumper. (DOH!)
-
-2007-08-30
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ddfc033  Patch #1785198 by metz - Log.ui -- Logging config looks a lot
-	     better.
-    65f0587  Patch #1785192 by metz - ConfigDialog fixes
-    7322922  Patch #1785183 by metz. Unix client compiles again.
-    92ad768  Patch #1785183 from metz. Enable AudioWizard on non-win32
-	     platforms.
-    fad508f  Win32 OpenGL overlay. ETQW :)
-
-2007-08-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f219925  Modularized win32 overlay. Added preliminary DSound and OpenAL
-	     position grab to the overlay. (Only works with demos so far,
-	     no actual games work).
-    93c3b9a  Compile win32 overlay with GCC.
-    0678e97  Win32 overlay no longer depends on D3DX
-
-2007-08-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    aca25ea  Re-add bf2 plugin to win32 installer.
-    80969a6  Use file mapping for shared memory on Win32.
-    48b53a0  Win32 installer asks for reboot if it can't update overlay
-	     file.
-    cf86cdc  Various bugfixes. Updated overlay to only draw on topmost
-	     surface. Needs testing.
-
-2007-08-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ceea71c  Bugfixes from public snapshots.
-
-2007-08-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c49721c  Automatically check version on startup.
-    2027b32  Re-enable drag&drop.
-
-2007-08-20
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6c74656  Minor fixes for new config system. Updated installer for Qt
-	     4.3.1
-
-2007-08-19
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e90cb8a  Client now has "restore to default" and "restore to last
-	     saved" configuration, and all config is stored in the same
-	     way. Only changed configuration data is stored on disc,
-	     meaning if a user leaves a setting at it's default and the
-	     default later changes, the user will use the new default.
-
-2007-08-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7293dfc  plugins.pro
-
-2007-08-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ecce8da  Update .uis for Linux
-    a30e3e0  Fix warnings on Win32
-    bdee1de  More .ui conversions.
-
-2007-08-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ae57734  BanEditor.ui
-    cc362d1  ConnectDialog.ui
-    ff13d28  Fix meta-registration
-    2e5edd8  MainWindow.ui
-    1193b20  Show URL in tooltip for HTML anchors.
-    8c73444  Minor fix for TTS on Festival
-    1753f90  Safe HTML in Log
-
-2007-08-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d30bee2  Yet another fix for reentrant SSL messages
-    6551302  Manual close of application
-
-2007-08-11
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    1d4905c  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9dbb120  Experimentation with UI Designer
-    613fc3d  Local deafen
-    8be82dd  Adjust noise suppression level in settings.
-    6e2aad3  Use SHA1 for binary checksum for the upgrade check.
-    dc72837  View extended server connection statistics.
-    36f625a  Start of proper statistics
-    467316a  Strip HTML from incoming TextMessage
-    76d9503  Certifiticate => Certificate
-
-2007-08-10
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1948e6c  Strip HTML from TTS for Win32.
-    1e5cdbb  Support URLs in the log window.
-    3e92399  OOO crypt recovery
-    2f9dd3f  Fix GlobalShortcut_unix
-    5c76721  Update registration script
-    c17cc96  Support kernel input devices on Linux
-
-2007-08-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c95963a  Update win32 Build Environment to GCC 4.2.1, Qt 4.3.1 and
-	     Boost 1.34.1
-
-2007-08-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4cc8782  Fix referential integrity for player group-memberships
-    6237d0f  Add DBus getAllConf() and setSuperUserPassword
-    0ae6c48  Ask for AudioWizard config on first start.
-
-2007-08-07
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    681c77f  PushToLink implies AltSpeak
-    e2f1dfe  Fix a few more SQL problems
-
-2007-08-06
-  dersebi <dersebi@users.sourceforge.net>
-    b6b99c2  Fix typo in mumble.pro for OSX
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6d169a2  Yet one more try to get -mmmx out of the mac build
-    d5a5441  Compile fix for 32-bit lenny
-    65c7e7e  Another tiny SQL fix
-    705ce12  Typo which broke the client. Badly.
-    6bdeb32  Fix two crashbugs in murmur
-    7d2c4fa  SQL Fix in ServerDB
-    93e427c  Rename channel
-
-2007-08-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    fbe5831  Add TestCrypt to SVN
-    c18a161  Minor build fix for regular Linux
-    0c3b618  OSX patches from mit_service
-    32c3dfc  Optimized crypto
-    9fdefc0  Fix crash from race condition in DXAudioOutput
-
-2007-08-04
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9e61611  Fixed ConnectDialog to be slightly more sane.
-    d9671c9  Minor bugfixes for DB and DBus layers
-    923901a  Updated server info dialog to reflect voice crypt.
-    0bc0120  Use correct frame size for bandwidth calculation
-    03a7e5a  Fix crypt on client.
-    7ed5e47  Testing UDP crypt
-    a6376f8  Build updates
-    9eafd13  Link vertical height to font size.
-
-2007-08-03
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d252e43  Allow multiple tests on same machine
-    0df11b8  Microbenchmark
-    7168275  URL path == channel support
-    ffb4b96  MySQL schema embedded in murmur. Reconnect to SQL server on
-	     connection lost.
-    b80bece  plug:"hw instead of plug:hw
-
-2007-08-02
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    24b1c04  DBus and URL support for Mumble. Fixed DBus autolaunch for
-	     Win32. It's a hack, but it works.
-    f9ffe34  Native UDP for UNIX as well
-    7e24961  Win32 Murmur DBus
-
-2007-08-01
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    152d58b  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    42a69cc  SQL reconnect on lost connection
-    0ef9c34  Per-server logging
-    a7186c6  OSX Patch for murmur from mit_service
-    2ac4ca7  Timestamp players table
-    418cdba  Make sure no -2 slips through to Mumble
-    fc94f49  Multiserver support
-
-2007-07-31
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d13bb46  server_id in ServerDB
-    11d9b70  Client compiles again
-    6d6bcff  Global-less server. First step of multiserver support.
-	     Completely breaks client
-
-2007-07-30
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a5c59c5  Platform edit
-    1219168  mouse shortcut patch from javitonino
-
-2007-07-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4b9beb2  Czech translation from David Pravec
-    07da183  Name -> Label
-
-2007-07-22
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3f77c95  Installer fixes for openssl.
-
-2007-07-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    639ca57  Increase max settable amplification to 40x
-    db4e86e  Reset PushToTalk when configuring.
-    7296aed  Make qFatal pop up as ::MessageBox on Win32.
-    5a19931  Use mingw built openssl -- the precompiled one depended on
-	     nondefault Visual C runtimes.
-    8f15162  Support fixing case of usernames in DBus auth
-    b4817ee  obsessive PacketDataStream optimization
-
-2007-07-20
-  m0ta <m0ta@users.sourceforge.net>
-    47fdafe  translations
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b9eb5cc  Database cleanups and support for dbPrefix
-    5be2268  IP Binding for murmur
-    7eff82c  Timer tests
-    3fdb39f  Test indenting
-    f81c7c2  Unit tests
-    ae9f13e  PacketDataStream bug for negative numbers > 32 bit
-    3d8e058  Reentrancy fixes
-
-2007-07-19
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d7d1535  SSL crashfixes, ui session drag-and-drop fix.
-    eebc950  queued readyRead, fixes a SSL crashbug
-    0147de1  Small optimization to win32 timer.
-    f081a7a  Deprecation cleanups
-    04d7e5f  LARGE_INTEGER fixes for murmur
-    62dbc00  sPlayerId => uiSession
-    3621a6d  More indenting
-    0372cc2  Use new Timer for murmur
-    d4a1118  Ping measurement in Server Information, and optimized
-	     AudioInput->UDP latency.
-    7d145eb  64-bit message support.
-    b3ac4e4  Latin1 for Festival
-
-2007-07-18
-  m0ta <m0ta@users.sourceforge.net>
-    3bbdcb6  German translation added.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    990f220  Proper certificate viewer.
-    7080e90  A few missing QLatin1Strings and also switch to pkgconfig for
-	     ALSA and Xevie
-    b00a1b0  Use pkgconfig for openssl link
-    ca9c473  Hashed passwords in murmur database
-
-2007-07-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1b265ff  reindenting all the code
-    d9ca67e  installer fix for OpenSSL
-    0178d66  Avoid closing on errors, that happens automatically now
-    87e1835  Fix for #1755731. The event loop runs while dialogs are open.
-    8d80379  SSL client support.
-    e28c646  UTF8 for dbusauth
-    a6442cd  Forgot to add new Cert.h and .cpp
-    852c064  Server-side SSL encryption
-    247b0a8  All icons can now be changed in skins.
-    3a2adb6  Crashbug in ConnectDialog
-
-2007-07-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ffd5dfd  Some more dbusauth fixes
-    9c0b661  Cached database handle in dbusauth.pl
-    e6afb86  hostname registration
-    e083364  overlay debug fixup
-    aa7b85a  Fix buglet in PlayerModel
-
-2007-07-15
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    bcac0ae  Minor corrections to the Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    76171dd  Platform-independent qmake pathhandling.
-    a9fba24  Include QT translation
-    d469c74  Overlay debugging
-    81d3d1d  Explicitly link overlay with gcc to avoid libstdc++ dependency
-    c3def10  Build fixes for Ubuntu
-    33604ed  Changelog update
-    9dd4348  Final lupdate before release.
-    b4d3042  Some more Qt 4.2.2 fixes.
-
-2007-07-14
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    d2952d5  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    fe73c93  Capitalization fix.
-    36b9241  Updated French translations from Thibaut Girka.
-    e13024e  Keep just the LD_PRELOAD overlay
-    c3d7033  Forgot a conditional for the audio wizard
-
-2007-07-13
-  m0ta <m0ta@users.sourceforge.net>
-    5e25cd3  Should do svn update more often ;)
-    d259422  more translations. Unfortunately since I don't have Qt 4.3 I
-	     can't really check if the translations fit the wizard.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b0a7f04  Textlogger for murmur win32.
-    cc7e2f2  AudioWizard builds on Win32 only for now -- no reliable way to
-	     get moc to check qt version.
-    bc6c452  Clean compile on Qt 4.2.2
-    40ca34f  More stable LD_PRELOAD for GL overlay
-
-2007-07-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    12416a4  Fix compiler warnings
-    22c56e8  Wizard registrar for ALSA
-    dd4b82a  Fix bugs discovered by Klocwork [www.klocwork.com]
-    ade816d  Simple userauth. Example expanded to show phpBB3
-	     authentication.
-    c7bc5c1  More flexible bandwidth detection
-
-2007-07-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4519fbc  Use new overlay icons.
-    9906dc2  Audio Wizard. Breaks Linux for now.
-
-2007-07-10
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a66039d  Use aligned stack buffer for MMX mix
-    7c5c3a0  I give up -- we create a separate context for the overlay
-    fbf303a  Loopback cleanups
-    3b2baae  SineAudio fix, and non-mmx mixer support.
-
-2007-07-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    34c2b3b  Doubleclick player to send message, based on patch by m0ta.
-    76512f6  expand all channels by default.
-    0b76788  Minor Dbus fix and changed path and service name
-    6b42fbb  Packet loss and delay variance for Loopback mode.
-
-2007-07-08
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    c36e1f6  Test icons with hard edges for overlay for cartoon look. If
-	     this doesn't look good, I will try soft edges.
-
-  m0ta <m0ta@users.sourceforge.net>
-    3087e08  slight changes to the translations
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    273b997  Revert to plain old C for Linux overlay
-    c338f5a  Jitter buffer fixes. Should work better now.
-
-2007-07-07
-  m0ta <m0ta@users.sourceforge.net>
-    de744a8  updated german translation
-    412fb15  add menu entry for freedesktop.org compliant distributions
-    c504036  updated german translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c0aa51a  Part #1 of Speex Packet merging and Jitter updates.
-    ffafa93  Include French translation in binaries.
-    c13d4a8  FR 1749422: User Textures can now be disabled.
-    d9122f8  Updated Linux overlay
-
-2007-07-06
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9df9f51  QLatin1String for Overlay
-    3bd3e3a  Server loopback mode
-    98c1b1d  Local loopback mode.
-    3af031a  Overhaul of Audio Output to support non-speech sources.
-	     Probably break ALSA.
-    62b5281  Players On Top
-    e115603  Verbose output
-    b660cd9  Popup user dialog on wrong username/pw to reconnect.
-    1e66e95  Popup on rejects.
-    36de5ea  Add rejection enum
-
-2007-07-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4ab2813  Overlay tuning.
-    fc85579  Updated murmur cgi script for image upload
-    25082c4  Custom UserTextures
-    43853bc  Wrong int encoding in PacketDataStream.
-    24c7513  Fixup of Connection
-    e6c259a  More blob support, and break binary protocol AGAIN
-    4937d08  Serverside usertexture support
-    a965a37  Reconnect bugfix
-    c48af48  Proper fix for supression bug
-    12fe384  Working Linux OpenGL overlay
-
-2007-07-04
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    bfe2270  Testfix for 1746996
-    4dc29c6  Text fixups
-    115f114  Functional gl injection on linux games
-    fede5fc  Mumble-side of Linux overlay
-
-2007-07-03
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    75d245d  Config fixes
-    f87c058  Updated overlay for Win32, should now be possible to port it
-	     to Linux.
-    7da4eba  Updated french translation from Damien Rannou and Thibaut
-	     Girka.
-
-2007-07-02
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5b930d1  Consider connecting "Activity"
-    71f9d65  Typo in ConnectDialog
-    0338060  Need to distribute QtXml too.
-    19ff55e  Correct path in client browser.
-    074fc02  Correct path for server registration
-    7b1cc75  Server Browser
-    8190ea1  Patch cleanups.
-    4434fbd  Keep stream version at 8.
-    f9068cb  TextMessage patch by Mikkel Krautz
-    3aeb072  Fix fake DBus for Win32
-    82ffa89  DBus based authentication, based on patch from Thibaut Girka
-    f9b2025  Fixed softmixer
-
-2007-07-01
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    880c997  Updated translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2d5b88c  Remove default buttons until they're fixed.
-
-2007-06-30
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    0fe82f4  Fix alpha blending in some icons. Was due to indexed colors in
-	     source files. Need to see a test version to verify quality.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c08b1fe  Registration part for the server browser
-    d1ffed0  Fix recursion bug in getGroup
-    a08f13f  Update overlay on disconnect.
-    2f6bd48  Add mysql.sql to distribution
-    cbbb73d  Avoid double-allocation of outgoing packets
-    2ef9c1d  Start of zero-copy UDP thread
-
-2007-06-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8d09fcc  French translation from Damien Rannou
-    e7b260e  Updates for new binary protocol.
-    e19057f  Reserve space
-    a9008bd  New datastream. Breaks all kinds of things
-
-2007-06-28
-  Álvaro Manuel Recio Pérez <naproxeno@users.sourceforge.net>
-    e2a05bc  Updated Spanish translation
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    960fa0c  Forgot to rerun lupdate prior to release. Oops.
-
-2007-06-27
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    df7153c  More descriptive information for horizontal splitter.
-    50c7fc4  Bump version to 1.0.0
-
-2007-06-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3c57cab  Changelog update
-    df09fd7  Fix race in UDP thread creation
-    4351e29  Fixed demonizing on Linux
-    44e43ea  Daemonized murmur
-
-2007-06-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    df31097  Softmixed ALSA
-
-2007-06-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d0ade65  Start of mix-it-all-together ALSA support
-    1888f38  Add MMX based software mixer
-    38f5604  ALSA Config dialog
-    ff8266c  Fix crashbug on late UDP packets
-    28ad3e9  Try externals
-
-2007-06-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    dd39467  Festival under Linux
-
-2007-06-22
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    be21e28  Make new timeout code lock-safe on Qt 4.2. Oops.
-    77cf932  Add shortcut to quit application, and add standard shortcuts
-	     for a few other actions.
-
-2007-06-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8bdff0b  Really close on mainwindow close
-    c3851b5  Fix a few bugs, add -h to murmur
-
-2007-06-20
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1032f63  Train coding session. Connections have a timeout on the
-	     server. Config dialog will add a scrollbar if needed. ServerDB
-	     doesn't create deprecated tables. Ghost handling autokicks if
-	     old ip == new ip, even if unregistered. Added some more locks
-	     to the thread handling.
-
-2007-06-18
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f2eaeb2  Explicitly used queued connections for UDP thread.
-
-2007-06-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    0941196  Allow adding groups again
-
-2007-06-15
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e18767b  Option to expand all channels when connecting [Feture Req
-	     1619001]
-
-2007-06-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9ceb357  Make DBUS bindings conform to Qt standard, fix Introspection
-	     bugs
-    1d9675f  Binary linux server release script
-    f49b38b  QLatin1String
-    1dee004  More database updates
-
-2007-06-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4c237b2  Open connect dialog on program start
-    08edc1d  Last part of qstring fixes and some qt 4.3 fixes for win32.
-    9dafd37  Update copyrights to 2007
-    20d1771  Support fully static build of murmur
-    07531c5  QString::fromAscii
-    b20e0e1  Updated Ubuntu build scripts
-    477a706  Updated source-release scripts
-    dd06d83  Make .mumble.sqlite hidden
-    7f40e44  Remove deprecated Commands.txt
-    563f986  Multiple dbus sources
-
-2007-06-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    df89923  Clarified licensing of binaries
-    9577644  Initial multi-database support
-    8a1f436  Fast path UDP thread
-    057c270  Ensure correct include path
-    28d984b  Implemented all DBUS functions
-
-2007-06-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    500013b  update connections table when changing channel
-    73e91ad  DBus skeleton functions done, seems to work
-
-2007-06-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7ce31fd  Don't install DBus on win32
-    3f35825  Functional DBUS
-
-2007-05-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9a1016e  Install QtDBus on Win32, and go back to Qt 4.2 until 4.3 is
-	     actually released.
-
-2007-05-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7da815d  Initial DBus tests
-    8606909  Setting period size changes the pointed to int
-    74b1492  Dead code removal
-    f28d9ae  Restored the "Microphone Loudness" information.
-    19fdb33  SNR based voice detect
-
-2007-05-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    060701b  restored icons
-    10a17f9  Post-refactoring cleanups.
-    56bf13f  Speex is now a static library, don't include the old dll in
-	     the installer.
-    111ffe6  Linux build updates
-    3f3709e  Updates to speex build for Linux
-    3b0fa27  Refactoring. Updated licenses to 2007 versions.
-    4151f4b  Refactoring
-    3be4aec  No longer manually reset preprocessor loudness.
-
-2007-05-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    99a73c9  Updating to SVN Speex again. Missing voice detection.
-    a1ba433  Avoid contignous disk access in murmur, patch by buggerone
-    0d9f5d0  Applied ALSA patch from uz_ Made some minor corrections to
-	     installer in preparation for Qt4.3
-
-2007-03-03
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9ca4935  Bugfix: Iterating all connected players should only iterate
-	     players that are also logged on.
-
-2006-12-21
-  Kjetil Jørgensen <kjetijor@users.sourceforge.net>
-    61869c8  Connect-dialog available while connected. When connectiong
-	     while connected, an implicit disconnect will be issued first.
-	     4 whitespaces replaced with a tab
-
-2006-12-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    dd2bcee  Murmur should read .ini file before opening DB. [patch by
-	     buggerone]
-
-2006-12-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1caac42  Use .ini file in executable directory if it exists.
-
-2006-12-04
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c7caa3a  Don't translate registry strings.
-    373bd84  Use Qt 4.2's saveGeometry/restoreGeometry
-
-2006-12-02
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    897b097  Updated paths to match recommendations from Wiki
-
-2006-11-27
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e652e5d  Add firmumble.inc to tarball
-
-2006-11-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    cf88b1f  Added Russian translation. Added icon for LookConfig
-
-2006-11-24
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    bac023f  Updated config_shortcuts.png with better look and feel and
-	     added config_ui.png for evaluation by lead programmer.
-
-2006-11-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6f09e6b  Tiny typo correction.
-
-2006-11-18
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a213324  Add LookConfig
-
-2006-11-15
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3ebdd1c  Look&Feel Config. Skinning support.
-
-2006-11-03
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9a36950  Switch to use QSystemTrayIcon
-
-2006-10-30
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    b6482fa  Bitrate info in AudioDialog is now translated.
-    9cf751e  bump version
-    5e78a5d  Add version info for debian builds
-    344a677  Updated the speex build files for win32
-    3069c21  qt4 lrelease. *Sigh*
-    2bcd9bd  Changelog update
-    3965f15  Add lrelase for debian build
-    dd33406  Last batch of translations for 0.9.4
-
-2006-10-27
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a52b320  Don't save Win-only settings on non-win32.
-    73adf9c  Reduce initial buffer fill
-    85bdeb2  Edgy Eft
-
-2006-10-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e2e41e7  Negative user feedback on the new speex preprocessor; revert
-	     to last beta until it's finished.
-
-2006-10-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8bd4513  Fixing of audiostats for new speex.
-    01eb8dd  Support for new Speex preprocessor which doesn't export it's
-	     data.
-
-2006-10-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    7be4fc2  Updates for connectdialog in qt 4.2.
-
-2006-10-20
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    dc7980d  DirectInput workaround for keyboards with thousands of
-	     buttons.
-
-2006-10-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    34f0bee  Grammar fixes
-    5d83197  Even more translatable strings
-
-2006-10-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    071eca4  Add a few more strings for translation.
-
-2006-10-15
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    692a929  Updated translation settings.
-
-2006-10-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5fbf4c8  Minor typo in translation fixed.
-    37b6911  VersionCheck shouldn't bail if it can't read the binary.
-    3843209  German translation provided by Matthias Vogelgesang
-	     (m0ta@sf.net) Spanish translation provided by Álvaro M. Recio
-	     Pérez (naproxeno@sf.net) Added more strings to be translated
-	     based on patch by m0ta. Made translation files embedded in
-	     binary.
-    efda664  Working Globalkeys for X11
-
-2006-10-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4e24929  More globalkeys linux. Mostly messed up.
-    401abe9  Add Turkish translation
-
-2006-10-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c92a962  Start of shortcuts for X11
-
-2006-10-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d8f202b  Fix for new modelview in 4.2.0. Now possible to drop in root
-	     channel again.
-
-2006-10-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    338d506  Update for QT 4.2.0
-    74119e3  Update debug output slightly
-
-2006-10-04
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    cd69712  Murmur can now compile on compilers without Precompiled
-	     Headers.
-    6a07185  Split windows debug into separate file, add proper crashlog to
-	     the Console.txt
-
-2006-10-02
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    a27c690  New temporary icon for shortcuts as requested by lead
-	     developer.
-
-  Marius Grannæs <grannas@users.sourceforge.net>
-    099b268  Added a more informative description.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    349f013  Console.txt error logging and fixed some shortcut bugs
-    d7cdbc3  Spelling fixes
-    6ffa52e  Prepare for Spanish translation.
-    41b7ce9  Add icon to dialog, fix a few bugs
-    860469f  Dumped DI actions in favor of raw.. Which enables more fancy
-	     combinations, but DIA was standardized.. If only the config
-	     dialog had been prettier.
-    aac37d0  Overlay nothing/all/talking as config option
-    741e65b  Bump version
-
-2006-09-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f7ddd6a  ubuntu dapper build
-
-2006-09-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a889f99  Older speex libraries don't have speex_echo_ctl
-    11fd8d0  Add pch files to tarball and mention PCH in INSTALL
-
-2006-09-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c571563  Set sample rate for echo canceller
-
-2006-09-22
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5029ff8  Password resend
-    e6b43de  Updated Overlay error message.
-    55212bd  Changelog update
-    3f41e7d  SVN Changelog
-    7491c2e  2006 updates
-
-2006-09-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    af2452d  Overlay crash fix
-    d107d80  Cleaned up overlay interface and made it show mute/deafen
-	     status.
-    2a1bfcb  GUI for reconnect
-    8fa9adb  Allow connect directly to channels you're supressed in without
-	     crashing.
-    8718d9a  Automatic reconnect (GUI config missing)
-
-2006-09-20
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    62b3213  Third try for talking_alt.png icon color.
-    b34849e  Updated icons, to remove white border on _on&_off and to try a
-	     lighter shade on _alt.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    8fea9ce  TTS Volume adjustable
-
-2006-09-19
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    38398b6  Added muted_local.png and talking_alt.png after request from
-	     main developer.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    10ecf31  Added local mute and updated icons.
-    070248a  Fixed push-to-talk, which I broke. Fixed overlay for players
-	     in other channels.
-
-2006-09-18
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ef67602  Swapped privileges for Speak and AltSpeak
-    9c2e8a2  Various AltSpeak fixes. Fixed Deny-Speak-Implies-Mute on
-	     remembered channel freeze. Don't set high priority in debug
-	     client.
-    aa95258  write does not imply speak
-    e82c0f8  Support no-exception compile to avoid mingw lib dependency.
-    7e85259  AltSpeak
-
-2006-08-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ac4f1c5  Updated overlay to compile with newer DX SDK
-
-2006-08-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e8512e0  Updated defaults for 3D sound
-
-2006-06-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4bc4de8  The client now works on Linux, and FMOD is no longer used.
-    dcff32d  Removed FMOD from distribution
-    412ff94  TrayIcon should hide
-    ec35202  Poll() based ALSA, sigio crashes X
-    64f97f7  Ubtuntu has ancient Speex.
-    23301d0  Initial ALSA Skeleton
-
-2006-05-31
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    388b34a  Use ALSA on Linux
-    30c2bed  Compiles on Linux again
-
-2006-05-27
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a850488  QT 4.1.3 updates
-
-2006-05-05
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c5f5f18  Updates for new speex jitter buffer
-
-2006-03-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2c84f58  WoW 1.10
-    d4dd9ca  Minor updates
-
-2006-03-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    815e884  UNIX murmur compile fixes
-    5148d0b  Qt 4.1.1 Allow TCP Compability mode (with TCP_NODELAY) for
-	     people with seriously broken ISPs.
-
-2006-03-01
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    fa9df03  No longer default export of wow plugin, as it's out of date.
-    229de2c  Try EF type of service first. Also, more conservative defaults
-	     for audio settings, as the current defaults cause problems on
-	     most AC97 onboard cards.
-
-2006-02-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9290b59  Server IP TOS
-    09b5cf3  IP Type of Service
-
-2006-01-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e2112d1  Longer AudioHold
-
-2006-01-18
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    cbaa6dd  Textfile changes for the Linux release.
-    06a6817  Initial Linux testing work
-    13e0471  missing distfiles
-
-2006-01-17
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2e17851  Linux compiles clean
-    dccc416  Forgot to check in pch headers
-    7efd9c5  Fixed FMOD
-    8a5165f  FMOD support, not working yet though.
-
-2006-01-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a1553af  WoW 1.9.1 updates
-
-2005-12-31
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e190a91  Precompiled header support
-
-2005-12-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    4a934a8  Require 4.1.0 for mumble client, as that seems to work without
-	     patching Qt (which was required for 4.0.1)
-    3b910c6  Support max # users limitation on server.
-
-2005-12-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1ba4259  Update installer for Qt 4.1.0
-    4ef384a  Qt 4.1.0 compilation fixes.
-    ca3c73c  Remove support for doppler effects; only works on a few
-	     soundcards, and makes sound horrible for anyone else that
-	     tries to enable it.
-
-2005-12-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f6753d1  Create DSound buffer in same thread it's used, and let buffers
-	     linger for 5 secs before destroying them; some soundcards
-	     don't handle buffer creation very well.
-
-2005-12-20
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    662e8fd  wow support. Fixed a bug with some hardware 3d cards.
-
-2005-12-19
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ec0bc48  Update version to 0.9.3
-
-2005-12-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1bcf0d9  average bandwidth over short time to avoid being kicked for
-	     VBR spike
-    a531aaf  Bugfixing bandwidth limits
-    c02e331  Maximum bandwidth setting serverside.
-
-2005-12-15
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    50e297c  Allow _ in email addresses (darn@the-space.net)
-
-2005-12-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3a9374c  Visualize all parts of the echo weights.
-    d0f2538  rename from libspeex.dll to just speex.dll
-
-2005-12-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ae2fcbd  Updates to enable compilation on Linux, even if it's missing
-	     features.
-
-2005-12-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d94f13b  Enable ASIO with 32bit input. Needs verification.
-    ccd63ed  Visualization of echo canceller, and some testing.. Seems the
-	     weights get set non-optimally.
-
-2005-12-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1080265  Support graceful failure of loading the overlay (For Win2k
-	     support)
-
-2005-12-04
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    ba112bc  Update INSTALL to reflect we now require Boost
-    7ac4637  Use boost::shared_ptr<> for objects shared between threads
-	     that we need to delete(). (AudioInput and Output mostly).
-
-2005-12-03
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    543b19b  Visualize power spectrum of input and noise estimate.
-    63179b9  Add fftpwrap for speex compile
-
-2005-11-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    99d3749  Ping support
-
-2005-10-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a2e714a  make "Toggle overlay" a tristate; show only talking, show all
-	     or show none.
-
-2005-10-13
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    084d465  Banlist editor.
-    6afe64a  Removed TCP voice support; with Nagle it will always be laggy.
-	     Added message to query/set banlist. Reordered message ids.
-
-2005-10-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    756ba78  Banlist (serverside).
-    c4dbb06  Bump version
-    819ff2f  Rename player support.
-
-2005-10-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    753f26f  Set sId=0 when closing
-
-2005-10-05
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    d339b2b  New icons for ASIO and OSD settings
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a414c4c  Audio bugfixing. Added new icons to code.
-    97b0ea1  Fix for multispeex-packet in UDP mode.
-    1a6e228  Immediate update of overlay on parameter change
-
-2005-10-04
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    fa62712  Debugging of ~sub
-    51555bf  sub,a,b,c groups
-    09c24ee  Config for overlay.
-    48d79e9  Make hooking less resource intensive on system.
-
-2005-10-03
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    00f231b  Overlay.
-
-2005-10-01
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    e21d62f  Bold speec probability when we would transmit. Fix the SSE
-	     detection.
-    87b8010  Tooltips & whatsthis for the bitrate in AudioConfig. Bail out
-	     if SSE not detected (as we ship binaries which require it).
-    4bfb790  Variable number of frames / packet
-    cda5095  Various bugfixes. Added metakey for shortcuts, to join channel
-	     instead of talk-to channel. Update to match timestamp in
-	     jitterbuffer in speex.
-    e7eae88  Add uninstaller to Add/Remove programs in control panel.
-
-2005-09-30
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f0dc0a1  Example of how to link murmur to other servers, using qstat
-    7e15f99  Fix "in" and "out" groups.
-    219d946  More command interface.
-    f778342  Serverside commands through SQL.
-    f2233fd  Experimentation with non-actionmapped directinput; will be a
-	     lot of GUI work though. Added push-to-link support to the
-	     server.
-    bd5f2d4  Version to 0.9.1
-    dd60a2b  Channel linking, part 2.
-
-2005-09-29
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2c12d88  Channel linking, part 1.
-    2382f40  Cache ACL lookups.
-    c0f9577  Kick off ghost connections, refuse connections with same name
-	     for anonymous users.
-    7f014bc  Connection table in sqlite
-    3478060  Include murmur.ini
-    3ab26fe  Use class references in headers instead of .h files, reduces
-	     dependency path to more sane levels.
-
-2005-09-28
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    faceb19  Move config into registrars.
-    62dd4ef  Remove ACLs when removing channel
-
-2005-09-27
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    d43f59e  New icon for channel linked...
-    f026171  Fixed authenticated and changed R shape into A shape. New
-	     channel icon
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a035a3c  Fix flag display
-    6794972  lowercase groupnames
-    155d342  Massively reduce debugging statements.
-    4c7a6f7  PlayerModel fixes, work around bug in QSet operator ==
-    4d52920  Doubleclick to join channel
-    cb84309  Rewrote the player model, should be more "in tune" with Qts
-	     method of referencing items now. Made the iconlist in the
-	     config dialog resizable. Updated "reg" to "auth" in a few
-	     places.
-
-2005-09-26
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3c55c1f  qPrintable()
-    6f4c0b6  Fix tree
-    e705eb1  Bugfixing session
-    66e90fb  Tooltips and whatsthis for ACL part of ACLEditor.
-
-2005-09-25
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5fc1e91  Have long strings in "" in .ini files.
-    aa1d309  .ini files for the server, updating documentation to reflect
-	     this.
-    93fe6b8  Functional ACL/Group editor. Let the bugfest commence.
-    ff614da  ACLEditor, ACL actions started, server bugfixes.
-    5c24663  ACLEditor, GUI elements done, missing action-logic.
-
-2005-09-24
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    620f4dd  ACLEditor, server part.
-    5ec2fcf  Bugfixes from testing (release of 3d buffer, saving of
-	     transmit from settings, better rolloff defaults, smaller
-	     indentation for the channelview).
-
-2005-09-23
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3e52eaa  Warning fixes.
-    fdde84f  On channel creation, add creator to "admin" group.
-    7f73d73  Channel ACLs and groups. (Still missing a edit function)
-
-2005-09-22
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c1f3446  Update version string
-    e27b074  Preliminary support for channels
-
-2005-09-21
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    3efd365  Only check if registered player if there ARE registered
-	     players. Without any, everybody is priviliged.
-    ae8b33e  like =
-
-2005-09-20
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    6881c4d  Made icon slightly fatter...
-    e589da5  New icon for registered users
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    578978a  Slightly more agressive defaults, sounds better for most
-	     people.
-    f23d9f7  Slightly more permissive namecheck
-    15bc047  Only registered users can mute/deafen/kick others
-    540b5cc  And remove the authcode used...
-    d0df397  Notify use when it succeeded as well.
-    eb41fcf  Registration script.
-    2691157  Empty tts should not be spoken.
-    0548bfe  Welcome messages.
-    a465ab4  Per-player password. Persistant storage on server. Minor ASIO
-	     fixes.
-
-2005-09-19
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9540220  Final part of UDP implementation.
-    62f573b  UDP bugfixes on server.
-    b36bf6d  Version 0.3.2. First part of UDP support.
-    46d1a8d  No console in release!
-    3ca1264  Provide feedback if an error occured.
-    1072c99  Minimize to tray.
-
-2005-09-18
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a482c8d  Start of unix compiles for mumble
-    00a2599  Spelling fixes
-    9080126  Typo in MainWindow fixed. Made the BF2 plugin slightly more
-	     picky about what values it accepts.
-    7798861  When sampling speakers, encode the cleaned output, not the
-	     original. Add clean signal power to the audio stats.
-    6f0577d  About Speex dialog, still waiting for the icon.
-    419e2e5  Echo Canceller for inputs that can sample the speakers.
-    de4b674  ASIO Audio Input
-
-2005-09-16
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    67e3d85  Single-threaded directsound output
-    3d9e12b  Change version to 0.3.1
-    180e4b5  Don't send implied messages anymore, the client already knows
-    75cf4ea  Send the player object to AudioOutputPlayer, not just the sId.
-    95d066d  Fix the versionchecker so it doesn't delete itself before
-	     showing the message.
-    7250279  Fixups for release script
-    2cdf489  Failing to open DirectSound shouldn't be fatal, just a
-	     messagebox error Add Apply button to the config screen
-    9bc83a6  Fix a few missing Q_OBJECT
-    ef307bd  Fixed a few bugs with positional audio Made a lot more member
-	     functions const Moved playerId to Global, it didn't belong in
-	     MainWindow
-
-2005-09-15
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    8fced49  Pixmap for Game plugin screen
-
-2005-09-14
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6225c04  Bugfixes for positional Audio Added a Center Position hotkey,
-	     to force yourself and all others to a center audio position,
-	     usefull to give commands to the whole group.
-    eb7e1be  Positional Audio Plugins Ability to switch input/output device
-	     without restart Version changed to 0.3.0cvs
-
-2005-09-13
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    9f73177  Pixmaps for config windows.
-
-  Kjetil Jørgensen <kjetijor@users.sourceforge.net>
-    fa4114d  Added (unfinished) config dialog for DX Audio.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a5391bb  Use selected device from DXConfig. Still needs to close/reopen
-	     on ConfigDialog exit.
-    b936144  New icons used in config
-    2412c5e  Adjustable jitter buffer initial size
-    ec3af68  More tooltips and whatsthis
-    23bd3a6  ToolTips and WhatsThis for rest of application.
-
-2005-09-12
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    f7254f3  Global Log class, which remembers what should be logged to
-	     console and TTS Fixed infinite selfrecursion in MainWindow,
-	     the application now actually exits when you close it instead
-	     of silently crashing
-    b8fc8f4  Make versionchecking a userinitiated action
-    70df36b  Add lots of detailed tooltips. Our first piece of
-	     documentation.
-    85825a8  Finish basic config widget for audio Added config options for
-	     compression and amplification Moved a few menu things into the
-	     config Keep user settings in Settings and statevars in Global
-    fadd3fa  When using nested layouts, Qt barfs if a widget already has a
-	     parent, so make sure it doesn't.
-    e465ae6  Fixed crash bug if opening player menu while unconnected
-    6b49928  Centralized configuration dialog
-
-2005-09-11
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    5d6a49d  Switch a few QMutex to QReadWriteLock, and start using
-	     QMutexLocker, QReadLocker etc
-    6cf17df  Squashed 3 QT bugs, submitted patches, and can now use them in
-	     our application.
-    90e84d4  DTX transmission support
-    6c9df68  Export symbol files for debugging of release builds
-    9d7fa85  Window title for the audiostats
-    6ed4a96  Set thread priorities; gui is LOW priority, but as we can't
-	     set it low we set everything else high.
-
-2005-09-10
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    04ae86a  Status icons for user window
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d290745  Audio statistics window
-    beb7b04  Make list of players sorted by name and make local user bold
-    6a5e9cc  Offset status icons by 1 pixel
-    c5c9848  Turn cvs log into CHANGES, and restart CHANGES to get rid of
-	     cvs log messages for it
-
-2005-09-09
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    093edde  recent updates
-    613fec9  Deaf implies Mute logic in Server, and add ability to
-	     mute/deaf players again (added PlayerModel::getPlayer from
-	     index)
-    1b8ac3e  QHash, foreach() and STL iterators. What ever gave me the idea
-	     QMap was a hash to begin with?
-    3fc5d6e  Model-player-list. Work in progress
-
-2005-09-08
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    021d58b  Compile bugs in VersionCheck, update version in About dialog
-	     as well
-    88a69ca  Change versions to 0.2.3cvs
-    1895db1  Avoid conflicts for MUMBLE_RELEASE
-    9fb7f82  Use new Connection slots for Server Make server log include
-	     date/time
-    c01e34f  Discover the magic of QObject::sender() and fix some leftover
-	     bugs from the refactorization
-    be1a64d  Refactor
-    c325e72  Oops, we're working on 0.2.2, not 0.2.1 which is already
-	     released
-    84ca9db  Remove compile warnings, and there sure were a lot of them
-	     Work around -Wshadow bug in gcc
-    dfe76ed  Turn g_ into Global, part 2
-    870ce04  Turn g_ into struct Global, part 1
-    4d6ba18  Remove m_ from everything
-
-2005-09-07
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    d82af08  Track both initiator and victim of actions
-    3e948bb  Make all messageboxes use "Mumble" as the title, to follow the
-	     GUI guides
-    4ce9b9b  Check version against sourceforge
-    15fc873  Show correct version in title
-    2d92fb8  Separate log window
-    8658883  Reduce dependencies in MainWindow.h
-    3475fc3  Add changes file Add persistant storage of server lists
-    9a73682  Increase default volume gain
-    a9cf5fb  Commit database
-    3a71488  Configure database for persistent storage
-
-2005-09-06
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    c53fbf9  **** the password field
-    5b86dd3  Fix args for window title
-    ca7fec9  Exchange and display selfmute/selfdeaf
-    a4289cf  Audio Input/Output registration
-    465b636  Support self-mute/self-deafen. Start support for input/output
-	     configs
-
-2005-09-05
-  Martin Skilnand <cybknight@users.sourceforge.net>
-    0705156  Temporary icon for alpha and beta stage
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    6be61b3  config=profile to keep debug info for external profilers
-    5206193  Make the buffer what we need
-    3006847  Make it possible to abort connections, and display self-talk
-	     same as the others
-    b140df7  More verifications
-    1814bb3  Make ids recyclable over time instead of immediately, and
-	     validate that the "target" of messages is actually valid.
-    c4a0940  The FIRST loaded icon will be the appicon. Make sure it's the
-	     smallest. This really is buggy, Qt!
-    f2754d3  MainWindow actiongroup for voicetrigger fixed build system
-	     fixed to use proper conditionals
-    1cd90fe  Release build should NOT have the damn console!
-    0e42898  Release script fixes
-    de8d70f  Basic connect dialog
-    aca3f3c  About dialog with icon
-    f08f825  Need all 3 icon sizes
-    6c5e300  Hopefully binary?
-    ddaf56b  Fixed...
-    1ea5a6c  .. but Qt can't use windows resources to store images.
-    d52f78b  Added readme to installer Fixed crashbug in Server Made
-	     connection only emit disconnected once
-    6e5f88e  Add readme
-    61ae1a1  Global settings and data exchange
-    b1c2795  Shortcuts for muting self, removed compile warnings
-    7c3ae17  Text-To-Speech
-    ef77c9c  Actually poll the DirectInput devices too.
-    05acf99  Global shortcuts
-
-2005-09-04
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    2ab6c96  Handle authentication, rejections and propagated error
-	     messages
-    ce7ae41  Propagate connection errors for display
-    013fdea  When disconnecting, just signal the thread that it's time to
-	     end, don't yank the socket or QT complains
-    b840521  Support logging in with pw
-    d7b7e9b  handle authenticate/reject in networkToMessage
-    4818018  Proper connect dialog
-    9e57b20  Use compression for zips
-    7564d64  Add scripts to release source code
-    5d9d54a  Versions in projects
-    65b705b  debug_and_release
-    7e2405a  Because they changed the signal in Qt 4.0.1
-    3b770e6  Why doesn't closed buffered sockets ever error() on
-	     disconnection?
-    bf304fe  Encode and display "speaking" state
-    37c10ca  Accept some paramenters for murmur, to enable e.g. local loop
-	     test
-    1955a89  Update libspeex makefile to match dynamic libs Move license
-	     agreements to installer instead of embedded in program
-    d99273e  License files for qt and speex for installer
-    b46b0f6  Dynamic release, only need licenses in installer/as files
-
-2005-09-03
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    9c3c797  Forgot to checkin the new about dialog. Ahem.
-    2af8e4b  Since we depend on mingw dlls anyway, switch to full dynamic
-	     linking and add an installer
-    87c0e0b  remove debug output
-    aa110d2  Kick
-    8feb561  Clean up UI, implement kick, remove debug for missing
-	     validators
-    f43a4e9  Ooops, that was a debug statement
-    37bc1d6  DTX is broken
-    a9b67d1  Server testing
-    3d67f4c  Send deaf/mute on connect
-
-2005-09-02
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1e818ff  Player Mute/Deaf, global Player
-    c31108e  DTX Support Make list of players at least somewhat usefull
-    dc3e802  Add sequence to speex packet
-    fdda9c3  Fix memory leak, it's now safe to pass stack-allocated
-	     messages
-    8f10abc  About box, licenses included, and clean build in mingw
-    f21fdf7  Let's try licenses again...
-    3e4fc1b  licenses for about dialog
-    81623dd  First functional audio test
-    d7a47d9  connect() typo, and increased AGC 50%
-    dd94e9d  Pass QByteArrays instead of messages, much cleaner with
-	     refcounts
-    3b4b165  Initial DX Audio
-
-2005-09-01
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    a8e03ea  Initial audio framework
-    828a022  Shorten down messages by making id and type 1 byte each
-    daa74ad  actually do something with messages
-    911ea20  debugging network
-    e1bf768  First test of network protocol
-    d9d814b  Disconnect on errors, don't send disconnect unless
-	     authenticated
-    aaf9366  Compile fixed
-    29e161f  virtual destructor (to avoid nag)
-    0767e88  Initial version of the server
-    12acf13  Network structures
-    dda3954  More data checking
-    d51c2f6  Initial datastructures
-
-2005-08-31
-  (no author) <(no author)@05730e5d-ab1b-0410-a4ac-84af385074fa>
-    08f0e1d  New repository initialized by cvs2svn.
-
-  Thorvald Natvig <slicer@users.sourceforge.net>
-    1a04a2a  Initial setup of project
-
--- mumble-1.2.3-87-gf7d8711.orig/compiler.pri
+++ mumble-1.2.3-87-gf7d8711/compiler.pri
@@ -4,7 +4,7 @@ win32 {
 	# Import dependency paths for windows
 	include(winpaths_default.pri)
 
-	INCLUDEPATH *= "$$BOOST_PATH/include/boost-1_46_1/"
+	INCLUDEPATH *= "$$BOOST_PATH/include/boost-1_44/"
 	QMAKE_LIBDIR *= "$$OPENSSL_PATH/lib" "$$LIBSNDFILE_PATH"
 	INCLUDEPATH *= "$$OPENSSL_PATH/include" "$$LIBSNDFILE_PATH/include"
 	CONFIG(intelcpp) {
@@ -118,12 +118,12 @@ unix:!macx {
 }
 
 macx {
-	INCLUDEPATH *= $$(MUMBLE_PREFIX)/include/boost_1_45_0/
+	INCLUDEPATH *= $$(MUMBLE_PREFIX)/include/boost_1_44_0/
 	INCLUDEPATH *= $$(MUMBLE_PREFIX)/include
 	QMAKE_LIBDIR *= $$(MUMBLE_PREFIX)/lib
 
 	XCODE_PATH=$$system(xcode-select -print-path)
-	QMAKE_MAC_SDK = $${XCODE_PATH}/SDKs/MacOSX10.5.sdk
+	QMAKE_MAC_SDK = $${XCODE_PATH}/SDKs/MacOSX10.6.sdk
 
 	QMAKE_CC = $${XCODE_PATH}/usr/bin/gcc-4.2
 	QMAKE_CXX = $${XCODE_PATH}/usr/bin/g++-4.2
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur.html
@@ -0,0 +1,703 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="index.html">Home</a></td>
+                            <td><a href="Murmur/ACL.html">Next</a></td>
+                            <td><a href="_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">module Murmur</h3>
+        <h2>Class Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/Tree.html#Tree">Tree</a></dt>
+            <dd>
+                User and subchannel state.</dd>
+        </dl>
+        <h2>Interface Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/Meta.html#Meta">Meta</a></dt>
+            <dd>
+                This is the meta interface.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/MetaCallback.html#MetaCallback">MetaCallback</a></dt>
+            <dd>
+                Callback interface for Meta.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#Server">Server</a></dt>
+            <dd>
+                Per-server interface.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/ServerAuthenticator.html#ServerAuthenticator">ServerAuthenticator</a></dt>
+            <dd>
+                Callback interface for server authentication.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/ServerCallback.html#ServerCallback">ServerCallback</a></dt>
+            <dd>
+                Callback interface for servers.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/ServerContextCallback.html#ServerContextCallback">ServerContextCallback</a></dt>
+            <dd>
+                Callback interface for context actions.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/ServerUpdatingAuthenticator.html#ServerUpdatingAuthenticator">ServerUpdatingAuthenticator</a></dt>
+            <dd>
+                Callback interface for server authentication and registration.</dd>
+        </dl>
+        <h2>Exception Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/InvalidCallbackException.html">InvalidCallbackException</a></dt>
+            <dd>
+                This is thrown when you supply an invalid callback.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/InvalidChannelException.html">InvalidChannelException</a></dt>
+            <dd>
+                This is thrown when you specify an invalid channel id.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/InvalidSecretException.html">InvalidSecretException</a></dt>
+            <dd>
+                This is thrown when you supply the wrong secret in the calling context.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/InvalidServerException.html">InvalidServerException</a></dt>
+            <dd>
+                This is thrown when you try to do an operation on a server that does not exist.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/InvalidSessionException.html">InvalidSessionException</a></dt>
+            <dd>
+                This is thrown when you specify an invalid session.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/InvalidTextureException.html">InvalidTextureException</a></dt>
+            <dd>
+                This is thrown when you try to set an invalid texture.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/InvalidUserException.html">InvalidUserException</a></dt>
+            <dd>
+                This is thrown when you specify an invalid userid.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/MurmurException.html">MurmurException</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/ServerBootedException.html">ServerBootedException</a></dt>
+            <dd>
+                This happens if you try to fetch user or channel state on a stopped server, if you try to stop an already stopped server or start an already started server.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/ServerFailureException.html">ServerFailureException</a></dt>
+            <dd>
+                This is thrown if {@link Server.start} fails, and should generally be the cause for some concern.</dd>
+        </dl>
+        <h2>Structure Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/ACL.html">ACL</a></dt>
+            <dd>
+                Access Control List for a channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/Ban.html">Ban</a></dt>
+            <dd>
+                A single ip mask for a ban.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/Channel.html">Channel</a></dt>
+            <dd>
+                A channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/Group.html">Group</a></dt>
+            <dd>
+                A group.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/LogEntry.html">LogEntry</a></dt>
+            <dd>
+                A entry in the log.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/User.html">User</a></dt>
+            <dd>
+                A connected user.</dd>
+        </dl>
+        <h2>Sequence Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#ACLList">ACLList</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#BanList">BanList</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#CertificateDer">CertificateDer</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#CertificateList">CertificateList</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#ChannelList">ChannelList</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#GroupList">GroupList</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#GroupNameList">GroupNameList</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#IdList">IdList</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#IntList">IntList</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#LogList">LogList</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#NameList">NameList</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#NetAddress">NetAddress</a></dt>
+            <dd>
+                A network address in IPv6 format.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#ServerList">ServerList</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#Texture">Texture</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#TreeList">TreeList</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#UserList">UserList</a></dt>
+            <dd>
+                </dd>
+        </dl>
+        <h2>Dictionary Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#ChannelMap">ChannelMap</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#ConfigMap">ConfigMap</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#IdMap">IdMap</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#NameMap">NameMap</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#UserInfoMap">UserInfoMap</a></dt>
+            <dd>
+                User information map.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#UserMap">UserMap</a></dt>
+            <dd>
+                </dd>
+        </dl>
+        <h2>Constant Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#ContextChannel">ContextChannel</a></dt>
+            <dd>
+                Context for actions in the Channel menu.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#ContextServer">ContextServer</a></dt>
+            <dd>
+                Context for actions in the Server menu.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#ContextUser">ContextUser</a></dt>
+            <dd>
+                Context for actions in the User menu.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionBan">PermissionBan</a></dt>
+            <dd>
+                Ban user from server.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionEnter">PermissionEnter</a></dt>
+            <dd>
+                Enter channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionKick">PermissionKick</a></dt>
+            <dd>
+                Kick user from server.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionLinkChannel">PermissionLinkChannel</a></dt>
+            <dd>
+                Link this channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionMakeChannel">PermissionMakeChannel</a></dt>
+            <dd>
+                Make new channel as a subchannel of this channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionMakeTempChannel">PermissionMakeTempChannel</a></dt>
+            <dd>
+                Make new temporary channel as a subchannel of this channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionMove">PermissionMove</a></dt>
+            <dd>
+                Move users from channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionMuteDeafen">PermissionMuteDeafen</a></dt>
+            <dd>
+                Mute and deafen other users in this channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionRegister">PermissionRegister</a></dt>
+            <dd>
+                Register and unregister users.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionRegisterSelf">PermissionRegisterSelf</a></dt>
+            <dd>
+                Register and unregister users.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionSpeak">PermissionSpeak</a></dt>
+            <dd>
+                Speak in channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionTextMessage">PermissionTextMessage</a></dt>
+            <dd>
+                Send text message to channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionTraverse">PermissionTraverse</a></dt>
+            <dd>
+                Traverse channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionWhisper">PermissionWhisper</a></dt>
+            <dd>
+                Whisper to channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#PermissionWrite">PermissionWrite</a></dt>
+            <dd>
+                Write access to channel control.</dd>
+        </dl>
+        <h2>Enumeration Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/ChannelInfo.html">ChannelInfo</a></dt>
+            <dd>
+                </dd>
+            <dt class="Symbol"><a class="Symbol" href="Murmur/UserInfo.html">UserInfo</a></dt>
+            <dd>
+                </dd>
+        </dl>
+        <h2>Sequences</h2>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;<a class="Symbol" href="Murmur/ACL.html">ACL</a>&gt; <a class="Symbol" name="ACLList">ACLList</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getACL">Server::getACL</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#setACL">Server::setACL</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;<a class="Symbol" href="Murmur/Ban.html">Ban</a>&gt; <a class="Symbol" name="BanList">BanList</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getBans">Server::getBans</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#setBans">Server::setBans</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;byte&gt; <a class="Symbol" name="CertificateDer">CertificateDer</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur.html#CertificateList">CertificateList</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;<a class="Symbol" href="Murmur.html#CertificateDer">CertificateDer</a>&gt; <a class="Symbol" name="CertificateList">CertificateList</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getCertificateList">Server::getCertificateList</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/ServerAuthenticator.html#authenticate">ServerAuthenticator::authenticate</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;<a class="Symbol" href="Murmur/Channel.html">Channel</a>&gt; <a class="Symbol" name="ChannelList">ChannelList</a></span>
+            </dt>
+            <dd></dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;<a class="Symbol" href="Murmur/Group.html">Group</a>&gt; <a class="Symbol" name="GroupList">GroupList</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getACL">Server::getACL</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#setACL">Server::setACL</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;string&gt; <a class="Symbol" name="GroupNameList">GroupNameList</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/ServerAuthenticator.html#authenticate">ServerAuthenticator::authenticate</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;int&gt; <a class="Symbol" name="IdList">IdList</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getUserNames">Server::getUserNames</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;int&gt; <a class="Symbol" name="IntList">IntList</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Channel.html#links">Channel::links</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Group.html#add">Group::add</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Group.html#members">Group::members</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Group.html#remove">Group::remove</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;<a class="Symbol" href="Murmur/LogEntry.html">LogEntry</a>&gt; <a class="Symbol" name="LogList">LogList</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getLog">Server::getLog</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;string&gt; <a class="Symbol" name="NameList">NameList</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getUserIds">Server::getUserIds</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">[ "python:seq:tuple" ]
+                    sequence&lt;byte&gt; <a class="Symbol" name="NetAddress">NetAddress</a></span>
+            </dt>
+            <dd>
+                <p>
+A network address in IPv6 format.</p>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Ban.html#address">Ban::address</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/User.html#address">User::address</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;<a class="Symbol" href="Murmur/Server.html">Server</a>*&gt; <a class="Symbol" name="ServerList">ServerList</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Meta.html#getAllServers">Meta::getAllServers</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Meta.html#getBootedServers">Meta::getBootedServers</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;byte&gt; <a class="Symbol" name="Texture">Texture</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getTexture">Server::getTexture</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#setTexture">Server::setTexture</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/ServerAuthenticator.html#idToTexture">ServerAuthenticator::idToTexture</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/ServerUpdatingAuthenticator.html#setTexture">ServerUpdatingAuthenticator::setTexture</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;<a class="Symbol" href="Murmur/Tree.html">Tree</a>&gt; <a class="Symbol" name="TreeList">TreeList</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Tree.html#children">Tree::children</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">sequence&lt;<a class="Symbol" href="Murmur/User.html">User</a>&gt; <a class="Symbol" name="UserList">UserList</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Tree.html#users">Tree::users</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <h2>Dictionaries</h2>
+        <dl>
+            <dt>
+                <span class="Synopsis">dictionary&lt;int, <a class="Symbol" href="Murmur/Channel.html">Channel</a>&gt; <a class="Symbol" name="ChannelMap">ChannelMap</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getChannels">Server::getChannels</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">dictionary&lt;string, string&gt; <a class="Symbol" name="ConfigMap">ConfigMap</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Meta.html#getDefaultConf">Meta::getDefaultConf</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getAllConf">Server::getAllConf</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">dictionary&lt;string, int&gt; <a class="Symbol" name="IdMap">IdMap</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getUserIds">Server::getUserIds</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">dictionary&lt;int, string&gt; <a class="Symbol" name="NameMap">NameMap</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getRegisteredUsers">Server::getRegisteredUsers</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getUserNames">Server::getUserNames</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/ServerUpdatingAuthenticator.html#getRegisteredUsers">ServerUpdatingAuthenticator::getRegisteredUsers</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">dictionary&lt;<a class="Symbol" href="Murmur/UserInfo.html">UserInfo</a>, string&gt; <a class="Symbol" name="UserInfoMap">UserInfoMap</a></span>
+            </dt>
+            <dd>
+                <p>
+User information map.
+Older versions of ice-php can't handle enums as keys. If you are using one of these, replace 'UserInfo' with 'byte'.</p>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getRegistration">Server::getRegistration</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#registerUser">Server::registerUser</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#updateRegistration">Server::updateRegistration</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/ServerAuthenticator.html#getInfo">ServerAuthenticator::getInfo</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/ServerUpdatingAuthenticator.html#registerUser">ServerUpdatingAuthenticator::registerUser</a></dt>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/ServerUpdatingAuthenticator.html#setInfo">ServerUpdatingAuthenticator::setInfo</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">dictionary&lt;int, <a class="Symbol" href="Murmur/User.html">User</a>&gt; <a class="Symbol" name="UserMap">UserMap</a></span>
+            </dt>
+            <dd>
+                <h4>Used By</h4>
+                <dl>
+                    <dt class="Symbol"><a class="Symbol" href="Murmur/Server.html#getUsers">Server::getUsers</a></dt>
+                </dl>
+            </dd>
+        </dl>
+        <h2>Constants</h2>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="ContextChannel">ContextChannel</a> = 0x02;</span>
+            </dt>
+            <dd>
+                <p>
+Context for actions in the Channel menu.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="ContextServer">ContextServer</a> = 0x01;</span>
+            </dt>
+            <dd>
+                <p>
+Context for actions in the Server menu.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="ContextUser">ContextUser</a> = 0x04;</span>
+            </dt>
+            <dd>
+                <p>
+Context for actions in the User menu.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionBan">PermissionBan</a> = 0x20000;</span>
+            </dt>
+            <dd>
+                <p>
+Ban user from server. Only valid on root channel.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionEnter">PermissionEnter</a> = 0x04;</span>
+            </dt>
+            <dd>
+                <p>
+Enter channel.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionKick">PermissionKick</a> = 0x10000;</span>
+            </dt>
+            <dd>
+                <p>
+Kick user from server. Only valid on root channel.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionLinkChannel">PermissionLinkChannel</a> = 0x80;</span>
+            </dt>
+            <dd>
+                <p>
+Link this channel. You need this permission in both the source and destination channel to link channels, or in either channel to unlink them.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionMakeChannel">PermissionMakeChannel</a> = 0x40;</span>
+            </dt>
+            <dd>
+                <p>
+Make new channel as a subchannel of this channel.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionMakeTempChannel">PermissionMakeTempChannel</a> = 0x400;</span>
+            </dt>
+            <dd>
+                <p>
+Make new temporary channel as a subchannel of this channel.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionMove">PermissionMove</a> = 0x20;</span>
+            </dt>
+            <dd>
+                <p>
+Move users from channel. You need this permission in both the source and destination channel to move another user.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionMuteDeafen">PermissionMuteDeafen</a> = 0x10;</span>
+            </dt>
+            <dd>
+                <p>
+Mute and deafen other users in this channel.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionRegister">PermissionRegister</a> = 0x40000;</span>
+            </dt>
+            <dd>
+                <p>
+Register and unregister users. Only valid on root channel.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionRegisterSelf">PermissionRegisterSelf</a> = 0x80000;</span>
+            </dt>
+            <dd>
+                <p>
+Register and unregister users. Only valid on root channel.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionSpeak">PermissionSpeak</a> = 0x08;</span>
+            </dt>
+            <dd>
+                <p>
+Speak in channel.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionTextMessage">PermissionTextMessage</a> = 0x200;</span>
+            </dt>
+            <dd>
+                <p>
+Send text message to channel.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionTraverse">PermissionTraverse</a> = 0x02;</span>
+            </dt>
+            <dd>
+                <p>
+Traverse channel. Without this, a client cannot reach subchannels, no matter which privileges he has there.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionWhisper">PermissionWhisper</a> = 0x100;</span>
+            </dt>
+            <dd>
+                <p>
+Whisper to channel. This is different from Speak, so you can set up different permissions.</p>
+            </dd>
+        </dl>
+        <dl>
+            <dt>
+                <span class="Synopsis">const int <a class="Symbol" name="PermissionWrite">PermissionWrite</a> = 0x01;</span>
+            </dt>
+            <dd>
+                <p>
+Write access to channel control. Implies all other permissions (except Speak).</p>
+            </dd>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="index.html">Home</a></td>
+                            <td><a href="Murmur/ACL.html">Next</a></td>
+                            <td><a href="_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/_sindex.html
@@ -0,0 +1,508 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Slice API Index
+        </title>
+    </head>
+    <body>
+        <h1>Slice API Index</h1>
+        <table class="ExpandCollapseButtonTable">
+            <tbody>
+                <tr>
+                    <td><button type="button" id="ExpandAllButton">Expand All</button></td>
+                    <td><button type="button" id="CollapseAllButton">Collapse All</button></td>
+                </tr>
+            </tbody>
+        </table>
+        <ul id="SymbolTree">
+            <li>
+                <a class="Symbol" href="Murmur.html">Murmur</a>
+                <ul>
+                    <li>
+                        <a class="Symbol" href="Murmur/ACL.html">ACL</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/ACL.html#allow">allow</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ACL.html#applyHere">applyHere</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ACL.html#applySubs">applySubs</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ACL.html#deny">deny</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ACL.html#group">group</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ACL.html#inherited">inherited</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ACL.html#userid">userid</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#ACLList">ACLList</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/Ban.html">Ban</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/Ban.html#address">address</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Ban.html#bits">bits</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Ban.html#duration">duration</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Ban.html#hash">hash</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Ban.html#name">name</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Ban.html#reason">reason</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Ban.html#start">start</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#BanList">BanList</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#CertificateDer">CertificateDer</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#CertificateList">CertificateList</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/Channel.html">Channel</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/Channel.html#description">description</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Channel.html#id">id</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Channel.html#links">links</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Channel.html#name">name</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Channel.html#parent">parent</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Channel.html#position">position</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Channel.html#temporary">temporary</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur/ChannelInfo.html#ChannelDescription">ChannelDescription</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/ChannelInfo.html">ChannelInfo</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/ChannelInfo.html#ChannelDescription">ChannelDescription</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ChannelInfo.html#ChannelPosition">ChannelPosition</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#ChannelList">ChannelList</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#ChannelMap">ChannelMap</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/ChannelInfo.html#ChannelPosition">ChannelPosition</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#ConfigMap">ConfigMap</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#ContextChannel">ContextChannel</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#ContextServer">ContextServer</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#ContextUser">ContextUser</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/Group.html">Group</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/Group.html#add">add</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Group.html#inherit">inherit</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Group.html#inheritable">inheritable</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Group.html#inherited">inherited</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Group.html#members">members</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Group.html#name">name</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Group.html#remove">remove</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#GroupList">GroupList</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#GroupNameList">GroupNameList</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#IdList">IdList</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#IdMap">IdMap</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#IntList">IntList</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/InvalidCallbackException.html">InvalidCallbackException</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/InvalidChannelException.html">InvalidChannelException</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/InvalidSecretException.html">InvalidSecretException</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/InvalidServerException.html">InvalidServerException</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/InvalidSessionException.html">InvalidSessionException</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/InvalidTextureException.html">InvalidTextureException</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/InvalidUserException.html">InvalidUserException</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/LogEntry.html">LogEntry</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/LogEntry.html#timestamp">timestamp</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/LogEntry.html#txt">txt</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#LogList">LogList</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/Meta.html#Meta">Meta</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/Meta.html#addCallback">addCallback</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Meta.html#getAllServers">getAllServers</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Meta.html#getBootedServers">getBootedServers</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Meta.html#getDefaultConf">getDefaultConf</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Meta.html#getServer">getServer</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Meta.html#getSlice">getSlice</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Meta.html#getSliceChecksums">getSliceChecksums</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Meta.html#getUptime">getUptime</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Meta.html#getVersion">getVersion</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Meta.html#newServer">newServer</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Meta.html#removeCallback">removeCallback</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur/MetaCallback.html#MetaCallback">MetaCallback</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/MetaCallback.html#started">started</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/MetaCallback.html#stopped">stopped</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur/MurmurException.html">MurmurException</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#NameList">NameList</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#NameMap">NameMap</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#NetAddress">NetAddress</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionBan">PermissionBan</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionEnter">PermissionEnter</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionKick">PermissionKick</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionLinkChannel">PermissionLinkChannel</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionMakeChannel">PermissionMakeChannel</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionMakeTempChannel">PermissionMakeTempChannel</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionMove">PermissionMove</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionMuteDeafen">PermissionMuteDeafen</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionRegister">PermissionRegister</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionRegisterSelf">PermissionRegisterSelf</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionSpeak">PermissionSpeak</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionTextMessage">PermissionTextMessage</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionTraverse">PermissionTraverse</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionWhisper">PermissionWhisper</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#PermissionWrite">PermissionWrite</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/Server.html#Server">Server</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#addCallback">addCallback</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#addChannel">addChannel</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#addContextCallback">addContextCallback</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#addUserToGroup">addUserToGroup</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#delete">delete</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getACL">getACL</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getAllConf">getAllConf</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getBans">getBans</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getCertificateList">getCertificateList</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getChannelState">getChannelState</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getChannels">getChannels</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getConf">getConf</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getLog">getLog</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getLogLen">getLogLen</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getRegisteredUsers">getRegisteredUsers</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getRegistration">getRegistration</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getState">getState</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getTexture">getTexture</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getTree">getTree</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getUptime">getUptime</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getUserIds">getUserIds</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getUserNames">getUserNames</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#getUsers">getUsers</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#hasPermission">hasPermission</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#id">id</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#isRunning">isRunning</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#kickUser">kickUser</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#redirectWhisperGroup">redirectWhisperGroup</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#registerUser">registerUser</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#removeCallback">removeCallback</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#removeChannel">removeChannel</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#removeContextCallback">removeContextCallback</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#removeUserFromGroup">removeUserFromGroup</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#sendMessage">sendMessage</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#sendMessageChannel">sendMessageChannel</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#setACL">setACL</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#setAuthenticator">setAuthenticator</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#setBans">setBans</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#setChannelState">setChannelState</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#setConf">setConf</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#setState">setState</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#setSuperuserPassword">setSuperuserPassword</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#setTexture">setTexture</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#start">start</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#stop">stop</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#unregisterUser">unregisterUser</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#updateRegistration">updateRegistration</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Server.html#verifyPassword">verifyPassword</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur/ServerAuthenticator.html#ServerAuthenticator">ServerAuthenticator</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerAuthenticator.html#authenticate">authenticate</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerAuthenticator.html#getInfo">getInfo</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerAuthenticator.html#idToName">idToName</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerAuthenticator.html#idToTexture">idToTexture</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerAuthenticator.html#nameToId">nameToId</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur/ServerBootedException.html">ServerBootedException</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/ServerCallback.html#ServerCallback">ServerCallback</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerCallback.html#channelCreated">channelCreated</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerCallback.html#channelRemoved">channelRemoved</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerCallback.html#channelStateChanged">channelStateChanged</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerCallback.html#userConnected">userConnected</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerCallback.html#userDisconnected">userDisconnected</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerCallback.html#userStateChanged">userStateChanged</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur/ServerContextCallback.html#ServerContextCallback">ServerContextCallback</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerContextCallback.html#contextAction">contextAction</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur/ServerFailureException.html">ServerFailureException</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#ServerList">ServerList</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/ServerUpdatingAuthenticator.html#ServerUpdatingAuthenticator">ServerUpdatingAuthenticator</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerUpdatingAuthenticator.html#getRegisteredUsers">getRegisteredUsers</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerUpdatingAuthenticator.html#registerUser">registerUser</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerUpdatingAuthenticator.html#setInfo">setInfo</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerUpdatingAuthenticator.html#setTexture">setTexture</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/ServerUpdatingAuthenticator.html#unregisterUser">unregisterUser</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#Texture">Texture</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/Tree.html">Tree</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/Tree.html#c">c</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Tree.html#children">children</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/Tree.html#users">users</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#TreeList">TreeList</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/User.html">User</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#address">address</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#bytespersec">bytespersec</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#channel">channel</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#comment">comment</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#context">context</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#deaf">deaf</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#identity">identity</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#idlesecs">idlesecs</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#mute">mute</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#name">name</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#onlinesecs">onlinesecs</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#os">os</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#osversion">osversion</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#prioritySpeaker">prioritySpeaker</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#recording">recording</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#release">release</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#selfDeaf">selfDeaf</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#selfMute">selfMute</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#session">session</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#suppress">suppress</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#tcponly">tcponly</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#userid">userid</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/User.html#version">version</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur/UserInfo.html#UserComment">UserComment</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/UserInfo.html#UserEmail">UserEmail</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/UserInfo.html#UserHash">UserHash</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/UserInfo.html">UserInfo</a>
+                        <ul>
+                            <li>
+                                <a class="Symbol" href="Murmur/UserInfo.html#UserComment">UserComment</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/UserInfo.html#UserEmail">UserEmail</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/UserInfo.html#UserHash">UserHash</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/UserInfo.html#UserLastActive">UserLastActive</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/UserInfo.html#UserName">UserName</a></li>
+                            <li>
+                                <a class="Symbol" href="Murmur/UserInfo.html#UserPassword">UserPassword</a></li>
+                        </ul>
+                    </li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#UserInfoMap">UserInfoMap</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/UserInfo.html#UserLastActive">UserLastActive</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#UserList">UserList</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur.html#UserMap">UserMap</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/UserInfo.html#UserName">UserName</a></li>
+                    <li>
+                        <a class="Symbol" href="Murmur/UserInfo.html#UserPassword">UserPassword</a></li>
+                </ul>
+            </li>
+        </ul>
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/index.html
@@ -0,0 +1,45 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Slice API Documentation
+        </title>
+    </head>
+    <body>
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand noindex -->
+        <hr>
+        <h1>Slice API Documentation</h1>
+        <h2>Modules</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html">Murmur</a></dt>
+            <dd></dd>
+        </dl>
+        <hr>
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+            </tr>
+        </table>
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/UserInfo.html
@@ -0,0 +1,74 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::UserInfo
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="../Murmur/User.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::UserInfo</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">enum UserInfo</h3>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Murmur.html#UserInfoMap">UserInfoMap</a></dt>
+        </dl>
+        <h2>Enumerators</h2>
+        <dl>
+            <dt class="Symbol">UserName</dt>
+            <dd></dd>
+            <dt class="Symbol">UserEmail</dt>
+            <dd></dd>
+            <dt class="Symbol">UserComment</dt>
+            <dd></dd>
+            <dt class="Symbol">UserHash</dt>
+            <dd></dd>
+            <dt class="Symbol">UserPassword</dt>
+            <dd></dd>
+            <dt class="Symbol">UserLastActive</dt>
+            <dd></dd>
+        </dl>
+    </body>
+</html>
+
+<hr>
+<!-- SwishCommand noindex -->
+<table class="HeaderFooter">
+    <tr>
+        <td align="left">
+            <table>
+                <tr>
+                    <td><a href="../index.html">Home</a></td>
+                    <td><a href="../Murmur/User.html">Previous</a></td>
+                    <td><a href="../Murmur.html">Up</a></td>
+                    <td><a href="../_sindex.html">Index</a></td>
+                </tr>
+            </table>
+        </td>
+        <td align="center"></td>
+        <td align="right"></td>
+    </tr>
+</table>
+<!-- SwishCommand index -->
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/InvalidTextureException.html
@@ -0,0 +1,65 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::InvalidTextureException
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidSessionException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidUserException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::InvalidTextureException</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">exception InvalidTextureException
+                extends 
+                    <a class="Symbol" href="MurmurException.html">MurmurException</a></h3>
+        <p>
+This is thrown when you try to set an invalid texture.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setTexture">Server::setTexture</a></dt>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidSessionException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidUserException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/InvalidUserException.html
@@ -0,0 +1,70 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::InvalidUserException
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidTextureException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="LogEntry.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::InvalidUserException</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">exception InvalidUserException
+                extends 
+                    <a class="Symbol" href="MurmurException.html">MurmurException</a></h3>
+        <p>
+This is thrown when you specify an invalid userid.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getRegistration">Server::getRegistration</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getTexture">Server::getTexture</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#registerUser">Server::registerUser</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setTexture">Server::setTexture</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#unregisterUser">Server::unregisterUser</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#updateRegistration">Server::updateRegistration</a></dt>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidTextureException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="LogEntry.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/MurmurException.html
@@ -0,0 +1,69 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::MurmurException
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="MetaCallback.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="Server.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::MurmurException</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">exception MurmurException</h3>
+        <h4>Derived Exceptions</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="InvalidCallbackException.html">InvalidCallbackException</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="InvalidChannelException.html">InvalidChannelException</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="InvalidServerException.html">InvalidServerException</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="InvalidSessionException.html">InvalidSessionException</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="InvalidTextureException.html">InvalidTextureException</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="InvalidUserException.html">InvalidUserException</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="ServerBootedException.html">ServerBootedException</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="ServerFailureException.html">ServerFailureException</a></dt>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="MetaCallback.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="Server.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/ServerFailureException.html
@@ -0,0 +1,65 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::ServerFailureException
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ServerContextCallback.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ServerUpdatingAuthenticator.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::ServerFailureException</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">exception ServerFailureException
+                extends 
+                    <a class="Symbol" href="MurmurException.html">MurmurException</a></h3>
+        <p>
+This is thrown if {@link Server.start} fails, and should generally be the cause for some concern.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#start">Server::start</a></dt>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ServerContextCallback.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ServerUpdatingAuthenticator.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/ACL.html
@@ -0,0 +1,125 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::ACL
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="../Murmur.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="Ban.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::ACL</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">struct ACL</h3>
+        <p>
+Access Control List for a channel. ACLs are defined per channel, and can be inherited from parent channels.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#ACLList">ACLList</a></dt>
+        </dl>
+        <h2>Data Member Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#applyHere">applyHere</a></dt>
+            <dd>
+                Does the ACL apply to this channel?</dd>
+            <dt class="Symbol"><a class="Symbol" href="#applySubs">applySubs</a></dt>
+            <dd>
+                Does the ACL apply to subchannels?</dd>
+            <dt class="Symbol"><a class="Symbol" href="#inherited">inherited</a></dt>
+            <dd>
+                Is this ACL inherited from a parent channel? Read-only.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#userid">userid</a></dt>
+            <dd>
+                ID of user this ACL applies to.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#group">group</a></dt>
+            <dd>
+                Group this ACL applies to.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#allow">allow</a></dt>
+            <dd>
+                Binary mask of privileges to allow.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#deny">deny</a></dt>
+            <dd>
+                Binary mask of privileges to deny.</dd>
+        </dl>
+        <h2>Data Members</h2>
+        <dl>
+            <dt class="Symbol">bool <a class="Symbol" name="applyHere">applyHere</a>;</dt>
+            <dd>
+                <p>
+Does the ACL apply to this channel?</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="applySubs">applySubs</a>;</dt>
+            <dd>
+                <p>
+Does the ACL apply to subchannels?</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="inherited">inherited</a>;</dt>
+            <dd>
+                <p>
+Is this ACL inherited from a parent channel? Read-only.</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="userid">userid</a>;</dt>
+            <dd>
+                <p>
+ID of user this ACL applies to. -1 if using a group name.</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="group">group</a>;</dt>
+            <dd>
+                <p>
+Group this ACL applies to. Blank if using userid.</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="allow">allow</a>;</dt>
+            <dd>
+                <p>
+Binary mask of privileges to allow.</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="deny">deny</a>;</dt>
+            <dd>
+                <p>
+Binary mask of privileges to deny.</p>
+            </dd>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="../Murmur.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="Ban.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/ServerAuthenticator.html
@@ -0,0 +1,169 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::ServerAuthenticator
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="Server.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ServerBootedException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::ServerAuthenticator</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">interface ServerAuthenticator</h3>
+        <p>
+Callback interface for server authentication. You need to supply one of these for {@link Server.setAuthenticator}.
+If an added callback ever throws an exception or goes away, it will be automatically removed.
+Please note that unlike {@link ServerCallback} and {@link ServerContextCallback}, these methods are called
+synchronously. If the response lags, the entire murmur server will lag.
+Also note that, as the method calls are synchronous, making a call to {@link Server} or {@link Meta} will
+deadlock the server.</p>
+        <h4>Derived Classes and Interfaces</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="ServerUpdatingAuthenticator.html#ServerUpdatingAuthenticator">ServerUpdatingAuthenticator</a></dt>
+        </dl>
+        <h2>Operation Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#authenticate">authenticate</a></dt>
+            <dd>
+                Called to authenticate a user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getInfo">getInfo</a></dt>
+            <dd>
+                Fetch information about a user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#nameToId">nameToId</a></dt>
+            <dd>
+                Map a name to a user id.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#idToName">idToName</a></dt>
+            <dd>
+                Map a user id to a username.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#idToTexture">idToTexture</a></dt>
+            <dd>
+                Map a user to a custom Texture.</dd>
+        </dl>
+        <h2>Operations</h2>
+        <h3 class="Synopsis">int <a class="Symbol" name="authenticate">authenticate</a>(string name, string pw, <a class="Symbol" href="../Murmur.html#CertificateList">CertificateList</a> certificates, string certhash, bool certstrong, out string newname, out <a class="Symbol" href="../Murmur.html#GroupNameList">GroupNameList</a> groups)</h3>
+        <p>
+Called to authenticate a user. If you do not know the username in question, always return -2 from this
+method to fall through to normal database authentication.
+Note that if authentication succeeds, murmur will create a record of the user in it's database, reserving
+the username and id so it cannot be used for normal database authentication.
+The data in the certificate (name, email addresses etc), as well as the list of signing certificates,
+should only be trusted if certstrong is true.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">name</dt>
+            <dd>
+                Username to authenticate.</dd>
+            <dt class="Symbol">pw</dt>
+            <dd>
+                Password to authenticate with.</dd>
+            <dt class="Symbol">certificates</dt>
+            <dd>
+                List of der encoded certificates the user connected with.</dd>
+            <dt class="Symbol">certhash</dt>
+            <dd>
+                Hash of user certificate, as used by murmur internally when matching.</dd>
+            <dt class="Symbol">certstrong</dt>
+            <dd>
+                True if certificate was valid and signed by a trusted CA.</dd>
+            <dt class="Symbol">newname</dt>
+            <dd>
+                Set this to change the username from the supplied one.</dd>
+            <dt class="Symbol">groups</dt>
+            <dd>
+                List of groups on the root channel that the user will be added to for the duration of the connection.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>UserID of authenticated user, -1 for authentication failures and -2 for unknown user (fallthrough).</p>
+        <h3 class="Synopsis">bool <a class="Symbol" name="getInfo">getInfo</a>(int id, out <a class="Symbol" href="../Murmur.html#UserInfoMap">UserInfoMap</a> info)</h3>
+        <p>
+Fetch information about a user. This is used to retrieve information like email address, keyhash etc. If you
+want murmur to take care of this information itself, simply return false to fall through.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">id</dt>
+            <dd>
+                User id.</dd>
+            <dt class="Symbol">info</dt>
+            <dd>
+                Information about user. This needs to include at least "name".</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>true if information is present, false to fall through.</p>
+        <h3 class="Synopsis">int <a class="Symbol" name="nameToId">nameToId</a>(string name)</h3>
+        <p>
+Map a name to a user id.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">name</dt>
+            <dd>
+                Username to map.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>User id or -2 for unknown name.</p>
+        <h3 class="Synopsis">string <a class="Symbol" name="idToName">idToName</a>(int id)</h3>
+        <p>
+Map a user id to a username.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">id</dt>
+            <dd>
+                User id to map.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>Name of user or empty string for unknown id.</p>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#Texture">Texture</a> <a class="Symbol" name="idToTexture">idToTexture</a>(int id)</h3>
+        <p>
+Map a user to a custom Texture.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">id</dt>
+            <dd>
+                User id to map.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>User texture or an empty texture for unknwon users or users without textures.</p>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="Server.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ServerBootedException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/Channel.html
@@ -0,0 +1,132 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::Channel
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="Ban.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ChannelInfo.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::Channel</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">struct Channel</h3>
+        <p>
+A channel.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#ChannelList">ChannelList</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#ChannelMap">ChannelMap</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getChannelState">Server::getChannelState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setChannelState">Server::setChannelState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="ServerCallback.html#channelCreated">ServerCallback::channelCreated</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="ServerCallback.html#channelRemoved">ServerCallback::channelRemoved</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="ServerCallback.html#channelStateChanged">ServerCallback::channelStateChanged</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Tree.html#c">Tree::c</a></dt>
+        </dl>
+        <h2>Data Member Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#id">id</a></dt>
+            <dd>
+                Channel ID.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#name">name</a></dt>
+            <dd>
+                Name of the channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#parent">parent</a></dt>
+            <dd>
+                ID of parent channel, or -1 if this is the root channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#links">links</a></dt>
+            <dd>
+                List of id of linked channels.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#description">description</a></dt>
+            <dd>
+                Description of channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#temporary">temporary</a></dt>
+            <dd>
+                Channel is temporary, and will be removed when the last user leaves it.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#position">position</a></dt>
+            <dd>
+                Position of the channel which is used in Client for sorting.</dd>
+        </dl>
+        <h2>Data Members</h2>
+        <dl>
+            <dt class="Symbol">int <a class="Symbol" name="id">id</a>;</dt>
+            <dd>
+                <p>
+Channel ID. This is unique per channel, and the root channel is always id 0.</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="name">name</a>;</dt>
+            <dd>
+                <p>
+Name of the channel. There can not be two channels with the same parent that has the same name.</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="parent">parent</a>;</dt>
+            <dd>
+                <p>
+ID of parent channel, or -1 if this is the root channel.</p>
+            </dd>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#IntList">IntList</a> <a class="Symbol" name="links">links</a>;</dt>
+            <dd>
+                <p>
+List of id of linked channels.</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="description">description</a>;</dt>
+            <dd>
+                <p>
+Description of channel. Shown as tooltip for this channel.</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="temporary">temporary</a>;</dt>
+            <dd>
+                <p>
+Channel is temporary, and will be removed when the last user leaves it.</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="position">position</a>;</dt>
+            <dd>
+                <p>
+Position of the channel which is used in Client for sorting.</p>
+            </dd>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="Ban.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ChannelInfo.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/InvalidChannelException.html
@@ -0,0 +1,75 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::InvalidChannelException
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidCallbackException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidSecretException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::InvalidChannelException</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">exception InvalidChannelException
+                extends 
+                    <a class="Symbol" href="MurmurException.html">MurmurException</a></h3>
+        <p>
+This is thrown when you specify an invalid channel id. This may happen if the channel was removed by another provess. It can also be thrown if you try to add an invalid channel.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#addChannel">Server::addChannel</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#addUserToGroup">Server::addUserToGroup</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getACL">Server::getACL</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getChannelState">Server::getChannelState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#hasPermission">Server::hasPermission</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#removeChannel">Server::removeChannel</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#removeUserFromGroup">Server::removeUserFromGroup</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#sendMessageChannel">Server::sendMessageChannel</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setACL">Server::setACL</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setChannelState">Server::setChannelState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setState">Server::setState</a></dt>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidCallbackException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidSecretException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/InvalidSessionException.html
@@ -0,0 +1,73 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::InvalidSessionException
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidServerException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidTextureException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::InvalidSessionException</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">exception InvalidSessionException
+                extends 
+                    <a class="Symbol" href="MurmurException.html">MurmurException</a></h3>
+        <p>
+This is thrown when you specify an invalid session. This may happen if the user has disconnected since your last call to {@link Server.getUsers}. See {@link User.session}</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#addUserToGroup">Server::addUserToGroup</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getCertificateList">Server::getCertificateList</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getState">Server::getState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#hasPermission">Server::hasPermission</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#kickUser">Server::kickUser</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#redirectWhisperGroup">Server::redirectWhisperGroup</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#removeUserFromGroup">Server::removeUserFromGroup</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#sendMessage">Server::sendMessage</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setState">Server::setState</a></dt>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidServerException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidTextureException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/Meta.html
@@ -0,0 +1,188 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::Meta
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="LogEntry.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="MetaCallback.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::Meta</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">[ "amd" ]
+            interface Meta</h3>
+        <p>
+This is the meta interface. It is primarily used for retrieving the {@link Server} interfaces for each individual server.</p>
+        <h2>Operation Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#getServer">getServer</a></dt>
+            <dd>
+                Fetch interface to specific server.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#newServer">newServer</a></dt>
+            <dd>
+                Create a new server.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getBootedServers">getBootedServers</a></dt>
+            <dd>
+                Fetch list of all currently running servers.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getAllServers">getAllServers</a></dt>
+            <dd>
+                Fetch list of all defined servers.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getDefaultConf">getDefaultConf</a></dt>
+            <dd>
+                Fetch default configuraion.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getVersion">getVersion</a></dt>
+            <dd>
+                Fetch version of Murmur.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#addCallback">addCallback</a></dt>
+            <dd>
+                Add a callback.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#removeCallback">removeCallback</a></dt>
+            <dd>
+                Remove a callback.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getUptime">getUptime</a></dt>
+            <dd>
+                Get murmur uptime.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getSlice">getSlice</a></dt>
+            <dd>
+                Get slice file.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getSliceChecksums">getSliceChecksums</a></dt>
+            <dd>
+                Returns a checksum dict for the slice file.</dd>
+        </dl>
+        <h2>Operations</h2>
+        <h3 class="Synopsis"><a class="Symbol" href="Server.html">Server</a>* <a class="Symbol" name="getServer">getServer</a>(int id) throws <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch interface to specific server.
+{@link Server.getId}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">id</dt>
+            <dd>
+                Server ID. See {</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>Interface for specified server, or a null proxy if id is invalid.</p>
+        <h3 class="Synopsis"><a class="Symbol" href="Server.html">Server</a>* <a class="Symbol" name="newServer">newServer</a>() throws <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Create a new server. Call {@link Server.getId} on the returned interface to find it's ID.</p>
+        <h4>Return Value</h4>
+        <p>Interface for new server.</p>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#ServerList">ServerList</a> <a class="Symbol" name="getBootedServers">getBootedServers</a>() throws <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch list of all currently running servers.</p>
+        <h4>Return Value</h4>
+        <p>List of interfaces for running servers.</p>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#ServerList">ServerList</a> <a class="Symbol" name="getAllServers">getAllServers</a>() throws <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch list of all defined servers.</p>
+        <h4>Return Value</h4>
+        <p>List of interfaces for all servers.</p>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#ConfigMap">ConfigMap</a> <a class="Symbol" name="getDefaultConf">getDefaultConf</a>() throws <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch default configuraion. This returns the configuration items that were set in the configuration file, or
+the built-in default. The individual servers will use these values unless they have been overridden in the
+server specific configuration. The only special case is the port, which defaults to the value defined here +
+the servers ID - 1 (so that virtual server #1 uses the defined port, server #2 uses port+1 etc).</p>
+        <h4>Return Value</h4>
+        <p>Default configuration of the servers.</p>
+        <h3 class="Synopsis">void <a class="Symbol" name="getVersion">getVersion</a>(out int major, out int minor, out int patch, out string text)</h3>
+        <p>
+Fetch version of Murmur. 
+
+
+
+{@link major}, {@link minor} and {@link patch} levels, as it
+may be simply the compile date or the SVN revision. This is usually the text you want to present to users.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">major</dt>
+            <dd>
+                Major version.</dd>
+            <dt class="Symbol">minor</dt>
+            <dd>
+                Minor version.</dd>
+            <dt class="Symbol">patch</dt>
+            <dd>
+                Patchlevel.</dd>
+            <dt class="Symbol">text</dt>
+            <dd>
+                Textual representation of version. Note that this may not match the {</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="addCallback">addCallback</a>(<a class="Symbol" href="MetaCallback.html">MetaCallback</a>* cb) throws <a class="Symbol" href="InvalidCallbackException.html">InvalidCallbackException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Add a callback. The callback will receive notifications when servers are started or stopped.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">cb</dt>
+            <dd>
+                Callback interface which will receive notifications.</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="removeCallback">removeCallback</a>(<a class="Symbol" href="MetaCallback.html">MetaCallback</a>* cb) throws <a class="Symbol" href="InvalidCallbackException.html">InvalidCallbackException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Remove a callback.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">cb</dt>
+            <dd>
+                Callback interface to be removed.</dd>
+        </dl>
+        <h3 class="Synopsis">int <a class="Symbol" name="getUptime">getUptime</a>()</h3>
+        <p>
+Get murmur uptime.</p>
+        <h4>Return Value</h4>
+        <p>Uptime of murmur in seconds</p>
+        <h3 class="Synopsis">string <a class="Symbol" name="getSlice">getSlice</a>()</h3>
+        <p>
+Get slice file.</p>
+        <h4>Return Value</h4>
+        <p>Contents of the slice file server compiled with.</p>
+        <h3 class="Synopsis">::Ice::SliceChecksumDict <a class="Symbol" name="getSliceChecksums">getSliceChecksums</a>()</h3>
+        <p>
+Returns a checksum dict for the slice file.</p>
+        <h4>Return Value</h4>
+        <p>Checksum dict</p>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="LogEntry.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="MetaCallback.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/MetaCallback.html
@@ -0,0 +1,98 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::MetaCallback
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="Meta.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="MurmurException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::MetaCallback</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">interface MetaCallback</h3>
+        <p>
+Callback interface for Meta. You can supply an implementation of this to receive notifications
+when servers are stopped or started.
+If an added callback ever throws an exception or goes away, it will be automatically removed.
+Please note that all callbacks are done asynchronously; murmur does not wait for the callback to
+complete before continuing processing.</p>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="ServerCallback.html">ServerCallback</a></dt>
+            <dt class="Symbol"><tt>Meta.addCallback</tt></dt>
+        </dl>
+        <h2>Operation Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#started">started</a></dt>
+            <dd>
+                Called when a server is started.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#stopped">stopped</a></dt>
+            <dd>
+                Called when a server is stopped.</dd>
+        </dl>
+        <h2>Operations</h2>
+        <h3 class="Synopsis">void <a class="Symbol" name="started">started</a>(<a class="Symbol" href="Server.html">Server</a>* srv)</h3>
+        <p>
+Called when a server is started. The server is up and running when this event is sent, so all methods that 
+need a running server will work.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">srv</dt>
+            <dd>
+                Interface for started server.</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="stopped">stopped</a>(<a class="Symbol" href="Server.html">Server</a>* srv)</h3>
+        <p>
+Called when a server is stopped. The server is already stopped when this event is sent, so no methods that
+need a running server will work.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">srv</dt>
+            <dd>
+                Interface for started server.</dd>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="Meta.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="MurmurException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/ServerUpdatingAuthenticator.html
@@ -0,0 +1,144 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::ServerUpdatingAuthenticator
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ServerFailureException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="Tree.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::ServerUpdatingAuthenticator</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">interface ServerUpdatingAuthenticator extends <a class="Symbol" href="ServerAuthenticator.html#ServerAuthenticator">ServerAuthenticator</a></h3>
+        <p>
+Callback interface for server authentication and registration. This allows you to support both authentication
+and account updating.
+You do not need to implement this if all you want is authentication, you only need this if other scripts
+connected to the same server calls e.g. {@link Server.setTexture}.
+Almost all of these methods support fall through, meaning murmur should continue the operation against its
+own database.</p>
+        <h2>Operation Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#registerUser">registerUser</a></dt>
+            <dd>
+                Register a new user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#unregisterUser">unregisterUser</a></dt>
+            <dd>
+                Unregister a user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getRegisteredUsers">getRegisteredUsers</a></dt>
+            <dd>
+                Get a list of registered users matching filter.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#setInfo">setInfo</a></dt>
+            <dd>
+                Set additional information for user registration.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#setTexture">setTexture</a></dt>
+            <dd>
+                Set texture (now called avatar) of user registration.</dd>
+        </dl>
+        <h2>Operations</h2>
+        <h3 class="Synopsis">int <a class="Symbol" name="registerUser">registerUser</a>(<a class="Symbol" href="../Murmur.html#UserInfoMap">UserInfoMap</a> info)</h3>
+        <p>
+Register a new user.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">info</dt>
+            <dd>
+                Information about user to register.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>User id of new user, -1 for registration failure, or -2 to fall through.</p>
+        <h3 class="Synopsis">int <a class="Symbol" name="unregisterUser">unregisterUser</a>(int id)</h3>
+        <p>
+Unregister a user.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">id</dt>
+            <dd>
+                Userid to unregister.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>1 for successfull unregistration, 0 for unsuccessfull unregistration, -1 to fall through.</p>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#NameMap">NameMap</a> <a class="Symbol" name="getRegisteredUsers">getRegisteredUsers</a>(string filter)</h3>
+        <p>
+Get a list of registered users matching filter.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">filter</dt>
+            <dd>
+                Substring usernames must contain. If empty, return all registered users.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>List of matching registered users.</p>
+        <h3 class="Synopsis">int <a class="Symbol" name="setInfo">setInfo</a>(int id, <a class="Symbol" href="../Murmur.html#UserInfoMap">UserInfoMap</a> info)</h3>
+        <p>
+Set additional information for user registration.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">id</dt>
+            <dd>
+                Userid of registered user.</dd>
+            <dt class="Symbol">info</dt>
+            <dd>
+                Information to set about user. This should be merged with existing information.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>1 for successfull update, 0 for unsuccessfull update, -1 to fall through.</p>
+        <h3 class="Synopsis">int <a class="Symbol" name="setTexture">setTexture</a>(int id, <a class="Symbol" href="../Murmur.html#Texture">Texture</a> tex)</h3>
+        <p>
+Set texture (now called avatar) of user registration.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">id</dt>
+            <dd>
+                registrationId of registered user.</dd>
+            <dt class="Symbol">tex</dt>
+            <dd>
+                New texture.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>1 for successfull update, 0 for unsuccessfull update, -1 to fall through.</p>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ServerFailureException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="Tree.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/ServerCallback.html
@@ -0,0 +1,147 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::ServerCallback
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ServerBootedException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ServerContextCallback.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::ServerCallback</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">interface ServerCallback</h3>
+        <p>
+Callback interface for servers. You can supply an implementation of this to receive notification
+messages from the server.
+If an added callback ever throws an exception or goes away, it will be automatically removed.
+Please note that all callbacks are done asynchronously; murmur does not wait for the callback to
+complete before continuing processing.
+Note that callbacks are removed when a server is stopped, so you should have a callback for
+{@link MetaCallback.started} which calls {@link Server.addCallback}.</p>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="MetaCallback.html">MetaCallback</a></dt>
+            <dt class="Symbol"><tt>Server.addCallback</tt></dt>
+        </dl>
+        <h2>Operation Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#userConnected">userConnected</a></dt>
+            <dd>
+                Called when a user connects to the server.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#userDisconnected">userDisconnected</a></dt>
+            <dd>
+                Called when a user disconnects from the server.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#userStateChanged">userStateChanged</a></dt>
+            <dd>
+                Called when a user state changes.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#channelCreated">channelCreated</a></dt>
+            <dd>
+                Called when a new channel is created.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#channelRemoved">channelRemoved</a></dt>
+            <dd>
+                Called when a channel is removed.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#channelStateChanged">channelStateChanged</a></dt>
+            <dd>
+                Called when a new channel state changes.</dd>
+        </dl>
+        <h2>Operations</h2>
+        <h3 class="Synopsis">void <a class="Symbol" name="userConnected">userConnected</a>(<a class="Symbol" href="User.html">User</a> state)</h3>
+        <p>
+Called when a user connects to the server.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">state</dt>
+            <dd>
+                State of connected user.</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="userDisconnected">userDisconnected</a>(<a class="Symbol" href="User.html">User</a> state)</h3>
+        <p>
+Called when a user disconnects from the server. The user has already been removed, so you can no longer use methods like {@link Server.getState}
+to retrieve the user's state.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">state</dt>
+            <dd>
+                State of disconnected user.</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="userStateChanged">userStateChanged</a>(<a class="Symbol" href="User.html">User</a> state)</h3>
+        <p>
+Called when a user state changes. This is called if the user moves, is renamed, is muted, deafened etc.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">state</dt>
+            <dd>
+                New state of user.</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="channelCreated">channelCreated</a>(<a class="Symbol" href="Channel.html">Channel</a> state)</h3>
+        <p>
+Called when a new channel is created.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">state</dt>
+            <dd>
+                State of new channel.</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="channelRemoved">channelRemoved</a>(<a class="Symbol" href="Channel.html">Channel</a> state)</h3>
+        <p>
+Called when a channel is removed. The channel has already been removed, you can no longer use methods like {@link Server.getChannelState}</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">state</dt>
+            <dd>
+                State of removed channel.</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="channelStateChanged">channelStateChanged</a>(<a class="Symbol" href="Channel.html">Channel</a> state)</h3>
+        <p>
+Called when a new channel state changes. This is called if the channel is moved, renamed or if new links are added.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">state</dt>
+            <dd>
+                New state of channel.</dd>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ServerBootedException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ServerContextCallback.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/InvalidCallbackException.html
@@ -0,0 +1,71 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::InvalidCallbackException
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="Group.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidChannelException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::InvalidCallbackException</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">exception InvalidCallbackException
+                extends 
+                    <a class="Symbol" href="MurmurException.html">MurmurException</a></h3>
+        <p>
+This is thrown when you supply an invalid callback.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Meta.html#addCallback">Meta::addCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Meta.html#removeCallback">Meta::removeCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#addCallback">Server::addCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#addContextCallback">Server::addContextCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#removeCallback">Server::removeCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#removeContextCallback">Server::removeContextCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setAuthenticator">Server::setAuthenticator</a></dt>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="Group.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidChannelException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/InvalidSecretException.html
@@ -0,0 +1,119 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::InvalidSecretException
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidChannelException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidServerException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::InvalidSecretException</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">exception InvalidSecretException
+                extends 
+                    <a class="Symbol" href="MurmurException.html">MurmurException</a></h3>
+        <p>
+This is thrown when you supply the wrong secret in the calling context.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Meta.html#addCallback">Meta::addCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Meta.html#getAllServers">Meta::getAllServers</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Meta.html#getBootedServers">Meta::getBootedServers</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Meta.html#getDefaultConf">Meta::getDefaultConf</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Meta.html#getServer">Meta::getServer</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Meta.html#newServer">Meta::newServer</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Meta.html#removeCallback">Meta::removeCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#addCallback">Server::addCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#addChannel">Server::addChannel</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#addContextCallback">Server::addContextCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#addUserToGroup">Server::addUserToGroup</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#delete">Server::delete</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getACL">Server::getACL</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getAllConf">Server::getAllConf</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getBans">Server::getBans</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getCertificateList">Server::getCertificateList</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getChannelState">Server::getChannelState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getChannels">Server::getChannels</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getConf">Server::getConf</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getLog">Server::getLog</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getLogLen">Server::getLogLen</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getRegisteredUsers">Server::getRegisteredUsers</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getRegistration">Server::getRegistration</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getState">Server::getState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getTexture">Server::getTexture</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getTree">Server::getTree</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getUptime">Server::getUptime</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getUserIds">Server::getUserIds</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getUserNames">Server::getUserNames</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getUsers">Server::getUsers</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#hasPermission">Server::hasPermission</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#id">Server::id</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#isRunning">Server::isRunning</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#kickUser">Server::kickUser</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#redirectWhisperGroup">Server::redirectWhisperGroup</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#registerUser">Server::registerUser</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#removeCallback">Server::removeCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#removeChannel">Server::removeChannel</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#removeContextCallback">Server::removeContextCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#removeUserFromGroup">Server::removeUserFromGroup</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#sendMessage">Server::sendMessage</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#sendMessageChannel">Server::sendMessageChannel</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setACL">Server::setACL</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setAuthenticator">Server::setAuthenticator</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setBans">Server::setBans</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setChannelState">Server::setChannelState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setConf">Server::setConf</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setState">Server::setState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setSuperuserPassword">Server::setSuperuserPassword</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setTexture">Server::setTexture</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#start">Server::start</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#stop">Server::stop</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#unregisterUser">Server::unregisterUser</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#updateRegistration">Server::updateRegistration</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#verifyPassword">Server::verifyPassword</a></dt>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidChannelException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidServerException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/LogEntry.html
@@ -0,0 +1,85 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::LogEntry
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidUserException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="Meta.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::LogEntry</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">struct LogEntry</h3>
+        <p>
+A entry in the log.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#LogList">LogList</a></dt>
+        </dl>
+        <h2>Data Member Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#timestamp">timestamp</a></dt>
+            <dd>
+                Timestamp in UNIX time_t</dd>
+            <dt class="Symbol"><a class="Symbol" href="#txt">txt</a></dt>
+            <dd>
+                The log message.</dd>
+        </dl>
+        <h2>Data Members</h2>
+        <dl>
+            <dt class="Symbol">int <a class="Symbol" name="timestamp">timestamp</a>;</dt>
+            <dd>
+                <p>
+Timestamp in UNIX time_t</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="txt">txt</a>;</dt>
+            <dd>
+                <p>
+The log message.</p>
+            </dd>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidUserException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="Meta.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/ChannelInfo.html
@@ -0,0 +1,64 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::ChannelInfo
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="../Murmur/Channel.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="../Murmur/Group.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::ChannelInfo</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">enum ChannelInfo</h3>
+        <h2>Enumerators</h2>
+        <dl>
+            <dt class="Symbol">ChannelDescription</dt>
+            <dd></dd>
+            <dt class="Symbol">ChannelPosition</dt>
+            <dd></dd>
+        </dl>
+    </body>
+</html>
+
+<hr>
+<!-- SwishCommand noindex -->
+<table class="HeaderFooter">
+    <tr>
+        <td align="left">
+            <table>
+                <tr>
+                    <td><a href="../index.html">Home</a></td>
+                    <td><a href="../Murmur/Channel.html">Previous</a></td>
+                    <td><a href="../Murmur.html">Up</a></td>
+                    <td><a href="../Murmur/Group.html">Next</a></td>
+                    <td><a href="../_sindex.html">Index</a></td>
+                </tr>
+            </table>
+        </td>
+        <td align="center"></td>
+        <td align="right"></td>
+    </tr>
+</table>
+<!-- SwishCommand index -->
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/InvalidServerException.html
@@ -0,0 +1,61 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::InvalidServerException
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidSecretException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidSessionException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::InvalidServerException</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">exception InvalidServerException
+                extends 
+                    <a class="Symbol" href="MurmurException.html">MurmurException</a></h3>
+        <p>
+This is thrown when you try to do an operation on a server that does not exist. This may happen if someone has removed the server.</p>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="InvalidSecretException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidSessionException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/Group.html
@@ -0,0 +1,125 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::Group
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ChannelInfo.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidCallbackException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::Group</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">struct Group</h3>
+        <p>
+A group. Groups are defined per channel, and can inherit members from parent channels.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#GroupList">GroupList</a></dt>
+        </dl>
+        <h2>Data Member Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#name">name</a></dt>
+            <dd>
+                Group name</dd>
+            <dt class="Symbol"><a class="Symbol" href="#inherited">inherited</a></dt>
+            <dd>
+                Is this group inherited from a parent channel? Read-only.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#inherit">inherit</a></dt>
+            <dd>
+                Does this group inherit members from parent channels?</dd>
+            <dt class="Symbol"><a class="Symbol" href="#inheritable">inheritable</a></dt>
+            <dd>
+                Can subchannels inherit members from this group?</dd>
+            <dt class="Symbol"><a class="Symbol" href="#add">add</a></dt>
+            <dd>
+                List of users to add to the group.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#remove">remove</a></dt>
+            <dd>
+                List of inherited users to remove from the group.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#members">members</a></dt>
+            <dd>
+                Current members of the group, including inherited members.</dd>
+        </dl>
+        <h2>Data Members</h2>
+        <dl>
+            <dt class="Symbol">string <a class="Symbol" name="name">name</a>;</dt>
+            <dd>
+                <p>
+Group name</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="inherited">inherited</a>;</dt>
+            <dd>
+                <p>
+Is this group inherited from a parent channel? Read-only.</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="inherit">inherit</a>;</dt>
+            <dd>
+                <p>
+Does this group inherit members from parent channels?</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="inheritable">inheritable</a>;</dt>
+            <dd>
+                <p>
+Can subchannels inherit members from this group?</p>
+            </dd>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#IntList">IntList</a> <a class="Symbol" name="add">add</a>;</dt>
+            <dd>
+                <p>
+List of users to add to the group.</p>
+            </dd>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#IntList">IntList</a> <a class="Symbol" name="remove">remove</a>;</dt>
+            <dd>
+                <p>
+List of inherited users to remove from the group.</p>
+            </dd>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#IntList">IntList</a> <a class="Symbol" name="members">members</a>;</dt>
+            <dd>
+                <p>
+Current members of the group, including inherited members. Read-only.</p>
+            </dd>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ChannelInfo.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="InvalidCallbackException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/ServerContextCallback.html
@@ -0,0 +1,87 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::ServerContextCallback
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ServerCallback.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ServerFailureException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::ServerContextCallback</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">interface ServerContextCallback</h3>
+        <p>
+Callback interface for context actions. You need to supply one of these for {@link Server.addContext}. 
+If an added callback ever throws an exception or goes away, it will be automatically removed.
+Please note that all callbacks are done asynchronously; murmur does not wait for the callback to
+complete before continuing processing.</p>
+        <h2>Operation Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#contextAction">contextAction</a></dt>
+            <dd>
+                Called when a context action is performed.</dd>
+        </dl>
+        <h2>Operations</h2>
+        <h3 class="Synopsis">void <a class="Symbol" name="contextAction">contextAction</a>(string action, <a class="Symbol" href="User.html">User</a> usr, int session, int channelid)</h3>
+        <p>
+Called when a context action is performed.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">action</dt>
+            <dd>
+                Action to be performed.</dd>
+            <dt class="Symbol">usr</dt>
+            <dd>
+                User which initiated the action.</dd>
+            <dt class="Symbol">session</dt>
+            <dd>
+                If nonzero, session of target user.</dd>
+            <dt class="Symbol">channelid</dt>
+            <dd>
+                If nonzero, session of target channel.</dd>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ServerCallback.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ServerFailureException.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/Server.html
@@ -0,0 +1,789 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::Server
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="MurmurException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ServerAuthenticator.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::Server</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">[ "amd" ]
+            interface Server</h3>
+        <p>
+Per-server interface. This includes all methods for configuring and altering
+the state of a single virtual server. You can retrieve a pointer to this interface
+from one of the methods in {@link Meta}.</p>
+        <h2>Operation Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#isRunning">isRunning</a></dt>
+            <dd>
+                Shows if the server currently running (accepting users).</dd>
+            <dt class="Symbol"><a class="Symbol" href="#start">start</a></dt>
+            <dd>
+                Start server.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#stop">stop</a></dt>
+            <dd>
+                Stop server.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#delete">delete</a></dt>
+            <dd>
+                Delete server and all it's configuration.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#id">id</a></dt>
+            <dd>
+                Fetch the server id.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#addCallback">addCallback</a></dt>
+            <dd>
+                Add a callback.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#removeCallback">removeCallback</a></dt>
+            <dd>
+                Remove a callback.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#setAuthenticator">setAuthenticator</a></dt>
+            <dd>
+                Set external authenticator.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getConf">getConf</a></dt>
+            <dd>
+                Retrieve configuration item.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getAllConf">getAllConf</a></dt>
+            <dd>
+                Retrieve all configuration items.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#setConf">setConf</a></dt>
+            <dd>
+                Set a configuration item.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#setSuperuserPassword">setSuperuserPassword</a></dt>
+            <dd>
+                Set superuser password.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getLog">getLog</a></dt>
+            <dd>
+                Fetch log entries.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getLogLen">getLogLen</a></dt>
+            <dd>
+                Fetch length of log
+@return Number of entries in log
+</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getUsers">getUsers</a></dt>
+            <dd>
+                Fetch all users.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getChannels">getChannels</a></dt>
+            <dd>
+                Fetch all channels.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getCertificateList">getCertificateList</a></dt>
+            <dd>
+                Fetch certificate of user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getTree">getTree</a></dt>
+            <dd>
+                Fetch all channels and connected users as a tree.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getBans">getBans</a></dt>
+            <dd>
+                Fetch all current IP bans on the server.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#setBans">setBans</a></dt>
+            <dd>
+                Set all current IP bans on the server.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#kickUser">kickUser</a></dt>
+            <dd>
+                Kick a user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getState">getState</a></dt>
+            <dd>
+                Get state of a single connected user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#setState">setState</a></dt>
+            <dd>
+                Set user state.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#sendMessage">sendMessage</a></dt>
+            <dd>
+                Send text message to a single user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#hasPermission">hasPermission</a></dt>
+            <dd>
+                Check if user is permitted to perform action.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#addContextCallback">addContextCallback</a></dt>
+            <dd>
+                Add a context callback.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#removeContextCallback">removeContextCallback</a></dt>
+            <dd>
+                Remove a callback.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getChannelState">getChannelState</a></dt>
+            <dd>
+                Get state of single channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#setChannelState">setChannelState</a></dt>
+            <dd>
+                Set state of a single channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#removeChannel">removeChannel</a></dt>
+            <dd>
+                Remove a channel and all its subchannels.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#addChannel">addChannel</a></dt>
+            <dd>
+                Add a new channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#sendMessageChannel">sendMessageChannel</a></dt>
+            <dd>
+                Send text message to channel or a tree of channels.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getACL">getACL</a></dt>
+            <dd>
+                Retrieve ACLs and Groups on a channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#setACL">setACL</a></dt>
+            <dd>
+                Set ACLs and Groups on a channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#addUserToGroup">addUserToGroup</a></dt>
+            <dd>
+                Temporarily add a user to a group on a channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#removeUserFromGroup">removeUserFromGroup</a></dt>
+            <dd>
+                Remove a user from a temporary group membership on a channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#redirectWhisperGroup">redirectWhisperGroup</a></dt>
+            <dd>
+                Redirect whisper targets for user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getUserNames">getUserNames</a></dt>
+            <dd>
+                Map a list of {@link User.userid} to a matching name.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getUserIds">getUserIds</a></dt>
+            <dd>
+                Map a list of user names to a matching id.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#registerUser">registerUser</a></dt>
+            <dd>
+                Register a new user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#unregisterUser">unregisterUser</a></dt>
+            <dd>
+                Remove a user registration.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#updateRegistration">updateRegistration</a></dt>
+            <dd>
+                Update the registration for a user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getRegistration">getRegistration</a></dt>
+            <dd>
+                Fetch registration for a single user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getRegisteredUsers">getRegisteredUsers</a></dt>
+            <dd>
+                Fetch a group of registered users.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#verifyPassword">verifyPassword</a></dt>
+            <dd>
+                Verify the password of a user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getTexture">getTexture</a></dt>
+            <dd>
+                Fetch user texture.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#setTexture">setTexture</a></dt>
+            <dd>
+                Set a user texture (now called avatar).</dd>
+            <dt class="Symbol"><a class="Symbol" href="#getUptime">getUptime</a></dt>
+            <dd>
+                Get virtual server uptime.</dd>
+        </dl>
+        <h2>Operations</h2>
+        <h3 class="Synopsis">bool <a class="Symbol" name="isRunning">isRunning</a>() throws <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Shows if the server currently running (accepting users).</p>
+        <h4>Return Value</h4>
+        <p>Run-state of server.</p>
+        <h3 class="Synopsis">void <a class="Symbol" name="start">start</a>() throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="ServerFailureException.html">ServerFailureException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Start server.</p>
+        <h3 class="Synopsis">void <a class="Symbol" name="stop">stop</a>() throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Stop server.</p>
+        <h3 class="Synopsis">void <a class="Symbol" name="delete">delete</a>() throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Delete server and all it's configuration.</p>
+        <h3 class="Synopsis">int <a class="Symbol" name="id">id</a>() throws <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch the server id.</p>
+        <h4>Return Value</h4>
+        <p>Unique server id.</p>
+        <h3 class="Synopsis">void <a class="Symbol" name="addCallback">addCallback</a>(<a class="Symbol" href="ServerCallback.html">ServerCallback</a>* cb) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidCallbackException.html">InvalidCallbackException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Add a callback. The callback will receive notifications about changes to users and channels.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">cb</dt>
+            <dd>
+                Callback interface which will receive notifications.</dd>
+        </dl>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#removeCallback">removeCallback</a></dt>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="removeCallback">removeCallback</a>(<a class="Symbol" href="ServerCallback.html">ServerCallback</a>* cb) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidCallbackException.html">InvalidCallbackException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Remove a callback.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">cb</dt>
+            <dd>
+                Callback interface to be removed.</dd>
+        </dl>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#addCallback">addCallback</a></dt>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="setAuthenticator">setAuthenticator</a>(<a class="Symbol" href="ServerAuthenticator.html">ServerAuthenticator</a>* auth) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidCallbackException.html">InvalidCallbackException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Set external authenticator. If set, all authentications from clients are forwarded to this
+proxy.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">auth</dt>
+            <dd>
+                Authenticator object to perform subsequent authentications.</dd>
+        </dl>
+        <h3 class="Synopsis">string <a class="Symbol" name="getConf">getConf</a>(string key) throws <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Retrieve configuration item.
+
+{@link Meta.getDefaultConf}</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">key</dt>
+            <dd>
+                Configuration key.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>Configuration value. If this is empty, see {</p>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#ConfigMap">ConfigMap</a> <a class="Symbol" name="getAllConf">getAllConf</a>() throws <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Retrieve all configuration items.
+{@link Meta.getDefaultConf} is used.</p>
+        <h4>Return Value</h4>
+        <p>All configured values. If a value isn't set here, the value from {</p>
+        <h3 class="Synopsis">void <a class="Symbol" name="setConf">setConf</a>(string key, string value) throws <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Set a configuration item.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">key</dt>
+            <dd>
+                Configuration key.</dd>
+            <dt class="Symbol">value</dt>
+            <dd>
+                Configuration value.</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="setSuperuserPassword">setSuperuserPassword</a>(string pw) throws <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Set superuser password. This is just a convenience for using {@link updateRegistration} on user id 0.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">pw</dt>
+            <dd>
+                Password.</dd>
+        </dl>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#LogList">LogList</a> <a class="Symbol" name="getLog">getLog</a>(int first, int last) throws <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch log entries.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">first</dt>
+            <dd>
+                Lowest numbered entry to fetch. 0 is the most recent item.</dd>
+            <dt class="Symbol">last</dt>
+            <dd>
+                Last entry to fetch.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>List of log entries.</p>
+        <h3 class="Synopsis">int <a class="Symbol" name="getLogLen">getLogLen</a>() throws <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch length of log</p>
+        <h4>Return Value</h4>
+        <p>Number of entries in log</p>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#UserMap">UserMap</a> <a class="Symbol" name="getUsers">getUsers</a>() throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch all users. This returns all currently connected users on the server.</p>
+        <h4>Return Value</h4>
+        <p>List of connected users.</p>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#getState">getState</a></dt>
+        </dl>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#ChannelMap">ChannelMap</a> <a class="Symbol" name="getChannels">getChannels</a>() throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch all channels. This returns all defined channels on the server. The root channel is always channel 0.</p>
+        <h4>Return Value</h4>
+        <p>List of defined channels.</p>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#getChannelState">getChannelState</a></dt>
+        </dl>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#CertificateList">CertificateList</a> <a class="Symbol" name="getCertificateList">getCertificateList</a>(int session) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSessionException.html">InvalidSessionException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch certificate of user. This returns the complete certificate chain of a user.
+{@link User.session}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">session</dt>
+            <dd>
+                Connection ID of user. See {</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>Certificate list of user.</p>
+        <h3 class="Synopsis"><a class="Symbol" href="Tree.html">Tree</a> <a class="Symbol" name="getTree">getTree</a>() throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch all channels and connected users as a tree. This retrieves an easy-to-use representation of the server
+as a tree. This is primarily used for viewing the state of the server on a webpage.</p>
+        <h4>Return Value</h4>
+        <p>Recursive tree of all channels and connected users.</p>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#BanList">BanList</a> <a class="Symbol" name="getBans">getBans</a>() throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch all current IP bans on the server.</p>
+        <h4>Return Value</h4>
+        <p>List of bans.</p>
+        <h3 class="Synopsis">void <a class="Symbol" name="setBans">setBans</a>(<a class="Symbol" href="../Murmur.html#BanList">BanList</a> bans) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Set all current IP bans on the server. This will replace any bans already present, so if you want to add a ban, be sure to call {@link getBans} and then
+append to the returned list before calling this method.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">bans</dt>
+            <dd>
+                List of bans.</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="kickUser">kickUser</a>(int session, string reason) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSessionException.html">InvalidSessionException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Kick a user. The user is not banned, and is free to rejoin the server.
+{@link User.session}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">session</dt>
+            <dd>
+                Connection ID of user. See {</dd>
+            <dt class="Symbol">reason</dt>
+            <dd>
+                Text message to show when user is kicked.</dd>
+        </dl>
+        <h3 class="Synopsis"><a class="Symbol" href="User.html">User</a> <a class="Symbol" name="getState">getState</a>(int session) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSessionException.html">InvalidSessionException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Get state of a single connected user. 
+{@link User.session}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">session</dt>
+            <dd>
+                Connection ID of user. See {</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>State of connected user.</p>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#setState">setState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="#getUsers">getUsers</a></dt>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="setState">setState</a>(<a class="Symbol" href="User.html">User</a> state) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSessionException.html">InvalidSessionException</a>, <a class="Symbol" href="InvalidChannelException.html">InvalidChannelException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Set user state. You can use this to move, mute and deafen users.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">state</dt>
+            <dd>
+                User state to set.</dd>
+        </dl>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#getState">getState</a></dt>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="sendMessage">sendMessage</a>(int session, string text) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSessionException.html">InvalidSessionException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Send text message to a single user.
+{@link User.session}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">session</dt>
+            <dd>
+                Connection ID of user. See {</dd>
+            <dt class="Symbol">text</dt>
+            <dd>
+                Message to send.</dd>
+        </dl>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#sendMessageChannel">sendMessageChannel</a></dt>
+        </dl>
+        <h3 class="Synopsis">bool <a class="Symbol" name="hasPermission">hasPermission</a>(int session, int channelid, int perm) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSessionException.html">InvalidSessionException</a>, <a class="Symbol" href="InvalidChannelException.html">InvalidChannelException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Check if user is permitted to perform action.
+{@link User.session}.
+{@link Channel.id}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">session</dt>
+            <dd>
+                Connection ID of user. See {</dd>
+            <dt class="Symbol">channelid</dt>
+            <dd>
+                ID of Channel. See {</dd>
+            <dt class="Symbol">perm</dt>
+            <dd>
+                Permission bits to check.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>true if any of the permissions in perm were set for the user.</p>
+        <h3 class="Synopsis">void <a class="Symbol" name="addContextCallback">addContextCallback</a>(int session, string action, string text, <a class="Symbol" href="ServerContextCallback.html">ServerContextCallback</a>* cb, int ctx) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidCallbackException.html">InvalidCallbackException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Add a context callback. This is done per user, and will add a context menu action for the user.
+
+
+
+
+{@link ContextServer}, {@link ContextChannel} and {@link ContextUser}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">session</dt>
+            <dd>
+                Session of user which should receive context entry.</dd>
+            <dt class="Symbol">action</dt>
+            <dd>
+                Action string, a unique name to associate with the action.</dd>
+            <dt class="Symbol">text</dt>
+            <dd>
+                Name of action shown to user.</dd>
+            <dt class="Symbol">cb</dt>
+            <dd>
+                Callback interface which will receive notifications.</dd>
+            <dt class="Symbol">ctx</dt>
+            <dd>
+                Context this should be used in. Needs to be one or a combination of {</dd>
+        </dl>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#removeContextCallback">removeContextCallback</a></dt>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="removeContextCallback">removeContextCallback</a>(<a class="Symbol" href="ServerContextCallback.html">ServerContextCallback</a>* cb) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidCallbackException.html">InvalidCallbackException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Remove a callback.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">cb</dt>
+            <dd>
+                Callback interface to be removed. This callback will be removed from all from all users.</dd>
+        </dl>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#addContextCallback">addContextCallback</a></dt>
+        </dl>
+        <h3 class="Synopsis"><a class="Symbol" href="Channel.html">Channel</a> <a class="Symbol" name="getChannelState">getChannelState</a>(int channelid) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidChannelException.html">InvalidChannelException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Get state of single channel.
+{@link Channel.id}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">channelid</dt>
+            <dd>
+                ID of Channel. See {</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>State of channel.</p>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#setChannelState">setChannelState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="#getChannels">getChannels</a></dt>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="setChannelState">setChannelState</a>(<a class="Symbol" href="Channel.html">Channel</a> state) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidChannelException.html">InvalidChannelException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Set state of a single channel. You can use this to move or relink channels.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">state</dt>
+            <dd>
+                Channel state to set.</dd>
+        </dl>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#getChannelState">getChannelState</a></dt>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="removeChannel">removeChannel</a>(int channelid) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidChannelException.html">InvalidChannelException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Remove a channel and all its subchannels.
+{@link Channel.id}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">channelid</dt>
+            <dd>
+                ID of Channel. See {</dd>
+        </dl>
+        <h3 class="Synopsis">int <a class="Symbol" name="addChannel">addChannel</a>(string name, int parent) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidChannelException.html">InvalidChannelException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Add a new channel.
+
+{@link Channel.id}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">name</dt>
+            <dd>
+                Name of new channel.</dd>
+            <dt class="Symbol">parent</dt>
+            <dd>
+                Channel ID of parent channel. See {</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>ID of newly created channel.</p>
+        <h3 class="Synopsis">void <a class="Symbol" name="sendMessageChannel">sendMessageChannel</a>(int channelid, bool tree, string text) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidChannelException.html">InvalidChannelException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Send text message to channel or a tree of channels.
+{@link Channel.id}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">channelid</dt>
+            <dd>
+                Channel ID of channel to send to. See {</dd>
+            <dt class="Symbol">tree</dt>
+            <dd>
+                If true, the message will be sent to the channel and all its subchannels.</dd>
+            <dt class="Symbol">text</dt>
+            <dd>
+                Message to send.</dd>
+        </dl>
+        <h4>See Also</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#sendMessage">sendMessage</a></dt>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="getACL">getACL</a>(int channelid, out <a class="Symbol" href="../Murmur.html#ACLList">ACLList</a> acls, out <a class="Symbol" href="../Murmur.html#GroupList">GroupList</a> groups, out bool inherit) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidChannelException.html">InvalidChannelException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Retrieve ACLs and Groups on a channel.
+{@link Channel.id}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">channelid</dt>
+            <dd>
+                Channel ID of channel to fetch from. See {</dd>
+            <dt class="Symbol">acls</dt>
+            <dd>
+                List of ACLs on the channel. This will include inherited ACLs.</dd>
+            <dt class="Symbol">groups</dt>
+            <dd>
+                List of groups on the channel. This will include inherited groups.</dd>
+            <dt class="Symbol">inherit</dt>
+            <dd>
+                Does this channel inherit ACLs from the parent channel?</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="setACL">setACL</a>(int channelid, <a class="Symbol" href="../Murmur.html#ACLList">ACLList</a> acls, <a class="Symbol" href="../Murmur.html#GroupList">GroupList</a> groups, bool inherit) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidChannelException.html">InvalidChannelException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Set ACLs and Groups on a channel. Note that this will replace all existing ACLs and groups on the channel.
+{@link Channel.id}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">channelid</dt>
+            <dd>
+                Channel ID of channel to fetch from. See {</dd>
+            <dt class="Symbol">acls</dt>
+            <dd>
+                List of ACLs on the channel.</dd>
+            <dt class="Symbol">groups</dt>
+            <dd>
+                List of groups on the channel.</dd>
+            <dt class="Symbol">inherit</dt>
+            <dd>
+                Should this channel inherit ACLs from the parent channel?</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="addUserToGroup">addUserToGroup</a>(int channelid, int session, string group) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidChannelException.html">InvalidChannelException</a>, <a class="Symbol" href="InvalidSessionException.html">InvalidSessionException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Temporarily add a user to a group on a channel. This state is not saved, and is intended for temporary memberships.
+{@link Channel.id}.
+{@link User.session}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">channelid</dt>
+            <dd>
+                Channel ID of channel to add to. See {</dd>
+            <dt class="Symbol">session</dt>
+            <dd>
+                Connection ID of user. See {</dd>
+            <dt class="Symbol">group</dt>
+            <dd>
+                Group name to add to.</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="removeUserFromGroup">removeUserFromGroup</a>(int channelid, int session, string group) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidChannelException.html">InvalidChannelException</a>, <a class="Symbol" href="InvalidSessionException.html">InvalidSessionException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Remove a user from a temporary group membership on a channel. This state is not saved, and is intended for temporary memberships.
+{@link Channel.id}.
+{@link User.session}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">channelid</dt>
+            <dd>
+                Channel ID of channel to add to. See {</dd>
+            <dt class="Symbol">session</dt>
+            <dd>
+                Connection ID of user. See {</dd>
+            <dt class="Symbol">group</dt>
+            <dd>
+                Group name to remove from.</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="redirectWhisperGroup">redirectWhisperGroup</a>(int session, string source, string target) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSessionException.html">InvalidSessionException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Redirect whisper targets for user. If set, whenever a user tries to whisper to group "source", the whisper will be redirected to group "target".
+To remove a redirect pass an empty target string. This is intended for context groups.
+{@link User.session}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">session</dt>
+            <dd>
+                Connection ID of user. See {</dd>
+            <dt class="Symbol">source</dt>
+            <dd>
+                Group name to redirect from.</dd>
+            <dt class="Symbol">target</dt>
+            <dd>
+                Group name to redirect to.</dd>
+        </dl>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#NameMap">NameMap</a> <a class="Symbol" name="getUserNames">getUserNames</a>(<a class="Symbol" href="../Murmur.html#IdList">IdList</a> ids) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Map a list of {@link User.userid} to a matching name.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">List</dt>
+            <dd>
+                of ids.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>Matching list of names, with an empty string representing invalid or unknown ids.</p>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#IdMap">IdMap</a> <a class="Symbol" name="getUserIds">getUserIds</a>(<a class="Symbol" href="../Murmur.html#NameList">NameList</a> names) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Map a list of user names to a matching id.
+
+@reuturn List of matching ids, with -1 representing invalid or unknown user names.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">List</dt>
+            <dd>
+                of names.</dd>
+        </dl>
+        <h3 class="Synopsis">int <a class="Symbol" name="registerUser">registerUser</a>(<a class="Symbol" href="../Murmur.html#UserInfoMap">UserInfoMap</a> info) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidUserException.html">InvalidUserException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Register a new user.
+
+{@link RegisteredUser.userid}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">info</dt>
+            <dd>
+                Information about new user. Must include at least "name".</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>The ID of the user. See {</p>
+        <h3 class="Synopsis">void <a class="Symbol" name="unregisterUser">unregisterUser</a>(int userid) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidUserException.html">InvalidUserException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Remove a user registration.
+{@link RegisteredUser.userid}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">userid</dt>
+            <dd>
+                ID of registered user. See {</dd>
+        </dl>
+        <h3 class="Synopsis">void <a class="Symbol" name="updateRegistration">updateRegistration</a>(int userid, <a class="Symbol" href="../Murmur.html#UserInfoMap">UserInfoMap</a> info) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidUserException.html">InvalidUserException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Update the registration for a user. You can use this to set the email or password of a user,
+and can also use it to change the user's name.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">registration</dt>
+            <dd>
+                Updated registration record.</dd>
+        </dl>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#UserInfoMap">UserInfoMap</a> <a class="Symbol" name="getRegistration">getRegistration</a>(int userid) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidUserException.html">InvalidUserException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch registration for a single user.
+{@link RegisteredUser.userid}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">userid</dt>
+            <dd>
+                ID of registered user. See {</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>Registration record.</p>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#NameMap">NameMap</a> <a class="Symbol" name="getRegisteredUsers">getRegisteredUsers</a>(string filter) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch a group of registered users.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">filter</dt>
+            <dd>
+                Substring of user name. If blank, will retrieve all registered users.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>List of registration records.</p>
+        <h3 class="Synopsis">int <a class="Symbol" name="verifyPassword">verifyPassword</a>(string name, string pw) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Verify the password of a user. You can use this to verify a user's credentials.
+{@link RegisteredUser.name}.
+
+{@link RegisteredUser.userid}), -1 for failed authentication or -2 for unknown usernames.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">name</dt>
+            <dd>
+                User name. See {</dd>
+            <dt class="Symbol">pw</dt>
+            <dd>
+                User password.</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>User ID of registered user (See {</p>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#Texture">Texture</a> <a class="Symbol" name="getTexture">getTexture</a>(int userid) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidUserException.html">InvalidUserException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Fetch user texture. Textures are stored as zlib compress()ed 600x60 32-bit BGRA data.
+{@link RegisteredUser.userid}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">userid</dt>
+            <dd>
+                ID of registered user. See {</dd>
+        </dl>
+        <h4>Return Value</h4>
+        <p>Custom texture associated with user or an empty texture.</p>
+        <h3 class="Synopsis">void <a class="Symbol" name="setTexture">setTexture</a>(int userid, <a class="Symbol" href="../Murmur.html#Texture">Texture</a> tex) throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidUserException.html">InvalidUserException</a>, <a class="Symbol" href="InvalidTextureException.html">InvalidTextureException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Set a user texture (now called avatar).
+{@link RegisteredUser.userid}.</p>
+        <h4>Parameters</h4>
+        <dl>
+            <dt class="Symbol">userid</dt>
+            <dd>
+                ID of registered user. See {</dd>
+            <dt class="Symbol">tex</dt>
+            <dd>
+                Texture (as a Byte-Array) to set for the user, or an empty texture to remove the existing texture.</dd>
+        </dl>
+        <h3 class="Synopsis">int <a class="Symbol" name="getUptime">getUptime</a>() throws <a class="Symbol" href="ServerBootedException.html">ServerBootedException</a>, <a class="Symbol" href="InvalidSecretException.html">InvalidSecretException</a></h3>
+        <p>
+Get virtual server uptime.</p>
+        <h4>Return Value</h4>
+        <p>Uptime of the virtual server in seconds</p>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="MurmurException.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ServerAuthenticator.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/ServerBootedException.html
@@ -0,0 +1,104 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::ServerBootedException
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ServerAuthenticator.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ServerCallback.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::ServerBootedException</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">exception ServerBootedException
+                extends 
+                    <a class="Symbol" href="MurmurException.html">MurmurException</a></h3>
+        <p>
+This happens if you try to fetch user or channel state on a stopped server, if you try to stop an already stopped server or start an already started server.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#addCallback">Server::addCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#addChannel">Server::addChannel</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#addContextCallback">Server::addContextCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#addUserToGroup">Server::addUserToGroup</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#delete">Server::delete</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getACL">Server::getACL</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getBans">Server::getBans</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getCertificateList">Server::getCertificateList</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getChannelState">Server::getChannelState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getChannels">Server::getChannels</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getRegisteredUsers">Server::getRegisteredUsers</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getRegistration">Server::getRegistration</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getState">Server::getState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getTexture">Server::getTexture</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getTree">Server::getTree</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getUptime">Server::getUptime</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getUserIds">Server::getUserIds</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getUserNames">Server::getUserNames</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getUsers">Server::getUsers</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#hasPermission">Server::hasPermission</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#kickUser">Server::kickUser</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#redirectWhisperGroup">Server::redirectWhisperGroup</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#registerUser">Server::registerUser</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#removeCallback">Server::removeCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#removeChannel">Server::removeChannel</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#removeContextCallback">Server::removeContextCallback</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#removeUserFromGroup">Server::removeUserFromGroup</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#sendMessage">Server::sendMessage</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#sendMessageChannel">Server::sendMessageChannel</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setACL">Server::setACL</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setAuthenticator">Server::setAuthenticator</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setBans">Server::setBans</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setChannelState">Server::setChannelState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setState">Server::setState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setTexture">Server::setTexture</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#start">Server::start</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#stop">Server::stop</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#unregisterUser">Server::unregisterUser</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#updateRegistration">Server::updateRegistration</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#verifyPassword">Server::verifyPassword</a></dt>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ServerAuthenticator.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="ServerCallback.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/User.html
@@ -0,0 +1,260 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::User
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="Tree.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="UserInfo.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::User</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">struct User</h3>
+        <p>
+A connected user.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#UserList">UserList</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#UserMap">UserMap</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getState">Server::getState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#setState">Server::setState</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="ServerCallback.html#userConnected">ServerCallback::userConnected</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="ServerCallback.html#userDisconnected">ServerCallback::userDisconnected</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="ServerCallback.html#userStateChanged">ServerCallback::userStateChanged</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="ServerContextCallback.html#contextAction">ServerContextCallback::contextAction</a></dt>
+        </dl>
+        <h2>Data Member Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#session">session</a></dt>
+            <dd>
+                Session ID.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#userid">userid</a></dt>
+            <dd>
+                User ID.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#mute">mute</a></dt>
+            <dd>
+                Is user muted by the server?</dd>
+            <dt class="Symbol"><a class="Symbol" href="#deaf">deaf</a></dt>
+            <dd>
+                Is user deafened by the server? If true, this implies mute.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#suppress">suppress</a></dt>
+            <dd>
+                Is the user suppressed by the server? This means the user is not muted, but does not have speech privileges in the current channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#prioritySpeaker">prioritySpeaker</a></dt>
+            <dd>
+                Is the user a priority speaker?</dd>
+            <dt class="Symbol"><a class="Symbol" href="#selfMute">selfMute</a></dt>
+            <dd>
+                Is the user self-muted?</dd>
+            <dt class="Symbol"><a class="Symbol" href="#selfDeaf">selfDeaf</a></dt>
+            <dd>
+                Is the user self-deafened? If true, this implies mute.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#recording">recording</a></dt>
+            <dd>
+                Is the User recording? (This flag is read-only and cannot be changed using setState().)</dd>
+            <dt class="Symbol"><a class="Symbol" href="#channel">channel</a></dt>
+            <dd>
+                Channel ID the user is in.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#name">name</a></dt>
+            <dd>
+                The name of the user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#onlinesecs">onlinesecs</a></dt>
+            <dd>
+                Seconds user has been online.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#bytespersec">bytespersec</a></dt>
+            <dd>
+                Average transmission rate in bytes per second over the last few seconds.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#version">version</a></dt>
+            <dd>
+                Client version.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#release">release</a></dt>
+            <dd>
+                Client release.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#os">os</a></dt>
+            <dd>
+                Client OS.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#osversion">osversion</a></dt>
+            <dd>
+                Client OS Version.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#identity">identity</a></dt>
+            <dd>
+                Plugin Identity.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#context">context</a></dt>
+            <dd>
+                Plugin context.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#comment">comment</a></dt>
+            <dd>
+                User comment.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#address">address</a></dt>
+            <dd>
+                Client address.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#tcponly">tcponly</a></dt>
+            <dd>
+                TCP only.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#idlesecs">idlesecs</a></dt>
+            <dd>
+                Idle time.</dd>
+        </dl>
+        <h2>Data Members</h2>
+        <dl>
+            <dt class="Symbol">int <a class="Symbol" name="session">session</a>;</dt>
+            <dd>
+                <p>
+Session ID. This identifies the connection to the server.</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="userid">userid</a>;</dt>
+            <dd>
+                <p>
+User ID. -1 if the user is anonymous.</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="mute">mute</a>;</dt>
+            <dd>
+                <p>
+Is user muted by the server?</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="deaf">deaf</a>;</dt>
+            <dd>
+                <p>
+Is user deafened by the server? If true, this implies mute.</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="suppress">suppress</a>;</dt>
+            <dd>
+                <p>
+Is the user suppressed by the server? This means the user is not muted, but does not have speech privileges in the current channel.</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="prioritySpeaker">prioritySpeaker</a>;</dt>
+            <dd>
+                <p>
+Is the user a priority speaker?</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="selfMute">selfMute</a>;</dt>
+            <dd>
+                <p>
+Is the user self-muted?</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="selfDeaf">selfDeaf</a>;</dt>
+            <dd>
+                <p>
+Is the user self-deafened? If true, this implies mute.</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="recording">recording</a>;</dt>
+            <dd>
+                <p>
+Is the User recording? (This flag is read-only and cannot be changed using setState().)</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="channel">channel</a>;</dt>
+            <dd>
+                <p>
+Channel ID the user is in. Matches {@link Channel.id}.</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="name">name</a>;</dt>
+            <dd>
+                <p>
+The name of the user.</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="onlinesecs">onlinesecs</a>;</dt>
+            <dd>
+                <p>
+Seconds user has been online.</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="bytespersec">bytespersec</a>;</dt>
+            <dd>
+                <p>
+Average transmission rate in bytes per second over the last few seconds.</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="version">version</a>;</dt>
+            <dd>
+                <p>
+Client version. Major version in upper 16 bits, followed by 8 bits of minor version and 8 bits of patchlevel. Version 1.2.3 = 0x010203.</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="release">release</a>;</dt>
+            <dd>
+                <p>
+Client release. For official releases, this equals the version. For snapshots and git compiles, this will be something else.</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="os">os</a>;</dt>
+            <dd>
+                <p>
+Client OS.</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="osversion">osversion</a>;</dt>
+            <dd>
+                <p>
+Client OS Version.</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="identity">identity</a>;</dt>
+            <dd>
+                <p>
+Plugin Identity. This will be the user's unique ID inside the current game.</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="context">context</a>;</dt>
+            <dd>
+                <p>
+Plugin context. This is a binary blob identifying the game and team the user is on.</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="comment">comment</a>;</dt>
+            <dd>
+                <p>
+User comment. Shown as tooltip for this user.</p>
+            </dd>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#NetAddress">NetAddress</a> <a class="Symbol" name="address">address</a>;</dt>
+            <dd>
+                <p>
+Client address.</p>
+            </dd>
+            <dt class="Symbol">bool <a class="Symbol" name="tcponly">tcponly</a>;</dt>
+            <dd>
+                <p>
+TCP only. True until UDP connectivity is established.</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="idlesecs">idlesecs</a>;</dt>
+            <dd>
+                <p>
+Idle time. This is how many seconds it is since the user last spoke. Other activity is not counted.</p>
+            </dd>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="Tree.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="UserInfo.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/Ban.html
@@ -0,0 +1,125 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::Ban
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ACL.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="Channel.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::Ban</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">struct Ban</h3>
+        <p>
+A single ip mask for a ban.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#BanList">BanList</a></dt>
+        </dl>
+        <h2>Data Member Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#address">address</a></dt>
+            <dd>
+                Address to ban.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#bits">bits</a></dt>
+            <dd>
+                Number of bits in ban to apply.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#name">name</a></dt>
+            <dd>
+                Username associated with ban.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#hash">hash</a></dt>
+            <dd>
+                Hash of banned user.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#reason">reason</a></dt>
+            <dd>
+                Reason for ban.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#start">start</a></dt>
+            <dd>
+                Date ban was applied in unix time format.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#duration">duration</a></dt>
+            <dd>
+                Duration of ban.</dd>
+        </dl>
+        <h2>Data Members</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#NetAddress">NetAddress</a> <a class="Symbol" name="address">address</a>;</dt>
+            <dd>
+                <p>
+Address to ban.</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="bits">bits</a>;</dt>
+            <dd>
+                <p>
+Number of bits in ban to apply.</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="name">name</a>;</dt>
+            <dd>
+                <p>
+Username associated with ban.</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="hash">hash</a>;</dt>
+            <dd>
+                <p>
+Hash of banned user.</p>
+            </dd>
+            <dt class="Symbol">string <a class="Symbol" name="reason">reason</a>;</dt>
+            <dd>
+                <p>
+Reason for ban.</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="start">start</a>;</dt>
+            <dd>
+                <p>
+Date ban was applied in unix time format.</p>
+            </dd>
+            <dt class="Symbol">int <a class="Symbol" name="duration">duration</a>;</dt>
+            <dd>
+                <p>
+Duration of ban.</p>
+            </dd>
+        </dl>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ACL.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="Channel.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/Ice/Murmur/Tree.html
@@ -0,0 +1,86 @@
+<!-- Generated by Ice version 3.3.1 -->
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+    <head>
+        <title>
+            Murmur::Tree
+        </title>
+    </head>
+    <body>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ServerUpdatingAuthenticator.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="User.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+        <hr>
+        <h1 class="Symbol">Murmur::Tree</h1>
+        <h2>Overview</h2>
+        <h3 class="Synopsis">class Tree</h3>
+        <p>
+User and subchannel state. Read-only.</p>
+        <h4>Used By</h4>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="../Murmur.html#TreeList">TreeList</a></dt>
+            <dt class="Symbol"><a class="Symbol" href="Server.html#getTree">Server::getTree</a></dt>
+        </dl>
+        <h2>Data Member Index</h2>
+        <dl>
+            <dt class="Symbol"><a class="Symbol" href="#c">c</a></dt>
+            <dd>
+                Channel definition of current channel.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#children">children</a></dt>
+            <dd>
+                List of subchannels.</dd>
+            <dt class="Symbol"><a class="Symbol" href="#users">users</a></dt>
+            <dd>
+                Users in this channel.</dd>
+        </dl>
+        <h2>Data Members</h2>
+        <h3 class="Synopsis"><a class="Symbol" href="Channel.html">Channel</a> <a class="Symbol" name="c">c</a>;</h3>
+        <p>
+Channel definition of current channel.</p>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#TreeList">TreeList</a> <a class="Symbol" name="children">children</a>;</h3>
+        <p>
+List of subchannels.</p>
+        <h3 class="Synopsis"><a class="Symbol" href="../Murmur.html#UserList">UserList</a> <a class="Symbol" name="users">users</a>;</h3>
+        <p>
+Users in this channel.</p>
+        <hr>
+        <!-- SwishCommand noindex -->
+        <table class="HeaderFooter">
+            <tr>
+                <td align="left">
+                    <table>
+                        <tr>
+                            <td><a href="../index.html">Home</a></td>
+                            <td><a href="ServerUpdatingAuthenticator.html">Previous</a></td>
+                            <td><a href="../Murmur.html">Up</a></td>
+                            <td><a href="User.html">Next</a></td>
+                            <td><a href="../_sindex.html">Index</a></td>
+                        </tr>
+                    </table>
+                </td>
+                <td align="center"></td>
+                <td align="right"></td>
+            </tr>
+        </table>
+        <!-- SwishCommand index -->
+        
+    </body>
+</html>
--- mumble-1.2.3-87-gf7d8711.orig/src/CryptState.cpp
+++ mumble-1.2.3-87-gf7d8711/src/CryptState.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/Group.cpp
+++ mumble-1.2.3-87-gf7d8711/src/Group.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/Message.h
+++ mumble-1.2.3-87-gf7d8711/src/Message.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -59,8 +59,7 @@
 	MUMBLE_MH_MSG(CodecVersion) \
 	MUMBLE_MH_MSG(UserStats) \
 	MUMBLE_MH_MSG(RequestBlob) \
-	MUMBLE_MH_MSG(ServerConfig) \
-	MUMBLE_MH_MSG(SuggestConfig)
+	MUMBLE_MH_MSG(ServerConfig)
 
 class MessageHandler {
 	public:
--- mumble-1.2.3-87-gf7d8711.orig/src/Net.cpp
+++ mumble-1.2.3-87-gf7d8711/src/Net.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/Group.h
+++ mumble-1.2.3-87-gf7d8711/src/Group.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/SSL.h
+++ mumble-1.2.3-87-gf7d8711/src/SSL.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/Channel.cpp
+++ mumble-1.2.3-87-gf7d8711/src/Channel.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/ACL.h
+++ mumble-1.2.3-87-gf7d8711/src/ACL.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/Net.h
+++ mumble-1.2.3-87-gf7d8711/src/Net.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -31,10 +31,6 @@
 #ifndef _NET_H
 #define _NET_H
 
-#ifndef DEFAULT_MUMBLE_PORT 
-#define DEFAULT_MUMBLE_PORT 64738
-#endif
-
 #include "murmur_pch.h"
 
 struct HostAddress {
--- mumble-1.2.3-87-gf7d8711.orig/src/Timer.cpp
+++ mumble-1.2.3-87-gf7d8711/src/Timer.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -31,17 +31,15 @@
 #include <QtCore>
 #include "Timer.h"
 
-Timer::Timer(bool start) {
-	uiStart = start ? now() : 0;
+Timer::Timer() {
+	uiStart = now();
 }
 
 quint64 Timer::elapsed() const {
-	Q_ASSERT(uiStart != 0);
 	return now() - uiStart;
 }
 
 bool Timer::isElapsed(quint64 us) {
-	Q_ASSERT(uiStart != 0);
 	if (elapsed() > us) {
 		uiStart += us;
 		return true;
@@ -56,18 +54,6 @@ quint64 Timer::restart() {
 	return e;
 }
 
-bool Timer::isStarted() const {
-	return uiStart != 0;
-}
-
-bool Timer::operator<(const Timer &other) const {
-	return uiStart > other.uiStart;
-}
-
-bool Timer::operator>(const Timer &other) const {
-	return uiStart < other.uiStart;
-}
-
 #if defined(Q_OS_WIN)
 #include <windows.h>
 
--- mumble-1.2.3-87-gf7d8711.orig/src/OSInfo.h
+++ mumble-1.2.3-87-gf7d8711/src/OSInfo.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/User.h
+++ mumble-1.2.3-87-gf7d8711/src/User.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/Mumble.proto
+++ mumble-1.2.3-87-gf7d8711/src/Mumble.proto
@@ -269,12 +269,6 @@ message UserStats {
 	optional bool strong_certificate = 18 [default = false];
 }
 
-message SuggestConfig {
-	optional uint32 version = 1;
-	optional bool positional = 2;
-	optional bool push_to_talk = 3;
-}
-
 message RequestBlob {
 	repeated uint32 session_texture = 1;
 	repeated uint32 session_comment = 2;
--- mumble-1.2.3-87-gf7d8711.orig/src/ACL.cpp
+++ mumble-1.2.3-87-gf7d8711/src/ACL.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -92,7 +92,9 @@ bool ChanACL::hasPermission(ServerUser *
 	}
 
 	// Default permissions
-	Permissions def = Traverse | Enter | Speak | Whisper | TextMessage;
+//	Permissions def = Traverse | Enter | Speak | Whisper | TextMessage;
+/* zhenkai */
+Permissions def = Enter | Speak;
 
 	granted = def;
 
--- mumble-1.2.3-87-gf7d8711.orig/src/PacketDataStream.h
+++ mumble-1.2.3-87-gf7d8711/src/PacketDataStream.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/SSL.cpp
+++ mumble-1.2.3-87-gf7d8711/src/SSL.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -28,9 +28,9 @@
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
+#include <QtNetwork>
 #include "SSL.h"
 #include "Version.h"
-#include <QtNetwork>
 
 /* CAs we recommend to end users, so support these */
 
@@ -213,7 +213,7 @@ void MumbleSSL::addSystemCA() {
 	QStringList qsl;
 
 #ifdef SYSTEM_CA_DIR
-	QSslSocket::addDefaultCaCertificates(QLatin1String(MUMTEXT(SYSTEM_CA_DIR)));
+	QSslSocket::addDefaultCaCertificates(MUMTEXT(SYSTEM_CA_DIR));
 #else
 #ifdef SYSTEM_CA_BUNDLE
 	qsl << QLatin1String(MUMTEXT(SYSTEM_CA_BUNDLE));
--- mumble-1.2.3-87-gf7d8711.orig/src/Connection.h
+++ mumble-1.2.3-87-gf7d8711/src/Connection.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble.pri
+++ mumble-1.2.3-87-gf7d8711/src/mumble.pri
@@ -1,12 +1,12 @@
 include(../compiler.pri)
 
-VERSION		= 1.2.4
+VERSION		= 1.2.3
 DIST		= mumble.pri Message.h PacketDataStream.h CryptState.h Timer.h Version.h OSInfo.h SSL.h Mumble.proto
 CONFIG		+= qt thread debug_and_release warn_on
 DEFINES		*= MUMBLE_VERSION_STRING=$$VERSION
 INCLUDEPATH	+= $$PWD .
 VPATH		+= $$PWD
-HEADERS		*= ACL.h Channel.h CryptState.h Connection.h Group.h User.h Net.h OSInfo.h Timer.h SSL.h Version.h
+HEADERS		*= ACL.h Group.h Channel.h Connection.h User.h Net.h
 SOURCES 	*= Mumble.pb.cc ACL.cpp Group.cpp Channel.cpp Connection.cpp User.cpp Timer.cpp CryptState.cpp OSInfo.cpp Net.cpp SSL.cpp Version.cpp
 PROTOBUF	*= ../Mumble.proto
 
--- mumble-1.2.3-87-gf7d8711.orig/src/Timer.h
+++ mumble-1.2.3-87-gf7d8711/src/Timer.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -33,24 +33,15 @@
 
 // All timer resolutions are in microseconds.
 
-class Timer {
-	protected:
-		quint64 uiStart;
-		static quint64 now();
-	public:
-		Timer(bool start = true);
-		bool isElapsed(quint64 us);
-		quint64 elapsed() const;
-		quint64 restart();
-		bool isStarted() const;
-
-		/*! Compares the elapsed time, not the start time
-		 */
-		bool operator<(const Timer &other) const;
-
-		/*! Compares the elapsed time, not the start time
-		 */
-		bool operator>(const Timer &other) const;
+struct Timer {
+protected:
+	quint64 uiStart;
+	static quint64 now();
+public:
+	Timer();
+	bool isElapsed(quint64 us);
+	quint64 elapsed() const;
+	quint64 restart();
 };
 
 #endif
--- mumble-1.2.3-87-gf7d8711.orig/src/Version.h
+++ mumble-1.2.3-87-gf7d8711/src/Version.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2010-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2010, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -38,7 +38,7 @@
 #define MUMTEXT(X) MUMXTEXT(X)
 
 #ifndef MUMBLE_VERSION
-#define MUMBLE_VERSION 1.2.3-87-gf7d8711
+#define MUMBLE_VERSION 1.2.3
 #endif
 #ifndef MUMBLE_VERSION
 #define MUMBLE_RELEASE "Compiled " __DATE__ " " __TIME__
@@ -49,7 +49,6 @@
 class MumbleVersion {
 	public:
 		static unsigned int getRaw(const QString &version = QLatin1String(MUMTEXT(MUMBLE_VERSION_STRING)));
-		static QString toString(unsigned int version);
 		static bool get(int *major, int *minor, int *patch, const QString &version = QLatin1String(MUMTEXT(MUMBLE_VERSION_STRING)));
 
 		static unsigned int toRaw(int major, int minor, int patch);
--- mumble-1.2.3-87-gf7d8711.orig/src/User.cpp
+++ mumble-1.2.3-87-gf7d8711/src/User.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/Channel.h
+++ mumble-1.2.3-87-gf7d8711/src/Channel.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/nurnur_patch.py
@@ -0,0 +1,184 @@
+#!/usr/bin/python
+import shutil
+import re
+import sys
+
+# patch ACL.cpp
+subs = "/* zhenkai */\nPermissions def = Enter | Speak;\n"
+
+try:
+	f = open('ACL.cpp', 'r')
+	o = open('ACL.temp', 'w')
+	comment = False
+	for line in f:
+
+		if re.search(r"Default permission", line):
+			comment = True
+			o.write(line)
+			continue
+
+		if comment:
+			o.write("//" + line)
+			o.write(subs)
+			comment = False
+			print "Patch 1: ACL.cpp patched"
+		else: 
+			o.write(line)
+
+
+	f.close()
+	o.close()
+	shutil.move('ACL.temp', 'ACL.cpp')
+except IOError:
+	print "IOError"
+	sys.exit()
+
+# patch murmur/Message.cpp
+subs = "/* yangxu */\npGroupManager->setLocalUser(uSource);\n"
+try:
+	f = open('murmur/Messages.cpp', 'r')
+	o = open('murmur/Messages.temp', 'w')
+	for line in f:
+		o.write(line)
+		if re.search(r"emit userConnected", line):
+			o.write(subs)
+			print "Patch 2: murmur/Messages.cpp patched"
+	f.close()
+	o.close()
+	shutil.move('murmur/Messages.temp', 'murmur/Messages.cpp')
+except IOError:
+	print "IOError"
+	sys.exit()
+
+
+# patch murmur/Server.h
+headers = '/* yangxu */\n#include "GroupManager/GroupManager.h"\n#include "MediaProcess/media_pro.h"\n'
+
+subs = '''
+        /* yangxu */
+    private:
+        GroupManager *pGroupManager;
+        NdnMediaProcess ndnMediaPro;
+
+    public slots:
+        // cheat localUsers to treat remotuser
+        void newRemoteClient(RemoteUser *);
+        void delRemoteClient(int);
+
+        /* senwang*/
+    public slots:
+        void receiveRemoteData(QString strUserName);
+		'''
+try:
+	f = open('murmur/Server.h', 'r')
+	o = open('murmur/Server.h.temp', 'w')
+	for line in f:
+		o.write(line)
+		if re.search(r"DBus.h", line):
+			o.write(headers)
+			print "Patch 4: headers murmur/Server.h patched"
+		if re.search(r"void dblog", line):
+			o.write(subs)
+			print "Patch 3: subs in murmur/Server.h patched"
+
+
+	f.close()
+	o.close()
+	shutil.move('murmur/Server.h.temp', 'murmur/Server.h')
+except IOError:
+	print "IOError"
+	sys.exit()
+			
+
+# patch murmur/Server.cpp
+add_del_remoteusers = '''
+/* yangxu */
+void Server::newRemoteClient(RemoteUser *u) {
+    MumbleProto::UserState mpus;
+    mpus.set_session(u->uiSession);
+    mpus.set_name(u->qsName.toLocal8Bit().constData());
+
+    sendAll(mpus);
+}
+
+void Server::delRemoteClient(int uid) {
+    MumbleProto::UserRemove mpur;
+    mpur.set_session(uid);
+
+    sendAll(mpur);
+}
+'''
+
+p_group_manager = '''
+    /* yangxu */
+    pGroupManager = new GroupManager(&ndnMediaPro);
+    connect(pGroupManager, SIGNAL(remoteUserJoin(RemoteUser *)), this, SLOT(newRemoteClient(RemoteUser *)));
+    connect(pGroupManager, SIGNAL(remoteUserLeave(int)), this, SLOT(delRemoteClient(int)));
+
+   connect(&ndnMediaPro.ndnState, SIGNAL(remoteMediaArrivalSig(QString)),
+        this, SLOT(receiveRemoteData(QString)));
+'''
+
+remote_data = '''
+/* senwang*/
+void Server::receiveRemoteData(QString strUserName) {
+
+    int res = 0;
+    QByteArray qba;
+    char buf[5000];
+    res = ndnMediaPro.getRemoteMedia(strUserName, buf, sizeof(buf));
+    if (res <= 0) return;
+    QHash<unsigned int, ServerUser *>::const_iterator i;
+    for (i = qhUsers.constBegin(); i != qhUsers.constEnd(); i++ ) {
+        sendMessage(i.value(), buf, res, qba, true);
+	}
+
+}
+'''
+
+distribute_data = '''
+            /* senwang*/
+            QString strFullName = pGroupManager->getFullLocalName();
+            ndnMediaPro.sendLocalMedia(strFullName,buffer, len);
+'''
+
+leave_note = '''
+	/* zhenkai */
+	// send out leave notification
+	pGroupManager->sendLeaveInterest();
+
+	/* zhenkai */
+	// close murmurd after the call is finished
+	std::exit(0);
+'''
+
+try:
+	f = open('murmur/Server.cpp', 'r')
+	o = open('murmur/Server.cpp.temp', 'w')
+	speech = False
+	for line in f:
+		o.write(line)
+		if re.search(r"define UDP_PACKET_SIZE", line):
+			o.write(add_del_remoteusers)
+			print "Patch 5: add_del_remoteusers in murmur/Server.cpp patched"
+		if re.search(r"initializeCert", line):
+			o.write(p_group_manager)
+			print "Patch 6: p_group_manager in murmur/Server.cpp patched"
+		if re.search(r"Normal speech", line):
+			speech = True
+		if  speech and re.search(r"SENDTO", line):
+			o.write(distribute_data)
+			print "Patch 7: distribute_data in murmur/Server.cpp patched"
+			speech = False
+		if re.search(r"u->deleteLater", line):
+			o.write(leave_note)
+			print "Patch 8: leave_note in murmur/Server.cpp patched"
+	o.write(remote_data)	
+	print "Patch 9: remote_data in murmur/Server.cpp patched"
+
+	f.close()
+	o.close()
+	shutil.move('murmur/Server.cpp.temp', 'murmur/Server.cpp')
+except IOError:
+	print "IOError"
+	sys.exit()
--- mumble-1.2.3-87-gf7d8711.orig/src/OSInfo.cpp
+++ mumble-1.2.3-87-gf7d8711/src/OSInfo.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/CryptState.h
+++ mumble-1.2.3-87-gf7d8711/src/CryptState.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/Version.cpp
+++ mumble-1.2.3-87-gf7d8711/src/Version.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2010-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2010, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -40,12 +40,6 @@ unsigned int MumbleVersion::getRaw(const
 	return 0;
 }
 
-QString MumbleVersion::toString(unsigned int v) {
-	int major, minor, patch;
-	fromRaw(v, &major, &minor, &patch);
-	return QString::fromLatin1("%1.%2.%3").arg(major).arg(minor).arg(patch);
-}
-
 bool MumbleVersion::get(int *major, int *minor, int *patch, const QString &version) {
 	QRegExp rx(QLatin1String("(\\d+)\\.(\\d+)\\.(\\d+)"));
 
--- mumble-1.2.3-87-gf7d8711.orig/src/Connection.cpp
+++ mumble-1.2.3-87-gf7d8711/src/Connection.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/bonjour/bonjourserviceresolver.cpp
+++ mumble-1.2.3-87-gf7d8711/src/bonjour/bonjourserviceresolver.cpp
@@ -1,6 +1,6 @@
 /*
 Copyright (c) 2007, Trenton Schulz
-Copyright (C) 2009-2011, Thorvald Natvig <thorvald@natvig.com>
+Copyright (C) 2009-2010, Thorvald Natvig <thorvald@natvig.com>
 
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:
--- mumble-1.2.3-87-gf7d8711.orig/src/bonjour/bonjourserviceresolver.h
+++ mumble-1.2.3-87-gf7d8711/src/bonjour/bonjourserviceresolver.h
@@ -1,7 +1,7 @@
 /*
 Copyright (c) 2007, Trenton Schulz
-Copyright (c) 2009-2011, Stefan Hacker
-Copyright (C) 2009-2011, Thorvald Natvig <thorvald@natvig.com>
+Copyright (c) 2009-2010, Stefan Hacker
+Copyright (C) 2009-2010, Thorvald Natvig <thorvald@natvig.com>
 
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:
--- mumble-1.2.3-87-gf7d8711.orig/src/bonjour/bonjourservicebrowser.h
+++ mumble-1.2.3-87-gf7d8711/src/bonjour/bonjourservicebrowser.h
@@ -1,6 +1,6 @@
 /*
 Copyright (c) 2007, Trenton Schulz
-Copyright (c) 2009-2011, Stefan Hacker
+Copyright (c) 2009, Stefan Hacker
 
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:
--- mumble-1.2.3-87-gf7d8711.orig/src/bonjour/bonjourserviceregister.h
+++ mumble-1.2.3-87-gf7d8711/src/bonjour/bonjourserviceregister.h
@@ -1,6 +1,6 @@
 /*
 Copyright (c) 2007, Trenton Schulz
-Copyright (c) 2009-2011, Stefan Hacker
+Copyright (c) 2009, Stefan Hacker
 
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:
--- mumble-1.2.3-87-gf7d8711.orig/src/bonjour/bonjourserviceregister.cpp
+++ mumble-1.2.3-87-gf7d8711/src/bonjour/bonjourserviceregister.cpp
@@ -1,6 +1,6 @@
 /*
 Copyright (c) 2007, Trenton Schulz
-Copyright (c) 2009-2011, Stefan Hacker
+Copyright (c) 2009, Stefan Hacker
 
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:
@@ -53,9 +53,7 @@ void BonjourServiceRegister::registerSer
 	}
 #endif
 
-	DNSServiceErrorType err = DNSServiceRegister(&dnssref, 0, 0,
-	                          record.serviceName.isEmpty() ? 0
-	                          : record.serviceName.toUtf8().constData(),
+	DNSServiceErrorType err = DNSServiceRegister(&dnssref, 0, 0, record.serviceName.toUtf8().constData(),
 	                          record.registeredType.toUtf8().constData(),
 	                          record.replyDomain.isEmpty() ? 0
 	                          : record.replyDomain.toUtf8().constData(), 0,
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/sessionenum.cpp
@@ -0,0 +1,1303 @@
+#include "sessionenum.h"
+#include <QDomDocument>
+#include "debugbox.h"
+#include <QIODevice>
+#include <QtXml>
+#include <signal.h>
+#include <execinfo.h>
+#include <stdlib.h>
+
+
+#define BROADCAST_PREFIX ("/ndn/broadcast/conference")
+#define EST_USERS 20
+#define FRESHNESS 30
+
+const unsigned char SEED[] = "1412";
+
+static SessionEnum *gsd = NULL;
+
+struct ccn_bloom {
+    int n;
+    struct ccn_bloom_wire *wire;
+};
+
+static char *ccn_name_comp_to_str(const unsigned char *ccnb,
+								  const struct ccn_indexbuf *comps,
+								  int index);
+
+static enum ccn_upcall_res dismiss_signal(struct ccn_closure *selfp,
+										enum ccn_upcall_kind kind,
+										struct ccn_upcall_info *info);
+
+static enum ccn_upcall_res incoming_interest(struct ccn_closure *selfp,
+											enum ccn_upcall_kind kind,
+											struct ccn_upcall_info *info);
+
+static enum ccn_upcall_res incoming_private_interest(struct ccn_closure *selfp,
+													enum ccn_upcall_kind kind,
+													struct ccn_upcall_info *info);
+
+static enum ccn_upcall_res incoming_content(struct ccn_closure *selfp,
+											enum ccn_upcall_kind kind,
+											struct ccn_upcall_info *info);
+
+static enum ccn_upcall_res incoming_private_content(struct ccn_closure *selfp,
+													enum ccn_upcall_kind kind,
+													struct ccn_upcall_info *info);
+
+static void append_bloom_filter(struct ccn_charbuf *templ, struct ccn_bloom *b);
+
+static char *ccn_name_comp_to_str(const unsigned char *ccnb,
+								  const struct ccn_indexbuf *comps,
+								  int index) {
+	size_t comp_size;
+	const unsigned char *comp_ptr;
+	char *str;
+	if (ccn_name_comp_get(ccnb, comps, index, &comp_ptr, &comp_size) == 0) {
+		str = (char *)malloc(sizeof(char) *(comp_size + 1));
+		strncpy(str, (const char *)comp_ptr, comp_size);
+		str[comp_size] = '\0';
+		return str;
+	}
+	else {
+		debug("can not get name comp");
+		return NULL;
+	}
+}
+
+void SessionEnum::setListPrivate(bool b) {
+	listPrivate = b;
+	if (listPrivate) {
+		enumeratePriConf();
+	}
+	if (!listPrivate && priConferences.size() > 0) {
+		for (int i = 0; i < priConferences.size(); i ++) {
+			Announcement *a = priConferences.at(i);
+			if (a != NULL) {
+				QString confName = a->getConfName();
+				QString organizer = a->getOrganizer();
+				emit expired(confName, organizer);
+				free(a);
+			}
+
+		}
+		priConferences.clear();
+	}
+}
+
+void SessionEnum::initKeystoreAndSignedInfo() {
+	// prepare for ccnx
+	keystore = NULL;
+	ccn_charbuf *temp = ccn_charbuf_create();
+	keystore = ccn_keystore_create();
+	ccn_charbuf_putf(temp, "%s/.ccnx/.ccnx_keystore", getenv("HOME"));
+	int res = ccn_keystore_init(keystore,
+				ccn_charbuf_as_string(temp),
+				(char *)"Th1s1sn0t8g00dp8ssw0rd.");
+	if (res != 0) {
+	    printf("Failed to initialize keystore %s\n", ccn_charbuf_as_string(temp));
+	    exit(1);
+	}
+	ccn_charbuf_destroy(&temp);
+	
+	struct ccn_charbuf *keylocator = ccn_charbuf_create();
+	ccn_charbuf_append_tt(keylocator, CCN_DTAG_KeyLocator, CCN_DTAG);
+	ccn_charbuf_append_tt(keylocator, CCN_DTAG_Key, CCN_DTAG);
+	res = ccn_append_pubkey_blob(keylocator, ccn_keystore_public_key(keystore));
+	if (res < 0) {
+		ccn_charbuf_destroy(&keylocator);
+	}else {
+		ccn_charbuf_append_closer(keylocator);
+		ccn_charbuf_append_closer(keylocator);
+	}
+
+	signed_info = NULL;
+	signed_info = ccn_charbuf_create();
+	res = ccn_signed_info_create(signed_info,
+									ccn_keystore_public_key_digest(keystore),
+									ccn_keystore_public_key_digest_length(keystore),
+									NULL,
+									CCN_CONTENT_DATA,
+									FRESHNESS, 
+									NULL,
+									keylocator);
+	if (res < 0) {
+		critical("Failed to create signed_info");
+	}
+
+	// public & private key pair for actd
+	actd_keystore = NULL;
+	actd_keystore = ccn_keystore_create();
+	temp = ccn_charbuf_create();
+	ccn_charbuf_putf(temp, "%s/.actd/.actd_keystore", getenv("HOME"));
+	res = ccn_keystore_init(actd_keystore,
+								ccn_charbuf_as_string(temp),
+								(char *)"Th1s1s@p8ssw0rdf0r8ctd.");
+	if (res != 0) 
+		critical("Failed to initialze keystore for actd");
+
+	ccn_charbuf_destroy(&temp);
+}
+
+
+
+static void append_bloom_filter(struct ccn_charbuf *templ, struct ccn_bloom *b) {
+    ccn_charbuf_append_tt(templ, CCN_DTAG_Exclude, CCN_DTAG);
+    ccn_charbuf_append_tt(templ, CCN_DTAG_Bloom, CCN_DTAG);
+    int wireSize = ccn_bloom_wiresize(b);
+    ccn_charbuf_append_tt(templ, wireSize, CCN_BLOB);
+    ccn_bloom_store_wire(b, ccn_charbuf_reserve(templ, wireSize), wireSize);
+    templ->length += wireSize;
+    ccn_charbuf_append_closer(templ);
+    ccn_charbuf_append_closer(templ);
+}
+
+
+static enum ccn_upcall_res dismiss_signal(struct ccn_closure *selfp,
+										enum ccn_upcall_kind kind,
+										struct ccn_upcall_info *info) {
+	switch (kind) {
+	case CCN_UPCALL_FINAL:
+	case CCN_UPCALL_INTEREST_TIMED_OUT:
+		return (CCN_UPCALL_RESULT_OK);
+	
+	case CCN_UPCALL_INTEREST: {
+		// /ndn/broadcast/conference/dismiss/uuid/confName/organizer
+		debug("dismiss interest received");
+		gsd->handleDismissEvent(info);
+		return (CCN_UPCALL_RESULT_OK);
+	}
+	default:
+		return (CCN_UPCALL_RESULT_OK);
+	}
+}
+
+static enum ccn_upcall_res incoming_interest(struct ccn_closure *selfp,
+											enum ccn_upcall_kind kind,
+											struct ccn_upcall_info *info) {
+
+	switch (kind) {
+	case CCN_UPCALL_FINAL:
+	case CCN_UPCALL_INTEREST_TIMED_OUT:
+		return (CCN_UPCALL_RESULT_OK);
+	
+	case CCN_UPCALL_INTEREST:
+	{
+
+		debug("incoming public interest");
+		gsd->handleEnumInterest(info);		
+		return (CCN_UPCALL_RESULT_OK);
+	}
+	
+	default:
+		return (CCN_UPCALL_RESULT_OK);
+
+	}
+}
+
+static enum ccn_upcall_res incoming_private_interest(struct ccn_closure *selfp,
+													enum ccn_upcall_kind kind,
+													struct ccn_upcall_info *info) {
+
+	switch (kind) {
+	case CCN_UPCALL_FINAL:
+	case CCN_UPCALL_INTEREST_TIMED_OUT:
+		return (CCN_UPCALL_RESULT_OK);
+	
+	case CCN_UPCALL_INTEREST:
+	{
+		debug("incoming private interest");
+
+		gsd->handleEnumPrivateInterest(info);		
+		return (CCN_UPCALL_RESULT_OK);
+	}
+	
+	default:
+		return (CCN_UPCALL_RESULT_OK);
+
+	}
+}
+
+static enum ccn_upcall_res incoming_content(struct ccn_closure *selfp,
+											enum ccn_upcall_kind kind,
+											struct ccn_upcall_info *info) {
+
+	switch (kind) {
+	case CCN_UPCALL_FINAL:
+		return (CCN_UPCALL_RESULT_OK);
+	
+	case CCN_UPCALL_INTEREST_TIMED_OUT:
+		return (CCN_UPCALL_RESULT_OK);
+
+	case CCN_UPCALL_CONTENT: {
+		debug("incoming public content");
+		gsd->handleEnumContent(info);
+		return (CCN_UPCALL_RESULT_OK);
+	}
+	case CCN_UPCALL_CONTENT_UNVERIFIED:
+	{
+		debug("unverified content!");
+		return (CCN_UPCALL_RESULT_OK);
+
+	}
+	default:
+		return (CCN_UPCALL_RESULT_OK);
+	}
+}
+
+
+static enum ccn_upcall_res incoming_private_content(struct ccn_closure *selfp,
+													enum ccn_upcall_kind kind,
+													struct ccn_upcall_info *info) {
+
+	switch (kind) {
+	case CCN_UPCALL_FINAL:
+		return (CCN_UPCALL_RESULT_OK);
+	
+	case CCN_UPCALL_INTEREST_TIMED_OUT:
+		return (CCN_UPCALL_RESULT_OK);
+
+	case CCN_UPCALL_CONTENT: {
+		debug("incoming private content");
+		gsd->handleEnumPrivateContent(info);
+		return (CCN_UPCALL_RESULT_OK);
+	}
+	case CCN_UPCALL_CONTENT_UNVERIFIED:
+	{
+		debug("unverified content!");
+		return (CCN_UPCALL_RESULT_OK);
+
+	}
+	default:
+		return (CCN_UPCALL_RESULT_OK);
+	}
+}
+
+
+void SessionEnum::removeFromMyConferences(Announcement *ra) {
+	
+	if (ra->getIsPrivate()) {
+		int loc = -1;
+		for (int i = 0; i < myPrivateConferences.size(); i++) {
+			Announcement *a = myPrivateConferences.at(i);
+			if (a == NULL)
+				exit(1);
+			if (a->getConfName() == ra->getConfName() && a->getOrganizer() == ra->getOrganizer()) {
+				loc = i;
+				sendDismissSignal(a);
+				delete a;
+				break;
+			}
+		}
+		if (loc < 0 )
+			exit(1);
+		myPrivateConferences.removeAt(loc);
+
+	}
+	else {
+		int loc = -1;
+		for (int i = 0; i < myConferences.size(); i++) {
+			Announcement *a = myConferences.at(i);
+			if (a == NULL)
+				exit(1);
+			if (a->getConfName() == ra->getConfName() && a->getOrganizer() == ra->getOrganizer()) {
+				loc = i;
+				sendDismissSignal(a);
+				delete a;
+				break;
+			}
+		}
+
+		if (loc < 0 )
+			exit(1);
+
+		myConferences.removeAt(loc);
+	}
+}
+
+
+void SessionEnum::handleDismissEvent(struct ccn_upcall_info *info) {
+
+	char *dUuid = NULL;
+	char *dConfName = NULL;
+	char *dOrganizer = NULL;
+	const unsigned char *ccnb = info->interest_ccnb;
+	const struct ccn_indexbuf *comps = info->interest_comps;
+	dUuid = ccn_name_comp_to_str(ccnb, comps, 4);
+	dConfName = ccn_name_comp_to_str(ccnb, comps, 5);
+	dOrganizer = ccn_name_comp_to_str(ccnb, comps, 6);
+	for (int i = 0; i < pubConferences.size(); i++) {
+		FetchedAnnouncement *fa = pubConferences.at(i);
+		if (fa == NULL)
+			critical("NULL encountered unexpectedly");
+
+		if (fa->getUuid() == dUuid && fa->getConfName() == dConfName && fa->getOrganizer() == dOrganizer) {
+			// mark it as dismissed, but leave it to be cleaned by checkAlive,
+			// so that this conference is not displayed to the user, but still kept by SessionEnum
+			// until it is timed out.
+			// this is to avoid fetch the cached information of this conference in the intermediate routers as soon
+			// as we remove it from the publist
+			// when it times out here, the cached information should also have timed out.
+			fa->setDismissed(true);
+			emit expired(dConfName, dOrganizer);
+			break;
+		}
+	}
+	for (int i = 0; i < priConferences.size(); i++) {
+		FetchedAnnouncement *fa = priConferences.at(i);
+		if (fa == NULL)
+			critical("NULL encountered unexpectedly");
+
+		if (fa->getUuid() == dUuid && fa->getConfName() == dConfName && fa->getOrganizer() == dOrganizer) {
+			// mark it as dismissed, but leave it to be cleaned by checkAlive,
+			// so that this conference is not displayed to the user, but still kept by SessionEnum
+			// until it is timed out.
+			// this is to avoid fetch the cached information of this conference in the intermediate routers as soon
+			// as we remove it from the publist
+			// when it times out here, the cached information should also have timed out.
+			fa->setDismissed(true);
+			emit expired(dConfName, dOrganizer);
+			break;
+		}
+	}
+
+}
+
+void SessionEnum::handleEnumInterest(struct ccn_upcall_info *info) {
+	QString val = "conference-list";
+	if (ccn_name_comp_strcmp(info->interest_ccnb, info->interest_comps, 3 , val.toStdString().c_str()) != 0)
+	{
+		debug("Public Listing: trash interest received");
+		return;
+	}
+
+	// /ndn/broadcast/conference/conference-list
+	
+	for (int i = 0; i < myConferences.size(); i++) {
+		Announcement *a = myConferences.at(i);
+		struct ccn_charbuf *name = NULL;
+		struct ccn_charbuf *content = NULL;
+
+		name = ccn_charbuf_create();
+		ccn_name_init(name);
+		int nameEnd = info->interest_comps->n - 1;
+		ccn_name_append_components(name, info->interest_ccnb,
+								info->interest_comps->buf[0], info->interest_comps->buf[nameEnd]);
+		QString confName = a->getConfName();
+		ccn_name_append_str(name, confName.toStdString().c_str());
+
+		QString qsData;
+		qsData << a;
+		QByteArray qba = qsData.toLocal8Bit();
+		char *buffer = static_cast<char *>(calloc(qba.size() + 1, sizeof(char)));
+		memcpy(buffer, qba.constData(), qba.size());
+		buffer[qba.size()] = '\0';
+
+		content = ccn_charbuf_create();
+		int res = ccn_encode_ContentObject(content, name, signed_info,
+					(const char *)buffer, strlen(buffer), NULL, ccn_keystore_private_key(keystore));
+		if (res)
+			critical("failed to create content");
+
+		ccn_put(info->h, content->buf, content->length);
+		ccn_charbuf_destroy(&name);
+		ccn_charbuf_destroy(&content);
+		if (buffer != NULL) {
+			free((void *)buffer);
+			buffer = NULL;
+		}
+		name = NULL;
+		content = NULL;
+	}
+}
+
+void SessionEnum::handleEnumPrivateInterest(struct ccn_upcall_info *info) {
+	QString val = "private-list";
+	if (ccn_name_comp_strcmp(info->interest_ccnb, info->interest_comps, 3, val.toStdString().c_str()) != 0){
+		debug("Private Listing: trash interest received");
+		return;
+	}
+
+
+	// /ndn/broadcast/conference/private-list
+	for (int i = 0; i < myPrivateConferences.size(); i ++) {
+		Announcement *a = myPrivateConferences.at(i);
+		QString opaqueName = a->getOpaqueName();
+
+		QString out;
+		if (a->getXmlOut().isEmpty()) {
+			out.append("<bundle>");
+
+			// <Enc-data></Enc-data><Enc-data></Enc-data>...<SK></SK>..<Desc></Desc>
+
+			QStringList certs = a->getCerts();
+			int user_num = certs.size();
+			for (int i = 0; i < user_num; i++) {
+				QString path = certs.at(i);
+				FILE *fp = fopen(path.toStdString().c_str(), "r");
+				if (!fp) {
+					//critical("Can not open cert " + path);
+					debug("no certs of participants specified");
+					return;
+				}
+				X509 *cert= PEM_read_X509(fp, NULL, NULL, NULL);
+				fclose(fp);
+				EVP_PKEY *public_key = X509_get_pubkey(cert);
+				char *to_enc = (char *)malloc(sizeof(a->conferenceKey) + 5);
+				to_enc[0] = 'A'; to_enc[1] = 'T'; to_enc[2] = 'H'; to_enc[3] = 'U'; to_enc[4] ='\0';
+				memcpy(to_enc + 5, a->conferenceKey, sizeof(a->conferenceKey));
+				char *enc_data = NULL;
+				size_t enc_len = 0;
+
+				int res = pubKeyEncrypt(public_key, (const unsigned char *)to_enc, (size_t)(sizeof(a->conferenceKey) + 5), 
+										  (unsigned char **)&enc_data, &enc_len);
+				if (res != 0) 
+					critical("public key encryption failed!");
+				QByteArray qba((char *)enc_data, (int)enc_len);	
+				QString base64(qba.toBase64());
+				out.append("<Enc-Data>");
+				out.append(base64);
+				out.append("</Enc-Data>");
+				if (fp)
+					free(fp);
+				if (cert)
+					free(cert);
+				if (public_key)
+					free(public_key);
+				if (to_enc)
+					free(to_enc);
+				if (enc_data)
+					free(enc_data);
+			}
+
+
+			char *enc_session_key = NULL;
+			size_t enc_key_len = 0;
+			char iv[sizeof(a->audioSessionKey)];
+			RAND_bytes((unsigned char*)iv, sizeof(iv));
+
+			int res = symEncrypt(a->conferenceKey, (unsigned char *)iv, (const unsigned char *)a->audioSessionKey, sizeof(a->audioSessionKey), (unsigned char **)&enc_session_key, &enc_key_len, (size_t)AES_BLOCK_SIZE);
+			if (res != 0) 
+				critical("sym encryption by conference key failed");
+
+			QByteArray qbaSK((char *)enc_session_key, (int)enc_key_len);	
+			QString base64SK(qbaSK.toBase64());
+			QByteArray qbaIV((char *)iv, (int) sizeof(iv));
+			QString base64IV(qbaIV.toBase64());
+			out.append("<Enc-SK>");
+			out.append("<iv>");
+			out.append(base64IV);
+			out.append("</iv>");
+			out.append("<SK>");
+			out.append(base64SK);
+			out.append("</SK>");
+			out.append("</Enc-SK>");
+			if (enc_session_key)
+				free(enc_session_key);
+			
+			QString qsData;
+			qsData << a;
+			QByteArray qba = qsData.toLocal8Bit();
+			char *buffer = (char *)malloc(qba.size() + 1);
+			memcpy(buffer, qba.constData(), qba.size());
+			buffer[qba.size()] = '\0';
+			char *enc_desc = NULL;
+			size_t enc_desc_len = 0;
+			size_t buf_len = qba.size() + 1;
+			res = symEncrypt(a->conferenceKey, NULL, (const unsigned char *)buffer, buf_len, (unsigned char **) &enc_desc, &enc_desc_len, (size_t)AES_BLOCK_SIZE);
+			if (res != 0)
+				critical("conf desc encryption by conference key failed");
+			QByteArray qbaDesc((char *)enc_desc, (int)enc_desc_len);
+			QString base64Desc(qbaDesc.toBase64());
+			out.append("<Enc-Desc>");
+			out.append(base64Desc);
+			out.append("</Enc-Desc>");
+			if (enc_desc)
+				free(enc_desc);
+
+			out.append("</bundle>");
+			a->setXmlOut(out);
+		}
+		else 
+			out = a->getXmlOut();
+
+		QByteArray qbaOut = out.toLocal8Bit();
+
+
+		struct ccn_charbuf *name = NULL;
+		struct ccn_charbuf *content = NULL;
+		name = ccn_charbuf_create();
+		ccn_name_init(name);
+		int nameEnd = info->interest_comps->n - 1;
+		ccn_name_append_components(name, info->interest_ccnb,
+								info->interest_comps->buf[0], info->interest_comps->buf[nameEnd]);
+		ccn_name_append_str(name, opaqueName.toStdString().c_str());
+
+		char *secret = (char *)malloc(qbaOut.size());
+		memcpy(secret, qbaOut.data(), qbaOut.size());
+		content = ccn_charbuf_create();
+		int res = ccn_encode_ContentObject(content, name, signed_info, secret, qbaOut.size(), NULL, ccn_keystore_private_key(keystore));
+		if (res)
+			critical("failed to create content");
+		ccn_put(info->h, content->buf, content->length);
+		ccn_charbuf_destroy(&name);
+		ccn_charbuf_destroy(&content);
+		if (secret)
+			free(secret);
+	}
+}
+
+void SessionEnum::handleEnumContent(struct ccn_upcall_info *info) {
+		const unsigned char *value = NULL;
+		size_t len = 0;
+		int res =ccn_content_get_value(info->content_ccnb, info->pco->offset[CCN_PCO_E],
+							info->pco, &value, &len);
+		if (res < 0)
+			critical("failed to parse content object");
+
+		unsigned char hash[SHA_DIGEST_LENGTH];	
+		SHA1(value, len, hash);
+		/////
+		QByteArray x((char *)hash, (int) SHA_DIGEST_LENGTH);
+		QString y(x.toBase64());
+
+		if (isConferenceRefresh(hash, true))
+			return;
+
+		QByteArray buffer((const char *)value);
+		QDomDocument doc;
+		if (!doc.setContent(buffer)) {
+			critical("failed to convert content to xml");
+		}
+		
+		Announcement *a = new Announcement();
+
+		doc >> a;
+		a->setIsPrivate(false);
+		a->setDigest(hash);
+
+		if (a->getConfName().isEmpty())
+			critical("Fetched Conference Name is empty");
+
+		addToConferences(a, true);
+
+		// TODO: wierd, can not free
+		/*
+		if (value) {
+			free((void *)value);
+			value = NULL;
+		}
+		*/
+}
+
+
+void SessionEnum::handleEnumPrivateContent(struct ccn_upcall_info *info) {
+		const unsigned char *value = NULL;
+		size_t len = 0;
+		int res =ccn_content_get_value(info->content_ccnb, info->pco->offset[CCN_PCO_E],
+							info->pco, &value, &len);
+		if (res < 0)
+			critical("failed to parse content object");
+
+		unsigned char hash[SHA_DIGEST_LENGTH];	
+		SHA1(value, len, hash);
+
+		if (isConferenceRefresh(hash, false)) 
+			return;
+
+		QByteArray bundle((char *)value, (int)len);
+		QDomDocument doc;
+		if (!doc.setContent(bundle)) {
+			critical("failed to convert content to xml");
+		}
+		bool eligible = false;
+		Announcement *a = NULL;
+		QDomElement docElem = doc.documentElement(); // <bundle>
+		QDomNode node = docElem.firstChild(); // <Enc-Data>
+		while (!node.isNull()) {
+
+			QString attr = node.nodeName();
+			if (attr == "Enc-Data") {
+				debug("decrypting enc-data");
+				char *dout = NULL;
+				size_t dout_len = 0;
+				struct ccn_pkey *priKey = (struct ccn_pkey *)ccn_keystore_private_key(actd_keystore);
+				QString encData = node.toElement().text();
+				QByteArray qbaEncData = QByteArray::fromBase64(encData.toLocal8Bit());
+				char *enc_data = qbaEncData.data();
+				res = priKeyDecrypt((EVP_PKEY*) priKey, (unsigned char *)enc_data, qbaEncData.size(), 
+							   (unsigned char **)&dout, &dout_len);
+				if (res != 0) {
+					debug("decrypt failed\n");
+					node = node.nextSibling();
+					continue;
+				}
+
+				char jargon[5];
+				memcpy(jargon, dout, 5);
+				if (strcmp(jargon, "ATHU") == 0) {
+					eligible = true;
+					a = new Announcement();
+					memcpy(a->conferenceKey, dout + 5, dout_len - 5);
+					if (dout)
+						free(dout);
+				}
+				if (dout)
+					free(dout);
+			} else
+			if (attr == "Enc-SK") { //<Enc-SK>
+				if (!eligible)
+					return;
+				
+				QDomNode skNode = node.toElement().firstChild();
+				if (skNode.isNull() || skNode.nodeName() != "iv")
+					return;
+
+				QString skIV = skNode.toElement().text();
+				QByteArray qbaIV = QByteArray::fromBase64(skIV.toLocal8Bit());
+
+				skNode = skNode.nextSibling();
+				if (skNode.isNull() || skNode.nodeName() != "SK")
+					return;
+
+				QString encSK = skNode.toElement().text();
+				QByteArray qbaEncSK = QByteArray::fromBase64(encSK.toLocal8Bit());
+				char *enc_sk = qbaEncSK.data();
+
+				char *session_key = NULL;
+				size_t session_key_len = 0;
+				res = symDecrypt(a->conferenceKey, (unsigned char *)qbaIV.data(), (unsigned char *)enc_sk, qbaEncSK.size(), (unsigned char **)&session_key,
+						   &session_key_len, AES_BLOCK_SIZE);
+				if (res != 0) 
+					critical("can not decrypt sessionkey");
+
+				memcpy(a->audioSessionKey, session_key, session_key_len);
+				if (session_key)
+					free(session_key);
+			} else 
+			if (attr == "Enc-Desc") {
+				if (!eligible)
+					return;
+				char *desc = NULL;
+				size_t desc_len = 0;
+				QString encDesc = node.toElement().text();
+				QByteArray qbaEncDesc = QByteArray::fromBase64(encDesc.toLocal8Bit());
+				char *enc_desc = qbaEncDesc.data();
+				res = symDecrypt(a->conferenceKey, NULL, (unsigned char *)enc_desc, qbaEncDesc.size(), (unsigned char **)&desc, &desc_len, AES_BLOCK_SIZE);
+				if (res != 0) 
+					critical("can not decrypt desc");
+
+				QByteArray buffer((const char *)desc);
+
+				QDomDocument descDoc;
+				if (!descDoc.setContent(buffer)) {
+					critical("failed to convert content to xml");
+				}
+				
+				descDoc >> a;
+				if (desc)
+					free (desc);
+			}
+			else {
+				critical("Unknown xml attribute");
+			}
+			node = node.nextSibling();
+		}
+		// /ndn/broadcast/conference/private-list/opaque-name	
+		char *opaqueName = NULL;
+		opaqueName = ccn_name_comp_to_str(info->content_ccnb, info->content_comps, 4);
+		if (opaqueName == NULL)
+			critical("can not get opaque name!");
+
+		a->setOpaqueName(opaqueName);
+
+		a->setIsPrivate(true);
+		a->setDigest(hash);
+
+		if (a->getConfName().isEmpty())
+			critical("Fetched Conference Name is empty");
+
+
+		addToConferences(a, false);
+		// TODO: weird, can not free
+		//if (value)
+			//free((void *)value);
+
+		debug("handle private content done");
+}
+
+void SessionEnum::addToMyConferences(Announcement *a) {
+	a->setUuid(uuid);
+	if (a->getIsPrivate()) {
+		myPrivateConferences.append(a);
+	}
+	else {
+		myConferences.append(a);
+	}
+}
+
+
+bool SessionEnum::isConferenceRefresh(unsigned char *hash, bool pub) {
+	if (pub) {
+		for (int i = 0; i < pubConferences.size(); i++) {
+			FetchedAnnouncement *fa = pubConferences.at(i);
+			if (fa->equalDigest(hash)) {
+				fa->refreshReceived();
+				enumeratePubConf();
+				return true;
+			}
+		}
+	} else {
+		for (int i = 0; i < priConferences.size(); i++) {
+			FetchedAnnouncement *fa = priConferences.at(i);
+			if (fa->equalDigest(hash)) {
+				fa->refreshReceived();
+				enumeratePriConf();
+				return true;
+			}
+		}
+	}
+	return false;
+}
+
+
+void SessionEnum::addToConferences(Announcement *a, bool pub) {
+	if (a->getUuid() == uuid)
+		return;
+	FetchedAnnouncement *fa = new FetchedAnnouncement();
+	fa->copy(a);
+	if (pub) {
+		pubConferences.append(fa);
+		emit add(fa);
+		enumeratePubConf();
+	}
+	else {
+		priConferences.append(fa);
+		if (listPrivate) {
+			emit add(fa);
+			enumeratePriConf();
+		}
+	}
+}
+
+
+void SessionEnum::ccnConnect() {
+    ccn = NULL;
+
+    ccn = ccn_create();
+    if (ccn == NULL || ccn_connect(ccn, NULL) == -1) {
+		QString qs = ("Failed to initialize ccn agent connection");
+		critical(qs);
+    }
+
+	// public conf
+    struct ccn_charbuf *enum_interest = ccn_charbuf_create();
+    if (enum_interest == NULL) {
+        QString qs =("Failed to allocate or initialize interest filter path");
+		critical(qs);
+    }
+	ccn_name_from_uri(enum_interest, (const char *) BROADCAST_PREFIX);
+	ccn_name_append_str(enum_interest, "conference-list");
+	to_announce = (struct ccn_closure *)calloc(1, sizeof(struct ccn_closure));
+	to_announce->p = &incoming_interest;
+    ccn_set_interest_filter(ccn, enum_interest, to_announce);
+    ccn_charbuf_destroy(&enum_interest);
+
+	// private conf
+    struct ccn_charbuf *private_interest = ccn_charbuf_create();
+    if (private_interest == NULL) {
+        QString qs =("Failed to allocate or initialize interest filter path");
+		critical(qs);
+    }
+	ccn_name_from_uri(private_interest, (const char *) BROADCAST_PREFIX);
+	ccn_name_append_str(private_interest, "private-list");
+	to_announce_private = (struct ccn_closure *)calloc(1, sizeof(struct ccn_closure));
+	to_announce_private->p = &incoming_private_interest;
+    ccn_set_interest_filter(ccn, private_interest, to_announce_private);
+    ccn_charbuf_destroy(&private_interest);
+
+	// dismiss interest
+    struct ccn_charbuf *dismiss_interest = ccn_charbuf_create();
+    if (dismiss_interest == NULL) {
+        QString qs =("Failed to allocate or initialize interest filter path");
+		critical(qs);
+    }
+	ccn_name_from_uri(dismiss_interest, (const char *) BROADCAST_PREFIX);
+	ccn_name_append_str(dismiss_interest, "dismiss");
+	handle_dismiss = (struct ccn_closure *)calloc(1, sizeof(struct ccn_closure));
+	handle_dismiss->p = &dismiss_signal;
+    ccn_set_interest_filter(ccn, dismiss_interest, handle_dismiss);
+    ccn_charbuf_destroy(&dismiss_interest);
+}
+
+
+int SessionEnum::pubKeyEncrypt(EVP_PKEY *public_key,
+							   const unsigned char *data, size_t data_length,
+							   unsigned char **encrypted_output,
+							   size_t *encrypted_output_length) {
+
+    int openssl_result = 0;
+    unsigned char *eptr = NULL;
+
+    if ((NULL == data) || (0 == data_length) || (NULL == public_key))
+        return EINVAL;
+
+    *encrypted_output_length = ccn_pubkey_size((struct ccn_pkey *)public_key);
+	eptr = (unsigned char *)malloc(*encrypted_output_length);
+
+    memset(eptr, 0, *encrypted_output_length);
+
+	RSA *trsa = EVP_PKEY_get1_RSA((EVP_PKEY *)public_key);
+	openssl_result = RSA_public_encrypt(data_length, data, eptr, trsa, RSA_PKCS1_PADDING);
+	RSA_free(trsa);
+
+    if (openssl_result < 0) {
+        if (NULL == *encrypted_output) {
+            free(eptr);
+        }
+        return openssl_result;
+    }
+    *encrypted_output = eptr;
+	*encrypted_output_length = openssl_result;
+    return 0;
+}
+
+int SessionEnum::priKeyDecrypt(
+                               EVP_PKEY *private_key,
+                               const unsigned char *ciphertext, size_t ciphertext_length,
+                               unsigned char **decrypted_output,
+                               size_t *decrypted_output_length) {
+
+    unsigned char *dptr = NULL;
+	int openssl_result = 0;
+
+    if ((NULL == ciphertext) || (0 == ciphertext_length) || (NULL == private_key))
+        return EINVAL;
+
+    *decrypted_output_length = EVP_PKEY_size((EVP_PKEY *)private_key);
+	dptr = (unsigned char *)malloc(*decrypted_output_length);
+    memset(dptr, 0, *decrypted_output_length);
+
+	RSA *trsa = EVP_PKEY_get1_RSA(private_key);	
+	openssl_result = RSA_private_decrypt(ciphertext_length, ciphertext, dptr, trsa, RSA_PKCS1_PADDING);
+	RSA_free(trsa);
+
+    if (openssl_result < 0) {
+        if (NULL == *decrypted_output) {
+            free(dptr);
+        }
+        return openssl_result;
+    }
+    *decrypted_output = dptr;
+	*decrypted_output_length = openssl_result;
+    return 0;
+}
+
+int SessionEnum::symDecrypt(const unsigned char *key,
+							const unsigned char *iv,
+							const unsigned char *ciphertext, 
+							size_t ciphertext_length,
+							unsigned char **plaintext, 
+							size_t *plaintext_length, 
+							size_t plaintext_padding) {
+
+    EVP_CIPHER_CTX ctx;
+    unsigned char *pptr = *plaintext;
+    const unsigned char *dptr = NULL;
+    size_t plaintext_buf_len = ciphertext_length + plaintext_padding;
+    size_t decrypt_len = 0;
+
+    if ((NULL == ciphertext) || (NULL == plaintext_length) || (NULL == key) || (NULL == plaintext))
+        return EINVAL;
+
+    if (NULL == iv) {
+        plaintext_buf_len -= AES_BLOCK_SIZE;
+    }
+
+    if ((NULL != *plaintext) && (*plaintext_length < plaintext_buf_len))
+        return ENOBUFS;
+
+    if (NULL == pptr) {
+        pptr = (unsigned char *)calloc(1, plaintext_buf_len);
+        if (NULL == pptr)
+            return ENOMEM;
+    }
+
+    if (NULL == iv) {
+        iv = ciphertext;
+        dptr = ciphertext + AES_BLOCK_SIZE;
+        ciphertext_length -= AES_BLOCK_SIZE;
+    } else {
+        dptr = ciphertext;
+    }
+
+    /*
+      print_block("ccn_decrypt: key:", key, AES_BLOCK_SIZE);
+      print_block("ccn_decrypt: iv:", iv, AES_BLOCK_SIZE);
+      print_block("ccn_decrypt: ciphertext:", dptr, ciphertext_length);
+    */
+    if (1 != EVP_DecryptInit(&ctx, EVP_aes_128_cbc(),
+                             key, iv)) {
+        if (NULL == *plaintext)
+            free(pptr);
+        return -128;
+    }
+
+    if (1 != EVP_DecryptUpdate(&ctx, pptr, (int *)&decrypt_len, dptr, ciphertext_length)) {
+        if (NULL == *plaintext)
+            free(pptr);
+        return -127;
+    }
+    *plaintext_length = decrypt_len + plaintext_padding;
+    if (1 != EVP_DecryptFinal(&ctx, pptr+decrypt_len, (int *)&decrypt_len)) {
+        if (NULL == *plaintext)
+            free(pptr);
+        return -126;
+    }
+    *plaintext_length += decrypt_len;
+    *plaintext = pptr;
+    /* this is supposed to happen automatically, but sometimes we seem to be running over the end... */
+    memset(*plaintext + *plaintext_length - plaintext_padding, 0, plaintext_padding);
+    return 0;
+}
+
+
+int SessionEnum::symEncrypt(const unsigned char *key,
+							const unsigned char *iv,
+							const unsigned char *plaintext, 
+							size_t plaintext_length,
+							unsigned char **ciphertext, 
+							size_t *ciphertext_length,
+							size_t ciphertext_padding) {
+    EVP_CIPHER_CTX ctx;
+    unsigned char *cptr = *ciphertext;
+    unsigned char *eptr = NULL;
+    /* maximum length of ciphertext plus user-requested extra */
+    size_t ciphertext_buf_len = plaintext_length + AES_BLOCK_SIZE-1 + ciphertext_padding;
+    size_t encrypt_len = 0;
+    size_t alloc_buf_len = ciphertext_buf_len;
+    size_t alloc_iv_len = 0;
+
+    if ((NULL == ciphertext) || (NULL == ciphertext_length) || (NULL == key) || (NULL == plaintext))
+        return EINVAL;
+
+    if (NULL == iv) {
+        alloc_buf_len += AES_BLOCK_SIZE;
+    }
+
+    if ((NULL != *ciphertext) && (*ciphertext_length < alloc_buf_len))
+        return ENOBUFS;
+
+    if (NULL == cptr) {
+        cptr = (unsigned char *)calloc(1, alloc_buf_len);
+        if (NULL == cptr)
+            return ENOMEM;
+    }
+    *ciphertext_length = 0;
+
+    if (NULL == iv) {
+        iv = cptr;
+        eptr = cptr + AES_BLOCK_SIZE; /* put iv at start of block */
+
+        if (1 != RAND_bytes((unsigned char *)iv, AES_BLOCK_SIZE)) {
+            if (NULL == *ciphertext)
+                free(cptr);
+            return -1;
+        }
+
+        alloc_iv_len = AES_BLOCK_SIZE;
+        fprintf(stderr, "ccn_encrypt: Generated IV\n");
+    } else {
+        eptr = cptr;
+    }
+
+    if (1 != EVP_EncryptInit(&ctx, EVP_aes_128_cbc(),
+                             key, iv)) {
+        if (NULL == *ciphertext)
+            free(cptr);
+        return -128;
+    }
+
+    if (1 != EVP_EncryptUpdate(&ctx, eptr, (int *)&encrypt_len, plaintext, plaintext_length)) {
+        if (NULL == *ciphertext)
+            free(cptr);
+        return -127;
+    }
+    *ciphertext_length += encrypt_len;
+
+    if (1 != EVP_EncryptFinal(&ctx, eptr+encrypt_len, (int *)&encrypt_len)) {
+        if (NULL == *ciphertext)
+            free(cptr);
+        return -126;
+    }
+
+    /* don't include padding length in ciphertext length, caller knows its there. */
+    *ciphertext_length += encrypt_len;
+    *ciphertext = cptr;							   
+
+    /*
+      print_block("ccn_encrypt: key:", key, AES_BLOCK_SIZE);
+      print_block("ccn_encrypt: iv:", iv, AES_BLOCK_SIZE);
+      print_block("ccn_encrypt: ciphertext:", eptr, *ciphertext_length);
+    */
+    /* now add in any generated iv */
+    *ciphertext_length += alloc_iv_len;
+    return 0;
+}
+
+void SessionEnum::sendDismissSignal(Announcement *a) {
+	struct ccn_charbuf *interest = ccn_charbuf_create();
+	if (interest == NULL ) {
+		critical("interest construction failed");
+	}
+	int res = ccn_name_from_uri(interest, BROADCAST_PREFIX);
+	if (res < 0)
+		critical("Bad ccn URI");
+	
+	ccn_name_append_str(interest, "dismiss");
+	ccn_name_append_str(interest, a->getUuid().toStdString().c_str());
+	ccn_name_append_str(interest, a->getConfName().toStdString().c_str());
+	ccn_name_append_str(interest, a->getOrganizer().toStdString().c_str());
+
+	// fetch_announce handler should never be triggered in this case
+	res = ccn_express_interest(ccn, interest, fetch_announce, NULL);
+	if (res < 0) {
+		critical("express dismiss interest failed!");
+	}
+	debug("dismiss interest sent");
+	ccn_charbuf_destroy(&interest);
+}
+
+void SessionEnum::enumerate() {
+	enumeratePubConf();
+	if (listPrivate) {
+		enumeratePriConf();
+	}
+}
+
+void SessionEnum::enumeratePubConf() {
+	struct ccn_charbuf *interest = ccn_charbuf_create();
+	if (interest == NULL ) {
+		critical("interest construction failed");
+	}
+	int res = ccn_name_from_uri(interest, BROADCAST_PREFIX);
+	if (res < 0)
+		critical("Bad ccn URI");
+	
+	ccn_name_append_str(interest, "conference-list");
+	
+	struct ccn_bloom *exc_filter = ccn_bloom_create(EST_USERS, SEED);
+	unsigned char *bloom = exc_filter->wire->bloom;
+	memset(bloom, 0, 1024);
+	for (int i = 0; i < pubConferences.size(); i++) {
+		FetchedAnnouncement *fa = pubConferences.at(i);
+		if (fa == NULL) 
+			critical("SessionEnum::enumrate");
+
+		if (!fa->needRefresh()) {
+			QByteArray qba = fa->getConfName().toLocal8Bit();
+			ccn_bloom_insert(exc_filter, qba.constData(), qba.size());
+		}
+	}
+
+	for (int j = 0; j < myConferences.size(); j++) {
+		Announcement *a = myConferences.at(j);
+		if (a == NULL) 
+			critical("SessionEnum::enumrate");
+
+		QByteArray qba = a->getConfName().toLocal8Bit();
+		ccn_bloom_insert(exc_filter, qba.constData(), qba.size());
+	}
+
+    struct ccn_charbuf *templ = ccn_charbuf_create();
+
+    ccn_charbuf_append_tt(templ, CCN_DTAG_Interest, CCN_DTAG); // <Interest>
+    ccn_charbuf_append_tt(templ, CCN_DTAG_Name, CCN_DTAG); // <Name>
+    ccn_charbuf_append_closer(templ); // </Name> 
+
+    if (ccn_bloom_n(exc_filter) != 0) { 
+        // exclusive_filter not empty, append it to the interest
+        append_bloom_filter(templ, exc_filter);
+    }
+
+    ccn_charbuf_append_closer(templ); // </Interest> 
+	
+	res = ccn_express_interest(ccn, interest, fetch_announce, templ);
+	if (res < 0) {
+		critical("express interest failed!");
+	}
+	ccn_charbuf_destroy(&templ);
+	ccn_charbuf_destroy(&interest);
+	
+}
+
+void SessionEnum::enumeratePriConf() {
+	struct ccn_charbuf *interest = ccn_charbuf_create();
+	if (interest == NULL ) {
+		critical("interest construction failed");
+	}
+	int res = ccn_name_from_uri(interest, BROADCAST_PREFIX);
+	if (res < 0)
+		critical("Bad ccn URI");
+	
+	ccn_name_append_str(interest, "private-list");
+	
+	struct ccn_bloom *exc_filter = ccn_bloom_create(EST_USERS, SEED);
+	unsigned char *bloom = exc_filter->wire->bloom;
+	memset(bloom, 0, 1024);
+	for (int i = 0; i < priConferences.size(); i++) {
+		FetchedAnnouncement *fa = priConferences.at(i);
+		if (fa == NULL) 
+			critical("SessionEnum::enumrate");
+
+		if (!fa->needRefresh()) {
+			QByteArray qba = fa->getOpaqueName().toLocal8Bit();
+			ccn_bloom_insert(exc_filter, qba.constData(), qba.size());
+			debug("append " + fa->getOpaqueName() + " to private exclude filter");
+		}
+	}
+
+	for (int i = 0; i < myPrivateConferences.size(); i++) {
+		Announcement *a = myPrivateConferences.at(i);
+		if (a == NULL)
+			critical("sessionEnum:: enumrate");
+
+		//QByteArray qba = myPrivateConference->getConfName().toLocal8Bit();
+		QByteArray qba = a->getOpaqueName().toLocal8Bit();
+		ccn_bloom_insert(exc_filter, qba.constData(), qba.size());
+	}
+
+    struct ccn_charbuf *templ = ccn_charbuf_create();
+
+    ccn_charbuf_append_tt(templ, CCN_DTAG_Interest, CCN_DTAG); // <Interest>
+    ccn_charbuf_append_tt(templ, CCN_DTAG_Name, CCN_DTAG); // <Name>
+    ccn_charbuf_append_closer(templ); // </Name> 
+
+    if (ccn_bloom_n(exc_filter) != 0) { 
+        // exclusive_filter not empty, append it to the interest
+        append_bloom_filter(templ, exc_filter);
+    }
+
+    ccn_charbuf_append_closer(templ); // </Interest> 
+	
+	res = ccn_express_interest(ccn, interest, fetch_private, templ);
+	if (res < 0) {
+		critical("express interest failed!");
+	}
+	debug("expressing private interest");
+	ccn_charbuf_destroy(&templ);
+	ccn_charbuf_destroy(&interest);
+	
+}
+
+void SessionEnum::startThread() {
+	if (! isRunning()) {
+		bRunning = true;
+		start(QThread::HighestPriority);
+
+	}
+}
+
+void SessionEnum::stopThread() {
+	if (isRunning()) {
+		bRunning = false;
+		wait();
+	}
+}
+
+static void abort_handler(int sig) {
+	void *array[25];
+	size_t size;
+
+	size = backtrace(array, 25);
+
+	fprintf(stderr, "Error: signal %d:\n", sig);
+	backtrace_symbols_fd(array, size, 2);
+	exit(1);
+}
+
+void SessionEnum::run() {
+	signal(SIGABRT, abort_handler);
+	int res = 0;
+	while (bRunning) {
+		if (res >= 0) {
+			res = ccn_run(ccn, 5);
+		}
+	}
+}
+
+void SessionEnum::checkAlive() {
+
+	debug("++++++SessionEnum::checkAlive()");
+	foreach( FetchedAnnouncement *fa, pubConferences) {
+		if (fa == NULL)
+			critical("conference announcement is null");
+
+		if (fa->isStaled()) {
+			if (!fa->isDismissed()) {
+				QString confName = fa->getConfName();
+				QString organizer = fa->getOrganizer();
+				emit expired(confName, organizer);
+			}
+			delete fa;
+			pubConferences.removeOne(fa);
+		}
+	}
+
+	foreach( FetchedAnnouncement *fa, priConferences) {
+		if (fa == NULL)
+			critical("conference announcement is NULL");
+
+		if (fa->isStaled()) {
+			if (!fa->isDismissed()) {
+				QString confName = fa->getConfName();
+				QString organizer = fa->getOrganizer();
+				emit expired(confName, organizer);
+			}
+			delete fa;
+			priConferences.removeOne(fa);
+		}
+	}
+
+}
+
+SessionEnum::SessionEnum(QString prefix) {
+	gsd = this;
+	listPrivate = false;
+	QUuid quuid = QUuid::createUuid();
+	uuid = quuid.toString();
+	fetch_announce = (struct ccn_closure *) (calloc(1, sizeof(struct ccn_closure)));
+	fetch_announce->p = &incoming_content;
+	fetch_private = (struct ccn_closure *) (calloc(1, sizeof(struct ccn_closure)));
+	fetch_private->p = &incoming_private_content;
+	ccnConnect();
+	initKeystoreAndSignedInfo();
+	setPrefix(prefix);
+
+	enumTimer = new QTimer(this);
+	connect(enumTimer, SIGNAL(timeout()), this, SLOT(enumerate()));
+	enumTimer->start(4000);
+
+	aliveTimer = new QTimer(this);
+	connect(aliveTimer, SIGNAL(timeout()), this, SLOT(checkAlive()));
+	aliveTimer->start(15000);
+
+	startThread();
+
+	enumerate();
+
+}
+
+SessionEnum::~SessionEnum() {
+	stopThread();
+	if (ccn != NULL) {
+		ccn_disconnect(ccn);
+		ccn_destroy(&ccn);
+	}
+	if (keystore != NULL) {
+		ccn_keystore_destroy(&keystore);
+	}
+	if (actd_keystore != NULL) {
+		ccn_keystore_destroy(&actd_keystore);
+	}
+}
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/moc_sessionenum.cpp
@@ -0,0 +1,108 @@
+/****************************************************************************
+** Meta object code from reading C++ file 'sessionenum.h'
+**
+** Created: Thu Jul 7 16:58:54 2011
+**      by: The Qt Meta Object Compiler version 62 (Qt 4.7.0)
+**
+** WARNING! All changes made in this file will be lost!
+*****************************************************************************/
+
+#include "sessionenum.h"
+#if !defined(Q_MOC_OUTPUT_REVISION)
+#error "The header file 'sessionenum.h' doesn't include <QObject>."
+#elif Q_MOC_OUTPUT_REVISION != 62
+#error "This file was generated using the moc from 4.7.0. It"
+#error "cannot be used with the include files from this version of Qt."
+#error "(The moc has changed too much.)"
+#endif
+
+QT_BEGIN_MOC_NAMESPACE
+static const uint qt_meta_data_SessionEnum[] = {
+
+ // content:
+       5,       // revision
+       0,       // classname
+       0,    0, // classinfo
+       6,   14, // methods
+       0,    0, // properties
+       0,    0, // enums/sets
+       0,    0, // constructors
+       0,       // flags
+       2,       // signalCount
+
+ // signals: signature, parameters, type, tag, flags
+      15,   13,   12,   12, 0x05,
+      40,   12,   12,   12, 0x05,
+
+ // slots: signature, parameters, type, tag, flags
+      59,   12,   12,   12, 0x08,
+      71,   12,   12,   12, 0x08,
+      90,   12,   12,   12, 0x08,
+     109,   12,   12,   12, 0x08,
+
+       0        // eod
+};
+
+static const char qt_meta_stringdata_SessionEnum[] = {
+    "SessionEnum\0\0,\0expired(QString,QString)\0"
+    "add(Announcement*)\0enumerate()\0"
+    "enumeratePriConf()\0enumeratePubConf()\0"
+    "checkAlive()\0"
+};
+
+const QMetaObject SessionEnum::staticMetaObject = {
+    { &QThread::staticMetaObject, qt_meta_stringdata_SessionEnum,
+      qt_meta_data_SessionEnum, 0 }
+};
+
+#ifdef Q_NO_DATA_RELOCATION
+const QMetaObject &SessionEnum::getStaticMetaObject() { return staticMetaObject; }
+#endif //Q_NO_DATA_RELOCATION
+
+const QMetaObject *SessionEnum::metaObject() const
+{
+    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
+}
+
+void *SessionEnum::qt_metacast(const char *_clname)
+{
+    if (!_clname) return 0;
+    if (!strcmp(_clname, qt_meta_stringdata_SessionEnum))
+        return static_cast<void*>(const_cast< SessionEnum*>(this));
+    return QThread::qt_metacast(_clname);
+}
+
+int SessionEnum::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
+{
+    _id = QThread::qt_metacall(_c, _id, _a);
+    if (_id < 0)
+        return _id;
+    if (_c == QMetaObject::InvokeMetaMethod) {
+        switch (_id) {
+        case 0: expired((*reinterpret_cast< QString(*)>(_a[1])),(*reinterpret_cast< QString(*)>(_a[2]))); break;
+        case 1: add((*reinterpret_cast< Announcement*(*)>(_a[1]))); break;
+        case 2: enumerate(); break;
+        case 3: enumeratePriConf(); break;
+        case 4: enumeratePubConf(); break;
+        case 5: checkAlive(); break;
+        default: ;
+        }
+        _id -= 6;
+    }
+    return _id;
+}
+
+// SIGNAL 0
+void SessionEnum::expired(QString _t1, QString _t2)
+{
+    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
+    QMetaObject::activate(this, &staticMetaObject, 0, _a);
+}
+
+// SIGNAL 1
+void SessionEnum::add(Announcement * _t1)
+{
+    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
+    QMetaObject::activate(this, &staticMetaObject, 1, _a);
+}
+QT_END_MOC_NAMESPACE
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/announcement.cpp
@@ -0,0 +1,269 @@
+#include "announcement.h"
+#include "debugbox.h"
+#include <QtXml>
+#define REFRESH_INTERVAL 30 
+#define REMOVE_INTERVAL (2 * REFRESH_INTERVAL + 5) 
+
+Announcement::Announcement()
+{
+	own = false;
+	confName = QString("");
+	organizer = QString("");
+	email = QString("");
+	audio = false;
+	video = false;
+	desc = QString("");
+	uuid = QString("");
+	memset(digest, 0, SHA_DIGEST_LENGTH);
+	memset(conferenceKey, 0, KEY_LENGTH);
+	memset(audioSessionKey, 0, KEY_LENGTH);
+}
+
+void Announcement::setDigest(unsigned char *hash) {
+	if (hash == NULL)
+		return;
+	
+	
+	memcpy(digest, hash, SHA_DIGEST_LENGTH);
+	QByteArray d((char *)digest, SHA_DIGEST_LENGTH);
+	QString ds(d.toBase64());
+
+	QByteArray h((char *)hash, SHA_DIGEST_LENGTH);
+	QString hs(h.toBase64());
+
+	debug("digest is " + ds);
+	debug("hash is " + hs);
+}
+
+bool Announcement::equalDigest(unsigned char *hash) {
+
+	if (hash == NULL)
+		return false;
+	
+	QByteArray d((char *)digest, SHA_DIGEST_LENGTH);
+	QString ds(d.toBase64());
+
+	QByteArray h((char *)hash, SHA_DIGEST_LENGTH);
+	QString hs(h.toBase64());
+
+	debug("digest is " + ds);
+	debug("hash is " + hs);
+	int res = memcmp(digest, hash, SHA_DIGEST_LENGTH);
+	if (res == 0) {
+		debug("Announcement " + confName + " : yes, this is equal digest!");
+		return true;
+	}
+	
+	debug(QString("memcmp result is %1").arg(res));
+	return false;
+}
+
+void Announcement::copy(Announcement *a) {
+	this->own = a->own;
+	this->confName = a->confName;
+	this->organizer = a->organizer;
+	this->email = a->email;
+	this->audio = a->audio;
+	this->video = a->video;
+	this->desc = a->desc;
+	this->date = a->date;
+	this->time = a->time;
+	this->hours = a->hours;
+	this->minutes = a->minutes;
+	this->uuid = a->uuid;
+	this->isPrivate = a->isPrivate;
+	this->certs = a->certs;
+	this->opaqueName = a->opaqueName;
+	this->out = a->out;
+	memcpy(this->conferenceKey, a->conferenceKey, KEY_LENGTH);
+	memcpy(this->audioSessionKey, a->audioSessionKey, KEY_LENGTH);
+	memcpy(this->digest, a->digest, SHA_DIGEST_LENGTH);
+}
+
+void Announcement::initConferenceKey() {
+	int res = 0;
+	while(res == 0) {
+		res = RAND_bytes(conferenceKey, KEY_LENGTH);
+	}
+}
+
+void Announcement::initAudioSessionKey() {
+	int res = 0;
+	while(res == 0) {
+		res = RAND_bytes(audioSessionKey, KEY_LENGTH);
+	}
+}
+
+QString &operator<<(QString &out, Announcement *a) {
+	
+	bool audio = a->getAudio();
+	bool video = a->getVideo();
+	QString confName = a->getConfName();
+	QString organizer = a->getOrganizer();
+	QString email = a->getEmail();
+	QString desc = a->getDesc();
+	QDate date = a->getDate();
+	QTime time = a->getTime();
+	int hours = a->getHours();
+	int minutes = a->getMinutes();
+	QString uuid = a->getUuid();
+
+	out.append("<conference>");
+	out.append("<audio>");
+	if (audio) 
+		out.append("true");
+	else
+		out.append("false");
+	out.append("</audio>");
+
+	out.append("<video>");
+	if (video) 
+		out.append("true");
+	else
+		out.append("false");
+	out.append("</video>");
+
+	out.append("<confName>");
+	out.append(confName);
+	out.append("</confName>");
+		
+	out.append("<organizer>");
+	out.append(organizer);
+	out.append("</organizer>");
+
+	out.append("<email>");
+	out.append(email);
+	out.append("</email>");
+
+	out.append("<desc>");
+	out.append(desc);
+	out.append("</desc>");
+
+	out.append("<date>");
+	QString qsDate = date.toString(Qt::TextDate);
+	out.append(qsDate);
+	out.append("</date>");
+
+	out.append("<time>");
+	QString qsTime = time.toString(Qt::TextDate);
+	out.append(qsTime);
+	out.append("</time>");
+
+	out.append("<hours>");
+	QString qsHours = QString("%1").arg(hours);
+	out.append(qsHours);
+	out.append("</hours>");
+
+	out.append("<minutes>");
+	QString qsMinutes = QString("%1").arg(minutes);
+	out.append(qsMinutes);
+	out.append("</minutes>");
+
+	out.append("<uuid>");
+	out.append(uuid);
+	out.append("</uuid>");
+
+	out.append("</conference>");
+	return out;
+}
+
+QDomDocument &operator>>(QDomDocument &in, Announcement *a) {
+	
+	QDomElement docElem = in.documentElement(); // <conference>
+	QDomNode node = docElem.firstChild(); // <audio>
+
+	while(!node.isNull()) {
+		QString attr = node.nodeName();
+		if (attr == "audio") {
+			QString bAudio = node.toElement().text();
+			if (bAudio == "true") 
+				a->setAudio(true);
+			else
+				a->setAudio(false);
+		} else
+		if (attr == "video") {
+			QString bVideo = node.toElement().text();
+			if (bVideo == "true") 
+				a->setVideo(true);
+			else
+				a->setVideo(false);
+		} else
+		if (attr == "confName") {
+			QString confName = node.toElement().text();
+			a->setConfName(confName);
+		} else
+		if (attr == "organizer") {
+			QString organizer = node.toElement().text();
+			a->setOrganizer(organizer);
+		} else
+		if (attr == "email") {
+			QString email = node.toElement().text();
+			a->setEmail(email);
+		} else
+		if (attr == "date") {
+			QString qsDate = node.toElement().text();
+			QDate date = QDate::fromString(qsDate, Qt::TextDate);
+			a->setDate(date);
+		} else
+		if (attr == "time") {
+			QString qsTime = node.toElement().text();
+			QTime time = QTime::fromString(qsTime, Qt::TextDate);
+			a->setTime(time);
+		} else
+		if (attr == "hours") {
+			QString qsHours = node.toElement().text();
+			int hours = qsHours.toInt();
+			a->setHours(hours);
+		} else
+		if (attr == "minutes") {
+			QString qsMinutes = node.toElement().text();
+			int minutes = qsMinutes.toInt();
+			a->setMinutes(minutes);
+		} else 
+		if (attr == "desc" ) {
+			QString desc = node.toElement().text();
+			a->setDesc(desc);
+		} else
+		if (attr == "uuid" ) {
+			QString uuid = node.toElement().text();
+			a->setUuid(uuid);
+		}
+		else
+		{
+			critical("Unknown xml attribute");
+		}
+
+		node = node.nextSibling();
+	}
+
+	return in;
+}
+
+
+
+FetchedAnnouncement::FetchedAnnouncement()
+{
+	Announcement();
+	timestamp = QDateTime::currentDateTime();
+	dismissed = false;
+}
+
+void FetchedAnnouncement::refreshReceived() {
+	timestamp = QDateTime::currentDateTime();	
+}
+
+bool FetchedAnnouncement::needRefresh() {
+	QDateTime now = QDateTime::currentDateTime();
+	if (timestamp.secsTo(now) > REFRESH_INTERVAL) {
+		return true;
+	}
+	return false;
+}
+
+bool FetchedAnnouncement::isStaled() {
+	QDateTime now = QDateTime::currentDateTime();
+	if (timestamp.secsTo(now) > REMOVE_INTERVAL) {
+		return true;
+	}
+	return false;
+}
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/actd.qrc
@@ -0,0 +1,11 @@
+<!DOCTYPE RCC><RCC version="1.0">
+<qresource>
+	<file>images/logo1.jpg</file>
+	<file>images/watermark1.jpg</file>
+	<file>images/watermark2.jpg</file>
+	<file>images/audio.png</file>
+	<file>images/video.png</file>
+	<file>images/setting.png</file>
+	<file>images/priv.png</file>
+</qresource>
+</RCC>
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/mainwindow.cpp
@@ -0,0 +1,387 @@
+#include <QtGui>
+#include <QInputDialog>
+#include <QFile>
+#include <QDir>
+#include <QTextStream>
+
+#include "mainwindow.h"
+#include "debugbox.h"
+
+
+MainWindow::MainWindow(char *argv[], QWidget *parent) 
+	:QDialog(parent)
+{
+	readSettings();
+
+	binaryPath = argv[0];
+	QString temp = binaryPath.left(binaryPath.lastIndexOf("/"));
+	binaryPath = temp;
+	debug("binary path is " + temp);
+	pubConfList = new QTreeWidget;
+	pubConfList->setEnabled(false);
+	pubConfList->setRootIsDecorated(false);
+	pubConfList->setHeaderLabels(QStringList() << tr("")<<tr("")<<tr("")<<tr("Conference Name")<<tr("Organizer")<<tr("Contact"));
+	
+	pubConfList->setColumnWidth(0, 25);
+	pubConfList->setColumnWidth(1, 25);
+	pubConfList->setColumnWidth(2, 25);
+	pubConfList->setColumnWidth(3, 200);
+	pubConfList->setColumnWidth(4, 150);
+
+
+	//myConfList = new QTreeWidget;
+	//myConfList->setEnabled(false);
+	//myConfList->setRootIsDecorated(false);
+	//myConfList->setHeaderLabels(QStringList() << tr("Audio")<<tr("Video")<<tr("Conference Name")<<tr("Organizer"));
+
+	confDesc = new QTextEdit;
+	confDesc->setReadOnly(true);
+	confDesc->setEnabled(false);
+
+	pubConfLabel = new QLabel(tr("Public Conferences"));
+	//myConfLabel = new QLabel(tr("My Conferences"));
+	confDescLabel = new QLabel(tr("Conference Descriptions"));
+	QString warning = "Current prefix for voice data is: " + prefix ;
+	currentPrefLabel = new QLabel(warning);
+
+	newButton = new QPushButton(tr("New"));
+	prefButton = new QPushButton(tr("Preferences"));
+	aboutButton = new QPushButton(tr("About"));
+	quitButton = new QPushButton(tr("Quit"));
+
+	joinButton = new QPushButton(tr("Join"));
+	joinButton->setEnabled(false);
+	//editButton = new QPushButton(tr("Edit"));
+	//editButton->setEnabled(false);
+	dismissButton = new QPushButton(tr("Dismiss"));
+	dismissButton->setEnabled(false);
+
+	listPrivate = new QCheckBox(tr("Also List Private Conferences"));
+	connect(listPrivate, SIGNAL(stateChanged(int)), this, SLOT(listPrivateConferences()));
+	// TODO: should enable this in near future
+	listPrivate->setEnabled(false);
+	
+	QHBoxLayout *topLayout = new QHBoxLayout;
+	topLayout->addWidget(newButton);
+	topLayout->addWidget(prefButton);
+	topLayout->addWidget(aboutButton);
+	topLayout->addWidget(quitButton);
+	
+
+	footButtonBox = new QDialogButtonBox;
+	footButtonBox->addButton(joinButton, QDialogButtonBox::ActionRole);
+	//footButtonBox->addButton(editButton, QDialogButtonBox::ActionRole);
+	footButtonBox->addButton(dismissButton, QDialogButtonBox::ActionRole);
+
+	QHBoxLayout *midLayout = new QHBoxLayout;
+	midLayout->addWidget(pubConfLabel);
+	midLayout->addWidget(listPrivate);
+
+	QVBoxLayout *mainLayout = new QVBoxLayout;
+	mainLayout->addLayout(topLayout);
+	mainLayout->addLayout(midLayout);
+	mainLayout->addWidget(pubConfList);
+	mainLayout->addWidget(confDescLabel);
+	mainLayout->addWidget(confDesc);
+	mainLayout->addWidget(currentPrefLabel);
+	mainLayout->addWidget(footButtonBox);
+	setLayout(mainLayout);
+
+	setWindowTitle(tr("Conference Management Tool"));
+
+	connect(newButton, SIGNAL(clicked()), this, SLOT(newConference()));
+	connect(prefButton, SIGNAL(clicked()), this, SLOT(changePref()));
+	connect(aboutButton, SIGNAL(clicked()), this, SLOT(about()));
+	connect(quitButton, SIGNAL(clicked()), this, SLOT(close()));
+	connect(joinButton, SIGNAL(clicked()), this, SLOT(joinConference()));
+	//connect(editButton, SIGNAL(clicked()), this, SLOT(editConference()));
+	connect(dismissButton, SIGNAL(clicked()), this, SLOT(dismissConference()));
+	connect(pubConfList, SIGNAL(currentItemChanged(QTreeWidgetItem *, QTreeWidgetItem *)), this, SLOT(processItem()));
+	
+
+	
+	sd = new SessionEnum(prefix);
+	connect(sd, SIGNAL(expired(QString, QString)), this, SLOT(removeConferenceFromList(QString, QString)));
+	connect(sd, SIGNAL(add(Announcement *)), this, SLOT(addConferenceToList(Announcement *)));
+	
+	
+
+
+
+}
+
+QSize MainWindow::sizeHint() const
+{
+	return QSize(600, 600);
+}
+
+
+void MainWindow::processItem(){
+	QTreeWidgetItem *current = pubConfList->currentItem();
+	if (!current) {
+		pubConfList->setEnabled(false);
+		confDesc->clear();
+		confDesc->setEnabled(false);
+		joinButton->setEnabled(false);
+		//editButton->setEnabled(false);
+		dismissButton->setEnabled(false);
+		return;
+	}
+	
+	Announcement *a = itemToAnnouncement[current];
+	if (a->getOwner()) {
+		joinButton->setEnabled(true);
+		//editButton->setEnabled(true);
+		dismissButton->setEnabled(true);
+
+	} else {
+		joinButton->setEnabled(true);
+		//editButton->setEnabled(false);
+		dismissButton->setEnabled(false);
+	}
+//	confDesc->setPlainText(a->getDesc());
+	QString desc = current->data(3, Qt::UserRole).toString();
+	confDesc->setPlainText(desc);
+
+}
+
+
+
+void MainWindow::readSettings() {
+	QSettings settings("UCLA_IRL", "ACTD");
+	prefix = settings.value("prefix", QString("")).toString();
+
+	if (prefix == "") {
+		changePref();
+	}
+
+	audioPath = settings.value("audioPath", QString("")).toString();
+
+}
+
+void MainWindow::writeSettings() {
+	QSettings settings("UCLA_IRL", "ACTD");
+	settings.setValue("prefix", prefix);
+	settings.setValue("audioPath", audioPath);
+}
+
+void MainWindow::about() {
+	QMessageBox::about(this, tr("About actd"), QString("%1\n%2").arg(tr("This is an application similar to sd of the MBone.")).arg(tr("Conference management is handled by this application.")));
+
+}
+
+
+void MainWindow::changePref() {
+	bool ok;
+
+	QString text = QInputDialog::getText(this, tr("Get Name Prefix for Conference"), tr("Input the name prefix for the conference application:"), QLineEdit::Normal, prefix, &ok);
+	if (ok && !text.isEmpty()) {
+		prefix = text; 
+		writeSettings();
+		QString warning = "Current prefix for voice data is: " + prefix ;
+		currentPrefLabel->setText(warning);
+	}
+}
+
+void MainWindow::joinConference() {
+
+	QTreeWidgetItem *current = pubConfList->currentItem();	
+	if (!current) {
+		critical("current is null");
+	}
+
+	QString confName = current->text(3);
+	// should be indicated from current item in the future
+	bool audio = true;
+	bool video = false;
+	if (video) {
+		// no video yet; do nothing
+	}
+	if (audio) {
+
+/*
+		if (audioProcess != NULL && audioProcess->state() != QProcess::NotRunning) {
+			int ret = QMessageBox::warning(this, tr("Conference Tool Set"),
+											tr("The audio daemon is already running.\n" "Do you want to continue?"), QMessageBox::Cancel | QMessageBox::Yes, QMessageBox::Cancel);
+			if (ret == QMessageBox::Cancel)
+				return;
+			else {
+				audioProcess->kill();
+				//if (audioProcess->state() != QProcess::NotRunning)
+				//	debug("panic! can not kill audio tool process!");
+				delete audioProcess;
+				audioProcess = new QProcess(this);
+			}
+		}
+		*/
+
+		QString qsConfig = "<config><prefix>" + prefix + "</prefix><confName>"\
+							+ confName + "</confName>";
+		
+		Announcement *a = itemToAnnouncement[current];
+		if (a->getIsPrivate()) {
+			qsConfig += "<private>true</private>";
+			QByteArray confKey((const char *)a->conferenceKey, (int)sizeof(a->conferenceKey));	
+			QString qsConfKey = QString(confKey.toBase64());
+			qsConfig += "<confKey>" + qsConfKey + "</confKey>";
+			QByteArray sessionKey((const char *)a->audioSessionKey, (int)sizeof(a->audioSessionKey));
+			QString qsSessionKey = QString(sessionKey.toBase64());
+			qsConfig += "<sessionKey>" + qsSessionKey + "</sessionKey>";
+		}
+		else {
+			qsConfig += "<private>false</private>";
+		}
+		qsConfig += "</config>";
+
+		QDomDocument doc;
+		QDir actDir(QDir::homePath() + "/" + ".actd");
+		if (!actDir.exists()) {
+			QDir homedir = QDir::home();
+			homedir.mkdir(".actd");
+		}
+		QString fileName = actDir.absolutePath() + "/" + ".config";
+		QFile config(fileName);
+
+
+		config.open(QIODevice::WriteOnly | QIODevice::Truncate);
+		QTextStream out (&config);
+
+		out << qsConfig;
+		config.close();
+
+		audioProcess = new QProcess(this);
+		audioPath = binaryPath + "/" + "murmurd";
+		audioProcess->start(audioPath);
+
+		QProcess *mumbleProcess = new QProcess(this);
+		QString mumblePath = binaryPath + "/" + "mumble";
+		mumbleProcess->start(mumblePath);
+		
+	}
+}
+
+void MainWindow::editConference() {
+}
+
+
+void MainWindow::dismissConference() {
+	QTreeWidgetItem *current = pubConfList->currentItem();
+	if (!current) {
+		QString qs = "Dismiss: current is null!";
+		critical(qs);
+	}
+
+	// remove from QList
+	//QString confName = current->text(3);
+	//QString organizer = current->text(4);
+	Announcement *a = itemToAnnouncement[current];
+	
+	//sd->removeFromMyConferences(confName, organizer);
+	sd->removeFromMyConferences(a);
+	//delete a;
+	itemToAnnouncement.remove(current);
+
+	// remove from GUI
+	delete current;
+	
+}
+
+void MainWindow::newConference() {
+
+	Announcement *a = new Announcement();
+	ConfWizard wizard;
+	wizard.exec();
+	Announcement *announce = wizard.getAnnouncement();
+	if (announce == NULL)
+		return;
+	a->copy(announce);
+	addConferenceToList(a);
+	sd->addToMyConferences(a);
+}
+
+void MainWindow::addConferenceToList(Announcement *announce) {
+
+	if (announce == NULL) {
+		QString qs ="add: conference announcement is null!";
+		critical(qs);
+	}
+
+	QTreeWidgetItem *item = new QTreeWidgetItem;
+
+	itemToAnnouncement.insert(item, announce);
+	
+	item->setText(3, announce->getConfName());
+	QString oDesc = announce->getDesc();
+	QString date = announce->getDate().toString("ddd MMM d"); 
+	QString start = announce->getTime().toString("h:mm AP"); 
+	int hours = announce->getHours();
+	int minutes = announce->getMinutes();
+	
+	QString desc = QString("Date: %1\nTime: %2\nDuration: %3 Hours %4 Minutes\n-------------------------------\n%5").arg(date).arg(start).arg(hours).arg(minutes).arg(oDesc);
+
+	item->setData(3, Qt::UserRole, desc);
+	
+	item->setText(4, announce->getOrganizer());
+	item->setText(5, announce->getEmail());
+
+
+	if (announce->getOwner() ) {
+		QPixmap setting(":/images/setting.png");
+		item->setIcon(0, setting);
+	} else {
+		if (announce->getIsPrivate()) {
+			QPixmap priv(":/images/priv.png");
+			item->setIcon(0, priv);
+		}
+	}
+
+	if (announce->getAudio()) {
+		QPixmap audio(":/images/audio.png");
+		item->setIcon(1, audio);
+
+	}
+
+	if (announce->getVideo()) {
+		QPixmap video(":/images/video.png");
+		item->setIcon(2, video);
+	}
+
+
+	pubConfList->addTopLevelItem(item);
+	if (!pubConfList->currentItem()) {
+		pubConfList->setCurrentItem(pubConfList->topLevelItem(0));
+		pubConfList->setEnabled(true);
+		confDesc->setEnabled(true);
+	}
+}
+
+void MainWindow::removeConferenceFromList(QString confName, QString organizer) {
+
+	// remove from GUI
+	QList<QTreeWidgetItem *> conferences = pubConfList->findItems(confName, Qt::MatchFixedString, 3);
+	if (conferences.isEmpty()) {
+		QString qs = QString("no conference named %1 found!!").arg(confName);
+		critical(qs);
+	}
+
+	while (!conferences.isEmpty()) {
+		QTreeWidgetItem *item = NULL;
+		item = conferences.takeFirst();
+		if (item != NULL && item->text(4) == organizer) {
+			itemToAnnouncement.remove(item);
+			delete item;
+		}
+	}
+
+}
+
+void MainWindow::listPrivateConferences() {
+	if (listPrivate->isChecked()) {
+		pubConfLabel->setText("Public And Private Conferences");
+		sd->setListPrivate(true);
+	}
+	else {
+		sd->setListPrivate(false);
+		pubConfLabel->setText("Public Conferences");
+	}
+}
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/actd_initkeystore.sh
@@ -0,0 +1,54 @@
+#!/bin/sh
+# lib/ccn_initkeystore.sh
+# 
+# Part of the CCNx distribution.
+#
+# Copyright (C) 2009-2010 Palo Alto Research Center, Inc.
+#
+# This work is free software; you can redistribute it and/or modify it under
+# the terms of the GNU General Public License version 2 as published by the
+# Free Software Foundation.
+# This work is distributed in the hope that it will be useful, but WITHOUT ANY
+# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+# FOR A PARTICULAR PURPOSE.
+#
+# Create a ccn keystore without relying on java
+: ${RSA_KEYSIZE:=1024}
+: ${CCN_USER:=`id -n -u`}
+Fail () {
+  echo '*** Failed' "$*"
+  exit 1
+}
+
+cd $HOME
+test -d .actd && rm -rf .actd
+test $RSA_KEYSIZE -ge 512 || Fail \$RSA_KEYSIZE too small to sign CCN content
+(umask 077 && mkdir .actd) || Fail $0 Unable to create .ccnx directory
+cd .actd
+umask 077
+# Set a trap to cleanup on the way out
+trap 'rm -f openssl.cnf' 0
+cat <<EOF >openssl.cnf
+# This is not really relevant because we're not sending cert requests anywhere,
+# but openssl req can refuse to go on if it has no config file.
+[ req ]
+distinguished_name	= req_distinguished_name
+[ req_distinguished_name ]
+countryName			= Country Name (2 letter code)
+countryName_default		= AU
+countryName_min			= 2
+countryName_max			= 2
+EOF
+openssl req    -config openssl.cnf      \
+               -newkey rsa:$RSA_KEYSIZE \
+               -x509                    \
+               -keyout actd_private_key.pem  \
+               -out actd_cert.pem         \
+               -subj /CN="$CCN_USER"    \
+               -nodes                                   || Fail openssl req
+
+openssl pkcs12 -export -name "ccnxuser" \
+               -out .actd_keystore      \
+               -in actd_cert.pem          \
+               -inkey actd_private_key.pem   \
+               -password pass:'Th1s1s@p8ssw0rdf0r8ctd.' || Fail openssl pkcs12
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/qrc_actd.cpp
@@ -0,0 +1,7097 @@
+/****************************************************************************
+** Resource object code
+**
+** Created: Thu Jul 7 16:58:55 2011
+**      by: The Resource Compiler for Qt version 4.7.0
+**
+** WARNING! All changes made in this file will be lost!
+*****************************************************************************/
+
+#include <QtCore/qglobal.h>
+
+static const unsigned char qt_resource_data[] = {
+  // /Users/zhenkai/Develop/mumble-1.2.3/src/actd/images/video.png
+  0x0,0x0,0x2e,0x1c,
+  0x89,
+  0x50,0x4e,0x47,0xd,0xa,0x1a,0xa,0x0,0x0,0x0,0xd,0x49,0x48,0x44,0x52,0x0,
+  0x0,0x0,0x80,0x0,0x0,0x0,0x80,0x8,0x6,0x0,0x0,0x0,0xc3,0x3e,0x61,0xcb,
+  0x0,0x0,0x0,0x9,0x70,0x48,0x59,0x73,0x0,0x0,0xb,0x13,0x0,0x0,0xb,0x13,
+  0x1,0x0,0x9a,0x9c,0x18,0x0,0x0,0x0,0x20,0x63,0x48,0x52,0x4d,0x0,0x0,0x7a,
+  0x25,0x0,0x0,0x80,0x83,0x0,0x0,0xf9,0xff,0x0,0x0,0x80,0xe9,0x0,0x0,0x75,
+  0x30,0x0,0x0,0xea,0x60,0x0,0x0,0x3a,0x98,0x0,0x0,0x17,0x6f,0x92,0x5f,0xc5,
+  0x46,0x0,0x0,0x2d,0xa2,0x49,0x44,0x41,0x54,0x78,0xda,0xec,0x7d,0x79,0xb0,0x66,
+  0xc7,0x55,0xdf,0xef,0xf4,0xbd,0xdf,0xfa,0xd6,0x79,0xb3,0x6a,0x46,0xd2,0x8c,0x96,
+  0x19,0xed,0x8a,0x2d,0x59,0x36,0xd8,0x60,0xb9,0x6c,0xc9,0xb,0x12,0xb6,0xc0,0x4,
+  0x12,0x60,0xc6,0x90,0x4,0x53,0x71,0x61,0x14,0xa0,0x52,0x29,0xca,0x45,0x92,0x32,
+  0xd8,0x95,0xaa,0x40,0x25,0x76,0x8a,0xa,0x20,0x2a,0x98,0x99,0x18,0x48,0x82,0x13,
+  0xcb,0x26,0x18,0x84,0xcb,0x18,0x59,0x26,0x96,0x65,0x4b,0x96,0xac,0xc5,0xda,0x66,
+  0x34,0x92,0x66,0xd3,0xcc,0xdb,0xdf,0xb7,0xdd,0xa5,0x4f,0xfe,0xb8,0x5b,0x77,0xdf,
+  0xee,0xfb,0xdd,0xf7,0x34,0x3,0x52,0xf1,0x7a,0xea,0x9b,0xf7,0xde,0xf7,0xdd,0xed,
+  0xeb,0x73,0xfa,0x9c,0xdf,0x59,0xfa,0x1c,0x62,0x66,0xac,0x77,0xd0,0xc1,0xc3,0x5b,
+  0x1,0xdc,0x9,0xe0,0x3,0x0,0xde,0xd,0x60,0x2,0x9b,0xe3,0xef,0x63,0xf4,0x0,
+  0xdc,0x7,0xe0,0x5e,0x0,0x5f,0xe4,0x23,0x87,0x16,0xd6,0x4d,0xcb,0xf5,0x30,0x0,
+  0x1d,0x3c,0x7c,0x3d,0x80,0x4f,0x0,0x78,0x1f,0x80,0xc6,0xe6,0xfc,0xbf,0xa6,0x46,
+  0x8,0xe0,0x4b,0x0,0x3e,0xc6,0x47,0xe,0x3d,0x7e,0x5e,0x19,0x80,0xe,0x1e,0xbe,
+  0x4,0xc0,0xaf,0x3,0xf8,0x69,0x0,0xde,0xe6,0x5c,0xbf,0xa6,0x47,0x4,0xe0,0x8,
+  0x80,0x7f,0xc7,0x47,0xe,0xbd,0xf4,0xaa,0x19,0x80,0xe,0x1e,0xfe,0x39,0x0,0x9f,
+  0x2,0xd0,0xd9,0x9c,0xdb,0xd7,0xd5,0x18,0x0,0xb8,0x9b,0x8f,0x1c,0xba,0x67,0x43,
+  0xc,0x40,0x7,0xf,0x7b,0x0,0x7e,0xb,0xc0,0xdd,0xeb,0xbf,0x37,0x81,0x84,0x80,
+  0x0,0x81,0xc8,0x71,0x4,0x15,0xc7,0x16,0xff,0xbb,0x8e,0xd1,0xaf,0x3d,0xe6,0x57,
+  0x78,0x13,0x1d,0x50,0x7a,0xb2,0xeb,0xfe,0xe6,0x1d,0xe9,0xef,0x8c,0x2e,0xc,0xd6,
+  0xff,0xd4,0x3f,0x51,0xff,0x66,0x46,0x1c,0x45,0x88,0x82,0x8,0x71,0x18,0x62,0x23,
+  0x78,0x2d,0x5d,0xbc,0xbf,0xc2,0x47,0xe,0xc5,0xb5,0x19,0x80,0xe,0x1e,0x9e,0x1,
+  0xf0,0xa7,0x0,0x6e,0xab,0x4b,0x70,0x21,0x4,0x44,0x18,0x43,0xf6,0x7a,0xe0,0x30,
+  0x2,0x98,0xd3,0x59,0xa5,0x8a,0xb9,0xa7,0xfa,0xc4,0xae,0x7a,0xd7,0x78,0xe3,0xa2,
+  0x9b,0xaf,0xc7,0xe4,0x8e,0xb9,0xd2,0x47,0x44,0xee,0xfb,0x91,0xeb,0x5e,0x1b,0xe0,
+  0xc,0x41,0x4,0x5f,0x24,0xcc,0x4f,0x48,0xa6,0x82,0x1,0x48,0x4e,0x89,0x9a,0xfe,
+  0x34,0x58,0x1,0x6c,0x10,0x5f,0xe5,0x11,0x6,0x10,0x8d,0x42,0xac,0x2d,0xad,0x60,
+  0x6d,0x71,0x19,0xfd,0xe5,0x55,0xb0,0x94,0x75,0x1f,0xe9,0xcb,0x0,0x7e,0x8c,0x8f,
+  0x1c,0x5a,0x1e,0xcb,0x0,0xe9,0xca,0xff,0x8b,0x5a,0xc4,0x27,0x1,0x2f,0x92,0x90,
+  0xcb,0x2b,0xfa,0xd3,0x8f,0xa1,0x61,0x69,0xb2,0xa9,0xde,0x1a,0xa4,0x2a,0xbe,0x50,
+  0x28,0xb5,0x75,0xff,0x5e,0x6c,0xbd,0xe2,0xd2,0x75,0x13,0xdd,0x46,0x6c,0xda,0x0,
+  0x7,0x10,0x11,0xf6,0x4c,0x35,0x70,0xf9,0x96,0x16,0xf6,0xcd,0x34,0x31,0xd1,0x10,
+  0xa5,0x63,0x54,0x66,0x90,0xe9,0xcf,0x48,0x32,0x86,0x91,0xc4,0x20,0x94,0x18,0x44,
+  0x12,0xbd,0x40,0x62,0x61,0x18,0x61,0xa1,0x1f,0x61,0x61,0x10,0x21,0x94,0xc5,0x1c,
+  0xc7,0x91,0xc4,0xca,0xfc,0x22,0xe6,0x5f,0x3e,0x85,0x28,0x8,0xeb,0x32,0xc1,0x7b,
+  0x4d,0x49,0xe0,0x5b,0xe,0xfc,0x4f,0xe3,0x89,0x4f,0xf0,0x98,0x20,0x17,0x97,0x21,
+  0x4d,0x2e,0xa4,0x1a,0xa2,0xb6,0xe6,0xa4,0x8e,0x15,0xdf,0xe,0x15,0x10,0xac,0xf6,
+  0x9c,0x84,0xa7,0xa,0xa9,0x63,0x23,0x36,0xa1,0x36,0x5f,0x17,0xeb,0x99,0x19,0x27,
+  0x56,0x2,0x9c,0x58,0x9,0xf0,0x0,0x11,0x76,0x4c,0xf8,0xb8,0x6c,0xb6,0x85,0xcb,
+  0x66,0x5b,0x98,0x69,0x27,0x18,0x5a,0x80,0x1,0xa2,0x14,0x51,0x53,0x7e,0xee,0x74,
+  0xcb,0xb3,0x4a,0x5,0x6,0xe3,0x95,0xb5,0x10,0xc7,0x97,0x3,0xbc,0xb0,0x34,0xc2,
+  0x2b,0xfd,0x8,0x5b,0x76,0x6e,0xc5,0xf4,0xb6,0x2d,0x58,0x3c,0x75,0x16,0xb,0x27,
+  0xcf,0x40,0xc6,0x71,0xd5,0x74,0xde,0x96,0xd2,0xf6,0x17,0x9d,0x12,0x20,0x5,0x7c,
+  0xbf,0x57,0x49,0x14,0xcf,0x3,0x2d,0xad,0x82,0x4d,0xae,0xa3,0x3a,0x22,0x94,0x2a,
+  0x97,0x77,0xdd,0xe9,0xa7,0x31,0x12,0xa0,0xd1,0x6d,0xe3,0xf2,0x5b,0x6f,0x19,0x4b,
+  0x74,0x93,0xe0,0x64,0xb9,0x2b,0x9d,0x7,0x70,0xa0,0xa,0xc7,0xb9,0xae,0x8f,0xfd,
+  0x73,0x6d,0x5c,0xb3,0xad,0x8d,0x96,0x2f,0xac,0x7,0xf1,0xd8,0xeb,0x30,0x16,0x6,
+  0x11,0xbe,0x7d,0xaa,0x8f,0xa7,0xe7,0x87,0x90,0x92,0x11,0x5,0x21,0x4e,0x3c,0x73,
+  0x14,0xc3,0xb5,0xfe,0xb8,0xc7,0xf9,0xb0,0xa,0xc,0x73,0x6,0x48,0x4d,0xbd,0xa7,
+  0xab,0xd0,0xbe,0x27,0x3c,0xc8,0xf9,0x25,0xbb,0xb8,0xa7,0x75,0xc0,0xac,0xba,0xc7,
+  0xba,0x4e,0xb1,0xad,0x54,0x83,0xd1,0xae,0xbc,0xed,0xad,0xf0,0x7c,0xaf,0x92,0xe8,
+  0x26,0xc1,0xcf,0x97,0xa,0x28,0x13,0x8e,0xad,0x38,0x61,0xff,0x5c,0x1b,0x37,0xec,
+  0xe8,0x60,0x6b,0xd7,0x37,0x80,0x61,0x35,0x33,0xa8,0x8c,0xb0,0x3a,0x8a,0xf1,0x37,
+  0xc7,0x57,0x71,0x6c,0x69,0x84,0x38,0x66,0x9c,0x3e,0x7a,0x1c,0xab,0xe7,0x16,0xc7,
+  0x59,0x7,0x57,0x65,0x26,0xa2,0xaa,0x9c,0x7e,0xbd,0x92,0xf8,0x24,0x20,0xcf,0x2d,
+  0x6e,0x80,0xf8,0x54,0x2c,0x6f,0x2a,0x13,0x95,0x54,0xb5,0x90,0xbf,0xd2,0x53,0x88,
+  0xf2,0x97,0xf9,0xb9,0xf9,0x96,0x79,0x83,0xd1,0x6a,0x4f,0xf9,0xbc,0xb8,0x4e,0x76,
+  0x84,0x0,0x20,0x28,0x79,0x59,0x8f,0xcb,0x5f,0x38,0xf,0xaf,0xf2,0x75,0x25,0x33,
+  0x9e,0x9e,0x1f,0xe0,0x4f,0x9f,0x5a,0xc0,0x17,0x9e,0x5e,0xc4,0xd1,0x85,0x64,0x25,
+  0x9b,0x73,0x41,0x96,0xe9,0x55,0xbf,0xf3,0x54,0xcb,0xc7,0x1d,0xfb,0x67,0xf1,0xf6,
+  0xbd,0x53,0x68,0xf8,0x2,0xbb,0xf7,0xef,0xc3,0xdc,0x9e,0x5d,0x55,0xc,0xd0,0x1,
+  0xf0,0x71,0x4d,0x2,0xd0,0xc1,0xc3,0x37,0x2,0x78,0xd8,0xe5,0xe4,0x11,0xc2,0x7,
+  0xcf,0x2f,0xd8,0xd9,0x91,0xaa,0x51,0x34,0x6a,0xaf,0x2a,0x72,0x2d,0xfe,0x5a,0xf7,
+  0x32,0xaf,0xb9,0xe3,0x9a,0xcb,0x31,0xb7,0x6f,0x4f,0x69,0xa5,0x57,0xaa,0x0,0xe7,
+  0x57,0xd8,0xb8,0x14,0x60,0x87,0x40,0x37,0xd7,0x11,0x33,0x63,0xaa,0xe5,0xe1,0xad,
+  0x17,0x4f,0x62,0xdf,0x6c,0xcb,0x8a,0x2b,0xc6,0x49,0x84,0x53,0xab,0x1,0xee,0x7d,
+  0x66,0x11,0x41,0xcc,0x38,0xf9,0xcc,0xb,0x58,0x9d,0x77,0x4a,0x82,0x18,0xc0,0x1b,
+  0xf9,0xc8,0xa1,0xef,0x66,0x12,0xe0,0x13,0x2e,0xe2,0x93,0xf0,0xc0,0xb,0x4b,0xfa,
+  0x9d,0xb5,0xa5,0x47,0x3a,0xd5,0xa8,0xb4,0xb4,0x93,0x29,0x54,0x57,0xb3,0x6d,0x8a,
+  0xf5,0xc5,0x9f,0xdf,0x47,0x5f,0xbd,0xc9,0x3f,0x73,0x89,0xe5,0xd7,0x54,0xee,0x3b,
+  0x5a,0xed,0xe7,0x2b,0x9d,0xa0,0xae,0x74,0xfd,0x39,0x74,0xc1,0xe2,0xf8,0xf7,0x6a,
+  0x56,0x7f,0x8d,0x6b,0x66,0xcc,0xb8,0x16,0x48,0xdc,0x77,0x74,0x5,0x7f,0xf6,0xec,
+  0x12,0x16,0x87,0x91,0xf6,0x95,0xc6,0x49,0x4,0x0,0xb8,0x68,0xaa,0x89,0x1f,0xba,
+  0x72,0x16,0x3e,0x11,0x2e,0xba,0x72,0x2f,0xda,0x93,0x5d,0xa7,0x40,0x4f,0x69,0xe,
+  0xc2,0x4f,0xff,0xe1,0x56,0x0,0xa7,0xad,0x16,0x1,0x11,0xc4,0x6a,0x3f,0xb1,0xeb,
+  0xc7,0x2d,0x6e,0x5a,0x3f,0x60,0xab,0x3a,0x9f,0x2a,0x2c,0xa,0xfb,0xdb,0xba,0xd2,
+  0x69,0x4f,0x4f,0xe0,0xf2,0xb7,0xbd,0x71,0xac,0xf,0x80,0xc6,0xfa,0x22,0xea,0x5b,
+  0x7,0x5c,0x53,0xff,0x97,0x6c,0x7e,0xe5,0xcc,0xec,0x7d,0x22,0xc2,0xf5,0xdb,0xdb,
+  0xb8,0xf9,0xa2,0x2e,0x5a,0x9e,0xc8,0x8f,0x18,0x27,0x11,0x98,0x81,0x67,0xe6,0x87,
+  0xb8,0xef,0xf9,0x25,0x4,0x41,0x88,0x63,0xdf,0x79,0xca,0x65,0x1d,0x44,0x0,0x76,
+  0x9,0x0,0x3f,0xec,0x30,0x7,0xe1,0x31,0x59,0x89,0x5f,0x2c,0xfe,0xb2,0xde,0x2e,
+  0xf4,0xb7,0xed,0x18,0xd2,0x56,0xb5,0xb9,0xc,0x4a,0x82,0xa5,0x2c,0x4e,0x2c,0x78,
+  0x81,0x74,0x9,0x92,0x49,0x80,0xde,0x0,0xcc,0x6c,0xd7,0xe5,0x63,0x56,0x22,0x11,
+  0x41,0x68,0x2f,0x94,0x5e,0xb6,0xd5,0x2e,0xac,0xaf,0xe2,0x3a,0xb5,0x24,0x4f,0xfe,
+  0x2c,0x8c,0xef,0xbe,0x32,0xc0,0xe7,0x9e,0x5a,0xc2,0xfc,0x20,0xb2,0x8,0x56,0xbb,
+  0x44,0x20,0x2,0xe,0x6c,0x6d,0xe3,0xc0,0xd6,0xe,0x9a,0xcd,0x6,0xb6,0xee,0xde,
+  0xe9,0x92,0x2,0x3e,0x80,0x3b,0x5,0x92,0x90,0xae,0xd5,0xc9,0x23,0x97,0x57,0xdd,
+  0x62,0xdd,0x24,0xba,0x21,0xe2,0xb4,0x59,0xcd,0xf5,0x2f,0x39,0x51,0x35,0x51,0xf9,
+  0x46,0xb6,0x49,0x76,0x82,0x40,0x43,0x5d,0x80,0x19,0x41,0x6f,0x38,0x96,0xe8,0x65,
+  0x82,0x5b,0x8,0xfc,0x6a,0xfe,0x59,0x19,0x44,0x67,0x88,0x2a,0x66,0x58,0xb,0x63,
+  0xdc,0xfb,0xf4,0x12,0x8e,0xaf,0x4,0x56,0x2d,0x6b,0x93,0xa6,0x44,0xc0,0xf,0xee,
+  0x9d,0x42,0xd3,0x17,0x98,0xdb,0xbd,0x1d,0x7e,0xd3,0x19,0xb8,0xfd,0x80,0x87,0x1b,
+  0x7f,0xe4,0xbf,0xc1,0x12,0xda,0xf5,0x18,0xe0,0xe1,0x50,0x27,0x88,0x4a,0x5c,0xb,
+  0xb1,0xac,0x48,0x5f,0x5d,0xed,0x16,0xf8,0x4f,0xe,0x1d,0xee,0x96,0x1e,0xb0,0xe3,
+  0x0,0xb,0x3e,0xe9,0x6e,0x99,0x46,0x67,0x6a,0x72,0xc,0xd1,0x6b,0x10,0xfb,0x55,
+  0x60,0x0,0xdb,0x15,0x61,0xb9,0x27,0x2c,0xd2,0x21,0x3b,0x57,0x82,0x71,0x74,0x29,
+  0x80,0x2f,0x8,0xbb,0x26,0x1b,0x65,0x13,0xd6,0x22,0xd,0x1a,0x1e,0x21,0x88,0x19,
+  0x67,0x7a,0x11,0x84,0xe7,0x61,0x6d,0x71,0xd9,0xc6,0x0,0x97,0xa,0x0,0x5d,0x9b,
+  0x76,0xe7,0xd5,0x5e,0x6e,0xbe,0xe9,0x78,0x8f,0xd6,0x25,0xea,0xed,0xe,0x1f,0x65,
+  0x32,0x54,0x46,0x29,0x31,0x99,0xc9,0x7a,0x85,0x49,0x59,0x62,0x41,0xcb,0x6a,0x52,
+  0x4d,0xc1,0xec,0x1e,0xa5,0x55,0x5e,0x87,0xd8,0x78,0x15,0xaf,0x3a,0xc0,0xd0,0x90,
+  0xe,0x25,0x35,0x1,0x2,0x18,0x78,0xf0,0xc4,0x1a,0x1e,0x3c,0xd1,0xb3,0x5a,0xd6,
+  0x36,0x69,0x70,0xe3,0xce,0x2e,0x88,0x80,0x99,0x6d,0x73,0x20,0x21,0x6c,0xc,0x30,
+  0x61,0xd5,0xfd,0xc2,0xf3,0xc0,0x2c,0x73,0x62,0xd9,0x3d,0x76,0xe3,0xa3,0x72,0x26,
+  0xb2,0xa2,0xa,0xd0,0x66,0xf,0xf,0xd0,0x58,0x50,0x46,0x15,0x20,0x72,0xa4,0xb8,
+  0x84,0x55,0x13,0xb0,0xd2,0x1d,0x5c,0x13,0x4,0x6e,0xc8,0xd,0xe8,0xba,0x9,0xab,
+  0x13,0x98,0xf8,0x2,0x58,0x71,0xf,0xe7,0x50,0x8f,0x9,0x8f,0x9d,0x19,0x60,0xae,
+  0xe3,0xe1,0xc0,0x5c,0x3b,0x3f,0x8d,0xd2,0x60,0x13,0x1,0xe0,0xec,0xfb,0x32,0x63,
+  0xb2,0x29,0xb0,0xbd,0xdb,0xc4,0xd9,0x7e,0x80,0x89,0xd9,0x29,0xac,0x2d,0x2c,0x5b,
+  0x81,0x40,0x99,0x1,0xa2,0x18,0xd2,0x61,0x90,0xd3,0x58,0x4f,0xdc,0xc6,0x2,0x2c,
+  0x76,0x69,0x41,0x63,0xe2,0x3e,0x54,0xe9,0x4a,0x1e,0xae,0xf5,0x6b,0x11,0x9e,0xc6,
+  0x3e,0xdb,0xab,0xf1,0x3,0x52,0x25,0x53,0xb0,0x72,0xfd,0x24,0x80,0x4a,0x3a,0x23,
+  0xa4,0x7,0x24,0x80,0x36,0xf9,0xfb,0x6b,0x2f,0xf6,0xb0,0xa5,0xed,0x63,0x7b,0xe6,
+  0x41,0xa4,0x84,0x9,0x34,0x76,0x21,0x2,0x31,0x63,0xdf,0x6c,0x13,0xe7,0xfa,0x21,
+  0xa6,0xe7,0x66,0xeb,0x33,0xc0,0x75,0xdb,0xbb,0x68,0xec,0xe8,0x24,0x61,0x48,0x56,
+  0x9f,0x99,0xf3,0xd0,0x66,0x12,0xce,0x4c,0xcd,0x1c,0xe5,0x21,0xb3,0x73,0x58,0x31,
+  0x53,0xf2,0xbf,0x29,0x7d,0x38,0x2e,0x42,0xa4,0x99,0xa9,0x94,0x9c,0x9b,0x50,0x51,
+  0x3d,0x3f,0x33,0x93,0x8a,0xe7,0x60,0x30,0x13,0xb2,0x60,0x6a,0x16,0x75,0x36,0x9f,
+  0x8b,0x0,0x48,0x30,0x28,0x8a,0xd0,0x68,0x35,0x73,0x42,0x32,0xdc,0x81,0xcb,0xb,
+  0xe3,0xe,0xe6,0x6a,0xa6,0x50,0x1f,0x86,0x2c,0x52,0xa1,0x24,0x11,0x18,0x92,0x19,
+  0xf7,0x1d,0x5d,0xc5,0x8f,0x5e,0x3d,0x8b,0x8e,0x4f,0xc5,0xe1,0x6c,0x5e,0x82,0xb0,
+  0x77,0xb6,0x89,0x6f,0x9f,0xea,0x61,0x6a,0xcb,0x8c,0xd3,0x14,0x30,0xbe,0xac,0x80,
+  0xaf,0xac,0x18,0x12,0x16,0xb,0x7c,0x8c,0x8,0xa6,0x6a,0xb7,0xbe,0x73,0xe6,0xa9,
+  0x8e,0xbf,0x60,0x5d,0xab,0x94,0x70,0x51,0x9b,0x31,0xb9,0xa5,0x55,0xf6,0xff,0x1b,
+  0x27,0xe4,0xb6,0x38,0x91,0xc1,0xf4,0x16,0x26,0x84,0xce,0xc0,0xd0,0x16,0x84,0x11,
+  0xf2,0x55,0xae,0xad,0x31,0x29,0xeb,0xc7,0x80,0x1,0xc9,0x32,0xcf,0x1b,0xd0,0xc3,
+  0xc6,0x9,0x33,0x83,0x19,0x92,0x1,0x9,0x40,0x4a,0xc6,0x77,0xce,0xc,0xf0,0x83,
+  0x97,0x4c,0x6a,0xd7,0xd7,0x9e,0x5,0xc0,0xae,0xc9,0x26,0x9a,0xbe,0x0,0xa8,0x9,
+  0x4a,0x17,0x69,0x25,0x3,0x34,0x7c,0xaf,0x20,0xb6,0x89,0x1,0xc8,0x1d,0x7c,0x71,
+  0xc5,0xea,0xa9,0xe6,0x32,0xa3,0x1a,0x49,0x22,0x54,0x19,0x24,0xb2,0x5f,0x33,0xe8,
+  0xd,0x40,0x5b,0xa6,0x4b,0xcc,0x43,0x64,0x32,0xdf,0x38,0x5c,0x30,0x3e,0x83,0x88,
+  0x6b,0xbc,0xc7,0x55,0xea,0x80,0xcb,0xce,0x23,0xb6,0x4,0x80,0x80,0x84,0x9,0x62,
+  0x66,0xf8,0x2,0x98,0x6c,0xfa,0x4e,0x7,0x14,0x3,0x78,0xd3,0xee,0x9,0x2c,0xf,
+  0x63,0x3c,0xdf,0x6d,0xa1,0xdf,0x1b,0xea,0xea,0xde,0x3c,0xb1,0xd9,0xf0,0x12,0x31,
+  0x1c,0xb3,0x3b,0x88,0x63,0xd8,0x7c,0x9a,0xcf,0xc6,0x3a,0x71,0xa6,0xc9,0x60,0x58,
+  0x84,0xaa,0xcb,0xd8,0x34,0x83,0x34,0xc7,0x91,0xcd,0x8a,0xb0,0x43,0xe2,0xec,0x11,
+  0x83,0xfe,0x50,0x33,0x47,0x6d,0x56,0x8b,0xb,0xc1,0xb,0x23,0x68,0xb4,0x21,0x47,
+  0x90,0xe2,0x8e,0x26,0x97,0x1d,0xaf,0x9a,0xb8,0x86,0x69,0x4c,0x8e,0x5,0x92,0x5d,
+  0xf3,0x7b,0xb,0xa3,0x4a,0xb5,0x45,0x0,0xba,0x69,0x42,0x4a,0xb7,0xd3,0x1e,0xaf,
+  0x2,0x1a,0x42,0x24,0x62,0x30,0xa,0x21,0x1a,0xcd,0xa,0x14,0xef,0x40,0xcc,0x35,
+  0x64,0x7f,0x5d,0x10,0xa8,0x7e,0xe9,0x71,0x69,0x5,0x2e,0x15,0x10,0xf4,0x7,0x39,
+  0xe1,0x5d,0xaa,0xaa,0x56,0x58,0x78,0x83,0xda,0x9f,0x8c,0x69,0x50,0xd5,0x48,0x49,
+  0x32,0xe4,0x44,0x63,0xfd,0xae,0xb9,0x7f,0x38,0xfb,0xb3,0x38,0xee,0xe4,0x6a,0x88,
+  0xe5,0xb9,0x18,0x33,0x69,0x22,0x89,0x6,0x29,0x52,0x91,0x3f,0xd5,0xf0,0x70,0xa,
+  0x21,0xda,0xad,0xb2,0x43,0x48,0xd8,0x8,0x41,0x0,0x38,0x88,0xc,0x5b,0xbc,0xe,
+  0xf1,0x2d,0xc1,0x21,0x63,0xf5,0xdb,0x9d,0x3e,0xe,0xdf,0x42,0xc9,0x5b,0x50,0x56,
+  0x43,0xf6,0x70,0x70,0x21,0x35,0xa2,0x20,0x84,0x94,0xb1,0x73,0xb5,0x97,0x83,0x45,
+  0xe3,0x57,0x6a,0xdd,0x57,0x95,0x5f,0x40,0x90,0x7e,0x7f,0xab,0x9b,0xd7,0xc,0x60,
+  0x95,0x22,0x9a,0x9,0x62,0x3e,0xb6,0x38,0x72,0x32,0x2f,0x11,0x61,0xa2,0x21,0x12,
+  0x49,0x24,0xa8,0x86,0x15,0x90,0xde,0x41,0x6,0xd1,0xba,0x56,0x83,0x33,0xc4,0x4b,
+  0x15,0xa6,0x16,0x55,0x87,0x5c,0x9d,0xe0,0xdb,0x2,0x18,0x6d,0x99,0x47,0xd9,0x7b,
+  0x41,0x7f,0x88,0xee,0xf4,0x64,0xd9,0x11,0xb9,0xe1,0x84,0x93,0xba,0x12,0xc0,0x72,
+  0x1d,0xb,0xea,0xd7,0xac,0x18,0x55,0x5a,0x58,0x24,0x2,0x33,0x6b,0x7e,0x13,0x66,
+  0xc2,0xe9,0x5e,0x54,0xf8,0x1,0x32,0x6b,0x47,0xb9,0x8d,0xef,0xb9,0x1f,0xde,0x77,
+  0x3e,0x7c,0x18,0x55,0x10,0x9f,0xdc,0xe0,0xad,0x46,0x9e,0x9d,0xd3,0x62,0xa8,0x24,
+  0x7a,0x99,0xb0,0xa6,0x15,0x42,0x8e,0x38,0xfe,0x28,0x65,0x0,0x2a,0x39,0x84,0x1c,
+  0xcf,0x74,0xde,0x4c,0x41,0xae,0x64,0xa,0x93,0x19,0x6c,0x8c,0x90,0xab,0x86,0xd4,
+  0xf,0xa0,0xaa,0x85,0x8c,0xd8,0xa3,0x88,0xb1,0x30,0x88,0xb1,0xb5,0xe3,0x59,0x99,
+  0xc0,0x13,0xee,0x18,0x8c,0xef,0x10,0x0,0x89,0xa,0x70,0x60,0x60,0x22,0xf7,0x4a,
+  0xd7,0x26,0x9f,0x6c,0xbc,0x41,0xf5,0x9,0xef,0xc0,0x1f,0x76,0x6b,0xc0,0x6d,0x9a,
+  0x6,0xbd,0x41,0x22,0x6a,0xa9,0xc2,0x74,0xa5,0xf5,0x85,0x7f,0x6b,0x59,0x1,0x54,
+  0x7d,0x94,0x95,0x19,0xc,0x46,0x80,0x45,0x1a,0x30,0x23,0xf,0x78,0x65,0xe7,0x9c,
+  0x5a,0xb,0xb1,0xb5,0xe3,0xe7,0x57,0x55,0x99,0xc0,0x53,0x54,0x5b,0x6d,0x9,0x80,
+  0x58,0x82,0x23,0x86,0xf0,0xa9,0x1e,0xb5,0x1c,0xab,0x7a,0xec,0x64,0x52,0x85,0x8b,
+  0xd8,0xb5,0x79,0xa4,0x52,0x5,0x94,0xc5,0x43,0xd0,0x1f,0xea,0x13,0x60,0x21,0x7c,
+  0x55,0xae,0x60,0x5d,0x18,0x58,0x66,0x12,0x4b,0x6e,0x9f,0x36,0x1f,0x8a,0xfd,0xae,
+  0xb8,0x70,0x5d,0x8c,0x90,0x7b,0xf8,0x2c,0x2a,0xe1,0x74,0x2f,0xc2,0xf5,0xdb,0x73,
+  0x85,0xa2,0x31,0x81,0x47,0x6e,0xe0,0xe6,0xdb,0xbf,0x46,0xf2,0x92,0x41,0x8,0xd1,
+  0x68,0xe9,0x6b,0xac,0x82,0x19,0x88,0xc6,0x59,0xe6,0x3a,0x8d,0x6d,0x22,0xb8,0xdb,
+  0xf6,0x71,0xf5,0x9e,0x59,0xec,0x98,0x6e,0x63,0xdb,0x74,0x1b,0x53,0x9d,0x6,0x56,
+  0x7,0x21,0x16,0xd6,0x46,0x38,0xbd,0x38,0xc4,0xe3,0x2f,0x2d,0x22,0x8e,0xa5,0xe5,
+  0x7a,0x16,0x29,0x94,0x31,0xc0,0x70,0x94,0xcc,0x86,0x70,0x13,0x3e,0xfb,0x44,0x10,
+  0xe1,0xe2,0xa9,0x6,0x76,0x74,0x7d,0x4c,0x35,0x5,0xa6,0x5a,0x1e,0xc2,0x98,0xb1,
+  0x3c,0x8a,0xb1,0x12,0x48,0xbc,0xbc,0x12,0x62,0x79,0x14,0xaf,0xdb,0xd,0x4c,0xca,
+  0x9a,0x2f,0x33,0x83,0x9d,0x11,0xf2,0x3f,0xcd,0xf4,0x31,0x43,0x25,0x30,0x33,0xfa,
+  0x41,0x8c,0x50,0xca,0xc4,0x8a,0xb3,0x30,0x41,0x7d,0xc,0xa0,0xb0,0x3f,0x87,0x11,
+  0x40,0xed,0x9a,0x20,0xc9,0xbd,0x5e,0x8,0x36,0x3f,0x42,0x31,0x3a,0x4d,0x1f,0xef,
+  0x7e,0xc3,0xc5,0xf8,0x81,0x6b,0x76,0xe2,0xe6,0xcb,0xb7,0xa2,0xe1,0x9,0xe7,0x3,
+  0xf,0x82,0x18,0xf,0x1f,0x9d,0xc7,0x57,0x9f,0x38,0x85,0xaf,0x3c,0x7e,0xa,0x52,
+  0xb2,0x93,0xf0,0xf9,0x6d,0x99,0x11,0xc,0x47,0x68,0x75,0xdb,0x56,0xc2,0x13,0x80,
+  0x3,0x73,0x2d,0xbc,0x79,0x77,0x17,0xd7,0x6e,0x6b,0x61,0xb2,0x21,0x2a,0xb5,0xfa,
+  0x4b,0x2b,0x21,0x1e,0x3f,0x3b,0xc2,0x37,0x4f,0xf5,0xb1,0x34,0x8c,0xdd,0x4e,0x1f,
+  0xae,0x42,0x50,0xac,0xeb,0x78,0xb,0x23,0xd8,0xa4,0x81,0x34,0x83,0x3e,0xa,0x6c,
+  0x5c,0x19,0x49,0x6c,0xeb,0x8a,0xf4,0xbe,0x36,0x26,0xa0,0x9a,0x2a,0x20,0xbd,0x38,
+  0x8f,0x22,0xa7,0x7,0x6e,0x6c,0x74,0xce,0x4a,0xc,0xdd,0x86,0xf3,0x3d,0x81,0xf,
+  0xdc,0x72,0x29,0x7e,0xe6,0x1d,0xfb,0x31,0x3b,0xd1,0xac,0xb5,0xa6,0x3a,0x4d,0xf,
+  0x6f,0xbb,0x7a,0x7,0xde,0x76,0xf5,0xe,0xfc,0xec,0x3b,0xf7,0xe3,0xb3,0x5f,0x3b,
+  0x8a,0x2f,0x3d,0xf2,0xb2,0x15,0x70,0x91,0xa2,0x2a,0x82,0xfe,0x10,0xed,0x89,0x76,
+  0x89,0xf0,0x57,0x6f,0x6d,0xe3,0x7d,0x57,0x4c,0xe1,0xb2,0x99,0x46,0xed,0x35,0x7d,
+  0xe9,0x74,0x3,0x97,0x4e,0x37,0x70,0xfb,0x65,0x93,0xf8,0xda,0x4b,0x3d,0x7c,0xf9,
+  0x85,0x1e,0x6,0x91,0x2c,0x7,0xf9,0xc0,0xe,0x6f,0x9e,0xe9,0x26,0x63,0x3b,0x23,
+  0xa0,0x2c,0xd,0x84,0x43,0x25,0x30,0x3,0xab,0x81,0xc4,0xb6,0xae,0xa,0x0,0x75,
+  0xf1,0x51,0xb,0x3,0xa8,0x28,0x59,0x86,0x51,0xa5,0xbe,0x77,0x2,0x23,0x8b,0xbe,
+  0x35,0x25,0xc8,0xbe,0x1d,0x53,0xf8,0xc4,0x3f,0xbd,0x19,0x97,0x6e,0xdb,0x78,0x6d,
+  0x89,0xdd,0x5b,0xba,0xf8,0xd7,0xef,0xbf,0x1e,0xb7,0xdd,0xb8,0x1b,0xbf,0xf1,0xb9,
+  0x47,0xb1,0xd4,0x1b,0xc1,0xe1,0xa0,0xc6,0xb0,0x3f,0xc4,0x8c,0x62,0x4b,0xfb,0x42,
+  0xe0,0x47,0xaf,0x9a,0xc6,0xf,0x5c,0xdc,0xdd,0xf0,0xfd,0x1b,0x2,0x78,0xe7,0xde,
+  0x9,0x7c,0xdf,0x9e,0x2e,0xfe,0xe8,0xc9,0x65,0x3c,0x79,0x6e,0x58,0x69,0x33,0xa9,
+  0xc,0x61,0x32,0x83,0x8b,0x11,0x6c,0xd2,0x0,0xb6,0xc8,0x1f,0x18,0x2b,0xa3,0xd8,
+  0x62,0x5,0x24,0x11,0x30,0xe1,0xd0,0x3,0xc2,0xcd,0xe7,0x4,0xe,0x22,0x6b,0xa6,
+  0x8d,0x73,0xa5,0x53,0x91,0xd8,0x51,0x38,0x43,0xca,0xf9,0x7f,0xdf,0x7f,0xd5,0x4e,
+  0xfc,0xce,0x87,0xdf,0xfa,0xaa,0x88,0xaf,0x8e,0x37,0xee,0x9b,0xc3,0x3d,0x3f,0xff,
+  0x56,0x5c,0x7f,0xc9,0x16,0x23,0xd1,0x22,0x7d,0x9,0xc2,0x68,0x30,0xcc,0x89,0x3f,
+  0xd3,0xf6,0xf1,0xcb,0x6f,0xde,0xf6,0xaa,0x88,0xaf,0x8e,0xae,0x4f,0xf8,0xe7,0x37,
+  0xce,0xe2,0x9d,0x7b,0x27,0x4b,0x73,0x32,0x2e,0x13,0xc9,0xe5,0x4a,0x2b,0xdc,0xd7,
+  0x8a,0xeb,0x1a,0xd6,0x9c,0x9c,0xfc,0x66,0xab,0x81,0xb4,0x4a,0x5f,0xae,0x80,0xb0,
+  0xa2,0x2,0x3,0x82,0x23,0xa9,0x1,0x13,0xeb,0x4a,0x37,0xfc,0xf6,0xba,0x23,0x90,
+  0x4a,0x60,0xe0,0x5d,0x37,0xee,0xc1,0x7f,0xf8,0xa9,0x37,0x61,0xa2,0xe5,0xe3,0x7c,
+  0x8e,0xb9,0xc9,0x16,0x3e,0xf9,0x93,0x37,0xe3,0xc0,0xee,0x19,0x23,0x76,0x90,0x3c,
+  0x50,0xd8,0x1f,0x82,0x40,0x98,0x68,0x7a,0xf8,0x85,0x9b,0xe6,0x70,0xf1,0xd4,0xf9,
+  0xbd,0x3f,0x1,0xb8,0xf3,0x8a,0x49,0x7c,0x60,0xff,0xb4,0x2d,0xe4,0x61,0x61,0x8,
+  0x17,0x23,0x24,0xcc,0x9b,0x7b,0x8,0xd5,0xe0,0x95,0xea,0x61,0x54,0xbc,0x89,0xd9,
+  0xe9,0xfd,0x88,0x4b,0x58,0xd8,0x74,0xa,0xd5,0x92,0x0,0xa4,0x20,0x7e,0x8e,0x62,
+  0x3b,0x8a,0x27,0xdd,0xf5,0x4b,0x46,0xc6,0xaf,0x46,0x80,0xf4,0x75,0xd5,0xee,0x59,
+  0xfc,0xea,0x5d,0x37,0x42,0x5c,0xa0,0xcd,0xf8,0x13,0x2d,0x1f,0x9f,0xfc,0xc9,0x9b,
+  0xb0,0x7b,0x6b,0xb7,0xe4,0x4e,0x8d,0x63,0x9,0x11,0xc7,0xf8,0xc8,0x1b,0xe7,0xb0,
+  0x73,0xc2,0xc7,0x85,0x1a,0xb7,0x5e,0xd2,0xc5,0x9b,0x2f,0xea,0xda,0x84,0xa6,0x83,
+  0x19,0xaa,0x18,0xa1,0x9c,0xee,0x66,0x9a,0xc1,0x2a,0x13,0x4,0x32,0x53,0x19,0x46,
+  0x5e,0x40,0x5,0x80,0xf3,0xc7,0x19,0xb4,0x1c,0x46,0x40,0x1a,0x6e,0x24,0xc7,0xca,
+  0x26,0x25,0x4f,0xcf,0x65,0x29,0x4c,0x77,0x1a,0xf8,0xe4,0x4f,0xde,0x8c,0x56,0x5,
+  0xc2,0xce,0x46,0x10,0x49,0x3c,0x7c,0x6c,0x1e,0xcf,0x9d,0x5e,0xc5,0xb9,0xd5,0x21,
+  0x9a,0xbe,0x87,0x6d,0x53,0x2d,0xfc,0xa3,0xbd,0x73,0x38,0xb0,0x7b,0xba,0xd2,0x22,
+  0x9f,0xed,0x36,0xf1,0x6f,0xde,0x7f,0x3,0xfe,0xd5,0xe1,0x87,0x34,0x3b,0x1c,0x0,
+  0xee,0xb8,0x62,0x2,0x97,0x4c,0xd7,0x3,0x7b,0x27,0xd7,0x22,0x3c,0xbf,0x14,0x60,
+  0x69,0x24,0x11,0xc4,0x8c,0xe9,0xa6,0xc0,0x45,0x93,0x3e,0xf6,0x6f,0x69,0xa2,0xe5,
+  0x55,0x73,0xf0,0x7,0xf,0x4c,0xe3,0x74,0x2f,0xc2,0x4b,0x2b,0xa1,0xea,0x3,0xb6,
+  0x5a,0x7,0x66,0xc0,0x8b,0xc1,0x4a,0x3e,0x40,0x81,0xd,0x64,0x2e,0xd,0x74,0x5c,
+  0xa0,0xb9,0x8e,0x99,0x11,0x48,0x4e,0x9e,0x8f,0x8a,0x54,0xb1,0xaa,0x31,0x76,0x29,
+  0x70,0x14,0x97,0x1d,0x2f,0x8a,0xdd,0x4d,0x70,0x88,0x7b,0x83,0x93,0x3f,0xf4,0x8e,
+  0xfd,0xd8,0x31,0xdd,0xae,0xbc,0x57,0x6f,0x14,0xe1,0x8f,0xbf,0x7e,0xc,0x9f,0x7b,
+  0xf0,0x5,0x8c,0xc2,0xd8,0x12,0x5,0x24,0xec,0x9c,0x69,0xe3,0x43,0xb7,0x5e,0x89,
+  0xdb,0x6f,0xdc,0xed,0x94,0x24,0xd7,0x5e,0x3c,0x83,0xbb,0xde,0x74,0x9,0xee,0xfd,
+  0xd6,0x8b,0xf9,0x7b,0xd7,0xec,0x99,0xc1,0x6d,0x57,0x6e,0x19,0xeb,0xb8,0x7d,0xfc,
+  0xec,0x8,0x5f,0x3a,0xba,0x86,0x57,0xfa,0x91,0xd5,0x65,0xec,0xb,0xc2,0x5b,0x76,
+  0x77,0x70,0xdb,0xde,0x49,0x4c,0x34,0x1c,0xab,0x4a,0x0,0x77,0xed,0x9f,0xc2,0x6f,
+  0x3f,0xbc,0xa0,0x6c,0xe4,0xa0,0x12,0x33,0x98,0x8c,0x90,0x79,0xf8,0x4,0xcc,0xe4,
+  0x92,0xe4,0x3d,0x17,0x13,0xa8,0xc0,0x70,0x14,0x31,0x5a,0x9e,0x28,0xad,0x7b,0x97,
+  0x2f,0x40,0x8c,0xf3,0x67,0x71,0x28,0xf5,0xad,0x0,0x16,0xe2,0xbb,0x25,0x4c,0x22,
+  0xb6,0x76,0x6d,0xe9,0xe0,0xae,0x5b,0x2e,0xad,0x9c,0xfc,0xe7,0x4e,0xaf,0xe2,0x9f,
+  0xfd,0xd7,0xaf,0xe3,0x8f,0x1e,0x38,0x8a,0x51,0x28,0x35,0xb5,0x2,0x25,0x1a,0xf6,
+  0xca,0xf2,0x10,0xbf,0xf9,0x67,0x4f,0xe0,0x57,0xff,0xf8,0x61,0xac,0xe,0x23,0xe7,
+  0xf5,0x7e,0xe6,0xd6,0x2b,0xd0,0x69,0xfa,0x39,0x18,0xfc,0xf9,0xdb,0xae,0xaa,0x74,
+  0x88,0x4,0x12,0xf8,0xef,0x4f,0x2c,0xe3,0xf0,0x13,0x4b,0x38,0x3b,0x88,0x4a,0xfa,
+  0x35,0x3,0x65,0x31,0x3,0x7f,0x7b,0x62,0x80,0xdf,0x7c,0x68,0x1e,0xc7,0x96,0xdd,
+  0x85,0x19,0xf6,0x4e,0x37,0x70,0xc3,0xf6,0x76,0x11,0x75,0xb4,0x65,0x5,0x9b,0xd9,
+  0xf2,0x2a,0x58,0xb4,0x4,0xb8,0x84,0x1,0xe,0x55,0x75,0x90,0x69,0xdc,0x51,0xcc,
+  0x5a,0x42,0x8f,0xcb,0x17,0x53,0x6d,0x5,0x28,0x4f,0xc6,0x51,0x64,0xf8,0x6a,0xf5,
+  0x9d,0x3d,0x45,0xf2,0x82,0x2d,0x1c,0x9b,0xfc,0x79,0xf0,0xed,0x57,0x24,0x69,0x49,
+  0x8e,0xf1,0xcc,0xa9,0x15,0xfc,0xe2,0x1f,0x3c,0x88,0xb3,0x2b,0xa3,0x9c,0xd3,0xc8,
+  0x8,0x87,0x42,0x41,0xf4,0x0,0xf0,0xf0,0xb1,0x79,0xfc,0xf2,0xe1,0x87,0xd0,0x1f,
+  0xd9,0x99,0xa0,0xdb,0xf2,0x71,0xdb,0xd,0xbb,0x41,0x82,0x70,0xe5,0xae,0x69,0x5c,
+  0xb3,0x67,0xc6,0x79,0xff,0x48,0x2,0xbf,0xff,0xe8,0x22,0xbe,0x7b,0x76,0x68,0x41,
+  0xe1,0xf6,0xd,0x1c,0x83,0x48,0xe2,0xf7,0x1f,0x5b,0xc2,0x73,0x4b,0x6e,0x26,0xb8,
+  0x7d,0xdf,0x64,0x29,0xb9,0x43,0x63,0x86,0x4a,0x46,0xc8,0x36,0x8f,0xd4,0x60,0x2,
+  0xc5,0x3a,0x8,0x22,0x59,0xf2,0xb3,0x57,0x5,0xb2,0x44,0xd5,0xfa,0x27,0x2,0x64,
+  0x26,0x8a,0x2d,0xb6,0x7,0x99,0xe,0x7d,0xb,0xe8,0x11,0x44,0x78,0xfb,0x35,0xee,
+  0xed,0xca,0xcb,0x83,0x10,0x1f,0xfb,0x93,0x47,0x30,0x8c,0xa4,0x1e,0x8f,0xa7,0xa4,
+  0x1e,0xc1,0x15,0x3b,0xa7,0xb1,0x6b,0x4b,0x47,0xd9,0x2e,0x56,0xdc,0xe7,0xf8,0xb9,
+  0x35,0xfc,0x87,0x2f,0xb8,0x4b,0xe2,0xdd,0x79,0xd3,0xc5,0x0,0x11,0xee,0xbc,0xf9,
+  0x92,0x4a,0xe9,0x73,0xef,0x73,0xab,0x78,0x61,0x39,0xd0,0x1d,0x48,0xe9,0x4,0xcf,
+  0x75,0x3c,0x5c,0x3c,0xd5,0x40,0xc3,0xb3,0x6c,0xf1,0x6,0xf0,0xd9,0xa7,0x56,0xb0,
+  0x38,0xb2,0xd7,0xea,0xd9,0x35,0xe1,0x61,0xfb,0x84,0x5f,0xca,0xf2,0x81,0x85,0x11,
+  0xca,0x1,0xa9,0x62,0xfe,0xc6,0x32,0x81,0x72,0x40,0xc4,0x6c,0xa5,0x23,0x39,0x32,
+  0xac,0x2b,0x3d,0x81,0x0,0x81,0xa3,0xb8,0xd8,0x7a,0x35,0x26,0x30,0x62,0xf3,0xf3,
+  0xdf,0xb8,0x77,0xe,0x33,0x5d,0x37,0xf0,0xfa,0xa3,0x7,0x8e,0x61,0x7e,0x6d,0xa4,
+  0x9d,0x3b,0xd9,0x6e,0xe0,0xa3,0xef,0xb9,0x1a,0xb7,0x5e,0xbb,0x33,0x77,0xb,0xaf,
+  0xe,0x42,0x1c,0x79,0xe0,0x28,0x3e,0xff,0xad,0x97,0xb4,0xec,0xd7,0x7,0x9f,0x3d,
+  0x87,0x87,0x8e,0xce,0xe3,0x96,0xcb,0xb7,0x96,0xae,0xbd,0x6f,0xfb,0x4,0x76,0xcc,
+  0xb4,0xf1,0x66,0xcb,0x67,0xd9,0x38,0xb1,0x16,0xe1,0x9b,0xa7,0x6,0xba,0x7b,0x98,
+  0x80,0x37,0x5f,0xd4,0xc1,0xbb,0xf7,0x4d,0x62,0x32,0xd5,0xf3,0x31,0x3,0x4f,0xcd,
+  0x8f,0x70,0xef,0x73,0x6b,0xe8,0x85,0x5,0xc1,0x47,0x91,0xc4,0x7d,0x2f,0xf4,0xf0,
+  0x13,0x57,0x4d,0x59,0xaf,0x7f,0xdd,0xd6,0x16,0xfe,0xa6,0x1f,0x95,0x82,0x55,0xac,
+  0x12,0x8a,0xa0,0x65,0x1,0x17,0x1b,0x44,0x13,0x1c,0x20,0x28,0xd9,0x1d,0x64,0xc3,
+  0x4,0xf9,0x71,0x48,0xf0,0x40,0x2c,0x95,0xbc,0x0,0xd8,0x73,0x12,0x6a,0x98,0x81,
+  0x4a,0xd8,0x39,0x8c,0xcd,0xc,0x4a,0xd8,0xf6,0x6e,0x92,0x62,0x73,0xab,0xba,0xfb,
+  0xcd,0x57,0x6c,0xab,0x4,0x7d,0x9f,0x7f,0xe8,0x45,0x45,0x97,0x11,0x66,0xbb,0x2d,
+  0xdc,0xf3,0xe1,0xef,0xc7,0x6d,0x37,0x5c,0xa4,0xc5,0x4,0xa6,0x3a,0xd,0x7c,0xe4,
+  0xf6,0xab,0xf0,0xb1,0xbb,0x6e,0xd0,0xb1,0x81,0x20,0xfc,0xcf,0xff,0x77,0xdc,0x79,
+  0x8f,0xb7,0x1d,0xd8,0x81,0xb9,0x49,0xb7,0x9b,0xf9,0xab,0x2f,0xf6,0x4a,0x4e,0x97,
+  0xf,0x1e,0x98,0xc6,0x8f,0xee,0x9f,0xca,0x89,0xf,0x24,0x21,0xd5,0xeb,0xb7,0xb5,
+  0x70,0xf7,0xcd,0x73,0x79,0xfa,0x55,0x36,0x1e,0x3b,0x3b,0xc2,0x92,0x43,0xa,0x1c,
+  0xd8,0xd2,0x74,0xa8,0x11,0x5d,0x35,0x8,0x35,0x13,0x5b,0xdb,0xcd,0xe4,0x96,0x4,
+  0x64,0xc6,0x55,0x88,0x10,0x49,0xb6,0xee,0x91,0x70,0xc5,0x2,0x1c,0x8e,0x20,0x35,
+  0x11,0x8b,0x13,0x29,0x60,0xab,0x3,0x0,0x9d,0xf8,0xe6,0x83,0x13,0x11,0x76,0xce,
+  0xba,0xeb,0x4b,0x7e,0xf3,0xf9,0x79,0x44,0x92,0x35,0xbc,0x70,0xf7,0xf,0x5d,0x53,
+  0x69,0x2d,0xdc,0x7a,0xcd,0x4e,0xbc,0xeb,0xfa,0x8b,0x14,0xb1,0x46,0x78,0xe2,0xe5,
+  0x65,0x2c,0xf7,0xed,0xba,0xf8,0x8e,0x37,0xee,0x71,0x47,0xbc,0x19,0x78,0x7a,0x21,
+  0xd4,0x88,0x72,0xed,0xb6,0x36,0x6e,0xd9,0xe5,0xbe,0xff,0x64,0x83,0xf0,0xc1,0x3,
+  0x53,0x7a,0x62,0x2a,0x3,0x4f,0xce,0x7,0xd6,0xe3,0xb7,0xb4,0xbd,0x31,0x5b,0xd8,
+  0x48,0x51,0x97,0x76,0x95,0xe0,0x62,0x2,0xfd,0x9a,0xd9,0x77,0xd2,0xf3,0x7,0xc7,
+  0xb9,0x5c,0x44,0xa5,0x1f,0x20,0x7d,0x18,0x4e,0x45,0x1e,0x59,0xf6,0x85,0xaa,0xfb,
+  0xf8,0xf4,0x60,0x42,0xf2,0xde,0xb6,0xa9,0x96,0xf3,0xe6,0x4f,0x9f,0x5c,0xd6,0x70,
+  0xc3,0x4c,0xb7,0x81,0xb7,0x5f,0xbd,0x63,0xac,0x8d,0x7e,0xc7,0x1b,0xf7,0x68,0x4c,
+  0xc3,0x4,0x3c,0x7b,0x66,0xd5,0x7a,0xec,0x9e,0x2d,0x6e,0x6,0x7c,0xa5,0x1f,0x21,
+  0x90,0x52,0xb,0x1c,0xbd,0x65,0x57,0x7b,0xec,0xfd,0xaf,0x9c,0x6d,0x24,0xd9,0x37,
+  0xca,0xb3,0x9f,0x58,0xb3,0x83,0xd1,0xa9,0xa6,0xb0,0x3b,0x5a,0xb5,0xfd,0x7f,0x54,
+  0xda,0xc2,0xe6,0x62,0x2,0x82,0x3d,0x59,0x36,0x9b,0x8f,0x98,0xc9,0x9e,0xcf,0xb0,
+  0x9e,0x58,0x80,0x79,0x9,0x8e,0x63,0x15,0x16,0x18,0xde,0x3f,0x25,0x22,0x48,0x4,
+  0x33,0x37,0x67,0x6e,0xd2,0xcd,0x0,0x99,0xee,0xcf,0xc4,0xd3,0xfe,0x5d,0x33,0xb5,
+  0x9c,0x34,0x57,0xec,0x9c,0x4c,0x36,0x3b,0x2a,0x22,0x67,0x61,0x6d,0xb4,0x6e,0xaf,
+  0xdd,0x4a,0x20,0xb5,0x84,0x4b,0x0,0xd8,0x33,0x55,0xcf,0x51,0xb4,0x67,0xca,0xd7,
+  0xd2,0xbf,0x57,0x83,0xd8,0x19,0x30,0x6a,0xfb,0x5e,0xb9,0x26,0xa1,0xc5,0xc3,0xe7,
+  0x62,0x82,0x6a,0x30,0xa7,0xff,0x1d,0x49,0xae,0x34,0xfb,0xd6,0xe5,0x8,0x22,0xd5,
+  0x19,0x54,0x8a,0xe9,0x9b,0xd1,0x2e,0xb2,0xa6,0x8d,0xe9,0x66,0x89,0xc1,0x7d,0x46,
+  0xae,0x5a,0x5c,0xb3,0x14,0xaa,0xe4,0x32,0x87,0x8b,0xd,0xe4,0xec,0x9,0x4b,0x7a,
+  0x9a,0x64,0xae,0x35,0x73,0xd2,0x38,0xb1,0xea,0xfe,0x71,0x96,0xbc,0xc1,0xa4,0x45,
+  0x5,0x8b,0xc8,0x5d,0xe1,0xdc,0xc9,0x52,0xb9,0x35,0x70,0x68,0x0,0xc3,0x1c,0x4,
+  0x9a,0xf3,0x90,0x16,0x9f,0x72,0x8,0x73,0xab,0x10,0xb0,0xa6,0x85,0x97,0xae,0x20,
+  0x59,0x93,0xfd,0xb9,0xdd,0xaf,0xa8,0x4,0xb2,0x2,0xe,0xc2,0x52,0x3f,0x70,0x4e,
+  0xcc,0xb6,0xc9,0xb6,0x76,0xd2,0xb3,0xa7,0x57,0x51,0x87,0x5,0x9e,0x3b,0xbd,0x9a,
+  0x67,0xc4,0x64,0xaf,0xad,0xe,0x55,0x13,0xc5,0xee,0x2b,0x4e,0xb7,0x4,0x4c,0x78,
+  0xeb,0x12,0xe5,0xe6,0x38,0xb5,0x16,0x6b,0x38,0x60,0xba,0x69,0xd7,0xa6,0xa3,0x98,
+  0xf3,0x8d,0x9d,0x44,0xe5,0x95,0x6d,0xd3,0xe3,0xa5,0x4d,0x21,0x96,0x9a,0xcb,0xba,
+  0x1f,0xa0,0xb8,0x62,0xcc,0x56,0x87,0xed,0x3a,0x30,0x80,0x20,0xdd,0xe6,0xce,0xdd,
+  0xc1,0x7a,0x2c,0x32,0xf,0xfb,0x1a,0x15,0x41,0x54,0xe6,0x0,0x1,0x67,0x57,0x86,
+  0xce,0x9b,0x5f,0x77,0xf1,0x8c,0x76,0x5e,0x3f,0x88,0xf1,0x97,0x8f,0x9e,0x1a,0x3b,
+  0xf9,0xff,0xe7,0xdb,0x2f,0x69,0xce,0x27,0xdf,0xf3,0x70,0x60,0x97,0xdd,0xc,0x7b,
+  0xf0,0xf9,0x79,0xe7,0x75,0xb6,0x77,0x3c,0x74,0x1a,0x42,0x73,0xc8,0xfc,0xed,0x89,
+  0xc1,0x58,0x26,0x7c,0x72,0x3e,0xc0,0x4a,0x10,0x6b,0x44,0xbd,0xd4,0x11,0x63,0x58,
+  0x1e,0xc9,0x62,0x3a,0x54,0x80,0x6c,0xd6,0x47,0x70,0x30,0x81,0xb0,0xf8,0x6,0xec,
+  0x29,0x7e,0xa4,0x64,0x18,0x55,0xf9,0x76,0xc7,0x49,0x80,0x4c,0xb7,0xe6,0xac,0x43,
+  0xe0,0x58,0x2a,0x1e,0x3a,0x4b,0x6,0xae,0x16,0xb7,0x46,0xbe,0xdb,0x81,0x8,0x78,
+  0xfc,0xe5,0x65,0xe7,0xcd,0x6f,0xba,0x6c,0x2b,0x3a,0x4d,0x4f,0xfb,0x82,0xbf,0xf3,
+  0x95,0xe7,0xf0,0xc2,0xd9,0x9e,0xf3,0x9c,0x2f,0x3c,0x7c,0x2,0xdf,0x7c,0x7e,0x5e,
+  0x8b,0xf5,0xbf,0x61,0xef,0x16,0x67,0x78,0xf9,0xaf,0x9f,0x3c,0xa3,0x6d,0xb6,0x34,
+  0x78,0x1d,0xd7,0xce,0xb5,0x34,0x80,0x7b,0x7c,0x25,0xc4,0xfd,0x2f,0xf,0x9c,0xf7,
+  0x5f,0x1c,0x4a,0xfc,0xdf,0x63,0x7d,0x6d,0xf5,0x7b,0x24,0x70,0xf5,0x9c,0xdd,0xd4,
+  0x7c,0x71,0x35,0xd2,0xaa,0x82,0x8,0xb3,0x26,0x51,0x5,0x13,0x68,0xba,0xdf,0x85,
+  0x7,0xa8,0x2c,0xac,0x1d,0x61,0x9b,0x9a,0x12,0xc0,0x13,0x7a,0x35,0x9,0x42,0xc2,
+  0x0,0xa5,0xfc,0x7f,0x4b,0xe9,0x17,0xcb,0x78,0xf4,0x45,0x77,0xd5,0xca,0x76,0x43,
+  0xe0,0xc7,0xbf,0x6f,0x9f,0xe6,0x4e,0x1e,0x86,0x11,0x3e,0x7a,0xf8,0x5b,0xf8,0x1f,
+  0xdf,0x78,0x11,0xe7,0x56,0x47,0xb9,0x5e,0x7e,0xe1,0x5c,0xf,0x9f,0xfc,0xc2,0x13,
+  0xf8,0xdd,0xaf,0x3c,0x6b,0xec,0x13,0x4,0x7e,0xe2,0xfb,0xf7,0x5a,0xaf,0xdf,0xf,
+  0x62,0x3c,0xfa,0xd2,0x12,0xbe,0x77,0x72,0xc5,0xf9,0xc,0xef,0xb8,0xa4,0x9b,0xe6,
+  0xcd,0x17,0x93,0xf5,0x95,0x17,0xfb,0xf8,0xec,0x53,0xab,0x38,0xd5,0x8b,0xf3,0x9,
+  0x5d,0xb,0x19,0xf,0x9e,0x1a,0xe1,0x77,0x1e,0x5b,0xc6,0x20,0x8d,0x8f,0x64,0xaf,
+  0x9b,0x76,0xb4,0x34,0x9f,0x81,0x3a,0x8e,0xaf,0x84,0xfa,0x8a,0x37,0xa2,0xe4,0x65,
+  0xf4,0xa4,0xfa,0x24,0xca,0xa0,0xb0,0xba,0xa0,0x5,0x15,0x35,0x6,0x6a,0x4a,0x1,
+  0xdf,0x66,0x1,0xf8,0xdd,0x4e,0xee,0x5d,0x4a,0xac,0x0,0xa9,0x3f,0xa6,0xad,0xc0,
+  0x62,0x69,0xb7,0x6d,0xf2,0xd6,0xe9,0xa5,0x21,0x9e,0x3c,0xb1,0x8c,0x6b,0x1d,0xbe,
+  0xf8,0xf,0xde,0x72,0x9,0xbe,0xfa,0xd4,0x19,0xbc,0xbc,0xd0,0xcf,0x1f,0x34,0x8a,
+  0x25,0x3e,0x73,0xff,0xf3,0xf8,0xcc,0xd7,0x8e,0x62,0xcb,0x44,0x13,0xc3,0x30,0x56,
+  0xa2,0x83,0x3a,0x70,0xbc,0xfd,0xfa,0x5d,0xb8,0x76,0xf7,0xb4,0x53,0xfc,0x47,0x92,
+  0xf1,0xb5,0x67,0xce,0xe2,0xda,0x3d,0xf6,0x63,0xb6,0x76,0x4,0xde,0x7e,0x49,0x7,
+  0xf7,0xbf,0xdc,0xd7,0x88,0xf1,0xec,0x52,0x80,0xe7,0x96,0x42,0x34,0x4,0xa1,0xed,
+  0x27,0x35,0xfc,0xcc,0x38,0x9,0xa5,0x66,0xde,0x3b,0x2e,0xe9,0x38,0xf5,0xff,0x33,
+  0x8b,0x61,0x4a,0x10,0xce,0x89,0xc3,0xa4,0xfb,0xe7,0xf2,0xf7,0x8d,0xac,0x61,0x35,
+  0xeb,0xd7,0x92,0x1c,0xac,0x6c,0x9f,0x53,0xb7,0x9b,0xaf,0xaf,0xa7,0x80,0x15,0xb9,
+  0xf8,0x53,0x13,0xa5,0x90,0x70,0x8e,0xf4,0xd,0x71,0x5f,0x2a,0xe9,0x46,0x66,0x5a,
+  0x13,0xf0,0xf9,0x6f,0xbf,0xec,0x7c,0x80,0x4e,0xd3,0xc3,0xc7,0x7f,0xec,0x46,0xcc,
+  0x76,0x9b,0x46,0xcc,0x29,0xb9,0xd7,0x72,0x3f,0xc4,0x28,0x92,0x9a,0xdd,0xaf,0x62,
+  0x88,0x7f,0xf9,0xae,0xfd,0xce,0x6b,0xff,0xe5,0x77,0x4f,0x3,0x4,0x3c,0xf0,0xcc,
+  0x59,0xf4,0x3,0x77,0x2a,0xf7,0xbb,0x2e,0xed,0xe2,0xda,0xad,0x2d,0xbd,0x46,0x50,
+  0x7a,0xa3,0x48,0x72,0x42,0xfc,0x3c,0x9d,0xab,0x30,0xfd,0x5a,0x3e,0xe1,0x9f,0x5c,
+  0xe5,0xe,0xb,0x3f,0x7a,0x36,0x40,0x18,0x73,0xc9,0xc3,0xa7,0xda,0xf8,0x36,0x21,
+  0x4a,0x70,0x6f,0x96,0x1d,0x27,0x5,0xa,0xcb,0x40,0xdf,0x96,0xb7,0x8e,0x70,0x30,
+  0xd0,0xe8,0x76,0xb5,0xcb,0x26,0x2a,0x80,0x4c,0x8f,0xb0,0x35,0x40,0xa3,0x6e,0xdb,
+  0xce,0x44,0xfb,0xfd,0xdf,0x3b,0x8b,0x97,0x16,0xdc,0x55,0xac,0x77,0xcf,0x76,0xf0,
+  0xa9,0x43,0x37,0xe3,0xf2,0x9d,0x53,0xa5,0xf0,0xaf,0xc6,0x49,0x8a,0xaa,0x78,0xe7,
+  0xb5,0xbb,0xf0,0xeb,0x1f,0xbc,0x11,0xd,0x47,0x72,0xc6,0xc3,0x2f,0x2c,0xe2,0x99,
+  0xd3,0xab,0x20,0x24,0xe0,0xf2,0x8b,0x8f,0x9c,0xac,0x34,0x77,0x7f,0xfc,0xaa,0x29,
+  0xbc,0x75,0x4f,0xa7,0x20,0x96,0x86,0x6f,0xf4,0x8c,0x9d,0x2c,0x48,0xf4,0xb3,0xd7,
+  0x4d,0x63,0xd7,0x84,0xe7,0x8c,0x30,0x3e,0x78,0x6a,0x64,0x6c,0x12,0xa5,0x92,0x4e,
+  0xd7,0x92,0xa6,0x1c,0x78,0x80,0xa8,0xba,0xab,0x8a,0x8a,0x5,0xe4,0x3a,0x9b,0x8a,
+  0x58,0x19,0x40,0x78,0x4,0x91,0x65,0x1,0x81,0x0,0xc9,0x45,0xf0,0x42,0x73,0x15,
+  0xeb,0xc9,0x9f,0xba,0x67,0xaa,0x78,0xe4,0x58,0x32,0x3e,0x7d,0xdf,0x33,0x95,0xf,
+  0xb2,0x73,0xba,0x8d,0x4f,0x1f,0xbc,0x19,0xbf,0x70,0xfb,0x1,0xec,0xce,0xdc,0xc7,
+  0x8a,0x24,0xc8,0x6c,0xed,0x6b,0xf7,0xcc,0xe2,0x37,0xfe,0xf1,0xd,0xf8,0xa5,0xf7,
+  0x1e,0x70,0x12,0x3f,0x88,0x24,0xfe,0xe0,0x81,0x63,0x8a,0xba,0x20,0x7c,0xf1,0x91,
+  0x93,0x38,0xb3,0x32,0xaa,0x9c,0x88,0xf7,0xec,0xed,0xe2,0xe7,0x6e,0x98,0xc5,0x95,
+  0xb3,0xd,0x25,0x81,0x53,0x5f,0xa9,0x33,0x2d,0x81,0x77,0x5d,0xda,0xc5,0x87,0x6f,
+  0x98,0xc6,0xf6,0x8e,0x3b,0xc4,0xfd,0xc0,0xc9,0x21,0x96,0x83,0x38,0x3d,0x5f,0xaf,
+  0x78,0xa6,0x31,0x1,0x19,0x3c,0x3e,0xc6,0x7,0x31,0x4e,0xa,0xc4,0xbc,0xbe,0xad,
+  0xec,0x4e,0x47,0x90,0x68,0x36,0x11,0x8f,0xc2,0x62,0x75,0x4b,0x9,0xca,0xca,0xaf,
+  0xeb,0xde,0x7,0x3d,0x24,0x6c,0x22,0xcf,0xf4,0x49,0xbf,0xf3,0xe2,0x22,0xbe,0xf8,
+  0xc8,0x9,0xfc,0x70,0x85,0x6f,0xde,0x13,0x84,0x3b,0xde,0xb0,0x1b,0x77,0xbc,0x61,
+  0x37,0x5e,0x38,0xd7,0xc3,0xf3,0xaf,0xf4,0xb0,0xd0,0xb,0xd0,0xf4,0x8,0x73,0x13,
+  0x2d,0x5c,0x77,0xf1,0x34,0xe6,0x6a,0xec,0x1f,0x38,0xfc,0xf5,0x17,0x70,0x72,0x61,
+  0x98,0x96,0xb7,0x49,0xa6,0x74,0x14,0x49,0x7c,0xfa,0xaf,0x9e,0xc5,0xc7,0x7f,0xe4,
+  0x3a,0x78,0x15,0x49,0x89,0x7b,0x26,0x3d,0xfc,0xd4,0x35,0x53,0x18,0x44,0x8c,0xe3,
+  0xab,0x11,0x56,0x46,0x12,0x11,0x33,0x26,0x1b,0x2,0x3b,0x3a,0x9e,0x73,0xc5,0xeb,
+  0x11,0xc6,0x18,0xdf,0x38,0x35,0x52,0xb2,0x7c,0x52,0x5d,0x8e,0x6c,0xeb,0x17,0x29,
+  0xce,0xa0,0x2,0x13,0x30,0x27,0x98,0x62,0x7b,0xd7,0xcb,0xd5,0xcf,0xb,0x2b,0x61,
+  0x1e,0xdb,0xab,0xd3,0x33,0x48,0xdf,0x6f,0x9a,0x5c,0xdb,0x55,0x63,0xd8,0xca,0x0,
+  0x59,0xcb,0x12,0xd1,0x6c,0x68,0x5c,0xc6,0xc5,0x37,0x71,0xd6,0xf5,0x2d,0xd5,0xaa,
+  0x33,0xee,0xf8,0xdb,0x5f,0x7e,0x16,0x7b,0xb6,0x74,0x71,0xd3,0xbe,0x2d,0x63,0xbf,
+  0xc8,0xbe,0x6d,0x13,0xd8,0xb7,0x81,0xb4,0xf1,0xbf,0x7a,0xe2,0xc,0xbe,0xf4,0xd8,
+  0x69,0xab,0xfd,0xf3,0xcc,0xe9,0x55,0xdc,0x73,0xff,0x31,0xfc,0xfc,0x3b,0x2e,0x1f,
+  0xbb,0x4a,0x3a,0x3e,0xe1,0xea,0x2d,0xeb,0x6f,0x8d,0xb8,0x1c,0x48,0xfc,0xaf,0xe7,
+  0x7a,0x90,0xcc,0x39,0xf8,0x2b,0x26,0x51,0x4d,0xd1,0x36,0x3c,0x7c,0x0,0x6e,0xde,
+  0xd5,0xc6,0x7b,0x2f,0x9b,0x40,0x3b,0x95,0x6c,0xb,0x43,0x89,0xff,0xf8,0xd0,0x7c,
+  0x69,0xae,0xab,0xc0,0xa0,0x64,0x6,0xbf,0x1a,0x15,0x30,0xa,0x63,0x3c,0xbf,0x38,
+  0xc4,0xfc,0x20,0xc6,0x4a,0xc8,0x18,0x4,0x31,0x62,0xc9,0x69,0xc9,0x18,0x47,0x9b,
+  0x15,0xb2,0xec,0x1b,0x24,0xdd,0xd5,0x95,0x71,0xf8,0xc7,0x3f,0xff,0x4,0x1e,0x39,
+  0xbe,0x84,0xb,0x31,0xee,0x7f,0xfa,0x1c,0x7e,0xf7,0xaf,0x8f,0x5a,0xca,0xc1,0x14,
+  0xda,0xea,0x2b,0x4f,0x9e,0xc1,0x91,0xaf,0x1f,0x7,0x5f,0x80,0xfb,0x2f,0x8e,0x24,
+  0xfe,0xe4,0xe9,0x1e,0x6,0xa1,0x34,0x32,0xa7,0x61,0x8d,0xfe,0x65,0xa2,0x7c,0xb6,
+  0xe5,0xe3,0xd0,0x75,0x33,0xb8,0xeb,0xca,0xc9,0x9c,0xf8,0x2e,0x5d,0x5f,0xa5,0x6,
+  0x54,0x20,0x48,0x96,0xc8,0x67,0x6c,0x1,0x8,0xbe,0xdb,0xdf,0xce,0x88,0x85,0x8f,
+  0xfe,0x5a,0x2f,0x31,0xe7,0x4e,0xad,0x60,0x62,0xa6,0x8b,0x89,0x96,0x8f,0xc9,0x56,
+  0x3,0xed,0xa6,0xa7,0xc4,0xb0,0xa1,0x81,0xc4,0xd2,0x5e,0x40,0x45,0x37,0xc,0xc3,
+  0x8,0xbf,0xf6,0xb9,0xc7,0xf0,0xd1,0xdb,0xf,0xe0,0x3d,0x37,0xec,0x3a,0x2f,0x13,
+  0x2f,0x19,0xf8,0x93,0x7,0x5f,0xc2,0xe7,0xbe,0xf5,0xb2,0x21,0x8d,0x50,0x8e,0x55,
+  0x10,0xf0,0xe7,0xdf,0x3d,0x8d,0x73,0x6b,0x1,0x3e,0xf2,0xae,0x2b,0xd1,0xf6,0xcf,
+  0x4f,0x8e,0xfa,0xcb,0x6b,0x31,0xfe,0xf7,0x73,0x3d,0xf4,0x43,0x9,0x6d,0x83,0x17,
+  0x1,0xc4,0x8a,0xc8,0x57,0x92,0x37,0x18,0xc0,0x9b,0x76,0xb6,0x71,0xfb,0xde,0xae,
+  0x33,0xd3,0x38,0x9b,0xdb,0x5a,0xd,0x3e,0x91,0x64,0x4,0xd,0x23,0x9,0x8f,0x80,
+  0x28,0x6d,0x44,0x75,0xa6,0x17,0xe1,0xf9,0xc5,0x11,0x7a,0x96,0xf4,0xb9,0xca,0x60,
+  0x90,0xd7,0x6a,0x2,0x6b,0x89,0x57,0x2e,0xa,0x63,0x2c,0xf5,0x3,0x2c,0xf5,0x43,
+  0x10,0xd,0x20,0x88,0x30,0xd1,0xf2,0xd0,0x6d,0xf9,0xe8,0x36,0x7d,0x74,0x9a,0x1e,
+  0x5a,0x7e,0xca,0x14,0x66,0xad,0xe0,0xdc,0x84,0x4c,0x3e,0x8a,0x19,0xf8,0xcf,0xf7,
+  0x3d,0x83,0x6f,0x1c,0x9d,0xc7,0x47,0xde,0x79,0x25,0xb6,0x57,0x84,0x8c,0xc7,0x8d,
+  0xe3,0xf3,0x7d,0xdc,0xf3,0x37,0x47,0xf1,0xd4,0xc9,0x55,0xb,0x3,0x92,0xc2,0x10,
+  0x7a,0xf8,0xf5,0xa1,0x17,0x16,0xf1,0x89,0xfb,0x8e,0xe2,0x43,0x6f,0xbd,0x14,0x57,
+  0xce,0x6e,0xbc,0xb,0x6e,0x20,0x81,0xaf,0x9f,0x1c,0xe2,0x5b,0xaf,0x4,0x90,0x52,
+  0x16,0x7a,0xdf,0xc2,0x4,0x85,0x2f,0x0,0x98,0x69,0x7b,0x78,0xff,0x15,0x13,0xd8,
+  0x37,0xbd,0xfe,0x3d,0xa,0x31,0x3,0x41,0xcc,0x8,0x62,0x89,0x30,0xe6,0xf4,0x77,
+  0xc6,0x28,0x92,0x88,0x24,0x63,0x71,0x67,0x8c,0x8e,0x5f,0x24,0xc5,0xcb,0xa,0xd3,
+  0xa0,0x3a,0x1a,0x28,0x8,0x5e,0xa3,0x1,0x19,0x85,0x69,0x8e,0x79,0x91,0x83,0xc6,
+  0x0,0xd6,0x46,0x31,0x7a,0x41,0xc,0x60,0x94,0x27,0x31,0x76,0x1a,0x1e,0x3a,0x4d,
+  0xf,0xed,0xa6,0x87,0x6e,0xca,0x14,0xd,0x5f,0xe8,0xd5,0xc0,0x28,0x73,0xd4,0x2c,
+  0xe0,0xd1,0x17,0xbf,0x8d,0xf7,0xde,0xb0,0xb,0x3f,0xfc,0x86,0xdd,0xb8,0x68,0xb6,
+  0x5d,0x7b,0x12,0x8e,0x9e,0xed,0xe1,0xcf,0x1f,0x3b,0x8d,0xaf,0x7e,0xef,0x6c,0xa2,
+  0x6f,0xb5,0xa0,0x14,0xe9,0xcc,0x47,0x46,0x7d,0xc0,0x94,0x21,0x5e,0x3e,0xb7,0x86,
+  0xcf,0x3e,0xb5,0x8a,0xfd,0xb3,0x4d,0xbc,0x65,0x77,0x1b,0x57,0xcc,0xd4,0x27,0xc6,
+  0x20,0x62,0x3c,0x7a,0x2e,0xc0,0xc3,0x67,0x83,0xdc,0x49,0x44,0xc6,0xe6,0x4e,0xe3,
+  0x47,0x5e,0x77,0xf1,0xe6,0x1d,0x2d,0xbc,0xf3,0x92,0xe,0xc6,0x6d,0x91,0x60,0x66,
+  0x2c,0xd,0x63,0x84,0x9c,0x58,0x36,0xa1,0x64,0x84,0x71,0xa2,0xe7,0xa5,0x5a,0x8c,
+  0x93,0x91,0x17,0xce,0x4c,0x72,0x2,0x18,0x44,0x22,0xaf,0x22,0x52,0x95,0x18,0x3a,
+  0xf6,0x1b,0x7b,0xed,0x26,0xe4,0x5a,0x4,0x62,0xa9,0x80,0xd,0x5b,0xd4,0x2a,0x61,
+  0x8a,0x7e,0x18,0x63,0x10,0xc6,0xa0,0x7e,0x41,0x4,0x4f,0x10,0x5a,0xd,0x81,0xb6,
+  0xef,0xa1,0xe9,0xb,0xb4,0x9b,0x1e,0xda,0xbe,0x87,0x86,0x4f,0x18,0x86,0x8c,0x7b,
+  0x1f,0x39,0x81,0xde,0x28,0xc2,0xdd,0xef,0x3e,0x50,0x6b,0xd7,0x50,0x24,0x19,0x4d,
+  0x5f,0xe0,0xae,0x9b,0x76,0xe3,0x47,0x6e,0xda,0xed,0x92,0x9b,0xb5,0x5c,0xa1,0xcd,
+  0x56,0x23,0xff,0x74,0x14,0xf3,0xd8,0x4d,0x1f,0xd9,0x8,0x25,0x70,0x60,0xb6,0x81,
+  0x3,0xb3,0xd,0x7c,0xf3,0x95,0x0,0xdf,0x3d,0x17,0x28,0xa6,0x32,0xe9,0x39,0x7f,
+  0x69,0x54,0x77,0xb6,0x29,0x70,0xc7,0xe5,0x5d,0xec,0xad,0xb9,0x2d,0x2d,0x66,0x60,
+  0x71,0x14,0x6b,0x5,0x26,0x75,0xc7,0x8e,0x5d,0x35,0xc4,0xb2,0xbe,0x34,0x19,0xcf,
+  0x0,0xcd,0x26,0x42,0xf4,0x53,0x30,0x4b,0x4a,0xca,0x98,0x3e,0xd9,0x2a,0x73,0x98,
+  0xc6,0x82,0xe4,0x4,0x4c,0xe,0xc3,0x58,0x3,0x2f,0x99,0x1d,0xec,0xb,0xc2,0xdb,
+  0xf6,0x6f,0xaf,0xbd,0x65,0xcc,0x17,0x84,0x8b,0xb7,0xfc,0xfd,0xb6,0x32,0x9e,0x6e,
+  0x92,0xe6,0xe7,0x18,0xc5,0x49,0x42,0x66,0xcc,0xac,0x35,0x82,0x8c,0x62,0x86,0x64,
+  0xc2,0xad,0x17,0xb7,0x70,0xe7,0xe5,0x13,0x68,0x8a,0xb,0xff,0x6c,0xd1,0x3a,0xbc,
+  0x41,0x63,0x19,0x80,0x3c,0x1,0xd1,0xf0,0x73,0xc5,0x46,0x46,0x4d,0x17,0x22,0xc7,
+  0x32,0x33,0x43,0x97,0x46,0x4d,0x7f,0xd5,0xf9,0x91,0x4d,0xd6,0xeb,0x75,0x30,0x94,
+  0xd4,0xaf,0xb4,0x13,0x28,0xa7,0xb2,0xb9,0xe1,0x11,0xee,0xd8,0xd7,0xc5,0xe5,0x33,
+  0xfe,0xdf,0xd9,0xf3,0x9c,0x57,0x6,0xc8,0xc0,0x20,0x29,0x7e,0x0,0x57,0xce,0x99,
+  0xd6,0x50,0xc4,0x90,0x16,0x7a,0xe4,0xcb,0x8,0x68,0x13,0xe1,0xf5,0x3c,0xee,0xdc,
+  0xf7,0xda,0x69,0xac,0x4e,0x80,0xd6,0x62,0xf6,0xfc,0x31,0x40,0x1e,0x10,0xb2,0x39,
+  0x82,0xc8,0xda,0x94,0x89,0x4a,0x8,0x4c,0x97,0x1a,0x6a,0x9c,0x7c,0x73,0xac,0x9f,
+  0xd0,0xec,0x94,0x0,0x38,0xbf,0xc,0x20,0x84,0x80,0xd7,0x20,0x44,0x44,0xba,0x65,
+  0x4f,0xee,0x2a,0xe2,0xa5,0xb7,0x2a,0x54,0xc0,0xdf,0x65,0xf3,0xf6,0x7f,0x8,0xe3,
+  0xbc,0x4b,0x0,0x0,0xf0,0xdb,0x2d,0x8c,0x14,0x33,0xca,0xf4,0xff,0xaf,0x4f,0x5,
+  0xb8,0x3c,0x1e,0x9b,0xe3,0x35,0xcb,0x0,0x8d,0x76,0xb,0x69,0x2e,0x6c,0x39,0x67,
+  0x5d,0xb1,0x2,0x0,0x67,0xc8,0xa0,0xec,0x25,0xa6,0x72,0x78,0x74,0x73,0xd4,0x7,
+  0x9e,0x4e,0x6,0x88,0x2f,0x0,0x3,0x90,0x10,0xf0,0x1b,0x1e,0xe2,0x20,0xd2,0x2,
+  0x3f,0xe3,0xc8,0x46,0x16,0xdd,0xbf,0xa9,0x2,0x2e,0x2c,0x63,0xac,0xc7,0xa,0xa8,
+  0x6f,0x95,0x4a,0x89,0xe6,0xd4,0x64,0x5,0x60,0xd3,0x33,0x76,0xc8,0x4c,0x19,0x52,
+  0xa5,0x85,0xe6,0x95,0x2b,0x67,0xfa,0x6c,0x8e,0x57,0xab,0x2,0x70,0x1,0x18,0x80,
+  0x19,0xcd,0xac,0x17,0xad,0x9e,0xd1,0xa8,0xe0,0x2,0x95,0xe8,0x26,0x10,0xd4,0xf7,
+  0x7e,0x17,0x2e,0x59,0xb8,0xb,0xd9,0x6e,0x8e,0xd,0x8d,0xd1,0x3a,0xcc,0x80,0x75,
+  0x31,0x80,0xdf,0x6a,0xc2,0x6b,0x34,0xac,0xe6,0xbb,0xd6,0x10,0x31,0x17,0xf3,0xa4,
+  0xad,0x72,0x32,0x6a,0x9c,0x91,0x23,0xd5,0x7c,0x73,0x14,0xe2,0xdc,0xec,0x33,0x64,
+  0x6b,0xcc,0x55,0x62,0x80,0xf8,0x2,0xa9,0x0,0x0,0x68,0x4e,0x4d,0xe8,0xed,0x62,
+  0x49,0xa3,0x3a,0xd4,0xc4,0x50,0x68,0xdb,0xb,0xd4,0x96,0x30,0x96,0x8d,0x24,0x9b,
+  0x63,0x63,0x4c,0xc2,0x45,0x43,0xab,0x8c,0x49,0x86,0x31,0xe7,0x8c,0x92,0x71,0x92,
+  0x8b,0x59,0xd6,0xc1,0x0,0xc9,0x5,0x9a,0x93,0x13,0x40,0xa9,0x85,0x2c,0x34,0x5d,
+  0x4e,0x46,0x2e,0x5f,0x79,0x5b,0xf9,0x26,0xd1,0x2f,0x94,0x5,0x70,0x41,0x54,0x40,
+  0xe2,0xd7,0x4e,0x8a,0x46,0x7a,0xad,0x6,0x84,0xef,0x57,0x75,0x5e,0x2c,0xf6,0x13,
+  0x28,0xfa,0x9d,0x8c,0xad,0xe4,0x66,0x46,0x71,0xf8,0x3a,0x8e,0x5,0x5c,0x78,0x35,
+  0xc0,0xeb,0x62,0x8c,0x20,0x66,0xd4,0xdd,0x1e,0x20,0x5c,0x62,0xa5,0x20,0x3c,0x6b,
+  0x12,0x20,0x91,0x2,0x5d,0x8d,0xe0,0x2a,0xe2,0xd7,0x1b,0x8c,0x93,0xde,0x39,0xcc,
+  0xd6,0x40,0x22,0x3d,0xbf,0x57,0xbb,0x4,0xfb,0x3f,0x60,0x51,0x6f,0xe8,0xff,0x2a,
+  0x22,0xf,0x6b,0xc6,0x84,0xd7,0x8d,0x1,0x72,0x6,0x20,0xb3,0x3e,0x0,0xc,0xb,
+  0xa1,0xac,0x1a,0xca,0x6d,0xe0,0xa,0xe6,0x59,0xb,0x36,0x19,0x60,0x23,0xe2,0xdf,
+  0xd4,0xff,0x48,0x25,0xc6,0x28,0xe2,0xf3,0xcc,0x0,0xa,0xbb,0xf9,0xed,0x16,0x84,
+  0xef,0x95,0xbc,0x3d,0xa5,0x80,0x90,0x6a,0xf6,0xa9,0xbd,0xfd,0x2c,0xed,0xd2,0x7b,
+  0xa3,0x68,0x93,0xba,0xd6,0x69,0xe7,0x4a,0xc4,0xef,0x1a,0x83,0x98,0xcb,0x92,0xa3,
+  0xb6,0xa,0x70,0x80,0x40,0xf5,0xfd,0xe6,0x44,0x47,0x49,0x35,0xa2,0xd2,0xe,0x9e,
+  0x42,0x1d,0x94,0x1a,0xf5,0x14,0x5,0xa8,0x14,0x86,0xd8,0x94,0x0,0xeb,0x30,0xb,
+  0x33,0xa6,0xb0,0xb5,0xa4,0x49,0x7f,0xaf,0xb,0x4,0xd7,0x27,0x1,0x14,0x1c,0xd0,
+  0x98,0xe8,0xe6,0xc4,0x27,0x73,0xa7,0xb0,0x99,0x18,0xa2,0xae,0x7a,0x25,0xaf,0x50,
+  0xdd,0x31,0xbb,0x89,0x1,0xaa,0x75,0xbf,0x6b,0x61,0xda,0xc4,0x7f,0x82,0x1,0xce,
+  0xa7,0xa,0xc8,0x44,0x88,0x8c,0xf3,0x1b,0x7a,0xed,0x16,0xc8,0xf3,0x90,0xf1,0xa1,
+  0xb9,0xa3,0x55,0x75,0x3,0x93,0xb2,0x7d,0x8c,0x8d,0x6c,0xdd,0x4c,0x8a,0xac,0x5,
+  0x9b,0x2a,0x60,0x3d,0xab,0xbf,0x1a,0x17,0x0,0x6b,0x41,0x5c,0x74,0x7c,0xc7,0xba,
+  0xfc,0x0,0x5c,0xb6,0x4,0xb2,0x61,0x34,0x6b,0x6a,0x74,0xdb,0x5a,0x59,0xd7,0x82,
+  0xe0,0x28,0xb5,0xca,0xa4,0x52,0x97,0xd0,0x62,0x3f,0x21,0x33,0xd0,0xb,0xe4,0x26,
+  0x95,0x5d,0x18,0xa0,0x26,0xf8,0x53,0xe9,0x55,0x77,0x3e,0xd7,0x97,0xa2,0x28,0xa5,
+  0xf6,0x20,0x85,0x1a,0x30,0x57,0x35,0xe5,0x25,0x64,0x28,0xf3,0x44,0x29,0xf,0xe,
+  0xcd,0x4f,0x90,0xf0,0xc8,0x30,0x90,0xb5,0x8b,0x44,0xfd,0x43,0x83,0xfc,0xb5,0x75,
+  0x3f,0x17,0xab,0x7d,0xcd,0x60,0x0,0x3e,0x2f,0xc,0x60,0xd8,0x96,0x7e,0xbb,0xa5,
+  0x94,0x6b,0x43,0x2e,0xde,0xd5,0xee,0x97,0x2a,0x91,0x4d,0x6b,0x40,0x6f,0x25,0x83,
+  0xca,0x3d,0xfc,0x9b,0xa2,0x9f,0x2b,0x75,0xbf,0x49,0xe4,0xa4,0x9c,0x2d,0x3b,0x1a,
+  0x56,0x6d,0x90,0x1,0x38,0x8e,0x35,0xd1,0x3,0x0,0x7e,0xb7,0x8d,0x6c,0xcb,0xa3,
+  0x96,0x28,0xa2,0x89,0x7e,0xa3,0x98,0x94,0x51,0x63,0x30,0xfb,0xb9,0xb6,0x9,0x4,
+  0x6d,0xc6,0x97,0x4e,0x74,0xa5,0x1a,0x88,0x6b,0xf5,0x33,0x27,0x1b,0x57,0xb2,0xf5,
+  0xca,0xeb,0x51,0x1,0x6c,0xec,0x38,0xd1,0x3c,0x82,0x61,0x99,0x40,0x8d,0x6e,0x5b,
+  0x73,0xed,0x69,0x9b,0x45,0x61,0xe8,0x7a,0x32,0xb8,0x55,0x31,0x23,0x37,0xbd,0x81,
+  0x35,0x7c,0x1,0xaa,0xe8,0x37,0x90,0x3f,0x97,0xb4,0xb5,0x44,0x3f,0x92,0x69,0x20,
+  0xe8,0x7c,0x61,0x80,0x30,0x2a,0x71,0x94,0xdf,0x6e,0x83,0x44,0x81,0xf4,0xd9,0xda,
+  0x64,0x98,0x4b,0x35,0x85,0xb5,0xa2,0x12,0xe9,0x79,0x6b,0x9b,0xce,0x20,0x8b,0xf8,
+  0x37,0xc4,0x7c,0xba,0x40,0xa5,0x21,0xfa,0x6d,0xc7,0xf6,0x42,0xa9,0xf5,0x18,0xb4,
+  0x31,0xc2,0x86,0x18,0xc0,0x94,0x14,0x7e,0xa7,0xad,0x55,0xbf,0x54,0x4b,0xca,0xe9,
+  0x5e,0x3f,0xd2,0x6a,0x8,0xb0,0x91,0x29,0xd4,0xdb,0xc4,0x0,0x4e,0x97,0x9c,0x86,
+  0xfa,0x2d,0xa2,0xdf,0x66,0x39,0xac,0xd6,0x90,0xa8,0x62,0xdc,0xcd,0x55,0x35,0xc0,
+  0x61,0x58,0x12,0x45,0x99,0x1a,0xd0,0x2,0x42,0x86,0xf3,0x47,0x6b,0xa3,0xac,0x95,
+  0xc1,0xd2,0xbd,0x83,0x9b,0x18,0xc0,0xe1,0xe8,0x31,0xf4,0xbe,0x4d,0xf4,0x9b,0x9,
+  0x23,0x0,0xb0,0xa6,0xe4,0x86,0xb9,0xfc,0x0,0x7e,0x95,0xf7,0x89,0xaa,0x24,0x80,
+  0x42,0x3f,0xbf,0xdd,0xd2,0xf4,0x3e,0x2b,0x19,0x3e,0x5a,0xe5,0x5d,0x32,0x2,0x44,
+  0xf9,0xfb,0xc,0x40,0xbc,0x2e,0x25,0xc0,0xbf,0xff,0xdb,0x73,0x38,0xb1,0x16,0xa2,
+  0x29,0x8,0xbe,0x48,0x36,0xc2,0x36,0x45,0xd2,0xb1,0xdb,0x17,0x4,0x5f,0x0,0xdb,
+  0x3a,0x3e,0xde,0xbd,0x6f,0x2,0x57,0x6c,0x60,0x1b,0x3a,0x1b,0x25,0xe0,0xb8,0x86,
+  0xe8,0x87,0x62,0xa,0x6e,0xbc,0x6b,0x98,0xed,0xcc,0x20,0x34,0x1e,0x2c,0xed,0x49,
+  0x41,0x4,0xbf,0xdd,0x42,0x34,0x1c,0x19,0xfd,0x81,0xcd,0x14,0xf1,0xa2,0xa9,0x5d,
+  0xce,0x18,0x8a,0x35,0xf0,0x7a,0x64,0x80,0x41,0x28,0xb1,0x6a,0x69,0x16,0xa1,0x8b,
+  0xe9,0x21,0xfe,0xfa,0xc5,0x35,0x1c,0x98,0x6b,0xe1,0x7d,0x97,0x4d,0xe2,0x2d,0xbb,
+  0x3b,0xa8,0x5b,0x97,0xc2,0x49,0x7c,0x2e,0x7b,0xf8,0x34,0x4b,0x20,0xf5,0x6,0xea,
+  0x80,0xb1,0x66,0x85,0x10,0x36,0xd6,0x6e,0xbe,0x2d,0x70,0x14,0x24,0x25,0xe3,0x3c,
+  0x51,0xca,0xe,0xf6,0x3b,0x9,0x3,0x80,0x8c,0xa2,0x48,0x48,0x3a,0x5d,0x97,0x7b,
+  0x9,0xab,0x8c,0xf0,0xfa,0x8d,0x7,0xb8,0xa2,0x6c,0x36,0xbb,0xfd,0xe9,0xf9,0x11,
+  0xbe,0x77,0x6e,0x88,0xb9,0x8e,0x87,0xf7,0x5c,0x36,0x89,0xdb,0xf7,0x4d,0x3a,0x8b,
+  0x4c,0xeb,0xa6,0x60,0x99,0xf8,0xd2,0xe6,0x13,0x30,0x0,0xdf,0xe2,0x30,0xc6,0xb8,
+  0xcc,0x10,0xe1,0x42,0x9e,0xb0,0xe8,0xfa,0x24,0xe1,0x6c,0x64,0xe5,0x72,0xaf,0xd5,
+  0xca,0x2b,0x1b,0xb3,0xba,0x61,0x2c,0x8b,0x1,0x40,0x4f,0x11,0x63,0x33,0x84,0x4c,
+  0xaf,0xcf,0x88,0x60,0x21,0x82,0xcd,0x17,0x8c,0x57,0x51,0x6a,0x6f,0x7e,0x10,0xe3,
+  0xb3,0x4f,0x2e,0xe3,0x5f,0xfc,0xc5,0x49,0xfc,0xf6,0x23,0x8b,0x38,0xbe,0x12,0x6e,
+  0x88,0xf8,0xb6,0x50,0x71,0x61,0x32,0x2,0xfd,0x30,0x69,0x7a,0xc9,0xe,0xb0,0xe8,
+  0x56,0x1,0x46,0x47,0x4a,0x5d,0xe6,0xd,0xc1,0x99,0xed,0x4f,0x86,0x1a,0x68,0x36,
+  0x11,0x7,0x81,0xb6,0x19,0x24,0x53,0x17,0x94,0x56,0x15,0x51,0xf3,0x6,0xc9,0xc0,
+  0x13,0xaf,0x47,0x15,0xc0,0xe,0x3b,0xbb,0x24,0x1,0x50,0x6e,0x23,0x1f,0x44,0x12,
+  0x7f,0x75,0x6c,0x15,0xf7,0x1d,0x5d,0xc5,0xd,0xdb,0xdb,0xb8,0xf3,0xca,0x29,0xbc,
+  0xf9,0xa2,0x8e,0x56,0x27,0x61,0x1c,0xf1,0x4d,0x46,0x94,0xc6,0xf1,0x4b,0xa3,0xb8,
+  0x32,0x97,0xc0,0xaf,0x63,0x7e,0x50,0x56,0x84,0x98,0x0,0xee,0x8f,0x40,0x5b,0x61,
+  0x7,0x83,0x9d,0x16,0xe2,0x20,0xd4,0xc4,0x3a,0x50,0x6e,0x6d,0x96,0x3c,0x1c,0x19,
+  0xc5,0x9c,0x8,0xc7,0x16,0x6,0xf8,0xca,0xb3,0xb,0x79,0xf9,0x93,0x58,0x26,0x9b,
+  0xd1,0x92,0xdf,0x59,0xf9,0xbd,0x68,0xb1,0x9a,0x71,0x7b,0x9c,0xf6,0xcd,0x95,0xf9,
+  0xef,0x45,0x3d,0x3e,0x99,0x56,0xc8,0xca,0x44,0x63,0xac,0xd8,0xd2,0x19,0xc8,0x8a,
+  0x73,0x31,0x4a,0x88,0x25,0xa3,0xd1,0x69,0xa1,0xd1,0x6c,0x40,0xa6,0x81,0x8c,0x58,
+  0x71,0xbd,0xc6,0xca,0x79,0xa7,0xd7,0x42,0xeb,0x4,0xb3,0xf9,0x93,0xcb,0xcc,0x51,
+  0x20,0x7b,0xc6,0x63,0x67,0x7,0x78,0xf4,0x95,0x1,0x76,0x4e,0xf8,0xb8,0xe3,0x8a,
+  0x29,0xdc,0x7e,0xd9,0x64,0xc9,0xdc,0x93,0x15,0x4e,0xa0,0xb2,0xa,0x48,0x8e,0x59,
+  0x1e,0xc6,0x8a,0x33,0x6f,0x1d,0x56,0x40,0x19,0xc2,0xa7,0x92,0xba,0x3f,0xd0,0x8f,
+  0x53,0xa4,0x80,0xd7,0x6c,0x1,0xd4,0x2b,0x75,0x14,0xcd,0xa,0x24,0xb2,0xb9,0x25,
+  0x4c,0xc1,0x0,0xc,0xe0,0x1b,0xc7,0x97,0xf1,0xcd,0x17,0x97,0x61,0xd6,0xf8,0xd1,
+  0xeb,0xe9,0x26,0xb5,0x88,0xb4,0xaa,0xdb,0x40,0x52,0x13,0x7,0x7a,0xab,0x75,0x81,
+  0x72,0x6d,0x1c,0x61,0x94,0x5b,0xcb,0xbd,0x10,0x46,0x2a,0x43,0xab,0xdb,0xc6,0xe4,
+  0x4c,0xb9,0x1d,0xbc,0xf1,0xd5,0x9c,0x98,0xd9,0x86,0xca,0xad,0xab,0xda,0x30,0xb7,
+  0x4f,0xaf,0x85,0xb8,0xe7,0x3b,0xb,0x38,0xf2,0xf8,0x12,0x6e,0xb9,0xa8,0xb3,0x2e,
+  0xe2,0x9b,0xa5,0x64,0x0,0x60,0x71,0x18,0x61,0xa6,0xe5,0x39,0xa1,0x80,0xa3,0x6f,
+  0xa0,0xb0,0xd2,0x9f,0x19,0xa0,0xb5,0xbe,0x2,0x4,0x75,0x53,0x8f,0x4,0xc1,0x6b,
+  0x36,0x10,0x7,0x61,0xb9,0x42,0x8f,0x41,0x44,0x35,0x7a,0xa0,0x96,0x8d,0x61,0xcb,
+  0x7b,0xda,0xfb,0xa9,0xd7,0x50,0x95,0x1c,0xac,0x68,0x9c,0x6c,0xdd,0x17,0xb9,0x7,
+  0xac,0x15,0x5f,0x66,0xcd,0x1d,0x41,0x16,0xc2,0xa6,0x65,0x5f,0x22,0x9b,0xe8,0xa4,
+  0xb1,0x86,0x52,0x15,0x8,0x34,0x89,0xe,0x8b,0x4d,0x9f,0xfd,0x3d,0x8c,0x24,0xee,
+  0x7f,0x71,0xcd,0x50,0x1d,0x76,0xf7,0xaf,0x4a,0x7c,0x13,0x18,0x2e,0xe,0xe3,0x52,
+  0x9b,0xbb,0xf1,0x8e,0x20,0xa5,0x54,0x7c,0x9,0xc,0x32,0x3,0x4b,0xab,0x56,0x5b,
+  0x95,0x99,0x13,0x30,0x68,0x3a,0x82,0x48,0xd5,0x83,0x94,0x48,0x2,0xcd,0x6f,0x90,
+  0x16,0x4a,0x57,0x28,0xc1,0xc4,0x28,0xb7,0x22,0x2d,0x24,0x83,0xea,0x60,0xca,0xf0,
+  0x5,0xb2,0x5a,0xf9,0xac,0x3a,0x9e,0x28,0xaf,0x6a,0xa6,0xb6,0x3b,0xe3,0x52,0x6f,
+  0xf1,0xc2,0x95,0xcd,0x4,0xc4,0x91,0xd4,0x40,0x1c,0x9c,0x60,0xcf,0xfe,0x52,0xf1,
+  0x81,0x2a,0xea,0xd5,0x15,0x5f,0xb8,0x75,0xb,0x75,0x56,0x32,0xe9,0xb4,0xfb,0x96,
+  0x89,0x2f,0x15,0xd0,0x67,0x3,0x86,0x4b,0xc3,0x58,0xab,0x22,0x36,0x9e,0x1,0xb2,
+  0x7,0x11,0xe4,0x16,0x6d,0x4b,0x2b,0x25,0x7,0x44,0x76,0x9c,0x9f,0x57,0xdd,0x2a,
+  0xb5,0x2e,0xd4,0xf2,0x3,0x8b,0x50,0x71,0x16,0x47,0x50,0x56,0x5,0x15,0xf1,0x1,
+  0x7d,0xed,0xe9,0xb6,0x2f,0x9b,0x2b,0x2a,0x25,0x74,0x91,0x9d,0x54,0x58,0x25,0x6c,
+  0x7a,0x23,0xc9,0x70,0xa6,0x94,0x18,0x84,0x11,0x67,0xd1,0x4f,0xd8,0x50,0x7d,0x8d,
+  0x97,0xf9,0x8f,0xeb,0x11,0x5e,0xa6,0x22,0x9f,0xd,0xbc,0x90,0x33,0x82,0x72,0x5c,
+  0x15,0xf1,0x19,0xc0,0xca,0xa8,0x3a,0xcf,0xc2,0xb7,0x9a,0x35,0x52,0x26,0x93,0x9f,
+  0x53,0x37,0x25,0x50,0xb6,0x98,0x97,0xd7,0x92,0xd2,0xb1,0x59,0x8b,0x6d,0x5,0xb,
+  0x10,0x15,0xb5,0x5,0x35,0xb1,0x99,0x89,0x67,0xb2,0x8b,0xd2,0x3c,0x62,0x8,0xa3,
+  0xea,0x48,0x46,0x38,0xad,0x9b,0x37,0x19,0x4,0xce,0x2a,0x70,0xb2,0x2e,0x59,0x8c,
+  0x92,0xec,0xba,0x3e,0x27,0xab,0xef,0x43,0x2d,0xe4,0x1a,0x45,0x31,0x1a,0x59,0xf7,
+  0x14,0x5a,0x7f,0xb2,0x8a,0xb,0x7,0xb8,0x2,0x33,0x66,0xf6,0x8f,0x2d,0xd7,0xcf,
+  0xa6,0xf3,0xdd,0x56,0x41,0xf2,0xdb,0xf2,0x28,0xae,0x8f,0x1,0x98,0x19,0x32,0x8c,
+  0x20,0x85,0x7,0x21,0x43,0x4d,0x87,0xe7,0x93,0x1d,0x4b,0xc8,0x33,0xe7,0x80,0xad,
+  0x33,0x5a,0xff,0x3b,0x9,0x82,0x48,0xfb,0x5,0xc5,0xa1,0x4,0x9,0x80,0x20,0x95,
+  0xae,0xdf,0x29,0x99,0x45,0xc,0xa2,0xb4,0x78,0x64,0x4a,0x71,0x41,0x4,0x8,0xce,
+  0x75,0x73,0xcc,0xc,0x2f,0x95,0xc,0xaa,0x5b,0x39,0x1,0x72,0x65,0x37,0x33,0x1b,
+  0xf5,0x7,0x32,0xa,0x94,0x8,0x6d,0x74,0xfc,0x40,0x49,0x5a,0x14,0x23,0x8a,0x62,
+  0xf8,0xd,0xdf,0xaa,0xff,0xeb,0x31,0x0,0x3b,0x2d,0x81,0x71,0x84,0x47,0x95,0xcf,
+  0xbf,0x82,0xf8,0x26,0x96,0x60,0x30,0x16,0x7,0xb1,0xb3,0x93,0x88,0x6f,0xf5,0x3e,
+  0x4b,0x9,0x6e,0xf8,0xc0,0x80,0xb,0x11,0xab,0x98,0x6d,0xc,0x80,0x4e,0x9d,0x85,
+  0x9c,0x9d,0x2a,0xb2,0x81,0x90,0x54,0xeb,0x64,0x9,0x90,0xe7,0x81,0x59,0x2,0x71,
+  0x81,0xfc,0x49,0xaa,0x5d,0xad,0x8,0x40,0xd2,0x75,0x4b,0x64,0x80,0x4c,0xe9,0x53,
+  0x94,0x9,0x89,0x58,0x8,0x20,0xce,0x18,0xa9,0xf0,0x3e,0x26,0xfd,0x6,0x45,0x8e,
+  0x57,0x13,0xab,0x40,0xe4,0x65,0x6a,0x93,0xe6,0x4c,0x49,0xa6,0x92,0xc8,0xca,0xa5,
+  0xb3,0x12,0xa4,0x4a,0x6d,0x5a,0x56,0x84,0x3e,0x1b,0x52,0x82,0x53,0x20,0x58,0x74,
+  0xe0,0xe0,0xa,0x38,0x58,0xcf,0x12,0x70,0x4a,0x83,0xa,0xc2,0xc3,0xf8,0x5c,0x32,
+  0x4a,0xef,0x55,0x11,0x9f,0x19,0x58,0x18,0xc6,0xce,0x80,0x50,0x89,0x1,0x64,0x14,
+  0x43,0x4a,0x89,0xd8,0x13,0x10,0x4a,0x23,0xe2,0x54,0xca,0x17,0x4d,0xae,0x47,0x1,
+  0xf8,0xec,0x22,0x78,0xdb,0x6c,0x2e,0x62,0x99,0x14,0x64,0x4f,0x49,0xb7,0x31,0xca,
+  0xf4,0x3d,0x15,0xc5,0x92,0x89,0xb,0x62,0xca,0x8c,0x8,0x4a,0x57,0x92,0xec,0x5e,
+  0xe0,0x4,0x89,0x53,0x9c,0x4a,0x92,0x74,0xda,0xa5,0x20,0x10,0x62,0x23,0xbe,0x44,
+  0xe5,0x38,0x4,0xca,0x8d,0x97,0x72,0x3c,0x22,0xa0,0xed,0x52,0x12,0xa4,0x87,0xb0,
+  0x85,0x20,0xc4,0x51,0xc,0xcf,0xf7,0x8b,0x5a,0x6,0x5a,0xd2,0xab,0xd2,0xcd,0x83,
+  0xea,0x6d,0x6e,0x2f,0x63,0x17,0x3b,0xe1,0xab,0x56,0x3d,0x1c,0xd8,0xa0,0x14,0x29,
+  0x44,0x81,0xf,0xb2,0xc,0xe1,0x30,0x8,0x6b,0x30,0x40,0x18,0x25,0xc9,0x9f,0xbe,
+  0x9f,0x5f,0x4d,0x8d,0xd,0x64,0x22,0x9b,0x1,0x88,0x33,0xf3,0x88,0xb7,0x4c,0x15,
+  0xab,0x9c,0x8a,0xc6,0x47,0xe4,0x9,0xc8,0x28,0xca,0x9b,0x26,0x82,0x55,0x31,0x2b,
+  0x8b,0xda,0xf9,0xea,0x4a,0xcc,0x56,0x2b,0x29,0x5f,0x86,0x65,0x71,0xfd,0xec,0x19,
+  0x94,0xb6,0x18,0x66,0x2d,0xdc,0xfc,0xa7,0x52,0x9b,0x5f,0xbd,0x47,0x76,0xc,0x4b,
+  0x3,0xa2,0x8,0x2a,0xad,0x6e,0x81,0x82,0xe0,0xe3,0x8,0x2c,0xd3,0x26,0xd8,0x50,
+  0x7b,0x1,0x2b,0xbf,0xb3,0xb1,0x1d,0x8e,0x2c,0xad,0x70,0x48,0x6f,0x2c,0x98,0x97,
+  0x9c,0xb5,0x89,0xfc,0xba,0xc4,0x57,0xb3,0x89,0x6a,0x31,0x0,0xc7,0x11,0xa4,0x64,
+  0x44,0xed,0x16,0x1a,0xe9,0x55,0x54,0x1b,0x5b,0x13,0x7f,0x41,0x0,0x9c,0x3a,0x7,
+  0xde,0xb9,0x55,0x7b,0x70,0x6,0x40,0xc2,0x3,0x4b,0x99,0x7e,0x9,0x45,0xbd,0x28,
+  0x4,0x46,0x4a,0x74,0x22,0xdd,0xe4,0x24,0xad,0xc7,0x40,0x8a,0xdf,0x73,0x53,0x2e,
+  0x3d,0x9e,0x15,0xb,0x53,0x5d,0x39,0xc4,0x85,0x14,0xc9,0xcd,0xc4,0xa2,0x3b,0x7,
+  0xd4,0xbf,0x95,0x7,0x51,0xc5,0xa3,0xea,0x93,0x8,0xc2,0x10,0x9e,0x27,0x2c,0x36,
+  0x8d,0xc1,0x0,0xb1,0xb4,0xe6,0xe7,0x57,0xfa,0x7,0x78,0xbc,0x74,0x50,0x4d,0xe9,
+  0xa2,0x9d,0x9f,0xce,0x60,0xd9,0x8e,0x6c,0xca,0x7a,0x36,0x82,0xc0,0x24,0xf2,0x45,
+  0xcb,0x69,0x7f,0xfa,0x70,0x14,0xd4,0xc0,0x0,0xcc,0xe0,0x28,0x4,0x37,0x7d,0x48,
+  0xcf,0x83,0x88,0xe2,0xd4,0x22,0x50,0x1a,0x9d,0x28,0xcb,0xc9,0x7b,0x65,0x1,0x51,
+  0xab,0x1,0x39,0x3d,0xa9,0x14,0x7f,0x28,0x1e,0x5e,0x4a,0xa9,0x79,0xda,0x32,0xfd,
+  0x4b,0xa,0x57,0x31,0x58,0xdb,0x55,0x94,0x47,0x1f,0x89,0x12,0x3c,0x52,0x90,0x32,
+  0xb9,0xb4,0x60,0xd,0xfd,0x43,0x75,0x1c,0xb1,0xca,0x5c,0x42,0xb7,0x27,0x48,0x6f,
+  0x7a,0x41,0xe,0xab,0x80,0xd5,0x62,0x56,0x41,0x8,0x34,0x7c,0x67,0xb5,0x6d,0x95,
+  0x1,0xc6,0x39,0x83,0xaa,0x3e,0xd7,0x8a,0x39,0xc0,0xb6,0x2f,0xc3,0x8e,0xf,0x4c,
+  0x73,0xb8,0xf8,0x1c,0x5a,0x8,0x38,0x8a,0xb9,0x1e,0x6,0x0,0x80,0x70,0x38,0x42,
+  0xa3,0xd5,0x42,0x3c,0xd1,0x1,0x2d,0xad,0x0,0x69,0x4b,0x72,0x56,0xf0,0x40,0x46,
+  0x33,0x6,0xc3,0x7b,0xf9,0xc,0xa2,0xcb,0x7c,0x70,0xab,0xa9,0x3b,0x66,0x84,0x0,
+  0x87,0x31,0xf4,0xe5,0xa,0x45,0xfc,0x73,0xce,0xb9,0x9c,0xd5,0x22,0xe6,0x84,0x89,
+  0x39,0x43,0xec,0x89,0x1e,0x48,0x8f,0x4b,0x27,0x41,0xaa,0xe9,0x86,0x54,0xf2,0xaf,
+  0xe5,0x4c,0x98,0xca,0x79,0x86,0x91,0x88,0x24,0x8a,0xef,0x53,0xe4,0xa4,0xb0,0x85,
+  0x19,0x18,0x31,0xc5,0x10,0xa2,0x46,0xc8,0xd6,0xb6,0x1d,0x9b,0xed,0x9,0x1e,0xd6,
+  0x8f,0xd,0x3d,0xef,0x2,0x95,0xf6,0x20,0x13,0x1b,0xcc,0x53,0xb6,0x3e,0x86,0x83,
+  0x61,0x7d,0x57,0x70,0x38,0x18,0xc2,0x6f,0x34,0x11,0x75,0xdb,0xf0,0x17,0x97,0x8b,
+  0x49,0x54,0x41,0xa0,0x3a,0xa1,0x71,0xc,0xef,0xf8,0x29,0x84,0x97,0xed,0x1,0x79,
+  0x2,0xa,0x5c,0x4f,0x68,0x90,0xca,0xe9,0xa2,0x91,0x2,0xeb,0x9,0xa3,0x99,0x85,
+  0x91,0x7e,0x81,0xac,0x33,0x37,0x31,0x2b,0x4d,0x97,0xf4,0xfe,0x3a,0xa4,0xc8,0x7f,
+  0x2a,0x55,0x18,0xca,0xfc,0x1,0x6c,0xed,0xa0,0x49,0xca,0x97,0xb0,0x95,0xbf,0x55,
+  0xfd,0x86,0xcc,0xc,0x21,0xc4,0xd8,0x1a,0x46,0x52,0xc6,0x63,0xfd,0x0,0x36,0xa2,
+  0xd7,0xc9,0x29,0x60,0xe3,0x64,0xd6,0x7e,0x67,0x2b,0x30,0x34,0xa3,0x84,0x6b,0x6b,
+  0x83,0xfa,0xc,0x10,0xd,0x86,0x90,0x13,0x93,0x88,0x5a,0x4d,0x48,0xcf,0x3,0x45,
+  0x51,0x2e,0x84,0xcd,0x6f,0x93,0x33,0x42,0x10,0xc0,0x3f,0x76,0x2,0xe1,0x25,0x3b,
+  0x41,0xd,0xbf,0x48,0xf8,0x20,0x6,0x49,0x2e,0xa4,0x7,0x15,0x72,0x3e,0x3,0x77,
+  0x6a,0x3b,0x15,0xd5,0xad,0x2b,0x0,0x48,0x96,0x7a,0xa5,0xf1,0xcc,0xe3,0x97,0x81,
+  0x4b,0xd3,0xa9,0x49,0xfa,0x8a,0x2a,0x6f,0x4e,0x2e,0xd7,0xd8,0x37,0x6b,0x1e,0xb2,
+  0x6a,0x2d,0x48,0x6,0xf9,0x72,0x6c,0xf6,0xac,0x8c,0xe3,0x3a,0x2,0xa0,0xd4,0x44,
+  0xa2,0x5e,0x32,0x89,0x9b,0x11,0xb8,0x42,0x9d,0x30,0x17,0xf3,0xb0,0xb6,0xd6,0x73,
+  0x32,0x40,0x1f,0x40,0x57,0xbf,0xa3,0x4c,0xe2,0xfa,0xd,0x1f,0xc1,0xec,0x34,0x5a,
+  0x67,0x17,0xa,0x22,0x31,0xb4,0x94,0xae,0x1c,0x5e,0x71,0x62,0x1a,0x36,0x8e,0x9d,
+  0x44,0xb8,0x7b,0x3b,0xb8,0xd3,0x2a,0x1c,0x44,0x2c,0xb,0x54,0x4e,0x8a,0x49,0xa8,
+  0xba,0xf8,0xa0,0xda,0x7f,0x99,0x89,0x98,0x32,0xa,0xd8,0x70,0xf4,0xa8,0x18,0x20,
+  0x43,0x7,0x52,0xa7,0xbf,0x41,0x78,0x26,0xdd,0x3f,0xa8,0xe9,0x7c,0xc3,0xd3,0xa7,
+  0x6e,0x76,0x63,0x20,0xb1,0x66,0x36,0x80,0x1,0xac,0xcc,0x50,0xb9,0xb1,0xb3,0x1c,
+  0x26,0xae,0xf6,0x2c,0x16,0x16,0x9a,0x6d,0xc3,0x68,0xc6,0x14,0xa3,0xd4,0xb2,0xb3,
+  0x8c,0x9e,0xf,0xe0,0x3e,0x0,0x77,0x99,0x9f,0xc,0xd7,0x56,0xd1,0x9d,0x9e,0x41,
+  0x38,0xd1,0x81,0xbf,0xdc,0x80,0x97,0x22,0x48,0x5d,0xff,0x1b,0xbd,0x71,0x18,0x20,
+  0x8e,0xd0,0x78,0xe9,0x34,0xa2,0x1d,0x73,0x90,0xd3,0x49,0x41,0x29,0x96,0x52,0x53,
+  0x1b,0xa4,0xc4,0x19,0x32,0x0,0x48,0xea,0xae,0x41,0x2a,0x4c,0x4a,0x8e,0x39,0x57,
+  0x1,0xe5,0x30,0xae,0xe2,0xa0,0x21,0xca,0xb1,0x83,0x1a,0xd4,0x34,0x27,0xbe,0xc8,
+  0x4e,0x72,0x47,0xfa,0x4c,0xd0,0x18,0x45,0x65,0x1c,0x40,0x16,0x9,0xc0,0x18,0xef,
+  0x1d,0xe2,0x1a,0xae,0x63,0x5b,0xd8,0x86,0xd9,0x74,0x5a,0x1b,0x61,0x7b,0x18,0x1,
+  0x1f,0x45,0x4a,0x2c,0x2c,0x3a,0x9b,0x67,0xdf,0xe7,0x3,0xb8,0xd7,0xc6,0x0,0x88,
+  0x63,0xc4,0x51,0x8,0xf2,0x3c,0xc,0xb7,0xce,0xa0,0x7b,0xf2,0x6c,0xe2,0x5a,0x75,
+  0x70,0x2e,0x29,0xf9,0x83,0x0,0xc3,0x3f,0x7d,0xe,0xb2,0x37,0x40,0xb4,0x7d,0x4b,
+  0xde,0x44,0x21,0x77,0x18,0x49,0x73,0x57,0x18,0x83,0x5,0x69,0x0,0x33,0xd3,0x2f,
+  0x6c,0xc6,0x39,0x49,0xbd,0x9b,0xee,0x3a,0x94,0xa6,0xbe,0xe7,0x32,0xc3,0xa8,0xd,
+  0x1b,0x5d,0x71,0x7e,0x36,0x3f,0x8,0x1,0x78,0x3c,0x6,0x3,0x48,0xd4,0xa0,0x7f,
+  0x69,0x29,0x73,0x85,0x7a,0xb0,0x82,0x47,0x4b,0xd8,0xd7,0x94,0x1c,0xaa,0x74,0x8,
+  0x64,0x8c,0x38,0x74,0xa6,0x9c,0xdd,0x4b,0xf8,0xe9,0x3f,0xdc,0xa,0xe0,0xb4,0x15,
+  0xf,0x90,0x40,0x67,0x6a,0xa,0x4,0xc0,0x1f,0xc,0xd1,0x39,0x33,0x6f,0x5d,0x1,
+  0x66,0xa,0x98,0xd6,0x4e,0x46,0x8,0x84,0xd3,0x93,0x8,0x27,0x3a,0xb9,0x8d,0x6a,
+  0x2b,0x36,0xae,0x15,0x8f,0x50,0x4e,0x97,0x2c,0x4b,0x7d,0x76,0xcb,0x84,0xb3,0x49,
+  0x6,0x58,0x7d,0xfe,0x30,0xf4,0xbd,0x79,0x80,0xb5,0x3f,0xaf,0x10,0xf0,0x7c,0x6f,
+  0x63,0x2a,0xa0,0x22,0x5b,0xa8,0xe4,0xb,0x58,0x37,0xe1,0x75,0x89,0x50,0xc2,0x17,
+  0x44,0x38,0xbb,0xb0,0xc,0x96,0xd6,0x54,0xbb,0x8,0xc0,0x2e,0x62,0x66,0xd0,0xc1,
+  0xc3,0x5f,0x4,0x70,0xa7,0x35,0x61,0xa0,0xd9,0x44,0xab,0xd9,0x4a,0xea,0x1,0xf4,
+  0xfa,0x68,0x9f,0x5b,0xb2,0x64,0xc9,0x90,0x9d,0x31,0x8a,0x98,0xc,0xa4,0x27,0x10,
+  0xcc,0x4d,0x43,0x76,0x5a,0x3a,0x6a,0xa7,0x72,0xe7,0x11,0x15,0xd6,0xb1,0x64,0x33,
+  0xa8,0xa8,0x78,0xcc,0x4c,0xc2,0xb9,0x18,0x1,0xa5,0x55,0xf,0xd8,0x8f,0xb1,0xa5,
+  0x0,0x11,0x30,0x9e,0x1,0xa4,0x44,0x5d,0x11,0xe0,0xea,0xed,0x59,0x69,0x35,0x8c,
+  0xf1,0xb,0x94,0x70,0x1,0x1,0xab,0x83,0x11,0x86,0xc3,0xa1,0xeb,0x91,0xbf,0xc8,
+  0x47,0xe,0xbd,0x3f,0x5b,0xf5,0x1f,0x3,0xf0,0x3e,0x0,0xa5,0x6f,0x29,0x83,0x0,
+  0xa1,0xf0,0xd0,0xf0,0x4,0x82,0x4e,0x1b,0x72,0xdb,0x16,0xb4,0xe7,0x97,0x20,0xd2,
+  0x2f,0x9c,0x89,0x20,0x35,0xcd,0xdb,0xf6,0xe5,0x29,0x8,0xd1,0x3a,0x3d,0x8f,0xb8,
+  0xdd,0x44,0x34,0x3d,0x9,0xd9,0x69,0xe9,0x4,0x10,0x59,0x2d,0x81,0xc2,0xe1,0x23,
+  0x9,0x49,0x50,0x49,0x1,0x8c,0xac,0x9a,0x69,0xd6,0x7e,0x45,0xa4,0xed,0x39,0x60,
+  0x52,0xf5,0x3f,0x5b,0x69,0xcc,0x63,0x94,0x33,0x29,0x2e,0xe1,0xf5,0x83,0x40,0x1e,
+  0xff,0x8e,0x43,0xa,0x8c,0x23,0xb6,0xd3,0x4a,0x0,0x61,0x28,0x65,0x15,0xf1,0xe3,
+  0x94,0xe6,0xa0,0xbc,0x15,0xd9,0xc1,0xc3,0x9f,0x1,0xf0,0x21,0xd7,0x19,0x8d,0x6e,
+  0x17,0x1e,0x67,0x81,0x9b,0x18,0x9d,0x73,0xcb,0xf0,0x46,0xa3,0x52,0xea,0x97,0x6d,
+  0x92,0x48,0xc9,0x6a,0xc9,0x3e,0x96,0xbe,0x8f,0x68,0xb2,0x8b,0x68,0xaa,0x5b,0x10,
+  0x9f,0xca,0xab,0x99,0x15,0x15,0x60,0xa,0x9,0xaa,0x88,0xef,0xdb,0xf5,0x3b,0x39,
+  0x5d,0xba,0x64,0x6f,0x84,0x54,0x48,0x1d,0x41,0x95,0xde,0x40,0x17,0x3,0xac,0x37,
+  0x8b,0x80,0x6b,0x78,0x11,0x4b,0xe2,0xdf,0x60,0xa0,0xd8,0xf3,0xb0,0xbc,0xb2,0x5a,
+  0x75,0x9b,0xcf,0xf0,0x91,0x43,0x3f,0x6b,0xfa,0x1,0x7e,0xd,0xc0,0x8f,0x3,0xb0,
+  0x76,0x40,0xa,0xfb,0x7d,0x70,0xab,0x9d,0x9c,0x40,0x84,0xfe,0xf6,0x59,0x78,0xc3,
+  0x0,0xad,0x95,0x35,0x78,0xa3,0x40,0x35,0xbf,0x4b,0xa2,0x99,0xd,0x6f,0x17,0x40,
+  0x10,0x51,0x84,0xe6,0xd2,0xa,0x9a,0xcb,0xab,0x88,0xba,0x6d,0x44,0x93,0x13,0xe0,
+  0x96,0xaf,0x69,0x35,0x2,0x92,0xea,0x64,0x64,0xf4,0xe0,0x83,0xa5,0x67,0x8e,0xd,
+  0xf,0x10,0xac,0xe6,0x51,0xe6,0x22,0x1e,0x1f,0xba,0x65,0xd,0x50,0x56,0x31,0x0,
+  0xbb,0x40,0x20,0xaf,0x53,0x2a,0xf0,0x78,0xe6,0x61,0x17,0x88,0x4,0x21,0x10,0x84,
+  0x5e,0x35,0xf1,0x7,0x0,0xfe,0xad,0xe2,0x1,0x55,0xbe,0xe4,0xc1,0xc3,0x3f,0x7,
+  0xe0,0xf7,0xaa,0xce,0x16,0x8d,0x26,0x9a,0x42,0x0,0x52,0xe6,0xeb,0x43,0x4,0x11,
+  0xfc,0xe1,0x10,0x8d,0xc1,0x8,0x22,0x8c,0xdc,0x3a,0xd5,0x2c,0x7,0x6b,0x2,0x3e,
+  0xdf,0x47,0xdc,0x69,0x21,0xee,0xb6,0x20,0x9b,0x8d,0x84,0x80,0xb1,0xb4,0x24,0x6d,
+  0x52,0xa9,0x7b,0x7d,0x69,0x65,0x57,0x10,0xcb,0x6,0x0,0xed,0x87,0x93,0x76,0xbd,
+  0xd,0x31,0x0,0x78,0x2c,0xfd,0xc7,0x49,0x9,0xe6,0x2a,0xaf,0x41,0x1a,0x3b,0xf1,
+  0x4,0x6,0x92,0x31,0x1a,0x8d,0xc6,0x9,0x99,0xf,0xf3,0x91,0x43,0xf7,0x58,0x19,
+  0x20,0x65,0x82,0x4f,0x3,0xf8,0x68,0xe5,0x25,0x48,0xa0,0xd9,0x6a,0x41,0x84,0x91,
+  0x16,0x19,0x22,0x4a,0xe2,0xfa,0x5e,0x10,0xc2,0x8b,0x62,0x88,0x30,0x82,0x88,0x63,
+  0x50,0x2c,0x41,0x52,0x26,0xce,0x8,0xc3,0xa4,0x73,0x4d,0x29,0x7b,0x1e,0xe2,0x4e,
+  0xb,0x51,0xab,0x89,0xb8,0xd9,0xd0,0x6b,0xc,0x57,0x88,0x79,0x72,0xa0,0xbb,0x71,
+  0x9d,0xc9,0x6c,0x0,0x91,0x74,0x9e,0xab,0x66,0x80,0xf5,0xa8,0x80,0x1a,0xce,0xa0,
+  0xba,0xe0,0x90,0x88,0xc0,0xad,0x26,0x56,0xfb,0x3,0x27,0x13,0x2a,0xe3,0xbf,0xf0,
+  0x91,0x43,0xbf,0x38,0xce,0x15,0xfc,0x4b,0x0,0xae,0x1,0x70,0x5b,0x5,0xbb,0x23,
+  0x18,0xe,0x40,0x9e,0x87,0xa6,0xdf,0x0,0xc2,0x28,0xcd,0xfb,0x4f,0x3c,0x70,0xb2,
+  0xd5,0x40,0xd4,0x6a,0x94,0x56,0x23,0x4b,0x6,0xa2,0x18,0x94,0x61,0x1,0x35,0x57,
+  0x20,0x8d,0x9,0x10,0xeb,0xa8,0x9f,0x65,0xc,0x84,0x9c,0x64,0x28,0x19,0x93,0x91,
+  0xfb,0x1e,0x8c,0x5d,0x46,0xfa,0xe7,0x6c,0xb8,0x77,0xed,0x4d,0x65,0x19,0xe5,0xdd,
+  0xd0,0x6c,0x9e,0x20,0xdc,0x11,0x1,0x8e,0xe5,0xfa,0xf4,0xbd,0x3,0x2d,0x73,0xcd,
+  0x53,0x88,0x8,0xd4,0x6e,0x61,0x6d,0x14,0x20,0x76,0xb8,0x79,0x8d,0xf1,0xe5,0x94,
+  0xb6,0x86,0xaf,0xc4,0xc2,0x5e,0x74,0xf0,0xf0,0xc,0x80,0x3f,0xad,0x64,0x2,0x5d,
+  0x31,0xc0,0x6f,0x36,0xe0,0x13,0x1,0x61,0x4,0x96,0xb1,0xa5,0xb9,0x24,0xe5,0xfa,
+  0xab,0xba,0x99,0x94,0x6e,0xbb,0xab,0x5c,0x4d,0x4e,0x63,0x9d,0x9c,0x9f,0x8f,0x91,
+  0xec,0xf5,0x3a,0xc,0x93,0xc3,0x7f,0x30,0x26,0x16,0xb0,0x31,0x66,0x70,0x33,0x1,
+  0xf9,0x1e,0xa8,0xd5,0x44,0xc4,0x8c,0xfe,0x30,0x40,0x91,0xd5,0x52,0x8b,0xf8,0x3f,
+  0xc6,0x47,0xe,0x2d,0xd7,0x62,0x80,0x94,0x9,0x3c,0x0,0xbf,0x5,0xe0,0xee,0xf5,
+  0x7f,0x23,0x82,0xf0,0x3c,0x8,0x41,0x69,0x6e,0xde,0x38,0x74,0x5e,0x16,0xc1,0xe3,
+  0x8,0xe7,0x7a,0x8b,0xc7,0x5c,0x83,0xaa,0x1e,0xa2,0xd6,0x37,0xbb,0x40,0xc3,0x1a,
+  0xdf,0x4f,0x3c,0xa8,0x51,0x2c,0x11,0x45,0xf1,0x7a,0x8,0xae,0x8e,0x4f,0x1,0xf8,
+  0x15,0x3e,0x72,0xc8,0xca,0xa1,0x34,0x2e,0x69,0x21,0x5,0x86,0x9f,0x72,0x59,0x7,
+  0x9b,0xe3,0x35,0x3b,0x6,0x0,0xee,0x56,0x1,0x9f,0x5d,0x76,0x8f,0x63,0xcc,0xe4,
+  0x2,0x57,0x1,0xf8,0xc3,0xd4,0x81,0xb0,0x39,0x5e,0xdb,0x23,0x2,0xf0,0x7,0x0,
+  0xae,0x1a,0x47,0xfc,0x5a,0x12,0xc0,0x90,0x6,0xd7,0x3,0xf8,0x44,0xea,0x35,0x6c,
+  0x6c,0xce,0xf5,0x6b,0x6a,0x84,0x0,0xbe,0x4,0xe0,0x63,0x7c,0xe4,0xd0,0xe3,0xb5,
+  0x69,0xca,0x1b,0x28,0xcf,0x4a,0x7,0xf,0x6f,0x45,0x12,0x3b,0xf8,0x0,0x80,0x77,
+  0x3,0x98,0xd8,0x9c,0xff,0xbf,0x97,0xd1,0x43,0x12,0xce,0xbf,0x17,0x89,0x6f,0x7f,
+  0x61,0xbd,0x17,0xf8,0xff,0x3,0x0,0x1,0x73,0x90,0x85,0x53,0x4c,0x7b,0xb5,0x0,
+  0x0,0x0,0x0,0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82,
+    // /Users/zhenkai/Develop/mumble-1.2.3/src/actd/images/priv.png
+  0x0,0x0,0x25,0x75,
+  0x89,
+  0x50,0x4e,0x47,0xd,0xa,0x1a,0xa,0x0,0x0,0x0,0xd,0x49,0x48,0x44,0x52,0x0,
+  0x0,0x0,0x80,0x0,0x0,0x0,0x80,0x8,0x6,0x0,0x0,0x0,0xc3,0x3e,0x61,0xcb,
+  0x0,0x0,0x0,0x4,0x67,0x41,0x4d,0x41,0x0,0x0,0xd9,0x4,0xdc,0xb2,0xda,0x2,
+  0x0,0x0,0x20,0x0,0x49,0x44,0x41,0x54,0x78,0x9c,0xed,0x9d,0x79,0x8c,0x1f,0xc7,
+  0x95,0xdf,0x3f,0xd5,0xbf,0x39,0x39,0x1c,0xce,0xc1,0xfb,0x1e,0x91,0x14,0x69,0x71,
+  0x74,0x50,0x90,0x2c,0x59,0xb2,0x2d,0x4a,0xb6,0xbc,0xb1,0xd6,0xe,0x56,0x30,0x12,
+  0x39,0x48,0xb2,0x91,0xec,0x3f,0xb2,0x41,0xa2,0x95,0xd7,0x8,0xb0,0x48,0x90,0x20,
+  0x36,0x84,0xfd,0x63,0x81,0x24,0xd0,0x6e,0x6c,0x63,0xbd,0xb0,0x1,0x59,0xd9,0xec,
+  0xae,0x9c,0xdd,0xb5,0x4,0x45,0x96,0x2c,0xaf,0x6c,0xc9,0x92,0x2c,0x91,0xba,0x45,
+  0x8b,0x14,0xcf,0xe1,0x70,0x44,0x72,0x38,0xc3,0x21,0xe7,0xe4,0x5c,0xbf,0xa3,0xf3,
+  0x47,0x77,0x75,0xbf,0xaa,0xae,0x3e,0x7e,0x43,0x4a,0xb6,0x35,0x7c,0x40,0x4f,0x77,
+  0x57,0x55,0x57,0xbd,0x7a,0xef,0x5b,0xef,0xbd,0xaa,0xae,0x5f,0xf,0x5c,0xa6,0xcb,
+  0x74,0x99,0x2e,0xd3,0x65,0x5a,0xa4,0xa4,0x2e,0x71,0x3d,0xf2,0xac,0x1c,0xf9,0x97,
+  0xa9,0x18,0xf9,0xd6,0xb5,0x6f,0xa5,0xfb,0x5c,0x22,0xba,0x18,0xc5,0x48,0x65,0x7b,
+  0x80,0xf7,0xd7,0xbf,0xc3,0xae,0x25,0xcd,0xdc,0xde,0x8,0xd7,0x2a,0x8f,0xcd,0x17,
+  0xcf,0xde,0x65,0xf2,0x6b,0x9c,0x28,0xc3,0xbe,0xe9,0x39,0x9e,0xff,0x57,0x3f,0xe5,
+  0x6d,0xa0,0x16,0x1e,0x97,0x4,0xc,0xb,0x1,0x80,0x1e,0xdd,0x1e,0xe0,0xfd,0xaf,
+  0xdd,0x6c,0xb9,0xa2,0x83,0x3f,0x6c,0xf2,0xf8,0x62,0xeb,0xca,0xd,0x9b,0xda,0x7b,
+  0xae,0x63,0xe9,0xc6,0x5e,0x9a,0x3a,0x57,0xd3,0xb6,0x61,0x27,0xaa,0xa1,0x11,0x85,
+  0x2,0x15,0x3e,0xa6,0x48,0xdc,0x13,0xde,0x47,0xe9,0x2a,0x64,0x2b,0x2c,0xa3,0xc4,
+  0xbd,0xd2,0xcf,0x89,0x67,0x95,0xac,0x2b,0xba,0xd6,0xcf,0x62,0xdc,0x9b,0xed,0x63,
+  0xb6,0x9b,0x56,0xde,0xc1,0xab,0xc1,0x73,0xc4,0xab,0x94,0x68,0x7d,0xa2,0x75,0x95,
+  0x9e,0x3a,0x79,0x80,0xb9,0x91,0xf7,0x99,0x3c,0xb1,0x8f,0x91,0xd7,0x7f,0xcc,0xe4,
+  0xc0,0x81,0x81,0xf9,0x1a,0x4f,0x1e,0x1f,0xe7,0x5b,0xf,0xfc,0x82,0x3e,0x4c,0x30,
+  0x2c,0x8,0x8,0xf5,0x70,0xa9,0xcb,0x7a,0x40,0xe9,0xa1,0xdb,0xd8,0xba,0xad,0x93,
+  0xff,0xba,0x64,0x49,0xeb,0xbf,0xec,0xba,0xea,0x53,0x74,0xf6,0xee,0x66,0xd9,0xfa,
+  0xab,0x68,0xeb,0x5e,0x4f,0x63,0x6b,0x3b,0x1e,0xc4,0x8a,0x4b,0x8,0x8f,0xf8,0x2c,
+  0xf3,0x8a,0xa4,0xa7,0xe6,0xeb,0x3f,0x56,0x7a,0x74,0x6f,0xd7,0x95,0xf6,0xbc,0x75,
+  0x5d,0x88,0xc7,0x8c,0xf6,0x12,0x6d,0xdb,0x75,0xe7,0x93,0x1f,0x3e,0x72,0xe1,0xcc,
+  0x31,0xce,0xbc,0xf0,0xd7,0x9c,0x7c,0xe6,0x2f,0x98,0x1a,0x1f,0xff,0x9b,0xa3,0x63,
+  0xfc,0xc9,0xd7,0x5f,0xe0,0x18,0x50,0x25,0x0,0x42,0x54,0xbc,0x28,0x15,0xe5,0x44,
+  0xf,0xbb,0x12,0xd0,0xf0,0xa3,0x2f,0xf2,0xb5,0xf6,0xb6,0xe6,0xff,0xd4,0xb5,0xfd,
+  0x96,0x8e,0xe5,0xd7,0xde,0x49,0x77,0xcf,0x75,0xb4,0x2f,0xdf,0x10,0xf6,0xcd,0x12,
+  0x72,0x5e,0x9a,0x1,0xe,0xac,0xfc,0xc,0xc1,0x27,0xea,0x4d,0xab,0x3,0x91,0x96,
+  0x6,0xe,0x21,0x86,0xc2,0x40,0x4b,0x49,0x73,0x82,0x23,0xa5,0x2d,0x67,0xfb,0x76,
+  0x19,0x93,0x7c,0xa0,0x3c,0x3d,0xce,0xfb,0x4f,0x7f,0x9b,0x13,0x4f,0x7d,0x7b,0x7c,
+  0x7c,0x6c,0xfc,0x4f,0xbf,0xf4,0x24,0x7f,0xe,0x54,0x8,0x80,0x50,0x97,0x35,0x28,
+  0x2,0x0,0x45,0x30,0xea,0x1b,0xfe,0xe0,0x3a,0x56,0xdc,0xb9,0xc1,0xfb,0xf6,0xaa,
+  0x55,0x2b,0xee,0x5e,0xf5,0x89,0x2f,0xb1,0x72,0xfb,0x2d,0x74,0xad,0xd9,0x8a,0x57,
+  0x6a,0x74,0x28,0x2c,0x63,0xd4,0xe7,0x29,0x37,0x6d,0x84,0x39,0x95,0x93,0x6,0x6,
+  0xbb,0xee,0x82,0xa3,0x38,0xb,0x20,0x45,0x40,0x61,0xb7,0x9f,0x6,0xb0,0x3c,0x4b,
+  0xe1,0xaa,0x4f,0xd4,0xe5,0x3,0x73,0x93,0xe7,0x38,0xf0,0x9d,0xaf,0xd2,0xf7,0xea,
+  0xcf,0x1e,0x7f,0xf6,0x64,0xed,0xfe,0xbf,0x7c,0x87,0x11,0x2,0x20,0xc8,0x18,0x21,
+  0x93,0xf2,0x0,0xa0,0x47,0x7d,0xe9,0xbe,0x5e,0x56,0xdd,0xb3,0x8d,0xa7,0x3a,0x37,
+  0x5f,0x75,0xf5,0xca,0x1b,0xbe,0xc0,0xfa,0x1d,0xb7,0xd2,0xda,0xb1,0xca,0xea,0x64,
+  0x78,0x3d,0x7b,0x1,0xca,0x33,0x50,0xab,0x9a,0x1d,0x4a,0x13,0x60,0xc2,0xa,0xe8,
+  0x8e,0xe7,0x8c,0x1a,0x5b,0x68,0x4e,0x10,0x39,0xf2,0x5d,0xc2,0x56,0xd6,0x39,0x2a,
+  0x92,0x3,0x46,0x17,0x5f,0xae,0xf2,0xd1,0x29,0xb,0x28,0x56,0x7a,0xa9,0x1,0x5a,
+  0x96,0xc2,0x92,0x4e,0xa7,0x1c,0x7c,0x5,0x35,0x14,0x27,0x9f,0xfe,0xe,0x7,0x7e,
+  0xf0,0xc7,0xef,0xfe,0xdf,0xa3,0xfc,0xee,0xf,0xf6,0x33,0x4c,0x60,0x9,0xb4,0x35,
+  0xc8,0xa4,0x86,0x8c,0x3c,0xad,0xfc,0x86,0xdf,0xdf,0x19,0x28,0xbf,0x63,0xc3,0x95,
+  0xbd,0x6b,0x6e,0xfc,0xa7,0x6c,0xde,0xfe,0x9,0xbc,0xb6,0x2e,0xa8,0x96,0x83,0x62,
+  0xb5,0x1a,0xcc,0x4e,0xc2,0x85,0xd1,0x40,0xf9,0xa9,0xe8,0x4d,0x76,0xc2,0x29,0x8c,
+  0xc4,0xb3,0xae,0x72,0x59,0x79,0x19,0x69,0x4e,0x73,0xef,0xe0,0xcd,0xd5,0x7e,0x9e,
+  0xc9,0x4f,0x54,0xb3,0x90,0x7e,0x39,0x78,0x52,0xc0,0x92,0xe,0xe8,0x5c,0x3,0x4b,
+  0x97,0x7,0xc0,0x8,0x1f,0x2b,0xa1,0xd8,0xf8,0xf9,0x7f,0x47,0x53,0xc7,0xca,0xab,
+  0x1b,0xbe,0xf7,0xc0,0xd3,0x55,0x7f,0xf2,0x77,0xff,0xea,0x0,0xc3,0xe1,0xc3,0xb9,
+  0x20,0x28,0xa5,0xa4,0x2b,0x42,0xb3,0xf,0xb4,0xfc,0x97,0x9b,0xbc,0xef,0xaf,0xdc,
+  0xd0,0xf3,0xa9,0x35,0x3b,0x6f,0x63,0xf3,0x35,0x9f,0xa1,0xd4,0xb2,0x14,0xfc,0x1a,
+  0x54,0x2b,0x30,0x71,0x16,0xce,0xbd,0x1f,0x28,0xbf,0x3c,0xf,0xbe,0x98,0x9d,0x18,
+  0xd7,0x9a,0x15,0xc1,0x8f,0xb2,0xa7,0xb8,0xae,0xe9,0xae,0x7e,0x36,0x4c,0xf3,0x65,
+  0xbd,0x82,0x74,0x7a,0x5a,0xfb,0xfa,0xac,0x1c,0x69,0xbe,0xd5,0x86,0xc1,0x8f,0x9d,
+  0xe7,0xea,0x97,0xab,0xad,0x2,0x7d,0x8d,0xea,0x2d,0xd0,0xc6,0xfc,0x2c,0x4c,0x8e,
+  0xc0,0xe8,0x60,0x60,0x59,0x9b,0x97,0x4,0x8,0xf0,0x7d,0x94,0xef,0xb3,0x64,0xc3,
+  0x55,0xb4,0x6f,0xea,0x5d,0xd5,0xfc,0xee,0x8f,0xb6,0xfd,0xfd,0x11,0xff,0x9,0xa,
+  0xba,0x1,0x17,0x0,0x42,0xdb,0x4b,0x23,0xd0,0xfc,0x7f,0x7e,0x87,0xaf,0xaf,0x5d,
+  0xb1,0xec,0xf,0x96,0xef,0xb8,0x95,0x6d,0xd7,0xdf,0x45,0xa9,0xa5,0x3d,0x60,0x6e,
+  0x66,0x12,0xce,0x9e,0x80,0x99,0x29,0xa8,0xf9,0x42,0xb9,0x19,0xca,0x4b,0x3,0x85,
+  0xef,0x12,0x54,0xa,0x18,0x8c,0x67,0x5d,0x6d,0x38,0xae,0xf3,0x40,0x81,0x1f,0x8e,
+  0x38,0x17,0x28,0x84,0x64,0x7c,0xc1,0x9b,0x6c,0xdf,0xae,0x2f,0x1,0xa8,0x14,0x80,
+  0xb8,0xfa,0x6a,0x3,0xca,0xae,0xc3,0xaf,0xc1,0xf4,0x38,0x8c,0x9d,0x81,0xc6,0x56,
+  0x68,0x6a,0x1,0xdf,0xc7,0xf3,0x7d,0x9a,0xd7,0x6c,0xa1,0xad,0xa9,0x61,0xc7,0x4d,
+  0x53,0x2f,0xce,0xfe,0xe8,0x18,0xaf,0x85,0x15,0xd7,0xc8,0xa0,0x34,0x0,0x34,0x0,
+  0x4d,0x7f,0x74,0x3d,0x3b,0x76,0xae,0x54,0x8f,0x2c,0xdf,0x71,0x73,0x69,0xeb,0x8e,
+  0x5b,0x69,0x59,0xb1,0x1,0xfc,0x2a,0x8c,0xf,0xc1,0xc4,0x48,0xc0,0x4c,0x42,0x78,
+  0x60,0xa,0x4f,0xb,0xac,0xc8,0xa8,0x49,0x11,0x7c,0x34,0x72,0x53,0xca,0xe7,0xa,
+  0xcf,0x71,0x9d,0xd6,0xbe,0x61,0x2d,0x1c,0x69,0x46,0xbf,0xec,0x3e,0x66,0xf4,0x2b,
+  0x73,0x30,0xe4,0xf4,0xd5,0x6,0x94,0xef,0x7,0x56,0x60,0x72,0x4,0xca,0xb3,0xd0,
+  0xd6,0x19,0x80,0x0,0x9f,0x25,0x57,0x5c,0xcf,0xf4,0xb1,0xbd,0x9f,0xec,0x98,0x7e,
+  0xff,0xf1,0x3d,0x67,0x18,0x25,0x5e,0x2b,0x70,0x92,0xd,0x0,0x6d,0xfa,0x1b,0x81,
+  0x25,0xff,0xf1,0x6,0xfe,0x74,0xc5,0xba,0xcd,0x57,0xaf,0x5f,0xb3,0x8d,0x95,0x3b,
+  0x6f,0xb,0x4c,0xfe,0xe8,0x69,0x98,0x9b,0x5e,0x80,0xf0,0xb0,0x84,0x97,0x83,0x7c,
+  0xa7,0xf0,0x72,0x4,0x55,0x64,0x34,0xd6,0xe3,0x42,0xa,0xf5,0x4b,0xf0,0xe6,0x72,
+  0x21,0x79,0xd6,0x20,0xca,0xb3,0xdb,0xb5,0xae,0xd3,0x5c,0xc8,0xec,0x14,0x4c,0x9d,
+  0x87,0xf6,0x6e,0x94,0x52,0x28,0xcf,0xa3,0x73,0xeb,0xf5,0x25,0x6f,0xdf,0xe3,0xcb,
+  0x1f,0x3d,0x30,0xfb,0x13,0xcc,0x35,0x82,0x4,0xd9,0x0,0x88,0xfc,0xfe,0xbf,0xbd,
+  0x9a,0x8f,0xdd,0xb8,0xb6,0xf4,0x3f,0xdb,0x57,0x5f,0xc1,0x95,0xd7,0x7e,0xe,0xaf,
+  0xa5,0xd,0xc6,0x86,0xa1,0x32,0x9f,0x14,0x9a,0x7d,0xbd,0x10,0x50,0x48,0xf3,0x2a,
+  0x5,0x95,0x2b,0xbc,0x2,0x82,0x72,0xf1,0xb4,0x50,0x50,0x5c,0x72,0x17,0x92,0xd6,
+  0x2f,0x57,0x5b,0x29,0x7d,0xad,0xcc,0xc3,0x85,0x31,0x58,0xb6,0x2,0xf,0x1f,0xd5,
+  0xda,0x81,0x3f,0x36,0xb0,0xb3,0x7a,0xea,0x57,0x8f,0xbf,0x31,0xcc,0x79,0x32,0xd6,
+  0x7,0x24,0x0,0x74,0xd4,0xdf,0x8,0x2c,0x79,0x60,0x57,0xe9,0xc1,0xee,0xee,0xce,
+  0xde,0x8d,0x5d,0x6b,0xe9,0xbc,0xea,0x53,0x30,0x35,0x6,0x95,0x39,0x7,0xf3,0x8e,
+  0xeb,0x2c,0x1f,0x96,0x2b,0x3c,0x5d,0x87,0x4e,0x12,0x2,0x4b,0x8,0xcf,0xd5,0x6,
+  0x49,0xfe,0xb2,0xe2,0x8a,0x8b,0x71,0x21,0xb2,0xf,0xae,0x6b,0x1b,0x14,0x2e,0x4b,
+  0xe6,0x2,0x45,0xa6,0x6b,0x74,0xf1,0xe,0x54,0xca,0x50,0x9e,0xb,0x66,0xb,0xa,
+  0x9a,0x96,0x6f,0x60,0x76,0xcf,0xdf,0xb6,0x3f,0x7e,0xcc,0xff,0x29,0x19,0x6b,0x3,
+  0xf6,0x34,0xd0,0x3,0x9a,0x80,0xd6,0xce,0xd6,0xda,0x9d,0xa5,0x96,0xa5,0xac,0x5c,
+  0x7f,0x55,0x60,0x66,0xe6,0xc5,0xf4,0x4e,0x9f,0x7d,0xe2,0x29,0x8c,0x9f,0x32,0x85,
+  0x8a,0x3a,0xe9,0xc8,0x73,0x4d,0xa1,0xec,0xe9,0x52,0x54,0xaf,0x1f,0x5f,0xeb,0x48,
+  0x3e,0xb7,0x7d,0xc1,0x67,0x62,0x7a,0xe5,0xc7,0xd7,0xbe,0xa3,0x7d,0xe7,0xb3,0x36,
+  0x6f,0xbe,0x79,0x5d,0x57,0xbf,0x64,0x1b,0xb2,0x5f,0xa2,0xbf,0x69,0xfd,0x72,0xf5,
+  0x5b,0x29,0x18,0x1f,0x86,0xd6,0x76,0x4a,0x6d,0x5d,0x34,0xaf,0xd8,0xcc,0xd6,0x4f,
+  0xdc,0x79,0x27,0x3f,0x7d,0xa6,0x15,0x98,0x27,0x5e,0x29,0x34,0x48,0x5a,0x80,0x48,
+  0xf9,0xff,0x7e,0x57,0xe3,0xee,0xde,0x15,0xde,0xbf,0x5e,0xd1,0xdc,0xca,0xfa,0x6b,
+  0x3e,0x13,0xcc,0xf7,0x6d,0x13,0xbd,0x10,0xff,0x6b,0xd3,0xa5,0x74,0x21,0xf8,0xc9,
+  0xf2,0x85,0x5d,0x88,0xa0,0xf,0x3a,0xae,0x70,0xf5,0xd1,0x39,0x35,0x85,0xa4,0xec,
+  0x1c,0xd6,0xc2,0xae,0x77,0x7a,0x1c,0xd5,0xbe,0x1c,0xdf,0x2b,0x51,0x1e,0xe9,0x6f,
+  0x9d,0x3d,0xf1,0xc6,0xab,0x6f,0x9e,0xa9,0xd,0x60,0x2e,0x15,0x47,0xa4,0x2d,0x80,
+  0xe,0xfe,0x4a,0x40,0xd3,0x8e,0xae,0xda,0xad,0xb3,0xb5,0x6,0xba,0x4a,0x4d,0xc1,
+  0xa2,0x43,0xb5,0x12,0xb7,0xaf,0x14,0xce,0xd1,0x8,0xee,0xd1,0x58,0x64,0x44,0xb9,
+  0x46,0x92,0xcb,0x52,0x48,0xe4,0xdb,0x8b,0x32,0xc6,0x88,0x92,0xcd,0xfb,0x66,0x79,
+  0xc9,0x5f,0xd6,0x88,0x42,0xf0,0x14,0x59,0x1c,0x57,0xbf,0x64,0xbb,0x59,0xb,0x45,
+  0x82,0xec,0x3e,0xba,0xfa,0x65,0xe4,0x67,0x58,0x32,0xdf,0xb2,0x64,0xb5,0x1a,0x8c,
+  0xe,0xe2,0x75,0xae,0xa5,0xb4,0x62,0xb,0x57,0x2c,0xad,0xdd,0xa,0xbc,0x48,0xa0,
+  0x5b,0xf,0xb,0xf6,0xd2,0x5,0x94,0xc2,0xfb,0xe6,0x8e,0x26,0x7f,0x67,0xa5,0x5a,
+  0xa3,0x61,0x66,0x26,0x58,0xdc,0x91,0x7d,0xc8,0x14,0x5e,0x54,0x48,0xe8,0xdd,0xc1,
+  0x7c,0x11,0xe1,0xe5,0x99,0xd7,0xba,0x85,0x27,0xcc,0x6b,0x96,0xb,0x91,0xca,0x4b,
+  0x80,0xd6,0x5,0x8a,0x94,0xf2,0x59,0xae,0xe9,0x3,0x73,0x21,0x61,0xd1,0xb1,0x61,
+  0xbc,0xa5,0xdd,0x4c,0x9c,0xe9,0x67,0x59,0x93,0xbf,0x13,0x68,0x26,0xd0,0x6d,0x9,
+  0xcb,0xd,0x48,0xb,0xa0,0x8,0x2,0xc0,0xa6,0xb6,0x86,0x5a,0x77,0xb5,0xea,0x53,
+  0x3a,0x3f,0x14,0x4c,0xfb,0x3a,0x57,0xbb,0x19,0x28,0x24,0x3c,0x87,0xe0,0xb3,0x40,
+  0xf1,0xa1,0xc4,0x15,0x56,0x7b,0x92,0xb7,0x5f,0x57,0x5c,0x61,0x5f,0xc3,0xc2,0x41,
+  0x51,0xad,0xe1,0x4d,0x8c,0x30,0x33,0x33,0xc3,0x12,0xaf,0xd6,0x4d,0xe0,0xda,0x1b,
+  0x89,0xf5,0x9c,0x6a,0x1,0x4a,0x40,0xa3,0xef,0xe3,0x29,0x5,0x95,0xaa,0xf,0xc3,
+  0xfd,0xd0,0xb1,0x4a,0x72,0x25,0x2e,0x8b,0x98,0x52,0x7,0xf3,0x2e,0x50,0x18,0xf5,
+  0x7c,0x40,0x2e,0xa4,0x5e,0x50,0x48,0x85,0x66,0xb6,0xef,0xe0,0x5d,0x39,0xfa,0x98,
+  0xd5,0x2f,0xe3,0xd9,0x3a,0x41,0xe1,0xb0,0x82,0x6a,0xea,0x1c,0x13,0x43,0x27,0xf0,
+  0xe3,0x75,0x1d,0xad,0x5f,0x83,0x5c,0x31,0x40,0x49,0xd7,0x32,0x5f,0x23,0x58,0xee,
+  0xdd,0x76,0x63,0xca,0xa8,0x15,0x4c,0xb9,0x90,0x9f,0x39,0x6a,0x32,0x5c,0x88,0x13,
+  0x14,0xb2,0xdd,0x2,0xc2,0x73,0x80,0x62,0x74,0xa8,0xcf,0xb4,0x52,0x96,0x72,0xbb,
+  0xd6,0x6c,0x13,0xb7,0x45,0x5c,0x88,0x4a,0xf6,0xbb,0xee,0xb8,0xc2,0xd1,0x9f,0x3c,
+  0xeb,0x5a,0x0,0xf8,0xb3,0x27,0xde,0xc3,0x6b,0x6c,0xd6,0x10,0xd6,0x7a,0xf5,0xc0,
+  0x54,0x9e,0xed,0x2,0x3c,0xa0,0x54,0xf5,0x51,0xa5,0xb0,0x6f,0xb3,0x43,0x27,0x68,
+  0xa9,0xd5,0xcc,0x86,0x9d,0x1,0x9a,0xe8,0xe4,0xc5,0x4c,0x65,0x12,0x79,0x82,0xdb,
+  0x3a,0x5c,0xc8,0xe4,0xe8,0x20,0x67,0x4f,0x1e,0x60,0x74,0xa8,0x2f,0x50,0x7c,0x1d,
+  0xd4,0xb5,0x66,0x2b,0x5d,0x6b,0xb6,0xb1,0x72,0xd3,0xd5,0xb4,0x77,0xaf,0x77,0xf0,
+  0x2e,0xfa,0xf7,0x61,0x4d,0x4d,0xeb,0x8c,0x2b,0xe6,0x2f,0x4c,0x52,0x99,0x1a,0x5,
+  0x3f,0x2,0x80,0x56,0xbe,0x13,0x0,0xa2,0x25,0x3c,0x81,0x6b,0xe6,0xe7,0xe6,0x68,
+  0xb9,0x30,0x16,0x2c,0x30,0x64,0x29,0xd4,0xc9,0x4c,0x6,0x28,0x64,0xfe,0x25,0x71,
+  0x21,0x1,0xd7,0x83,0x7d,0x6f,0x31,0x70,0xe8,0x65,0x26,0x47,0x7,0x59,0x28,0x8d,
+  0x9e,0x39,0xc6,0xe8,0x99,0x63,0xf4,0xbd,0xfd,0xc,0xed,0xdd,0xeb,0xd8,0xb4,0xf3,
+  0x36,0xd6,0x6e,0xbd,0x11,0x53,0x76,0x5,0x5c,0x88,0xf2,0x93,0xe5,0x9d,0xfe,0xdf,
+  0x65,0xc9,0xe4,0xa3,0x5,0x5c,0x88,0x55,0x6f,0xf9,0xfd,0x43,0xcc,0x8f,0xe,0x52,
+  0x8b,0x7,0xb6,0x65,0xb6,0x3,0x92,0x0,0x50,0xe2,0x88,0xa8,0x5c,0x3,0xc6,0x86,
+  0xa0,0xb5,0xdd,0x6d,0xca,0xb2,0x14,0x2a,0xaf,0xb3,0x5c,0x88,0xb3,0x8e,0xfc,0x4e,
+  0xca,0xbc,0xd1,0xe1,0xe3,0x1c,0x7e,0xeb,0x69,0x43,0xf1,0xed,0x3d,0xbb,0xe8,0xba,
+  0xfa,0x76,0xda,0x7b,0xae,0xa3,0x65,0x55,0xf,0x45,0x68,0x76,0xb8,0x9f,0xc9,0xfe,
+  0x77,0x18,0x7d,0xf7,0x79,0x26,0xfb,0xdf,0x66,0xf2,0xfc,0x69,0xf6,0xbf,0xf4,0x28,
+  0x3,0x7,0x5e,0x60,0xe7,0xad,0x5f,0xa6,0xbd,0x7b,0x5d,0xb2,0x3f,0x89,0xa9,0x69,
+  0x6,0x28,0x80,0xc4,0xd4,0xf4,0x92,0xc7,0x15,0x30,0x5f,0x2e,0xe3,0xd7,0x2a,0x32,
+  0x23,0xa1,0x5b,0x30,0x5d,0x80,0x45,0x81,0xed,0x98,0xaf,0x11,0xbc,0xfd,0x5b,0xbd,
+  0xc5,0x64,0x30,0xcb,0x94,0xb9,0x62,0x2,0x97,0xf,0xd3,0xd7,0xce,0xb8,0x22,0xa5,
+  0x93,0x8e,0xf6,0xfb,0xf6,0xff,0x82,0xbe,0xfd,0xcf,0x7,0x1d,0x6a,0xeb,0x64,0xd3,
+  0x17,0xff,0x88,0x75,0xb7,0xdf,0x5b,0x58,0xe9,0x6,0xf5,0xc2,0xda,0xf0,0x72,0x76,
+  0xb8,0x9f,0xd3,0xcf,0x3f,0xc2,0xc0,0x93,0x7f,0xc6,0xe4,0xf9,0xd3,0xec,0x7d,0xf2,
+  0x21,0xb6,0x5c,0xf7,0x39,0xb6,0x5c,0xfb,0x39,0x77,0x30,0x76,0x49,0xa6,0xa6,0x2a,
+  0x5d,0x76,0x75,0xc4,0x15,0xe5,0xb3,0xef,0x53,0x2b,0xcf,0xb9,0x7a,0x98,0xe9,0x2,
+  0xcc,0x52,0xa,0xca,0x3e,0xc1,0xfb,0x67,0xfd,0x42,0xc9,0xb9,0x28,0x91,0x85,0x5a,
+  0x44,0x5e,0x86,0x42,0xeb,0x8e,0x2b,0x82,0xca,0xf,0xbc,0xfe,0x4,0xa7,0xfb,0xdf,
+  0x1,0x60,0xcb,0x97,0xbf,0xc9,0xa6,0x2f,0x7c,0x8d,0x86,0xb6,0xce,0xb4,0x6e,0xd5,
+  0x45,0x2d,0xab,0x7a,0xd8,0x72,0xcf,0x37,0xd8,0xf4,0x85,0xaf,0x31,0xf0,0xe3,0x3f,
+  0xa7,0xef,0x87,0xdf,0xa4,0xef,0x9d,0x7f,0x64,0x76,0xf2,0x3c,0x3b,0x6f,0xf9,0xe7,
+  0x26,0xcf,0x90,0x32,0x6d,0xc3,0xd,0x86,0x84,0xec,0x44,0xff,0x2e,0x32,0xae,0x98,
+  0x2b,0x57,0x60,0x7e,0x86,0xb9,0x73,0x27,0x73,0xfb,0x98,0xb5,0x25,0x2c,0xa2,0xb9,
+  0xa9,0x9,0x9a,0x5d,0x6f,0xa6,0x5c,0x4c,0xd5,0x1b,0xd,0x5b,0xa,0x35,0x9e,0x95,
+  0xd7,0xe,0xb3,0x7a,0xe0,0xf5,0x27,0x38,0x7d,0x62,0x1f,0xed,0x3d,0xbb,0xd8,0xf9,
+  0x87,0xf,0xd3,0xde,0xb3,0xab,0x48,0x77,0xea,0xa6,0x86,0xb6,0x4e,0xb6,0xdc,0xf3,
+  0xd,0x56,0xde,0xf4,0x7b,0x1c,0xf8,0xd6,0x57,0x38,0xdd,0xf7,0x6,0x0,0x3b,0x6f,
+  0xf9,0x67,0xd9,0xbc,0x6b,0xfa,0x90,0xa7,0xa6,0x95,0x4a,0x25,0xce,0x76,0x7a,0x7e,
+  0xd1,0xb7,0xac,0x4c,0xfd,0x6c,0x65,0xec,0xac,0x0,0x80,0x64,0x30,0xb,0x14,0x92,
+  0xc1,0xa2,0x7e,0x5d,0x57,0xe7,0x72,0x21,0x66,0x1d,0x87,0xf7,0x3d,0xcb,0xe9,0x13,
+  0xfb,0x58,0x77,0xc7,0x7d,0x6c,0xff,0xca,0x43,0x97,0x6c,0xd4,0x67,0x51,0x7b,0xcf,
+  0x2e,0x6e,0x78,0xf0,0x39,0xe,0x3f,0xfc,0x75,0x4e,0x3f,0xf7,0x3,0x1a,0x1a,0x9b,
+  0xd9,0x7e,0xc3,0x17,0x30,0x99,0xcf,0xb2,0x90,0x8e,0x69,0x9b,0xcc,0xcf,0x8c,0x2b,
+  0x64,0xdd,0x19,0x2e,0x4,0xc5,0x7c,0x79,0x1e,0x35,0x7c,0x1c,0xa5,0x82,0xe8,0x2f,
+  0x8b,0xa,0x59,0x80,0x6a,0x79,0x2e,0xd8,0x81,0x52,0x74,0x6e,0x1a,0x51,0xc6,0xb4,
+  0x2d,0xcb,0x94,0xe9,0x7c,0x99,0xac,0x85,0xe7,0xc3,0xd9,0xc1,0xc3,0xc,0x1c,0x7d,
+  0x8d,0x75,0x77,0xdc,0xc7,0xce,0xfb,0x1f,0x2e,0xd2,0x85,0x4b,0x46,0xd,0x6d,0x9d,
+  0x51,0x9b,0x3,0xcf,0xfd,0x80,0xae,0x55,0x3d,0xac,0xdc,0x70,0x95,0xbb,0x8f,0xae,
+  0xd1,0xed,0x1c,0xc,0x21,0x5d,0xa2,0xb8,0xa2,0x5c,0xae,0x50,0x94,0xa,0x1,0x60,
+  0xb6,0xa,0xcb,0xa6,0xc7,0xa1,0x75,0x99,0x68,0x3f,0x2d,0x28,0x71,0x31,0xef,0x0,
+  0x85,0xcd,0xbc,0x22,0xbd,0x93,0x51,0xbe,0xa2,0x52,0x9e,0x63,0xff,0x1b,0x3f,0x66,
+  0xe5,0x4d,0x77,0x7f,0xe8,0xca,0x97,0xb4,0xf3,0xfe,0x87,0x29,0x5f,0x18,0xe3,0xf0,
+  0x9b,0x4f,0xd1,0xb5,0xaa,0x87,0x86,0xa6,0x16,0x12,0x71,0xa,0xa2,0x5f,0x29,0xeb,
+  0x15,0xc1,0xb5,0x6b,0x30,0xe8,0xaa,0xea,0x8f,0x2b,0xaa,0x13,0xe7,0xa,0xf7,0x23,
+  0xd3,0x42,0x68,0x17,0xe2,0x3,0x4c,0x4f,0x80,0x5f,0xb,0x8e,0x5a,0xcd,0xbc,0xae,
+  0xd5,0x2,0xb,0xe1,0xd7,0xcc,0xa3,0x56,0x8d,0xf3,0x13,0xaf,0x46,0x8d,0x5e,0x8a,
+  0xa3,0x66,0x9d,0xcd,0x63,0xe0,0xd8,0xeb,0x34,0x76,0xad,0xa5,0xf7,0xd7,0xa8,0x7c,
+  0x4d,0xbd,0xf7,0x3f,0xc,0x6d,0x9d,0xc,0x1c,0x7a,0xd9,0xea,0xbb,0xee,0x6b,0x2d,
+  0xd8,0x30,0x5b,0xf3,0x45,0x9e,0xde,0xa1,0x55,0x33,0xd3,0x8a,0xc8,0xce,0xbe,0xb6,
+  0x8f,0xf0,0xd9,0xea,0xc4,0x48,0x9e,0xeb,0x8f,0x28,0xcf,0x45,0x0,0xe1,0x5a,0x0,
+  0x61,0x27,0xb4,0x32,0x64,0x27,0x33,0x99,0xb7,0xe,0xfd,0xac,0xac,0xc3,0xb5,0xe,
+  0x0,0x22,0x3f,0xe8,0x78,0xa5,0x3c,0xc3,0xc0,0xb1,0x37,0xd8,0x79,0xff,0xc3,0x1f,
+  0x8a,0xcf,0xcf,0x23,0xed,0xe,0x6,0xe,0xed,0xa1,0x32,0x3f,0x63,0xf5,0xd3,0x56,
+  0xb2,0x54,0x9e,0xd,0xa,0x59,0xde,0x1,0x6,0x43,0xb6,0xd9,0xa0,0x98,0x9b,0x2f,
+  0x7,0x3b,0x86,0xb,0x52,0x2a,0x0,0x6c,0x4,0x55,0xab,0x36,0xe2,0x4,0xa3,0x9,
+  0x50,0xf8,0x71,0xa7,0x22,0xa5,0x8b,0x73,0xf4,0x9c,0x63,0x34,0x84,0xca,0x8e,0x40,
+  0x11,0x31,0xe2,0x73,0xf6,0xf4,0x51,0xba,0xae,0xbf,0x8b,0xae,0xde,0xdb,0xb,0x77,
+  0xf0,0x83,0xa6,0xae,0xde,0xdb,0xe9,0xba,0xfe,0xf3,0x9c,0x3d,0x79,0x10,0xc3,0x8a,
+  0x49,0xf0,0x26,0x80,0x20,0x2d,0xa9,0x5,0xa,0x9,0x8c,0x2c,0x50,0x48,0xf9,0xb,
+  0xbd,0xd4,0xaa,0x55,0x18,0x1d,0x2,0xa,0x4d,0x2,0x8a,0xcd,0x2,0x0,0x2a,0xe7,
+  0x4e,0x53,0xea,0x5a,0x4d,0xc2,0x37,0x43,0xc6,0xb4,0x2d,0x72,0x20,0xfa,0x81,0x30,
+  0x5d,0xf8,0xc8,0x68,0x8e,0x2f,0xf2,0x54,0xd2,0xaf,0x81,0x62,0xf8,0xcc,0x51,0x76,
+  0xfc,0xb7,0x67,0x73,0xba,0xe4,0xa0,0xe1,0x63,0xd0,0xf7,0x7a,0xf0,0xe3,0x15,0xbb,
+  0x67,0xb2,0xad,0xb6,0x2e,0xb8,0xe2,0x6,0x58,0xb5,0xa5,0xae,0xea,0x77,0x7c,0xe5,
+  0x21,0xe,0xfd,0xc9,0xe7,0x59,0xdb,0x73,0x8d,0x7b,0x1a,0xa8,0xc9,0x70,0x7f,0x5,
+  0x82,0xe1,0x8c,0x25,0xef,0xc4,0xb3,0x61,0x62,0x79,0xf0,0x18,0xea,0xc4,0xbe,0xc2,
+  0xbc,0x17,0xa,0x2,0x1,0xaa,0x35,0x69,0xb2,0x6d,0xa6,0x34,0x63,0x2a,0xd6,0xa7,
+  0x5c,0xd0,0x88,0x82,0x21,0xa1,0x70,0xa5,0x88,0xa6,0x7b,0x11,0x6,0x4,0x18,0x74,
+  0x9f,0x7c,0x15,0x1,0xa3,0xd2,0xbd,0xb1,0xbe,0xd5,0xbd,0xb,0xa3,0xf0,0xca,0xa3,
+  0x1,0x0,0xa2,0xa,0xe5,0xa5,0xad,0x2c,0x15,0x0,0x65,0xf5,0x16,0xb8,0xf9,0x9e,
+  0x0,0x10,0x5,0xa8,0x65,0x55,0xf,0x95,0xce,0xb5,0x4,0xa3,0xd5,0xd,0xde,0xc4,
+  0xdc,0x3d,0xb2,0x16,0x8e,0x1,0xe5,0x9c,0x42,0x12,0xc9,0x21,0x75,0x37,0xd6,0xfc,
+  0x2c,0xfe,0x9e,0xc7,0xb,0xf1,0xac,0x29,0xdb,0x5,0xa8,0xf8,0xa8,0xca,0xc0,0x23,
+  0x11,0xec,0xe8,0xe,0xa4,0x98,0xbf,0xc8,0xac,0xcb,0xb3,0xc3,0x34,0x1a,0xc1,0x1f,
+  0x46,0xbd,0xa3,0x23,0x27,0x59,0x77,0xc7,0xbd,0xc5,0x7b,0x36,0x7a,0xa,0x9e,0xfe,
+  0x1f,0x30,0x7c,0x34,0xae,0x48,0xf9,0xf1,0x11,0x35,0x60,0xcf,0x50,0x7c,0x18,0x3a,
+  0x6,0x3f,0xf9,0xb3,0x60,0x33,0x4c,0x41,0x5a,0x77,0xc7,0xbd,0x8c,0xe,0x9f,0x48,
+  0xba,0x41,0xed,0xea,0xa4,0x49,0x37,0x7e,0xab,0x21,0x82,0xdc,0x2c,0xdf,0x6f,0xf8,
+  0xff,0x14,0x17,0xb2,0xef,0x67,0x94,0xa7,0x46,0x23,0x9d,0x15,0x9,0x4,0xb,0xcd,
+  0x2,0x14,0x50,0xad,0xd9,0xcc,0xdb,0x11,0xbb,0x2b,0xdf,0x12,0xb4,0xef,0x7a,0x46,
+  0xa4,0x19,0xf1,0x82,0xf0,0x7f,0xd4,0xa8,0x94,0x67,0x59,0x79,0xd3,0xdd,0x5,0xba,
+  0x4,0xcc,0xcf,0xc0,0xb3,0xdf,0x11,0x3f,0x60,0x91,0xe0,0xb3,0x95,0x6f,0xf3,0x1f,
+  0x2,0xa4,0x3c,0x3,0x3f,0xff,0x6e,0x50,0x57,0x1,0xea,0xea,0xbd,0x9d,0x4a,0x79,
+  0x16,0x94,0xdd,0x77,0x7d,0x9b,0xa5,0x60,0x19,0xc,0x4b,0x7e,0x6b,0xee,0x80,0xda,
+  0xe5,0xff,0x87,0x8e,0xc1,0xa1,0x57,0xc,0x9d,0x15,0xa1,0x74,0x0,0x58,0x35,0x54,
+  0x35,0x3,0xb6,0x82,0x2c,0x45,0xb9,0x85,0x9a,0x6,0x1c,0x30,0x3a,0xad,0x1c,0x0,
+  0x51,0xc1,0xb9,0xd2,0xdc,0x56,0x3c,0xf2,0x7f,0xe3,0x31,0x98,0x9f,0xc6,0x10,0xa4,
+  0x61,0x9d,0xa4,0xc5,0xb1,0x2,0x4e,0x25,0xf8,0x2f,0x4f,0xc3,0x5b,0x4f,0x14,0x6a,
+  0xb2,0x65,0x55,0xf,0x95,0xc6,0x16,0x4b,0x36,0x22,0xc8,0x75,0xd,0x6,0xe7,0x8c,
+  0x41,0x80,0x41,0x59,0xa0,0x48,0xb3,0x6,0xf3,0xd3,0xf0,0xe2,0xa3,0x0,0xcc,0xd5,
+  0x4,0x53,0x5,0x50,0x50,0x68,0x1a,0x68,0x2c,0xd1,0xba,0xa6,0x70,0xc6,0xf6,0x68,
+  0x87,0x69,0xf7,0xa5,0x10,0x6c,0x25,0xd8,0xe5,0xe5,0x68,0x8d,0xe5,0xd6,0xb2,0x72,
+  0x73,0x21,0x56,0x99,0x9f,0x81,0xbe,0x57,0x30,0x5,0x6f,0x3,0xcb,0x21,0x50,0x97,
+  0x2,0x0,0x8e,0xbf,0x16,0x58,0x83,0x2,0xd4,0xb2,0x6a,0x73,0xb2,0x5e,0xd7,0x8c,
+  0xc7,0x5e,0xdf,0x88,0xfa,0x2d,0x47,0xbe,0x25,0xa7,0x84,0xdb,0xd5,0xa6,0xbf,0x6,
+  0x2f,0xfd,0x30,0xf8,0x8d,0xe0,0x2,0x28,0xdb,0x5,0x28,0x50,0x5e,0xf0,0x11,0xa6,
+  0xf9,0x6a,0x15,0x43,0x51,0x86,0x22,0xa5,0xf9,0x96,0xd7,0xc4,0x67,0x3b,0x6,0xd0,
+  0x23,0x24,0xe1,0xfb,0x25,0x8,0x62,0xc5,0x74,0xf5,0xee,0x2e,0xd6,0xa3,0xa1,0x23,
+  0x26,0xf,0x91,0x25,0x71,0x59,0x17,0x19,0x13,0x58,0x96,0x4b,0xa,0x7d,0xe8,0x58,
+  0x4a,0x63,0x26,0x5,0x3c,0xfa,0x98,0xc1,0xb1,0x63,0xc4,0x1b,0x56,0xc2,0xd1,0xae,
+  0x4,0x86,0xcb,0x9a,0xfa,0xc2,0xe2,0x1e,0xf8,0x45,0xb0,0x6d,0xf,0xa8,0xfa,0x5c,
+  0x42,0x17,0x0,0x21,0x2,0x10,0x7b,0x84,0x6a,0xc2,0xc7,0xc5,0xe6,0x39,0x3a,0x53,
+  0xb5,0x7c,0x60,0x78,0x1d,0xa5,0x9,0x81,0x18,0x24,0x2d,0x89,0x3d,0x3a,0x6c,0x97,
+  0x91,0x43,0xa3,0x27,0x1d,0x6d,0xc9,0x51,0x26,0x4,0xef,0x3b,0x78,0x75,0x5,0x85,
+  0x63,0xa7,0x8a,0xb5,0x6d,0xb4,0xe9,0x52,0xb2,0xc3,0xf2,0xd8,0xa3,0xdb,0x7e,0x56,
+  0x6,0xda,0x3e,0xa6,0xb5,0x3a,0x75,0x8,0xe,0xbc,0x18,0xb5,0x5c,0xb5,0x44,0x74,
+  0x51,0xeb,0x0,0xa,0x2,0xc5,0x47,0x37,0x50,0xf3,0xfd,0x0,0x31,0xd2,0x25,0x44,
+  0xf3,0x7a,0xd9,0x94,0xbe,0xb7,0xe6,0xf9,0xb2,0x32,0xe3,0x6c,0xb1,0x19,0x65,0xd9,
+  0xf5,0x16,0xa1,0x50,0x60,0xca,0xc7,0xb9,0xbd,0xca,0x66,0xc3,0x9e,0x9b,0x27,0xa6,
+  0x87,0xf6,0x5a,0x46,0x81,0xb6,0x8d,0x67,0x65,0xa3,0x79,0x55,0xfa,0x22,0xdd,0x7e,
+  0xd6,0x9a,0x22,0x8e,0xf,0xc3,0x5b,0x3f,0xe,0x74,0x24,0x67,0x62,0x75,0x52,0xf6,
+  0x3a,0x40,0x64,0x4f,0x14,0x5c,0x38,0x47,0xa5,0x5a,0xa5,0xa9,0xa1,0xe4,0x10,0x22,
+  0x96,0x8e,0x95,0xa5,0x4,0x5f,0xcc,0xe9,0xc3,0x34,0xb1,0xc2,0x17,0xdf,0x5b,0x73,
+  0x5e,0x7d,0x8e,0x7b,0x5e,0x80,0xb4,0xc5,0x9,0xeb,0x33,0x14,0x2a,0x0,0xe5,0x7a,
+  0x47,0x1f,0x35,0xa3,0xf3,0xf4,0x9f,0x82,0x6d,0xfb,0x10,0x4f,0xef,0xc2,0x67,0xa3,
+  0x26,0x25,0xe0,0x7d,0x9c,0x2f,0xca,0x8c,0x66,0xac,0x36,0xb5,0xe2,0x21,0xf8,0x11,
+  0xe8,0x6b,0x8f,0x5,0xbf,0xa,0xd6,0xfa,0xf1,0xa1,0x6c,0x9b,0x80,0x2,0x94,0xbd,
+  0x12,0xa8,0x5d,0x80,0x2,0x1a,0x1a,0x89,0xcc,0x97,0x14,0x9a,0x58,0xa8,0x89,0x3a,
+  0x67,0x28,0x34,0x4c,0x37,0x94,0xaf,0x47,0x8a,0x2e,0xe7,0x27,0x95,0x1e,0xbd,0xfe,
+  0x95,0x56,0xa6,0x8,0x49,0x33,0xee,0x27,0x15,0x90,0x58,0x65,0x94,0x56,0xc6,0xb2,
+  0x38,0x1a,0xbc,0x45,0x9b,0x8e,0x62,0x9,0xb,0xb4,0x12,0x54,0x4e,0xab,0xa0,0xdc,
+  0x59,0x52,0xe9,0x3e,0x1,0xb0,0xcb,0x73,0xb0,0xe7,0x1f,0x82,0x6f,0x32,0x79,0x21,
+  0x8f,0x61,0xfd,0xbe,0xa,0x3f,0x74,0xe9,0x7c,0xe1,0xe6,0xa6,0x6c,0xb,0x10,0xed,
+  0x25,0x55,0xd0,0xba,0x94,0xc0,0xdf,0xb,0x65,0xf8,0xe,0x5,0x22,0xce,0x9,0x37,
+  0x20,0xd3,0x44,0x27,0x95,0xa5,0x0,0xb9,0x21,0x44,0x27,0xd7,0x43,0x6,0x48,0x95,
+  0x29,0x7b,0xa3,0x6e,0xcb,0x74,0xb9,0x96,0xa9,0xd,0xe5,0xe5,0xb5,0xab,0xfd,0xb7,
+  0x60,0x5e,0x59,0x7d,0x35,0xac,0x90,0x91,0x21,0xda,0x95,0xcf,0xfa,0x26,0x9b,0xef,
+  0xbd,0x0,0x93,0x67,0x63,0xe5,0x4b,0x7e,0x95,0x2f,0x40,0xe1,0x17,0x72,0x9e,0x99,
+  0x31,0x80,0x61,0x1,0x14,0xcc,0x57,0xaa,0x34,0x35,0x88,0x84,0x4,0xe3,0x2,0xf1,
+  0x4a,0x5e,0xc8,0x4e,0xc9,0x91,0x2f,0x5c,0x81,0x7e,0x77,0xe0,0xf2,0xfb,0x51,0x5d,
+  0x45,0x48,0x7,0x5a,0x76,0x7c,0x62,0x5b,0x19,0x8b,0x67,0x48,0x5a,0x25,0x7d,0xad,
+  0xea,0x68,0xdb,0x7e,0xbb,0x99,0x88,0x27,0x64,0x5f,0x5c,0x2a,0x72,0xc5,0x1,0xe1,
+  0x79,0xff,0xb3,0x30,0xf8,0x5e,0xe8,0xf7,0x5,0x8f,0x84,0x3c,0x7a,0xfa,0x53,0xb7,
+  0xf1,0x40,0xca,0x3,0x81,0x13,0x0,0xd1,0x7b,0x1c,0x3d,0x47,0x8,0x2b,0x55,0x3a,
+  0x2a,0x8d,0x4c,0xb9,0x34,0xf9,0x2e,0x53,0x2a,0xef,0x35,0x53,0x21,0xb3,0xbe,0x6c,
+  0x8,0x91,0x1e,0xd6,0x65,0xf8,0x4d,0x5d,0xa0,0x8,0xe9,0x18,0xc0,0x52,0xbe,0xee,
+  0x88,0x6f,0xf1,0x99,0x78,0x79,0xa3,0xe3,0x16,0x91,0x5f,0x87,0x49,0xcd,0xe6,0x53,
+  0x58,0xce,0x44,0x59,0x69,0x15,0x34,0xcf,0x22,0x7f,0xff,0x73,0x30,0x78,0x30,0x69,
+  0x2d,0xb5,0x55,0xf3,0x55,0xb0,0x81,0x57,0x69,0x9e,0x49,0x4e,0xb,0x1c,0xe4,0xb6,
+  0x0,0x4a,0xe8,0x46,0x8e,0x54,0x3d,0x97,0x4d,0x44,0xfe,0xd2,0xdc,0x8a,0x51,0x1d,
+  0xf9,0x71,0x6b,0x54,0x45,0xcf,0xf8,0x66,0x92,0xec,0x58,0xc2,0x95,0xd6,0xed,0x7,
+  0xcc,0xfa,0xc,0x2b,0x22,0x78,0x74,0x8e,0x50,0x59,0x4d,0x9d,0xca,0x57,0x35,0xcb,
+  0x77,0xbb,0xac,0x41,0xc1,0x34,0x5d,0xcf,0x7b,0xcf,0xc1,0x99,0x43,0xa6,0x8b,0xd2,
+  0xc0,0xd4,0x65,0x2c,0xf3,0x9f,0xd6,0x1d,0x9b,0x52,0x1,0x10,0x1f,0xd2,0xd,0xf8,
+  0x6e,0x73,0x28,0xcd,0x69,0x64,0x9,0xc4,0x59,0x59,0x4a,0x37,0x1a,0xd1,0xe4,0x30,
+  0xfd,0xbe,0x7c,0xb6,0x28,0x69,0x90,0x46,0x8c,0x25,0x5,0x91,0x0,0x9c,0x9d,0x61,
+  0x83,0xa2,0x5e,0x17,0x20,0xea,0xd5,0x7c,0xd8,0x26,0x3b,0x8d,0x5,0xc3,0xac,0x3,
+  0x7,0x5f,0x80,0xa1,0xc3,0xb1,0xf2,0xf5,0xe8,0x96,0xee,0xca,0xd7,0x96,0x13,0xc3,
+  0x12,0x17,0x91,0x5c,0x7a,0xc,0xa0,0x40,0x45,0xeb,0x0,0x72,0x4,0x49,0xd3,0xa4,
+  0x95,0xe8,0xf0,0xf5,0x36,0x7,0xb6,0x5,0xd0,0xf7,0x91,0xef,0xd7,0xf7,0x88,0x7b,
+  0xab,0x6c,0x21,0xf2,0x9,0x16,0x4a,0x88,0xc1,0x63,0x4c,0x3b,0x95,0x29,0x3c,0x83,
+  0x51,0xdb,0x65,0x80,0xf9,0xc5,0x90,0xa2,0xed,0x3b,0xd2,0xa2,0x26,0xa4,0xb5,0xb4,
+  0xdb,0x14,0x7c,0xf8,0xc0,0xe1,0x17,0x83,0x95,0x4d,0xa5,0x62,0xf7,0xa8,0x9f,0xb1,
+  0x81,0x0,0x28,0xe5,0x87,0x71,0x9b,0x5f,0x98,0x65,0x77,0xc,0x80,0xd6,0x8b,0x18,
+  0xfd,0xf8,0x54,0xaa,0x7a,0x15,0xca,0x32,0xe9,0xc6,0x6c,0xc0,0x76,0x1,0x58,0x65,
+  0x74,0xb,0x71,0xa0,0x92,0xc,0xfc,0x64,0x2c,0xe0,0x32,0x91,0x39,0xa4,0x6c,0x45,
+  0xfa,0x49,0x9e,0x5d,0xbe,0xde,0x68,0x47,0x99,0xb7,0x85,0x28,0x4,0x9f,0xec,0x4b,
+  0xf4,0xbc,0xac,0xdf,0x6a,0xc3,0xe5,0x2e,0x8e,0xfc,0x32,0x78,0x95,0x1d,0x7d,0xd3,
+  0xc3,0x61,0xfe,0xa3,0x67,0xc3,0x6b,0xa3,0x6c,0x31,0x72,0x5b,0x80,0x70,0xfa,0xa7,
+  0xa2,0x20,0x50,0x85,0xba,0xaa,0x25,0x15,0xa6,0x3,0x8f,0x48,0xc9,0xb6,0xf,0xd7,
+  0x4a,0xb6,0x81,0x82,0xdb,0x35,0xe8,0xe0,0x32,0xaa,0xc7,0x37,0xe4,0x99,0x4f,0xd2,
+  0x4a,0xa9,0xe4,0xb3,0x36,0x8,0xec,0xf6,0x9d,0x8d,0xd5,0x69,0x7d,0xa2,0xd1,0x2d,
+  0xeb,0x13,0xfe,0x3a,0x51,0xaf,0x70,0x17,0x95,0x32,0x1c,0x7d,0x19,0xce,0xd,0x88,
+  0xa9,0x5e,0x58,0xc6,0x31,0xea,0x65,0xba,0x8f,0x5f,0xb7,0xc7,0xcc,0x74,0x1,0x9,
+  0xff,0x1f,0xad,0x51,0x4b,0xe5,0x87,0x9c,0x17,0x51,0x94,0x1,0x14,0x99,0x11,0x8f,
+  0xd0,0xc9,0x89,0x31,0x6,0x4f,0xd,0x30,0x39,0x31,0x26,0x1f,0x64,0xdd,0xf2,0x1b,
+  0x59,0x5b,0xe0,0x87,0x3f,0x83,0x3,0x7d,0x9c,0x7e,0xd1,0xda,0x36,0xe6,0xe4,0xcb,
+  0x4e,0x4c,0xf1,0xcf,0xc0,0xba,0x65,0xbd,0xac,0xbd,0xa6,0x40,0xdb,0x27,0x8e,0x70,
+  0xfa,0x85,0xa7,0x8c,0xb4,0xf6,0x8e,0x6e,0x36,0x6d,0xbb,0x9a,0x96,0xd6,0x76,0xd1,
+  0x8e,0xc5,0x83,0x4e,0xaa,0x96,0xe1,0xc0,0xb3,0x30,0x7d,0xde,0x9c,0xea,0x29,0x4c,
+  0xf3,0x1f,0xb9,0x46,0xed,0x16,0x82,0xa,0x2a,0x12,0xf0,0x5,0x81,0x50,0x5f,0x10,
+  0xe8,0xe9,0xd1,0xaf,0x47,0x97,0x18,0xa9,0x4a,0x2a,0xd5,0x37,0xef,0x6d,0xd3,0x1f,
+  0x99,0xf6,0x18,0x34,0x95,0x4a,0x85,0xbe,0x23,0x7,0x19,0xe8,0x77,0xbf,0x79,0xeb,
+  0x9a,0x99,0x2e,0xd4,0xa1,0x99,0xe9,0xb,0x8c,0x8e,0xc,0x15,0x2a,0x5b,0x94,0xba,
+  0xa6,0xa7,0xa,0xb6,0x3d,0xc5,0xe8,0x59,0xf3,0x67,0xe9,0xa3,0x67,0x7,0x19,0x38,
+  0xba,0x9f,0x4d,0xdb,0x7a,0xd9,0x72,0xd5,0xf5,0x34,0x34,0x34,0xe1,0x34,0xf9,0xd3,
+  0x63,0x70,0xf4,0x25,0x98,0x9b,0x32,0xdd,0x91,0x92,0x8a,0x27,0x78,0x56,0xfb,0x78,
+  0xb9,0xc5,0xe,0x88,0xa6,0xcf,0xa1,0x8a,0x14,0xf9,0x38,0x70,0x2,0xc0,0x53,0x2e,
+  0xb,0x10,0x32,0x9c,0x98,0x6,0x5a,0xbe,0xd3,0x58,0x81,0x13,0x0,0x91,0xa0,0x21,
+  0x2e,0xa2,0x9f,0x79,0x63,0xef,0x4b,0x4c,0x4e,0x8c,0x3,0xc1,0x4f,0xb0,0x56,0xde,
+  0x6c,0xee,0xfe,0x29,0xfa,0x3a,0xb8,0xab,0x77,0x37,0x5b,0xbe,0xfc,0xcd,0x42,0x65,
+  0x8b,0xd2,0xc5,0xb4,0x7d,0x76,0xef,0xe3,0x4c,0xf6,0xbf,0xcd,0xc0,0xd1,0xfd,0x8c,
+  0x9e,0x1d,0xe4,0xe6,0xcf,0xfe,0x1e,0xe6,0x34,0x4d,0xc1,0xd8,0x69,0xe8,0x7f,0x35,
+  0x5c,0xdb,0x4f,0x53,0xbe,0x12,0x3a,0x90,0x32,0x17,0xe9,0xfa,0xc5,0x90,0xa4,0x1c,
+  0x4,0x64,0xae,0x3,0xa8,0xe0,0x1f,0xff,0x84,0x69,0x3e,0xca,0x15,0xc0,0xc8,0x98,
+  0x40,0x46,0xa8,0xe1,0x33,0x91,0x7b,0xf0,0x2c,0xa0,0x44,0x71,0x82,0xa2,0xef,0xc8,
+  0x21,0x26,0x27,0xc6,0xe9,0xea,0xbd,0x9d,0xde,0xfb,0x1f,0x5e,0xd8,0xcf,0xba,0x43,
+  0xea,0xea,0xbd,0xfd,0xd7,0xb6,0x6d,0xdc,0xd5,0xf6,0x96,0x7b,0xbe,0xc1,0xec,0x70,
+  0x3f,0xfb,0xbf,0xfd,0x15,0x46,0xf7,0x3f,0x4f,0xdf,0x7b,0x6f,0xb1,0xe5,0x63,0xbb,
+  0x88,0xe4,0x77,0x66,0x3f,0x9c,0x3e,0x10,0x5c,0x4b,0xab,0x28,0xe7,0xf3,0x52,0xc9,
+  0x38,0xca,0x84,0xb1,0x85,0xb2,0x17,0xe3,0xa,0xb8,0x1,0xf7,0x7e,0x0,0xdb,0xfc,
+  0x47,0xca,0xb3,0xde,0x9f,0xdb,0xbf,0x9,0x30,0x82,0x1a,0x5f,0x0,0x42,0xe7,0xbb,
+  0x77,0xe8,0xc,0xf4,0xf7,0xb1,0xee,0x8e,0xfb,0xb8,0xe1,0xc1,0xe7,0x2e,0x4a,0xf9,
+  0xbf,0xa9,0xd4,0xb2,0xaa,0x87,0x1b,0x1e,0x7c,0x8e,0x75,0x77,0xdc,0xc7,0xc0,0xd1,
+  0x3,0x40,0x2d,0xf8,0xec,0x6e,0xff,0x2b,0x30,0xf4,0x5e,0x6c,0x72,0xb5,0xac,0x23,
+  0xcb,0xab,0x82,0xfb,0xe8,0xe3,0x2e,0xe1,0xb5,0x5d,0xc6,0xbe,0xe,0xcb,0x14,0x9,
+  0x3,0x32,0xa7,0x81,0x86,0x1b,0x80,0xd0,0x2,0xe8,0x28,0x57,0x9a,0x77,0x4c,0xd3,
+  0x2f,0x23,0x7f,0x63,0x46,0x40,0x22,0xd6,0x9a,0x9c,0x98,0xa0,0x7d,0xfb,0x27,0x7f,
+  0xad,0xbf,0xf3,0xfb,0xb0,0x68,0xe7,0xfd,0xf,0x33,0x33,0xdc,0xcf,0xe4,0xd0,0x71,
+  0xda,0xc7,0x8e,0x6,0x7b,0xf9,0x12,0xa3,0x1e,0x9c,0x11,0x7f,0x9a,0xf9,0x17,0xcf,
+  0x2a,0xcf,0x8c,0xd,0x8a,0x0,0xc0,0x6d,0x1,0xbc,0x90,0x2f,0x2f,0x46,0x53,0x50,
+  0x52,0x9b,0x15,0x1f,0x94,0x63,0x4b,0x95,0xd2,0xe9,0x32,0xaf,0xe6,0x28,0x13,0x5f,
+  0x57,0x2a,0x65,0xb6,0x7f,0xf5,0xa1,0x85,0xc8,0xf3,0xb7,0x92,0xb6,0x7f,0xf5,0x21,
+  0x2a,0xef,0xbf,0x5,0x95,0x19,0xf7,0x88,0x4e,0xdc,0xab,0x78,0x47,0x96,0x11,0x93,
+  0x15,0xb1,0x6,0x2c,0x2c,0x6,0x88,0x47,0xbf,0xdd,0x28,0x22,0x8,0xd4,0x81,0x5d,
+  0x78,0x8a,0xac,0x81,0x4e,0xb7,0xef,0x25,0x43,0x2a,0x3a,0x37,0x2e,0xed,0x60,0xe9,
+  0x7,0xf4,0x61,0x87,0xdf,0x44,0x6a,0xef,0xd9,0xc5,0xe4,0xd2,0x4e,0xa8,0x4d,0xc5,
+  0xa3,0x1e,0x48,0xae,0xf4,0x91,0x8c,0x3,0x72,0x83,0x41,0xab,0xec,0xc5,0xc6,0x0,
+  0x2a,0xdc,0x60,0xa0,0x94,0x12,0xe6,0x5f,0xae,0x7,0xd8,0x7e,0x5d,0xde,0x13,0xa7,
+  0xc9,0x4d,0x97,0x3e,0x46,0xf9,0xa5,0x3d,0xd7,0xe6,0x73,0xf9,0x11,0xa3,0xf6,0x2b,
+  0xae,0x4f,0x8e,0x7a,0x39,0x7a,0xd3,0x46,0x75,0x96,0x35,0xd0,0x7a,0xf2,0x14,0xca,
+  0x23,0xdc,0xcc,0x9b,0xcf,0x4b,0x6a,0xc,0x10,0x33,0x12,0x27,0x1a,0x31,0x0,0x60,
+  0xf8,0xa1,0xe8,0x49,0x81,0x54,0xe3,0x5a,0x56,0xee,0xb8,0x5e,0x4c,0xa4,0x95,0x66,
+  0x4f,0xf5,0xec,0x38,0xc0,0x15,0xf1,0x47,0x15,0x38,0xac,0x81,0x87,0x31,0x53,0x50,
+  0x80,0x97,0xb3,0xf1,0xbf,0xd8,0xeb,0xe0,0x68,0xc1,0xa7,0x86,0x69,0x34,0x6c,0xe5,
+  0xb,0xd3,0xaf,0x63,0x85,0x2c,0xb0,0x24,0x36,0x4f,0x2c,0x12,0x92,0xa3,0xdb,0xe,
+  0xfa,0x12,0xb,0x3e,0x36,0x20,0xac,0xf2,0x52,0xe1,0x4a,0xab,0x3d,0xc8,0x57,0x3a,
+  0x96,0xcb,0xa0,0xe2,0x2f,0x83,0x14,0x71,0x0,0x17,0x5d,0xab,0xb8,0x5,0x9,0x16,
+  0xb9,0x28,0x14,0x5,0x7c,0xa6,0x35,0x89,0xcf,0x8b,0x11,0x0,0x98,0x8b,0x36,0x45,
+  0x16,0x7c,0xa4,0xc2,0x53,0xac,0x41,0x43,0x29,0xdc,0x18,0x2a,0x5f,0x16,0x2d,0x4,
+  0x0,0xce,0x97,0x41,0x7e,0x95,0xc6,0x12,0xc4,0x2e,0xc0,0x65,0xea,0xc3,0x16,0x9d,
+  0x2b,0x85,0x82,0x5f,0x8d,0x6e,0xd,0xa4,0xc5,0x46,0x72,0xb0,0x44,0xa3,0x98,0x58,
+  0x71,0xbe,0x2e,0x94,0x63,0xfe,0x41,0x5c,0xfb,0xa1,0xce,0x74,0x59,0xe5,0x14,0xbf,
+  0x4d,0x39,0xdf,0x9,0x14,0x95,0x54,0xe7,0x89,0x4d,0xbc,0x68,0xd8,0x98,0x1,0x88,
+  0x74,0xb9,0x87,0xc0,0xb5,0x8d,0x29,0xa2,0x45,0x8,0x0,0x1d,0xcc,0xd9,0xe6,0x5f,
+  0xbe,0xe5,0xcb,0x32,0xff,0x2e,0x70,0xc8,0x18,0x20,0x4,0x92,0x34,0xd0,0x69,0x94,
+  0xf9,0x32,0xc8,0xb5,0x27,0xc0,0x50,0x58,0x34,0xc8,0x53,0x62,0x1,0xb9,0x6f,0xd0,
+  0x98,0x3a,0x2a,0xab,0xec,0x22,0xa4,0x48,0x1c,0x5,0xcc,0xbf,0x9d,0xee,0xbb,0xc0,
+  0xe1,0xc7,0x9b,0x78,0x42,0x20,0x19,0xef,0xe7,0x52,0x28,0x27,0x8,0xb4,0x62,0x0,
+  0x5f,0xfc,0xe0,0x22,0x32,0x31,0x52,0xd1,0xb6,0x2b,0x48,0x9,0x10,0x41,0x70,0xb6,
+  0x8,0x1,0x60,0x5b,0x0,0x70,0x98,0xff,0x30,0xcf,0xe5,0x16,0x9c,0x81,0xb5,0x4a,
+  0xce,0x2,0x16,0xa,0x0,0x4f,0xfb,0x7f,0xe3,0x65,0x10,0x18,0xf3,0x79,0x89,0x8c,
+  0x28,0x4f,0x3a,0x1d,0xd,0xc,0xac,0xf2,0x8b,0x50,0xe1,0x36,0x49,0xab,0x99,0xba,
+  0xc9,0x3,0xe1,0xfb,0x5d,0xa,0x7,0x13,0x10,0x7e,0x30,0xe5,0xab,0xd9,0x20,0xc9,
+  0xa6,0x9c,0xfd,0x0,0xc2,0x2,0x78,0x41,0x94,0x19,0x47,0xff,0x7e,0x52,0xf1,0x72,
+  0x66,0x20,0xf3,0x12,0xfb,0x6,0x64,0x90,0xb2,0x8,0x1,0xe1,0x9a,0x6,0x16,0xf1,
+  0xfd,0x4a,0x41,0x2d,0xdd,0x25,0x78,0x1e,0xc1,0x9e,0xd,0x3f,0x28,0x17,0xd,0xe2,
+  0xc,0xca,0xde,0x14,0x9a,0x1a,0x3,0xc8,0x91,0x2e,0xc1,0xe0,0x32,0xf5,0xc2,0xff,
+  0x27,0xa6,0x8e,0x56,0x4c,0xb1,0x58,0x28,0x1c,0x50,0xe6,0xeb,0xde,0xd0,0xcc,0xdb,
+  0xbf,0xf6,0xb1,0xad,0x81,0xf1,0x63,0x50,0xd3,0x2,0xe8,0x95,0x5b,0xf0,0x13,0x3f,
+  0xec,0x4d,0xa3,0xcc,0x69,0x60,0x62,0xd9,0xd1,0xb9,0xa,0x28,0xc0,0x20,0xdf,0x0,
+  0xda,0x40,0x31,0x36,0x86,0x58,0xa0,0x58,0x6c,0x14,0x89,0xc5,0x1a,0xf5,0x40,0xbe,
+  0x35,0xc8,0x88,0x1,0x8c,0x1f,0xd4,0xf8,0xd1,0xdb,0xe4,0x2c,0xaa,0x63,0x43,0x88,
+  0xae,0xcc,0x56,0x98,0x74,0x1,0x62,0x94,0x27,0x98,0xb4,0xca,0x1a,0xd3,0xc9,0x45,
+  0x46,0xd2,0x4d,0xca,0x88,0x5f,0x2a,0x3c,0x4a,0x77,0xf9,0x7b,0x48,0x2,0xc2,0xa7,
+  0x54,0x52,0xa8,0x6a,0x9c,0x67,0xa8,0x21,0x85,0xa,0xae,0x4,0xaa,0x10,0x0,0xc9,
+  0x46,0x93,0xca,0x74,0x98,0x7e,0x63,0x6d,0xc0,0x37,0x63,0x80,0x45,0x9,0x0,0xe2,
+  0x2d,0xdc,0x79,0xe6,0x5f,0xca,0x53,0x7,0x78,0xda,0x25,0xd4,0xcc,0xb8,0x40,0x79,
+  0xa6,0x5,0x60,0xa1,0x4b,0xc1,0xf1,0x34,0x10,0x2b,0x6,0x90,0xab,0x80,0x69,0x3d,
+  0xb3,0xfd,0x57,0x96,0x5,0x58,0xac,0x31,0x40,0x8a,0x5,0x70,0x8d,0x70,0x9,0xe,
+  0x1d,0xe0,0xe9,0xd8,0x41,0xc7,0x3,0x51,0x5c,0xa0,0x2,0x60,0x69,0x60,0x14,0xa0,
+  0xec,0x1f,0x87,0xa,0xe5,0x97,0x4a,0x8a,0x60,0x73,0x87,0x67,0x6,0x73,0xd1,0x35,
+  0x62,0xd4,0xdb,0xd3,0x44,0x3b,0x48,0x94,0xd9,0x8b,0x11,0x0,0x88,0x20,0x30,0x43,
+  0xe1,0x69,0x3b,0x80,0x52,0xdc,0x40,0xa9,0x14,0xca,0xb9,0x14,0x58,0x5,0xcf,0xcb,
+  0xf5,0x0,0x19,0xd3,0x40,0xc2,0x18,0x80,0x0,0x55,0xf1,0x7b,0x81,0x5a,0xd2,0xd7,
+  0xb,0x5d,0x47,0x2d,0x46,0x3b,0x88,0x4,0x50,0x52,0xe3,0x84,0x45,0x46,0x51,0xd7,
+  0xe5,0x80,0xc8,0x52,0xb8,0x2c,0x9b,0x95,0x26,0xb6,0x85,0xe9,0xe8,0x2f,0xf1,0xaf,
+  0x22,0x4d,0x4a,0x8d,0x1,0x3c,0x2b,0x6,0x50,0x4a,0x61,0xce,0x2,0x84,0x6f,0xb2,
+  0x19,0x4e,0x2c,0x1e,0x49,0x4b,0x20,0xcc,0x5f,0xe4,0x22,0x16,0x19,0x45,0x53,0xe1,
+  0x50,0x1e,0x3a,0xe8,0x4b,0xd,0xf0,0x5c,0x69,0x6e,0x10,0x78,0x9e,0xa2,0x56,0xf3,
+  0xa3,0x66,0xf2,0x28,0xfd,0xb,0x21,0x96,0x1b,0x28,0x35,0x94,0x30,0x3f,0x81,0x22,
+  0xf,0xc9,0xa8,0x64,0x2e,0xbc,0x8f,0x5e,0x23,0xdb,0xe6,0xce,0x2e,0xbb,0x48,0x48,
+  0x91,0xfc,0x29,0xb7,0xcb,0x1a,0xd4,0x84,0x4b,0x88,0xae,0x85,0xa5,0xa8,0x81,0xdb,
+  0x2,0x68,0x70,0x91,0x6b,0x64,0xdd,0x16,0x20,0x7a,0x1d,0x2c,0xcc,0xbb,0xb1,0xc0,
+  0xa3,0x19,0x95,0x60,0xc0,0x1c,0xe1,0x46,0xa7,0x1c,0x65,0xa2,0xf5,0x80,0xc5,0x8,
+  0x0,0x9,0x7e,0x31,0x28,0x6c,0x6b,0x10,0x29,0x13,0x71,0x2d,0x9e,0xf1,0x4,0x48,
+  0xc2,0x19,0x82,0xa7,0x14,0x35,0x15,0x4f,0x3,0x17,0x1c,0x3,0x68,0x10,0xc4,0x16,
+  0x40,0x28,0xd,0x51,0x73,0x64,0xca,0x2d,0x6b,0xa0,0xe4,0x61,0x3,0x23,0xae,0x77,
+  0xd1,0x5a,0x0,0x1d,0x3,0x28,0x30,0x96,0x74,0xa3,0x2,0x5,0xcd,0xbf,0x6,0x41,
+  0x78,0xe,0xde,0x7,0x4,0xcf,0x44,0x61,0x46,0x6,0x15,0x7b,0x1b,0xe8,0x11,0xc6,
+  0x0,0x29,0xfe,0x27,0xd5,0x94,0x5b,0xa3,0x3f,0xa,0xa,0x21,0xf8,0xd2,0x25,0xe0,
+  0x97,0xb3,0x39,0xfc,0x28,0x92,0x5e,0xa2,0x2b,0xf4,0x96,0xcf,0xce,0x4f,0x1,0x41,
+  0x38,0x4d,0xf4,0xe4,0x87,0xbd,0x16,0x1c,0x3,0xe8,0x98,0x4d,0xfb,0x2a,0xa5,0xf0,
+  0x3c,0x9f,0xe8,0x2b,0x61,0x4a,0x11,0xbc,0x1a,0x56,0x71,0x63,0xd2,0x24,0xf8,0x10,
+  0x7f,0x2f,0x4f,0x5,0xdf,0xb3,0xd5,0x80,0xf2,0xab,0x86,0x65,0xa1,0x36,0x9f,0xcf,
+  0xe5,0x47,0x8d,0xa4,0x5,0x0,0xd2,0x17,0x7c,0x54,0xb8,0xc8,0xa3,0xcb,0xe6,0x4,
+  0x82,0xbe,0xdc,0x7,0x78,0x31,0x2f,0x83,0xb4,0x5e,0x43,0xe5,0x7,0x9b,0xc,0xc2,
+  0x7f,0x45,0x56,0x53,0xb1,0x2,0x21,0x9c,0x18,0x28,0x53,0xa9,0x9,0xdb,0x23,0xae,
+  0x8d,0x9d,0xc6,0x96,0x5b,0x58,0x2c,0x24,0x65,0x65,0xbc,0xd1,0x23,0xb9,0xe0,0xa3,
+  0xf7,0xd,0x58,0xab,0x7e,0x69,0x96,0xc0,0xd3,0x41,0x77,0x18,0x3,0x2c,0xe8,0x5d,
+  0x40,0xf4,0x39,0xd8,0x68,0x9,0xd8,0x62,0xda,0xd8,0x28,0x52,0x47,0x9a,0xdd,0x79,
+  0x7d,0xbf,0xd8,0x48,0x29,0x73,0x29,0xb8,0x88,0xbf,0x97,0xab,0x7e,0x19,0x20,0x8,
+  0x96,0x83,0x43,0x10,0x14,0xf0,0x2,0x85,0x5e,0x7,0x7b,0x25,0xe5,0x50,0x6a,0x1c,
+  0x1f,0x4,0x28,0xc1,0xad,0x64,0xd7,0x33,0x58,0xf9,0x8b,0x8d,0xe4,0x80,0xa8,0xd7,
+  0xdf,0x93,0x7,0x2,0x28,0x95,0x62,0xaf,0xbb,0xa0,0x20,0x30,0xf2,0x23,0xda,0x2,
+  0xc8,0xd7,0xc2,0x1e,0xd9,0xca,0x2d,0xa2,0x70,0x3b,0x7d,0xb1,0x91,0x31,0x3f,0xcb,
+  0x50,0xf4,0x82,0x40,0x10,0xcc,0x4,0xa2,0x7d,0x23,0xb,0x1,0x40,0xac,0x28,0xc0,
+  0xb,0xa7,0x16,0x85,0x94,0xbf,0x0,0x10,0x2c,0x42,0xfd,0x6b,0xb9,0x46,0x73,0x7e,
+  0x7b,0xa3,0xa7,0x5c,0x4,0x4a,0x6c,0xf1,0x12,0xca,0x4e,0x1,0x81,0xd2,0x53,0xc1,
+  0x2,0xf2,0x4d,0x77,0x1,0xe1,0xef,0xcb,0x50,0xe1,0xd9,0x50,0x7e,0x9d,0x16,0x20,
+  0x15,0x8,0x5,0x20,0xfa,0x51,0xa4,0xc4,0x42,0x90,0x43,0xc1,0x62,0x6a,0x17,0x83,
+  0x0,0xab,0xbc,0xef,0xac,0xa7,0xe4,0x41,0x45,0x99,0xf1,0x76,0x1a,0xe5,0xbc,0xd,
+  0x24,0xfa,0xb1,0x61,0x31,0x45,0x2b,0xf1,0x79,0xd9,0xac,0xf2,0x61,0x47,0x16,0xb3,
+  0x5,0xd0,0x32,0x28,0x62,0xfe,0x13,0x20,0x10,0x15,0x39,0xf6,0x68,0x4,0x3,0xd7,
+  0x27,0x8e,0xd1,0xd2,0x29,0x7b,0x1a,0xa8,0x84,0xf9,0x4f,0x53,0xa6,0x9e,0x67,0x24,
+  0xb6,0x8f,0xe1,0x98,0xf2,0xb9,0xea,0x58,0x84,0x8,0xd0,0x7d,0x2f,0xf8,0x82,0x27,
+  0x9,0x2,0x51,0x36,0xe1,0x6,0x42,0xb1,0x86,0x5f,0x8,0x59,0xb0,0x5,0xd0,0x81,
+  0xa0,0x27,0xdf,0x7,0xb8,0x94,0x5f,0xaf,0x1b,0xc0,0xce,0x2f,0x24,0xb2,0x8f,0x16,
+  0xe9,0x91,0x99,0x50,0xa8,0xe5,0x6,0x8a,0x82,0xc0,0x90,0x61,0x30,0xfa,0x4b,0xd1,
+  0x52,0x7e,0x36,0x2b,0xd9,0x6f,0x3,0x3d,0x65,0xce,0x0,0x16,0xac,0xfc,0xc,0x37,
+  0x50,0x99,0xcc,0xe6,0xf0,0xa3,0x48,0xe5,0xc9,0x70,0x74,0x59,0x1,0x60,0x2d,0x34,
+  0xdb,0x4e,0x60,0x84,0x65,0x6c,0x93,0xef,0xfa,0x2c,0xbe,0x2a,0xf6,0xcb,0x60,0x48,
+  0xf1,0x10,0xca,0x13,0xd3,0x7b,0x97,0xb,0x48,0x55,0xbe,0x2a,0xa8,0xfc,0xb0,0x9c,
+  0x7,0x4c,0x1e,0xc,0x4,0xb2,0x58,0xa8,0x3c,0x1,0xe3,0x7,0x33,0x6,0x95,0x4a,
+  0x9,0xb8,0x53,0xd2,0x53,0x74,0xe1,0x85,0xb1,0x5b,0xde,0x4a,0x60,0xf6,0x17,0x42,
+  0xa2,0x6f,0xd0,0xa4,0x30,0x94,0xa5,0x68,0xc9,0x6c,0xe2,0x8b,0x17,0x98,0xd7,0x7d,
+  0x8f,0x2c,0x58,0x9e,0xbf,0x75,0x74,0xe4,0x91,0xfa,0xe5,0x57,0xcf,0x99,0xe0,0x1c,
+  0x7d,0x18,0x62,0x41,0x0,0x8,0x1f,0x2c,0x5d,0xac,0xf2,0x25,0x80,0xe4,0xc7,0xa6,
+  0xec,0x4f,0x9d,0xf4,0xff,0x6f,0x98,0x38,0x58,0x97,0x1c,0x7f,0x2b,0x69,0xfc,0x3d,
+  0x38,0xfa,0x8,0x89,0x1,0xe0,0x92,0x23,0x88,0x72,0x22,0x2f,0x11,0x6c,0x2b,0xab,
+  0x5c,0x7c,0xc4,0x6f,0x6,0xd3,0x29,0xfd,0x9f,0x47,0x2b,0xc2,0xe9,0x44,0x31,0x93,
+  0x13,0xe5,0xd5,0xb3,0x5e,0xa0,0xcb,0x57,0xa6,0x60,0xef,0xbd,0x70,0xfe,0xb5,0x3a,
+  0xa4,0xf9,0x5b,0x46,0x23,0xaf,0xc2,0x8b,0xff,0x6,0x2a,0x13,0xe1,0xe0,0xc8,0x19,
+  0x4c,0xce,0x6f,0x1,0x85,0x75,0x39,0x15,0x9e,0xac,0x27,0xcf,0xfc,0x43,0xce,0x7e,
+  0x0,0x6f,0x49,0x37,0xcc,0x8f,0x16,0x1b,0xf9,0xb9,0xd6,0x22,0x27,0xad,0x3a,0x9,
+  0xaf,0xde,0x7,0xcb,0x3f,0xe,0xeb,0xef,0x86,0xae,0x9b,0xa0,0x75,0x5d,0x5d,0x32,
+  0xfe,0x8d,0xa3,0x99,0x53,0x81,0xe2,0x7,0x1e,0xb,0xce,0x3a,0x60,0x93,0x1b,0x37,
+  0x53,0x96,0x73,0x53,0x57,0xfa,0x12,0x9f,0xde,0x4d,0xb9,0x6f,0xe9,0x42,0x79,0x83,
+  0x79,0x6,0x20,0x7b,0x47,0x90,0x6a,0x5d,0xe,0xe5,0x51,0xc,0xa4,0x81,0x79,0x9f,
+  0xa9,0xf4,0x2c,0x10,0xa4,0xe4,0x8f,0xbd,0x1e,0x1c,0x3a,0x1d,0xab,0x1d,0x24,0xf,
+  0xd6,0x7d,0xe2,0x3a,0xab,0xfb,0xbe,0x71,0xb2,0x93,0xa3,0xdd,0x39,0xbe,0x4c,0xd7,
+  0xaf,0x6c,0xad,0xeb,0xc4,0xbd,0x6f,0x9d,0x35,0x2b,0xb6,0xa2,0xc9,0x6,0x41,0x4a,
+  0x84,0x9f,0x7a,0x2f,0xcb,0x2f,0x59,0x1e,0x58,0x80,0x5,0x2f,0x4,0x79,0x50,0x6d,
+  0xe9,0xa4,0x34,0x99,0x67,0x9a,0x54,0x7e,0xc0,0xa2,0x99,0x70,0x99,0x35,0x1c,0x69,
+  0xae,0xf5,0x2,0x7d,0x8f,0x95,0x86,0x55,0xf,0x56,0xd9,0x54,0x52,0xe6,0xd4,0x1b,
+  0xc2,0xfb,0x50,0x69,0x4a,0xe4,0xeb,0x4f,0xe1,0xeb,0x9f,0xbb,0x27,0x7e,0xce,0x15,
+  0xe6,0xa5,0x2e,0xe4,0xb8,0xd2,0xa,0x80,0xa0,0x5e,0xb,0x20,0xfa,0x52,0x6d,0xe9,
+  0xa,0x44,0x9f,0x3,0x0,0x9d,0x6d,0x8c,0x83,0xc9,0x19,0x86,0x4b,0xa,0x66,0x55,
+  0x73,0xc8,0xbb,0x50,0x92,0x7d,0xef,0x54,0xa2,0xd,0xe,0x52,0x5c,0x84,0x32,0x83,
+  0x43,0x3,0x68,0xf2,0x19,0x7d,0xad,0xcc,0x7a,0x3c,0x79,0x60,0xa6,0xab,0x2,0x87,
+  0x27,0xcb,0x22,0x82,0x57,0xe5,0xe0,0xdd,0x6a,0xdb,0x0,0xbe,0x95,0x9e,0x18,0x18,
+  0x79,0x83,0x24,0x4d,0x3e,0x39,0xcf,0x68,0x5c,0x29,0xcc,0x3c,0x14,0x33,0xaa,0x5,
+  0x14,0x4c,0xcd,0x31,0x6c,0xe9,0xdc,0xd0,0xb5,0x67,0x65,0xf8,0x40,0xed,0xd4,0x38,
+  0xfd,0x28,0x98,0x9d,0x1d,0x85,0xae,0x2b,0xf3,0x19,0xca,0x9c,0xb7,0xe6,0x74,0xc2,
+  0x28,0x2f,0x0,0x21,0x2d,0x8e,0x9c,0x49,0xc8,0x72,0x86,0xd0,0xad,0x74,0xbd,0x1d,
+  0xca,0x0,0x89,0x6c,0x3,0xab,0xac,0x54,0xb2,0x22,0x15,0xc,0x46,0x3b,0xe,0x85,
+  0x1b,0x80,0xb6,0xca,0x66,0x81,0xc0,0x50,0xa6,0x2b,0x2d,0xa5,0x8c,0x6b,0x10,0x2e,
+  0xbf,0x92,0xe9,0xe9,0x51,0x94,0x82,0x33,0x13,0xf4,0xe3,0xfe,0xcf,0xd8,0x9,0x0,
+  0xa0,0xb,0xbe,0x74,0x84,0x5f,0x29,0x5,0x53,0x23,0x7,0x43,0x0,0xd4,0x8b,0xce,
+  0x22,0xca,0x57,0xd9,0x69,0xc6,0x54,0x91,0xa4,0x62,0xc,0xc0,0x58,0xa,0x34,0x2c,
+  0x0,0xa6,0xc2,0xd,0xc5,0x59,0x65,0x25,0x20,0xe4,0x88,0x4f,0x8c,0x64,0xb,0xc4,
+  0x69,0x80,0x70,0x29,0xab,0xd0,0x22,0x4f,0x1,0xd9,0xe1,0x4a,0xf,0xb5,0xd8,0xbd,
+  0x9d,0xf1,0xe1,0xc3,0x0,0xbc,0x74,0x9c,0x5f,0x85,0x8a,0x97,0xff,0xd4,0x38,0x1,
+  0x0,0x5d,0xc0,0x7,0xaa,0x8f,0xee,0xe1,0xc8,0xe4,0x1c,0xe7,0x2e,0x8c,0xf7,0x53,
+  0x2e,0xb5,0x40,0xfb,0x26,0x8b,0xb1,0xac,0xa3,0x80,0xf2,0x13,0x82,0x4d,0x13,0x98,
+  0x50,0xac,0xd,0x2,0x5b,0x91,0x51,0x7d,0x2,0x3c,0x9,0x30,0x58,0x20,0x31,0xd6,
+  0x28,0xa4,0xd2,0x95,0x59,0x57,0x9a,0xc9,0xb7,0xd7,0x33,0xa,0x5b,0xba,0xbc,0x81,
+  0x51,0xcf,0x39,0xd4,0xa0,0x4e,0xeb,0xdc,0xcc,0x7c,0xa9,0x95,0xa9,0xf3,0xfd,0x4c,
+  0xcd,0x71,0xee,0xef,0xde,0xe2,0x8,0x50,0xb5,0x74,0x9c,0xa,0x80,0x2a,0x50,0x1,
+  0xca,0x47,0x86,0x78,0x53,0x29,0x18,0x3f,0xf3,0x36,0xac,0xbf,0xd,0x4a,0xcd,0x75,
+  0x32,0x54,0x50,0xf9,0x59,0xb,0x44,0xb6,0xe2,0xd,0xd0,0x8,0x20,0x48,0x45,0xdb,
+  0x2f,0xaf,0x12,0x6e,0x40,0x0,0x45,0xa5,0x3c,0xeb,0x2,0x43,0xa2,0xdd,0x14,0xc0,
+  0x7e,0x18,0x20,0x0,0x77,0x9d,0xa5,0x26,0xd8,0xb8,0x9b,0xf3,0x27,0xdf,0x1,0x5,
+  0x47,0x47,0x78,0x13,0x28,0x87,0x3a,0xad,0x66,0x1,0x80,0x30,0xb3,0x12,0x3e,0x30,
+  0xff,0xdd,0x9f,0xf3,0x14,0xc0,0xf9,0x93,0xaf,0x50,0xf3,0x7d,0x58,0x77,0x9b,0x60,
+  0x20,0x87,0xc1,0x42,0x2f,0x90,0x32,0x4,0xe5,0x32,0xa9,0x86,0xa2,0x24,0x28,0x84,
+  0xd2,0x6c,0x37,0x60,0x2c,0x64,0x61,0xb6,0x6d,0x97,0xf1,0x44,0x3b,0x59,0xe6,0x3f,
+  0xa1,0x38,0x9b,0xbf,0x8c,0xfe,0x1b,0x4a,0xbc,0x44,0x4a,0x47,0x9c,0x37,0xee,0xa6,
+  0xea,0xfb,0x9c,0x3d,0xb1,0x7,0x80,0xef,0xbd,0xc2,0x53,0xc0,0xbc,0x0,0x41,0xc2,
+  0xd,0xd8,0x16,0xa0,0x12,0x3e,0x30,0xfb,0xcb,0xc3,0x9c,0x7a,0xf7,0x24,0x7b,0x6b,
+  0xd5,0x59,0x46,0xfa,0x7f,0xe,0xed,0x9b,0x61,0xed,0x6d,0x6e,0x6,0x21,0xbf,0x3,
+  0xce,0x95,0x2d,0x57,0x59,0x71,0x9d,0x10,0x38,0x24,0xac,0x81,0x33,0x92,0xd7,0xcf,
+  0xe7,0x1c,0x2e,0xd7,0x91,0x6,0x86,0x34,0x40,0x3a,0x67,0x2b,0x36,0x88,0x1d,0xfd,
+  0x96,0x56,0x28,0xd3,0xac,0xe7,0x1,0x27,0x3c,0x36,0xee,0x86,0x8e,0x1e,0xce,0x1c,
+  0x79,0x9e,0x6a,0x65,0x96,0x3,0x83,0xec,0xdd,0xd3,0xc7,0x29,0x60,0x36,0xd4,0xa9,
+  0x6,0x40,0xae,0x5,0x98,0xf,0x1f,0xba,0xf0,0xd0,0xd3,0x3c,0x36,0x5b,0x66,0xf6,
+  0xfc,0xc9,0x97,0x99,0x1e,0x3f,0xe,0x9d,0x57,0x86,0x20,0xb0,0x19,0xb4,0xd1,0x9a,
+  0x87,0xea,0x3c,0xc0,0x58,0xd7,0xa9,0x33,0x3,0x4b,0xf0,0x9,0x85,0xe5,0x1c,0xa9,
+  0xd1,0x3f,0xc9,0xfb,0x84,0xa5,0xc9,0x50,0x5e,0xae,0xa9,0xb7,0xcb,0xd5,0x2b,0x4f,
+  0xf9,0x8c,0x82,0xd,0xbb,0xa1,0x7b,0x7,0x53,0xe7,0x4f,0x30,0xd2,0xff,0xa,0x73,
+  0x65,0x66,0xbf,0xf5,0x3c,0x8f,0x1,0x17,0x1c,0x0,0x30,0xc8,0xfe,0xf5,0xb8,0x47,
+  0xb0,0x38,0xd4,0x8,0x34,0x9f,0x3c,0x4f,0xed,0x8a,0x95,0x34,0x5f,0xb5,0x9e,0x8f,
+  0x4d,0x9d,0x3b,0x40,0xd7,0x86,0x4f,0xa0,0x96,0xac,0x81,0xa6,0x76,0x98,0x1d,0xc,
+  0xea,0x4b,0xeb,0xa8,0x3d,0xe2,0x8b,0x2c,0xa2,0x51,0x5b,0xf3,0x0,0x0,0x5,0x20,
+  0x49,0x44,0x41,0x54,0x16,0x19,0x3e,0xda,0x21,0x50,0x7b,0x66,0x20,0x47,0xb9,0x4,
+  0x82,0x54,0x68,0xd6,0x81,0xbc,0xd6,0x42,0x95,0x79,0x42,0x2b,0xba,0xbd,0x84,0xb6,
+  0xc8,0x4f,0x53,0x76,0x19,0xe2,0x85,0x24,0x57,0x79,0xdf,0x95,0x8e,0x18,0xbb,0x61,
+  0x99,0x52,0x33,0xac,0xfb,0x34,0x74,0x6e,0xa7,0x5a,0x99,0xe3,0xd8,0x2f,0xbf,0x4b,
+  0xad,0x56,0xe1,0x27,0xfb,0x79,0xf2,0xaf,0xf6,0xf2,0x32,0x30,0xa,0x8c,0x1,0x53,
+  0x4,0x40,0xa8,0x60,0x59,0x0,0x1b,0x0,0x5a,0x55,0x25,0x42,0x10,0x3c,0xfb,0x2e,
+  0x83,0x9f,0xdc,0xc1,0xfa,0x35,0x1d,0x95,0xb5,0xd3,0xe7,0x8f,0xb0,0x6c,0xcd,0x75,
+  0x1,0x8,0x96,0x6d,0x85,0xf9,0xf3,0x50,0xbd,0x20,0x4,0xaf,0x95,0x42,0x52,0xc9,
+  0x59,0x71,0x81,0x4b,0xe1,0x46,0xf0,0x66,0xe5,0xa7,0xcd,0xcd,0x9d,0xa6,0xd5,0x1,
+  0x86,0x48,0xf1,0x52,0xce,0x22,0x3d,0x92,0xbb,0x3,0x8,0xb6,0x52,0x32,0xf3,0x33,
+  0xce,0x2e,0x50,0xe4,0x29,0x5d,0x9e,0x97,0xac,0x83,0xcd,0x77,0xc1,0x92,0xb5,0x54,
+  0x2b,0x73,0xf4,0xed,0xf9,0x3e,0xf3,0x33,0x63,0xbc,0x73,0x92,0x37,0x1f,0xf8,0x21,
+  0x7f,0xb,0x9c,0xf,0x8f,0x71,0x60,0x9a,0xc0,0xa,0x54,0xb1,0x48,0x2,0x40,0xf6,
+  0x40,0x83,0xa0,0x1,0x68,0xda,0x7b,0x84,0x93,0x9f,0xbf,0x8e,0x6b,0x5a,0x1a,0x26,
+  0x97,0x4e,0x9f,0x3f,0x4c,0xfb,0xea,0x5d,0xa8,0xc6,0x36,0xe8,0xd8,0xe,0x2d,0x2b,
+  0xa0,0x32,0xe,0xd5,0x99,0x6c,0x10,0x14,0x6,0x45,0x4a,0x9a,0xcb,0xd,0x24,0xcc,
+  0xbd,0x50,0xb2,0x3d,0x1b,0x70,0x1e,0x52,0xe9,0x5a,0x29,0x22,0x3d,0x92,0xb7,0xbc,
+  0x77,0xf0,0x8a,0x68,0xab,0x1e,0x10,0x18,0x67,0x17,0x89,0x32,0xda,0x2a,0x34,0x2f,
+  0x87,0xb5,0x9f,0x82,0xd5,0x37,0x43,0xa9,0x89,0x6a,0x79,0x96,0xbe,0x3d,0xdf,0x63,
+  0x76,0x72,0x90,0xe1,0x9,0xce,0x3c,0xf0,0x37,0x7c,0x7f,0x22,0x58,0xfd,0x1b,0x21,
+  0xb0,0x0,0x93,0xc0,0xc,0x8e,0xd1,0xf,0xe9,0x1f,0x10,0x51,0xc4,0xee,0xa0,0x34,
+  0x31,0xb,0xcf,0xfc,0x8a,0xc3,0x77,0x5d,0x47,0x6f,0x6b,0x69,0x72,0xe9,0xf8,0xe9,
+  0xbd,0xb4,0x76,0x6e,0xa6,0xb1,0xb5,0x1b,0x9a,0x3b,0xa1,0x63,0x67,0x10,0x24,0xaa,
+  0x6,0xa0,0xa,0xb5,0x99,0xa4,0x72,0x5d,0xca,0xae,0xe7,0xd5,0xb1,0xcb,0xd,0xd8,
+  0x8b,0x42,0x76,0x5a,0x96,0x2b,0x28,0x62,0xfe,0x6d,0x20,0xe8,0xb2,0x59,0xa3,0xdd,
+  0x0,0x81,0x43,0x91,0x9a,0x12,0xaa,0x8,0xf3,0x12,0xff,0x5d,0x9c,0x40,0xe9,0xcb,
+  0xb6,0xc2,0xea,0x4f,0xc3,0xca,0x1b,0xa0,0xb9,0xb,0x50,0x5c,0x38,0xd7,0xc7,0xb1,
+  0x5f,0xfe,0x5,0xe5,0x99,0x51,0x86,0xc6,0x19,0xba,0xf7,0x61,0xbe,0x73,0x6a,0x9c,
+  0x53,0xc0,0x39,0x2,0xe5,0xdb,0xa3,0x3f,0xad,0x55,0xe3,0xde,0x3,0x9a,0x80,0x25,
+  0x40,0x27,0xb0,0x2,0x58,0x5,0xac,0x5a,0xd7,0xc9,0x86,0xff,0xfe,0xfb,0x7c,0xe9,
+  0xe3,0x57,0x72,0xad,0x52,0xd0,0xb9,0xf1,0xd3,0x74,0x6f,0xf9,0x27,0x78,0x8d,0xad,
+  0xe6,0xe8,0x51,0x4,0x31,0x82,0x67,0x8f,0x1a,0xac,0x72,0x96,0x70,0x9d,0xf2,0x55,
+  0x96,0xf0,0x65,0xbe,0x14,0xba,0x55,0x26,0xab,0x97,0x9,0x31,0x84,0x89,0xbe,0x95,
+  0x9f,0x78,0x23,0x28,0xee,0x8d,0x6b,0xcc,0x74,0x23,0xdf,0x37,0xcb,0xe8,0xaf,0x7a,
+  0xc8,0xf4,0x44,0x7d,0xa2,0x8e,0xd6,0x75,0x56,0x1d,0x3e,0xd5,0xf2,0xc,0x67,0xf,
+  0xfd,0x23,0x23,0x7d,0x2f,0x1,0xf0,0xfa,0x71,0xf6,0xfd,0xe7,0xbf,0xe7,0x47,0x67,
+  0x26,0x38,0x9,0xc,0x87,0xc7,0x8,0x81,0xff,0xd7,0x0,0x48,0xcc,0x0,0x5c,0xa2,
+  0xd1,0x69,0xd,0x40,0x33,0xd0,0x46,0xc,0x82,0x95,0xe1,0xb9,0xfb,0xc1,0x7f,0xc1,
+  0x67,0xef,0xbe,0x89,0xdd,0xad,0x4d,0x34,0x97,0x1a,0x5b,0xe9,0xdc,0x78,0x1b,0xed,
+  0xeb,0x3e,0x4e,0x43,0x6b,0xb7,0x65,0x12,0xa5,0x82,0x31,0x95,0xc,0xe1,0x1c,0x24,
+  0x3,0x4,0xd1,0xd9,0x1e,0xa5,0xae,0x32,0x8e,0xee,0x64,0x59,0xd7,0x84,0x28,0xfc,
+  0xe4,0xa5,0xad,0x58,0x7d,0xe3,0xca,0x87,0x58,0x51,0x58,0x4a,0x77,0xbd,0x32,0x96,
+  0xe5,0x9d,0x60,0x12,0x79,0x61,0x5a,0x79,0xfa,0x3c,0x63,0x3,0xaf,0x71,0xee,0xf8,
+  0x4b,0x54,0xcb,0x33,0xcc,0xcc,0x31,0xf7,0xff,0xde,0xe6,0x17,0xf,0x3e,0xc1,0xcf,
+  0x8,0xfc,0xfd,0x8,0x70,0x96,0x58,0xf9,0x17,0x80,0x39,0x52,0xcc,0x3f,0xa4,0x3,
+  0x40,0x11,0x6,0x81,0xc0,0x52,0xa0,0x83,0x40,0xf9,0xcb,0xc3,0xa3,0xf3,0xba,0xcd,
+  0x6c,0xfc,0xe3,0xbb,0xf9,0xec,0xcd,0xdb,0xb9,0x5a,0xd7,0xd2,0xda,0xb5,0x8d,0xb6,
+  0x55,0xd7,0xd0,0xdc,0xbe,0x9e,0xa6,0x65,0xeb,0x3,0xcb,0x20,0xc1,0x60,0x2b,0xd5,
+  0x1e,0xe9,0xb2,0x75,0x3b,0xdf,0xc8,0x13,0xf9,0x76,0x37,0x1c,0xd6,0x36,0x93,0x6c,
+  0x25,0xca,0x1b,0x97,0xd2,0x8c,0x67,0x32,0x14,0x17,0xa5,0xa7,0x59,0xd,0xeb,0x59,
+  0xa3,0xad,0x20,0xaf,0x3a,0x3f,0xc3,0xdc,0xf8,0x29,0x66,0xc7,0x4f,0x31,0x79,0xe6,
+  0x5d,0x2e,0x9c,0x3b,0x16,0x4d,0xe4,0x5e,0x3d,0xc6,0xbb,0xf,0x3d,0xc3,0xcf,0xf6,
+  0x9d,0xe4,0x7d,0x2,0x65,0x9f,0xb,0x8f,0x11,0x2,0xd3,0x3f,0x45,0xa0,0xfc,0x32,
+  0xc9,0x1e,0x44,0x94,0x26,0x26,0xed,0xa,0x1a,0x80,0x16,0x2,0x4b,0xd0,0x1,0x74,
+  0x87,0x47,0x57,0x78,0xdf,0x7e,0x6d,0xf,0x6b,0xff,0xc3,0x5d,0xdc,0x72,0xc3,0x16,
+  0xae,0xec,0x5a,0xca,0x32,0x19,0x2b,0xb9,0x5a,0x48,0x58,0xe9,0xac,0xfc,0xa2,0x4a,
+  0xac,0x87,0xe4,0x40,0xb7,0x45,0x62,0xdd,0xa7,0xe5,0xfb,0x7e,0xca,0x7d,0x5e,0x19,
+  0xdb,0x88,0xb8,0xca,0xba,0xf2,0xc2,0xeb,0xd1,0x29,0x26,0xde,0x19,0xe0,0xc8,0x77,
+  0x9f,0xe5,0x95,0x7d,0xa7,0x18,0x24,0x8,0xf0,0xc6,0x9,0xfc,0xbd,0x8c,0xfa,0xf5,
+  0xfc,0xdf,0xb9,0xf8,0x23,0x29,0x4b,0xc4,0x8a,0x78,0x26,0xa0,0xdd,0x41,0x3b,0x81,
+  0x4b,0xd0,0xc7,0x32,0x2,0xb,0xd1,0xa,0x34,0x7f,0xe6,0x1a,0x36,0xdc,0x7e,0xd,
+  0x3d,0x5b,0xd7,0xb0,0x7a,0x65,0x7,0x1d,0x51,0x45,0x19,0x4a,0x57,0x29,0xe9,0x85,
+  0xb9,0x2c,0x4a,0x69,0x22,0x70,0x58,0x7e,0x57,0x79,0xa7,0x92,0x6b,0x19,0x65,0xec,
+  0x7a,0x52,0x80,0x50,0xb3,0xcb,0xd5,0xc4,0xad,0xf,0x67,0x27,0x19,0x3f,0x3e,0xc4,
+  0xd0,0xb,0x7,0xe9,0x7f,0xfe,0x20,0x27,0x9,0x46,0xf5,0xc,0xc1,0x8,0x9f,0x20,
+  0x18,0xfd,0xfa,0x98,0xc4,0x34,0xfb,0xce,0xc0,0x4f,0x52,0x9e,0x68,0x35,0x8,0x4a,
+  0x4,0x20,0x68,0x25,0x50,0xf8,0x32,0x2,0x30,0x74,0x84,0xf7,0x6d,0x61,0x5e,0x33,
+  0x81,0xeb,0x68,0x40,0x2c,0xe9,0xe4,0xb4,0x71,0x99,0xdc,0xe4,0x13,0xff,0x87,0x4e,
+  0xfd,0x8e,0x46,0x2b,0xff,0x2,0x1,0x0,0xc6,0x9,0x94,0x3e,0x11,0xde,0xcf,0x84,
+  0x65,0xaa,0x14,0x50,0x3e,0x64,0xfd,0x32,0x28,0x66,0x42,0x56,0x24,0x97,0x8b,0x67,
+  0x8,0x22,0xcc,0xa5,0x4,0x33,0x86,0x36,0x2,0x0,0x68,0x10,0x94,0xb8,0xc,0x80,
+  0x8b,0x21,0xd,0x80,0x2a,0xb1,0xf2,0xe7,0x8,0x94,0x3f,0x4d,0xa0,0xf0,0x29,0x71,
+  0xaf,0xfd,0x7d,0xae,0xd9,0x97,0x54,0x54,0x39,0x3a,0xfc,0x8a,0x16,0x87,0x88,0x2d,
+  0x82,0x3e,0x5a,0xc2,0xa3,0x9,0xd3,0xa,0xd8,0xa1,0xdc,0x65,0xca,0x27,0xed,0x28,
+  0x8c,0x37,0xb4,0x4,0x7e,0x7d,0x96,0x60,0xf0,0xe9,0x63,0x8e,0x78,0xad,0xbf,0x2a,
+  0x9e,0x2d,0x44,0xf5,0x28,0x46,0x97,0x35,0x56,0x9,0x1d,0x87,0x56,0x7e,0x89,0x38,
+  0x98,0xbc,0x4c,0xf5,0x53,0xb4,0x41,0x7,0x13,0x4,0xf6,0x21,0xdf,0xf5,0x43,0x1d,
+  0xca,0x87,0x85,0x8d,0x4c,0x3d,0xa2,0xb5,0x8f,0xd7,0x60,0x90,0x87,0x54,0xfe,0xe5,
+  0xd1,0xbf,0x30,0xd2,0x16,0x40,0x82,0x40,0x1e,0x5a,0xe9,0xa9,0xfb,0xfd,0x8a,0xd0,
+  0xc5,0x28,0x47,0x4e,0xf4,0xec,0x5d,0x77,0xfa,0xb8,0xd8,0x36,0x16,0x33,0xc9,0xb8,
+  0xcb,0x75,0x38,0x57,0x30,0xea,0xa5,0x4b,0xa5,0x1c,0xd7,0xda,0xdc,0x7,0x3d,0xa3,
+  0xff,0x28,0x93,0x3d,0xe9,0x4c,0x5b,0x7b,0xbc,0x4c,0x97,0xe9,0xe2,0xe8,0xff,0x3,
+  0x65,0x3,0x11,0x91,0x9e,0x50,0x6,0x9d,0x0,0x0,0x0,0x0,0x49,0x45,0x4e,0x44,
+  0xae,0x42,0x60,0x82,
+    // /Users/zhenkai/Develop/mumble-1.2.3/src/actd/images/watermark2.jpg
+  0x0,0x0,0xb,0xbb,
+  0xff,
+  0xd8,0xff,0xe0,0x0,0x10,0x4a,0x46,0x49,0x46,0x0,0x1,0x1,0x0,0x0,0x1,0x0,
+  0x1,0x0,0x0,0xff,0xdb,0x0,0x43,0x0,0x8,0x6,0x6,0x7,0x6,0x5,0x8,0x7,
+  0x7,0x7,0x9,0x9,0x8,0xa,0xc,0x14,0xd,0xc,0xb,0xb,0xc,0x19,0x12,0x13,
+  0xf,0x14,0x1d,0x1a,0x1f,0x1e,0x1d,0x1a,0x1c,0x1c,0x20,0x24,0x2e,0x27,0x20,0x22,
+  0x2c,0x23,0x1c,0x1c,0x28,0x37,0x29,0x2c,0x30,0x31,0x34,0x34,0x34,0x1f,0x27,0x39,
+  0x3d,0x38,0x32,0x3c,0x2e,0x33,0x34,0x32,0xff,0xdb,0x0,0x43,0x1,0x9,0x9,0x9,
+  0xc,0xb,0xc,0x18,0xd,0xd,0x18,0x32,0x21,0x1c,0x21,0x32,0x32,0x32,0x32,0x32,
+  0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,
+  0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,
+  0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0xff,0xc0,0x0,
+  0x11,0x8,0x0,0xb2,0x0,0x87,0x3,0x1,0x22,0x0,0x2,0x11,0x1,0x3,0x11,0x1,
+  0xff,0xc4,0x0,0x1f,0x0,0x0,0x1,0x5,0x1,0x1,0x1,0x1,0x1,0x1,0x0,0x0,
+  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x2,0x3,0x4,0x5,0x6,0x7,0x8,0x9,0xa,
+  0xb,0xff,0xc4,0x0,0xb5,0x10,0x0,0x2,0x1,0x3,0x3,0x2,0x4,0x3,0x5,0x5,
+  0x4,0x4,0x0,0x0,0x1,0x7d,0x1,0x2,0x3,0x0,0x4,0x11,0x5,0x12,0x21,0x31,
+  0x41,0x6,0x13,0x51,0x61,0x7,0x22,0x71,0x14,0x32,0x81,0x91,0xa1,0x8,0x23,0x42,
+  0xb1,0xc1,0x15,0x52,0xd1,0xf0,0x24,0x33,0x62,0x72,0x82,0x9,0xa,0x16,0x17,0x18,
+  0x19,0x1a,0x25,0x26,0x27,0x28,0x29,0x2a,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x43,
+  0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x63,
+  0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x83,
+  0x84,0x85,0x86,0x87,0x88,0x89,0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9a,
+  0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,0xb5,0xb6,0xb7,0xb8,
+  0xb9,0xba,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,0xd4,0xd5,0xd6,
+  0xd7,0xd8,0xd9,0xda,0xe1,0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,0xf1,0xf2,
+  0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa,0xff,0xc4,0x0,0x1f,0x1,0x0,0x3,0x1,
+  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x2,
+  0x3,0x4,0x5,0x6,0x7,0x8,0x9,0xa,0xb,0xff,0xc4,0x0,0xb5,0x11,0x0,0x2,
+  0x1,0x2,0x4,0x4,0x3,0x4,0x7,0x5,0x4,0x4,0x0,0x1,0x2,0x77,0x0,0x1,
+  0x2,0x3,0x11,0x4,0x5,0x21,0x31,0x6,0x12,0x41,0x51,0x7,0x61,0x71,0x13,0x22,
+  0x32,0x81,0x8,0x14,0x42,0x91,0xa1,0xb1,0xc1,0x9,0x23,0x33,0x52,0xf0,0x15,0x62,
+  0x72,0xd1,0xa,0x16,0x24,0x34,0xe1,0x25,0xf1,0x17,0x18,0x19,0x1a,0x26,0x27,0x28,
+  0x29,0x2a,0x35,0x36,0x37,0x38,0x39,0x3a,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,
+  0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6a,
+  0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,
+  0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9a,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,
+  0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xc2,0xc3,0xc4,0xc5,
+  0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xe2,0xe3,
+  0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa,
+  0xff,0xda,0x0,0xc,0x3,0x1,0x0,0x2,0x11,0x3,0x11,0x0,0x3f,0x0,0xf7,0xfa,
+  0x28,0xa2,0x80,0xa,0xf1,0x9f,0x8b,0xbe,0x26,0xb9,0xfe,0xd4,0x4d,0xe,0x9,0x19,
+  0x2d,0xe2,0x8c,0x3c,0xc1,0x4e,0x3c,0xc6,0x6e,0x40,0x3e,0xc0,0x63,0xf3,0xaf,0x66,
+  0xaf,0x15,0xf8,0xc5,0xe1,0xc9,0xe3,0xd4,0xe3,0xd7,0xa2,0x42,0xf6,0xf3,0x22,0xc5,
+  0x31,0x3,0xee,0x38,0xe0,0x13,0xec,0x47,0xf2,0xa1,0x1,0xe6,0x29,0x73,0x24,0x52,
+  0xac,0x91,0x3b,0x24,0x8a,0x72,0xac,0xe,0x8,0x3e,0xc6,0xbd,0xcf,0xe1,0x97,0x8e,
+  0xa4,0xf1,0xd,0xbb,0xe9,0x5a,0x94,0x81,0xb5,0x18,0x17,0x72,0x48,0x7a,0xcc,0x9e,
+  0xa7,0xfd,0xa1,0xdf,0xd7,0xf3,0xaf,0x4,0x3c,0x7d,0x6b,0xa1,0xf0,0x15,0xcc,0x96,
+  0xde,0x3b,0xd1,0x9e,0x36,0x20,0xb5,0xca,0xc6,0x7d,0xc3,0x70,0x47,0xe4,0x69,0x88,
+  0xfa,0x7e,0x8a,0x28,0xa4,0x30,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,
+  0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa8,0x6e,
+  0xad,0x60,0xbd,0xb5,0x92,0xda,0xe6,0x24,0x96,0x9,0x54,0xab,0xa3,0x8c,0x86,0x15,
+  0x35,0x14,0x1,0xe4,0xda,0xd7,0xc1,0x68,0xa6,0xb8,0x69,0x74,0x7d,0x44,0x41,0x1b,
+  0x1c,0xf9,0x33,0xa9,0x60,0xbf,0x46,0x1c,0xfe,0x62,0xb9,0xab,0x9f,0x87,0xba,0xbf,
+  0x84,0xe4,0x4d,0x5a,0x60,0xb3,0x43,0x69,0x2a,0x4a,0x64,0x81,0xfb,0x6,0x7,0x0,
+  0x75,0x19,0xc6,0x33,0x5e,0xfb,0x8a,0x6c,0x91,0x24,0xb1,0xb4,0x72,0x2a,0xba,0x30,
+  0x21,0x95,0x86,0x41,0x7,0xb5,0x3,0x4e,0xdb,0x14,0xf4,0x6d,0x62,0xcf,0x5d,0xd2,
+  0xe1,0xd4,0x6c,0x64,0xdf,0x4,0xa3,0xf1,0x53,0xdd,0x48,0xec,0x45,0x5f,0xaf,0x2c,
+  0xbb,0x82,0xeb,0xe1,0x97,0x88,0x4e,0xa1,0x6a,0x92,0x4d,0xe1,0xdb,0xd7,0xc5,0xc4,
+  0x2b,0xc9,0x89,0xbd,0x47,0xb8,0xfd,0x47,0x1d,0x40,0xaf,0x4d,0xb5,0xbb,0x82,0xfa,
+  0xd2,0x2b,0xab,0x59,0x56,0x58,0x26,0x50,0xf1,0xc8,0x87,0x21,0x81,0xe8,0x68,0x11,
+  0x35,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,
+  0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,
+  0x15,0xef,0x6c,0xad,0xf5,0xb,0x39,0x6d,0x2e,0xa2,0x59,0x60,0x95,0x76,0xba,0x37,
+  0x71,0x5e,0x6f,0xa7,0xdd,0x5c,0xfc,0x35,0xd7,0xff,0x0,0xb3,0x2f,0xdd,0xa4,0xf0,
+  0xed,0xe3,0x96,0x82,0x73,0xff,0x0,0x2c,0x18,0x9e,0xfe,0x83,0xfb,0xc3,0xf1,0xf5,
+  0xaf,0x50,0xac,0xfd,0x67,0x46,0xb4,0xd7,0x74,0xc9,0x6c,0x2f,0x53,0x74,0x4e,0x38,
+  0x3d,0xd4,0xf6,0x23,0xde,0x80,0x2f,0xab,0x2b,0x28,0x65,0x21,0x94,0x8c,0x82,0xf,
+  0x4,0x52,0xd7,0x9c,0xf8,0x5f,0x57,0xbb,0xf0,0x9e,0xb0,0x3c,0x25,0xae,0xbe,0x60,
+  0x27,0xfe,0x25,0xf7,0x6d,0xf7,0x48,0xec,0x84,0xfa,0x7a,0x7a,0x1e,0x3d,0x2b,0xd1,
+  0xb3,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,
+  0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,
+  0x51,0x40,0x18,0x7e,0x28,0xf0,0xd5,0xa7,0x89,0xf4,0xa6,0xb4,0xb8,0x1,0x65,0x5f,
+  0x9a,0x19,0xb1,0xcc,0x6d,0xfe,0x1e,0xb5,0x87,0xe0,0xef,0x12,0x5d,0xa5,0xdb,0xf8,
+  0x63,0xc4,0x4,0xa6,0xad,0x6d,0xc4,0x52,0x39,0xff,0x0,0x8f,0x84,0x1d,0xe,0x7b,
+  0xb6,0x3b,0xf7,0x1c,0xfa,0xd7,0x71,0x5c,0xc7,0x8c,0x3c,0x28,0xbe,0x20,0xb4,0x8e,
+  0xe2,0xd5,0xfc,0x8d,0x56,0xd4,0xef,0xb6,0x9d,0x4e,0xe,0x47,0x3b,0x49,0xf4,0xcf,
+  0x4f,0x43,0xf8,0x82,0x1,0xd3,0xe6,0x8a,0xe5,0x7c,0x1d,0xe2,0x96,0xd6,0xe1,0x92,
+  0xc3,0x51,0x4f,0xb3,0xeb,0x36,0x7f,0x25,0xc4,0x2c,0x31,0xbb,0x1c,0x6f,0x3,0xf9,
+  0x8e,0xc7,0xf0,0xae,0xaa,0x80,0xa,0x28,0xa2,0x80,0xa,0x28,0xa2,0x80,0xa,0x28,
+  0xa2,0x80,0xa,0x28,0xa2,0x80,0xa,0x28,0xa2,0x80,0xa,0x28,0xa2,0x80,0xa,0x28,
+  0xa2,0x80,0xa,0x28,0xa2,0x80,0x3c,0xff,0x0,0xe2,0x17,0x87,0x6e,0x73,0x1f,0x89,
+  0xb4,0x66,0x78,0xb5,0x2b,0x3f,0x9a,0x43,0x10,0xe5,0x90,0x7f,0x16,0x3b,0x90,0x3a,
+  0x8e,0xe3,0xe9,0x5a,0xde,0x9,0xf1,0x8c,0x3e,0x29,0xb0,0x65,0x91,0x56,0x2d,0x46,
+  0x0,0x3c,0xf8,0x81,0xe1,0x81,0xe8,0xeb,0xfe,0xc9,0xfd,0x3a,0x57,0x52,0x46,0x78,
+  0x3d,0x2b,0xc9,0xbc,0x49,0x6c,0x7c,0x1,0xe3,0x6b,0xd,0x72,0xc5,0xa,0x69,0x97,
+  0x4c,0x52,0x58,0xd4,0x70,0xa4,0xf2,0xeb,0xf4,0x23,0xe6,0x3,0xd4,0x50,0x7,0xad,
+  0x51,0x4c,0x8a,0x54,0x9a,0x24,0x96,0x36,0xd,0x1b,0xa8,0x65,0x61,0xd0,0x83,0xd0,
+  0xd3,0xe8,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,
+  0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xae,
+  0x77,0xc7,0x3a,0x28,0xd7,0x7c,0x21,0x7f,0x68,0xa0,0x19,0x96,0x3f,0x3a,0x3,0x8e,
+  0x92,0x27,0xcc,0x3f,0xc3,0xf1,0xae,0x8a,0x93,0x19,0xeb,0x40,0x1c,0x57,0xc2,0xdd,
+  0x67,0xfb,0x5b,0xc1,0x70,0x2b,0xb6,0x64,0xb4,0x63,0x9,0xcf,0x5d,0xbd,0x57,0xf4,
+  0x38,0xfc,0x2b,0xb6,0xaf,0x2b,0xf8,0x4d,0xfe,0x87,0xac,0xf8,0x9b,0x4b,0xfe,0x18,
+  0x6e,0x4e,0xd1,0xe9,0x87,0x71,0xfe,0x15,0xea,0x94,0x0,0x51,0x45,0x14,0x0,0x51,
+  0x45,0x14,0x0,0x51,0x45,0x14,0x0,0x51,0x45,0x14,0x0,0x51,0x45,0x14,0x0,0x51,
+  0x45,0x14,0x0,0x51,0x45,0x41,0x75,0x7b,0x6d,0x65,0x11,0x92,0xea,0x78,0xe1,0x41,
+  0xce,0x5d,0x80,0xa0,0x9,0xf3,0x4c,0x96,0x54,0x82,0x17,0x96,0x46,0xb,0x1a,0x29,
+  0x66,0x63,0xd8,0xe,0x49,0xae,0x17,0x5b,0xf8,0xa9,0xa2,0xe9,0xa1,0x92,0xd4,0xfd,
+  0xa6,0x4e,0xcd,0x9d,0xa9,0xfe,0x27,0xf2,0xaf,0x36,0xd7,0xfe,0x26,0x6a,0xda,0xdd,
+  0xa5,0xc5,0xac,0x57,0x46,0x8,0x67,0x42,0x85,0x51,0x0,0x1b,0x4f,0x4,0x7a,0xfe,
+  0xb4,0x58,0xd,0x8f,0x84,0xda,0xb4,0x33,0x78,0xe3,0x53,0x76,0xc8,0x3a,0x87,0x9c,
+  0xd1,0x67,0xfd,0xf0,0xd8,0xfc,0xb3,0xf9,0x57,0xb7,0x57,0xca,0xde,0x1a,0xbe,0xb8,
+  0xf0,0xfe,0xb5,0xa7,0xdf,0x82,0x8e,0x2d,0xe6,0xf3,0x19,0x57,0x20,0xb2,0xe3,0x5,
+  0x7f,0x22,0x6b,0xe9,0xad,0x23,0x59,0xb0,0xd7,0x2c,0x12,0xf3,0x4f,0x9d,0x66,0x89,
+  0xba,0xe0,0xf2,0xa7,0xd0,0x8e,0xc6,0x9b,0x2,0xfd,0x14,0x51,0x48,0x2,0x8a,0x28,
+  0xa0,0x2,0x8a,0x28,0xa0,0x2,0x8a,0x28,0xa0,0x2,0x8a,0x2b,0x8b,0xf1,0xd7,0x8e,
+  0xa1,0xf0,0xbd,0xb7,0xd9,0x6d,0x76,0xcb,0xaa,0x4a,0xb9,0x44,0x3c,0x88,0x87,0xf7,
+  0x9b,0xfa,0xe,0xf4,0x1,0xb7,0xaf,0x78,0xa3,0x4a,0xf0,0xe4,0x2,0x4d,0x42,0xe4,
+  0x2b,0xb0,0xca,0x42,0x9f,0x33,0xbf,0xd0,0x7a,0x7b,0x9e,0x2b,0x82,0xbd,0xf8,0xb9,
+  0x2b,0x93,0xf6,0x2b,0x28,0xe3,0x4e,0xc6,0x43,0xb9,0xbf,0x4e,0x2b,0xcc,0xe5,0xd4,
+  0x75,0x1b,0xc9,0xa6,0xbc,0xb9,0x96,0x59,0x64,0x98,0xee,0x79,0xdd,0x72,0x49,0x1d,
+  0xb3,0xd8,0x73,0xd3,0xb5,0x50,0x12,0x15,0x3c,0x10,0x47,0xb5,0x3b,0xa,0xe7,0x6f,
+  0xa8,0xfc,0x4f,0xd7,0x66,0x4,0x25,0xcf,0x94,0x3f,0xd8,0x50,0x3f,0x95,0x71,0xba,
+  0x8e,0xbf,0x7f,0x7c,0x5e,0x5b,0x8b,0x97,0x72,0x39,0xf9,0x9f,0xfa,0xd4,0xc,0xdb,
+  0xfd,0xaa,0x7,0x8c,0x8c,0x81,0x9c,0x1f,0x4a,0x60,0x52,0x5,0xe5,0x90,0xb3,0x92,
+  0xcd,0xd4,0xe7,0xaf,0xff,0x0,0x5b,0xf9,0x7a,0x1a,0xb1,0x1a,0xe4,0x7c,0xbc,0xfd,
+  0x39,0xfe,0x59,0xfe,0x75,0x1a,0xdb,0x6d,0xe1,0x59,0x48,0x1d,0x1,0x18,0xc7,0xf4,
+  0xfc,0xb1,0x57,0xa0,0x81,0x77,0x3,0x23,0x7,0xf4,0xcf,0xff,0x0,0x5e,0x80,0x24,
+  0x44,0x22,0x5,0x62,0x3f,0x3f,0x4a,0xd2,0xd1,0x75,0xed,0x43,0xc3,0xd7,0xcb,0x79,
+  0xa7,0xce,0x63,0x71,0xf7,0x90,0xf2,0xae,0x3d,0x18,0x77,0xaa,0xce,0x54,0xc7,0x81,
+  0x8e,0x5,0x56,0xeb,0x40,0x1f,0x49,0xf8,0x53,0xc5,0x16,0x9e,0x29,0xd2,0x16,0xf2,
+  0xdf,0xe4,0x99,0xe,0xd9,0xe1,0x27,0x26,0x36,0xff,0x0,0xf,0x43,0x5b,0xd5,0xf3,
+  0x6f,0x83,0x3c,0x45,0x2f,0x86,0x75,0xf8,0xee,0xd7,0x71,0xb7,0x7f,0x92,0xe2,0x31,
+  0xfc,0x49,0xeb,0xf5,0x1d,0x45,0x7d,0x1d,0x4,0xf1,0x5c,0xdb,0xc7,0x3c,0x2e,0x1e,
+  0x29,0x14,0x32,0x30,0x3c,0x10,0x7a,0x1a,0x96,0x34,0x49,0x45,0x14,0x50,0x1,0x45,
+  0x14,0x50,0x1,0x45,0x14,0x50,0x6,0x3f,0x89,0xb5,0xe8,0x7c,0x39,0xa2,0x4d,0x7d,
+  0x20,0xd,0x20,0xf9,0x61,0x8f,0xfb,0xee,0x7a,0xf,0xea,0x7d,0x85,0x7c,0xf3,0x7d,
+  0x75,0x7d,0xa9,0xcf,0x75,0x24,0xb3,0xc4,0xd7,0x37,0x4c,0x5d,0xe4,0x97,0x8c,0x9f,
+  0x40,0x7a,0xf,0x6f,0xa5,0x76,0x7f,0x11,0x35,0xc3,0xab,0xf8,0x81,0xed,0x63,0x7c,
+  0xda,0xd8,0x93,0x12,0xe3,0xa1,0x7f,0xe2,0x3f,0xd3,0xf0,0xae,0x40,0x79,0x42,0x7,
+  0x56,0xf3,0x44,0x9b,0x81,0x0,0x11,0xb1,0x87,0xbf,0x7c,0x8a,0x68,0x46,0xd,0xbc,
+  0x57,0x11,0xa4,0x81,0xde,0x44,0x80,0x9c,0xb4,0x79,0xe1,0x8e,0x7d,0x2a,0xc5,0xbc,
+  0xaf,0x6d,0x30,0x95,0xed,0x16,0x45,0x1f,0xc2,0xc3,0x23,0xf1,0x2,0xb5,0xcc,0xe,
+  0x63,0x49,0xa4,0x8d,0xc,0x6c,0x48,0xd,0xc6,0x73,0xf8,0x77,0xfa,0xd3,0x47,0x94,
+  0x5b,0x69,0x52,0x38,0xce,0x4d,0x34,0x27,0x7e,0x85,0x20,0x6c,0x2e,0xb9,0xde,0xd6,
+  0xb2,0x1e,0x4f,0xcb,0xba,0x3c,0xfd,0x7,0x2b,0xfa,0xd3,0x65,0xd3,0xee,0x62,0x8f,
+  0xcc,0x55,0x12,0xc3,0xff,0x0,0x3d,0x23,0x3b,0x97,0xf1,0xc7,0x4f,0xc6,0xae,0xbe,
+  0x99,0x1d,0xc0,0xdc,0xbb,0x4f,0xa1,0x1c,0x1a,0xa8,0x6d,0xae,0xac,0x65,0x12,0x43,
+  0x33,0x29,0xcf,0x52,0x70,0x7f,0x31,0xd6,0x9d,0x85,0x72,0x83,0x6d,0x3d,0x47,0xe5,
+  0x51,0x94,0xc7,0xdd,0x6a,0xbb,0xc,0x90,0x5c,0xdf,0xb7,0xda,0x6e,0x63,0xe,0x5b,
+  0x2c,0x5f,0x38,0x73,0xdc,0x64,0x54,0x8e,0x6d,0x66,0x56,0x7,0x76,0x4f,0xdd,0x93,
+  0xcb,0x3,0x6f,0x3d,0x4e,0x3a,0xd2,0x28,0xcf,0x4f,0x30,0x9c,0x6e,0x35,0x6a,0x38,
+  0x82,0x26,0xe7,0x7e,0x2a,0x9,0x90,0x41,0x26,0xd5,0x94,0x49,0x8f,0xe2,0x1d,0x2a,
+  0x94,0xfa,0x82,0x44,0x32,0x5f,0xbe,0x1,0xeb,0x93,0xe8,0x7,0x7a,0x0,0xd6,0x8d,
+  0xb2,0xfc,0x70,0x2b,0xe9,0x4f,0x9,0x59,0xcf,0xa7,0xf8,0x53,0x4c,0xb5,0xb8,0x5d,
+  0xb3,0x47,0x0,0xdc,0xbe,0x99,0xe7,0x1f,0xad,0x78,0xa7,0x80,0x7c,0x3d,0xfd,0xad,
+  0xa9,0xdb,0xdc,0x5d,0x21,0x36,0xd1,0x90,0xe5,0x48,0xc6,0xe2,0x39,0x0,0xfe,0x35,
+  0xf4,0x22,0xf2,0xa0,0x9a,0x4c,0x10,0xb4,0x51,0x45,0x21,0x85,0x14,0x51,0x40,0x5,
+  0x50,0xd6,0xae,0xe5,0xb0,0xd0,0xef,0xee,0xe1,0x42,0xd2,0xc3,0x6e,0xf2,0x22,0x81,
+  0xd4,0x85,0x24,0x7e,0xb5,0x7e,0x99,0x22,0xe5,0x4f,0x0,0xfa,0x83,0xde,0x80,0x3e,
+  0x66,0xb4,0xd4,0x94,0x87,0xf3,0x12,0x39,0xb,0xfd,0xef,0x30,0x73,0x9e,0xb9,0xcf,
+  0x50,0x69,0x49,0x0,0x64,0x9e,0x3b,0xd7,0x4d,0xe3,0x2f,0x4,0xc9,0xa7,0x5f,0x4d,
+  0x75,0x6d,0x19,0x16,0xac,0xc5,0x91,0xd0,0x7d,0xcc,0xff,0x0,0xb,0xf,0xeb,0x5c,
+  0x61,0x7b,0x8b,0x33,0x89,0x57,0xe4,0xfe,0xf0,0xe4,0x1a,0x60,0xb4,0x7a,0x9a,0x51,
+  0xdb,0xab,0x7c,0xdb,0x81,0xd,0xc8,0x61,0xc8,0xfa,0xd3,0xa6,0xde,0xa8,0x91,0x1f,
+  0x28,0x85,0x24,0x7,0x45,0xc1,0x6f,0xaf,0xae,0x3d,0x6a,0x94,0x33,0xc6,0x4e,0xe8,
+  0xa4,0x31,0x31,0xf7,0xe0,0xff,0x0,0x4a,0xb5,0xbe,0x56,0x20,0xb0,0x8c,0xff,0x0,
+  0xb4,0x32,0xd,0x4a,0x72,0xbe,0xa7,0x4c,0xe3,0x42,0x51,0xe6,0x83,0x69,0xf6,0x7f,
+  0xa3,0xff,0x0,0x31,0xc4,0x22,0x2a,0x18,0xa6,0x2f,0xb8,0x64,0xa9,0x5c,0x6c,0x3e,
+  0x98,0x34,0x3c,0x6,0xe2,0x41,0xe7,0x23,0x83,0xd3,0x5,0xb0,0x8,0xf6,0x27,0xa5,
+  0x3e,0x35,0x89,0xdf,0x64,0xce,0x50,0x10,0x70,0xdb,0x72,0x33,0xe8,0x7d,0x2a,0x59,
+  0xe3,0xb8,0x8a,0x28,0x64,0xb9,0x2e,0x15,0x93,0xf7,0x65,0xcf,0x3b,0x47,0xeb,0xf9,
+  0xd5,0x9c,0xa6,0x44,0xda,0x4d,0x91,0x95,0x59,0x7c,0xcd,0x80,0xe4,0x83,0x80,0x71,
+  0xf8,0x55,0x7b,0xf9,0xe0,0x57,0x65,0xb6,0x52,0xa8,0x3a,0x64,0xf4,0xa9,0x6f,0x6f,
+  0x9,0x25,0x23,0xe2,0xb3,0xbc,0x97,0x9c,0x94,0x45,0x2c,0xc4,0x50,0x6,0x3d,0xe5,
+  0xeb,0x16,0x11,0xc6,0xa5,0xdd,0xfe,0xea,0xe,0xad,0xee,0x7d,0x5,0x74,0x1e,0x19,
+  0xf0,0x94,0xf7,0x57,0x91,0xcf,0x78,0xbe,0x65,0xc3,0x7d,0xd8,0xfb,0x28,0xfe,0x82,
+  0xb4,0x34,0xf,0xd,0x9,0x2e,0x43,0x45,0x8,0x7b,0x96,0x3,0x7c,0x84,0x70,0xbc,
+  0x62,0xbd,0x6f,0xc3,0xfe,0x1e,0x4b,0x28,0xc7,0x1b,0x9c,0xf2,0xce,0x7a,0x9a,0x6,
+  0x6a,0x78,0x63,0x47,0x4b,0x8,0x11,0x14,0x73,0xdc,0xe3,0xa9,0xae,0xc0,0x74,0x15,
+  0x46,0xc2,0x0,0x8b,0x9f,0x4a,0xbf,0x52,0x1,0x45,0x14,0x50,0x1,0x45,0x14,0x50,
+  0x1,0x45,0x14,0x50,0x5,0x5b,0xab,0x28,0xee,0x10,0x82,0x1,0xcd,0x70,0x7a,0xe7,
+  0x80,0xad,0xee,0x19,0xe4,0xb6,0x1e,0x4b,0x9e,0xb8,0x19,0x53,0xf5,0x15,0xe8,0xd4,
+  0xd6,0x40,0xc3,0x4,0x50,0x7,0xce,0xda,0xaf,0x84,0x2e,0xac,0x5d,0x99,0xe0,0x64,
+  0x3,0xfe,0x5a,0x45,0xca,0xfe,0x22,0xb1,0xc,0x17,0x96,0xfc,0xa1,0xe,0xbe,0xc7,
+  0x7,0xf2,0xaf,0xa6,0x2e,0x34,0xc8,0x67,0x7,0x2a,0xe,0x6b,0x96,0xd5,0x3c,0xf,
+  0x65,0x76,0x4b,0x8,0x42,0xbf,0xf7,0x93,0x83,0x4e,0xe2,0x3c,0x41,0x75,0x19,0x10,
+  0xed,0x91,0xe,0x7d,0xc5,0x17,0x17,0xb2,0xdc,0x6d,0x55,0x2d,0x80,0x30,0xa0,0x64,
+  0xe2,0xbd,0x3,0x51,0xf0,0x5,0xdc,0x79,0xf2,0x4a,0x4c,0xbf,0xdd,0x71,0x83,0xf9,
+  0xd5,0xb,0x5f,0x3,0x6a,0x25,0xf1,0xe4,0x2c,0xa,0x7a,0x9e,0xa6,0x98,0x1c,0x6c,
+  0x3a,0x7b,0x31,0x1e,0x66,0x79,0xe8,0xab,0xc9,0x35,0xd6,0xe8,0xbe,0x11,0xb9,0xbb,
+  0xda,0xd2,0x46,0x61,0x87,0xd3,0xb9,0xae,0xd3,0x43,0xf0,0x54,0x16,0x4,0x3c,0xa0,
+  0xcb,0x2e,0x72,0x59,0xab,0xb0,0xb7,0xb0,0x54,0x50,0x15,0x30,0x29,0x5c,0xc,0x1d,
+  0x27,0xc3,0xd0,0xd9,0x44,0xaa,0x88,0x0,0x1d,0xab,0xa1,0x82,0xd8,0x20,0x0,0xa,
+  0xb4,0x90,0x63,0xad,0x4e,0xa8,0x5,0x21,0x89,0x1a,0x84,0x5c,0xa,0x7d,0x14,0x50,
+  0x1,0x45,0x14,0x50,0x1,0x45,0x14,0x50,0x1,0x45,0x14,0x50,0x1,0x45,0x14,0x50,
+  0x1,0x48,0x7a,0x51,0x45,0x0,0x56,0x94,0xc,0xe,0x5,0x43,0xb4,0x3,0xc0,0x14,
+  0x51,0x40,0x13,0x28,0x1e,0x82,0xa7,0x5e,0x94,0x51,0x40,0xf,0xa2,0x8a,0x28,0x0,
+  0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x3,0xff,0xd9,
+    // /Users/zhenkai/Develop/mumble-1.2.3/src/actd/images/watermark1.jpg
+  0x0,0x0,0xb,0xbb,
+  0xff,
+  0xd8,0xff,0xe0,0x0,0x10,0x4a,0x46,0x49,0x46,0x0,0x1,0x1,0x0,0x0,0x1,0x0,
+  0x1,0x0,0x0,0xff,0xdb,0x0,0x43,0x0,0x8,0x6,0x6,0x7,0x6,0x5,0x8,0x7,
+  0x7,0x7,0x9,0x9,0x8,0xa,0xc,0x14,0xd,0xc,0xb,0xb,0xc,0x19,0x12,0x13,
+  0xf,0x14,0x1d,0x1a,0x1f,0x1e,0x1d,0x1a,0x1c,0x1c,0x20,0x24,0x2e,0x27,0x20,0x22,
+  0x2c,0x23,0x1c,0x1c,0x28,0x37,0x29,0x2c,0x30,0x31,0x34,0x34,0x34,0x1f,0x27,0x39,
+  0x3d,0x38,0x32,0x3c,0x2e,0x33,0x34,0x32,0xff,0xdb,0x0,0x43,0x1,0x9,0x9,0x9,
+  0xc,0xb,0xc,0x18,0xd,0xd,0x18,0x32,0x21,0x1c,0x21,0x32,0x32,0x32,0x32,0x32,
+  0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,
+  0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,
+  0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0xff,0xc0,0x0,
+  0x11,0x8,0x0,0xb2,0x0,0x87,0x3,0x1,0x22,0x0,0x2,0x11,0x1,0x3,0x11,0x1,
+  0xff,0xc4,0x0,0x1f,0x0,0x0,0x1,0x5,0x1,0x1,0x1,0x1,0x1,0x1,0x0,0x0,
+  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x2,0x3,0x4,0x5,0x6,0x7,0x8,0x9,0xa,
+  0xb,0xff,0xc4,0x0,0xb5,0x10,0x0,0x2,0x1,0x3,0x3,0x2,0x4,0x3,0x5,0x5,
+  0x4,0x4,0x0,0x0,0x1,0x7d,0x1,0x2,0x3,0x0,0x4,0x11,0x5,0x12,0x21,0x31,
+  0x41,0x6,0x13,0x51,0x61,0x7,0x22,0x71,0x14,0x32,0x81,0x91,0xa1,0x8,0x23,0x42,
+  0xb1,0xc1,0x15,0x52,0xd1,0xf0,0x24,0x33,0x62,0x72,0x82,0x9,0xa,0x16,0x17,0x18,
+  0x19,0x1a,0x25,0x26,0x27,0x28,0x29,0x2a,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x43,
+  0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x63,
+  0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x83,
+  0x84,0x85,0x86,0x87,0x88,0x89,0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9a,
+  0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,0xb5,0xb6,0xb7,0xb8,
+  0xb9,0xba,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,0xd4,0xd5,0xd6,
+  0xd7,0xd8,0xd9,0xda,0xe1,0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,0xf1,0xf2,
+  0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa,0xff,0xc4,0x0,0x1f,0x1,0x0,0x3,0x1,
+  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x2,
+  0x3,0x4,0x5,0x6,0x7,0x8,0x9,0xa,0xb,0xff,0xc4,0x0,0xb5,0x11,0x0,0x2,
+  0x1,0x2,0x4,0x4,0x3,0x4,0x7,0x5,0x4,0x4,0x0,0x1,0x2,0x77,0x0,0x1,
+  0x2,0x3,0x11,0x4,0x5,0x21,0x31,0x6,0x12,0x41,0x51,0x7,0x61,0x71,0x13,0x22,
+  0x32,0x81,0x8,0x14,0x42,0x91,0xa1,0xb1,0xc1,0x9,0x23,0x33,0x52,0xf0,0x15,0x62,
+  0x72,0xd1,0xa,0x16,0x24,0x34,0xe1,0x25,0xf1,0x17,0x18,0x19,0x1a,0x26,0x27,0x28,
+  0x29,0x2a,0x35,0x36,0x37,0x38,0x39,0x3a,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,
+  0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6a,
+  0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,
+  0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9a,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,
+  0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xc2,0xc3,0xc4,0xc5,
+  0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xe2,0xe3,
+  0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa,
+  0xff,0xda,0x0,0xc,0x3,0x1,0x0,0x2,0x11,0x3,0x11,0x0,0x3f,0x0,0xf7,0xfa,
+  0x28,0xa2,0x80,0xa,0xf1,0x9f,0x8b,0xbe,0x26,0xb9,0xfe,0xd4,0x4d,0xe,0x9,0x19,
+  0x2d,0xe2,0x8c,0x3c,0xc1,0x4e,0x3c,0xc6,0x6e,0x40,0x3e,0xc0,0x63,0xf3,0xaf,0x66,
+  0xaf,0x15,0xf8,0xc5,0xe1,0xc9,0xe3,0xd4,0xe3,0xd7,0xa2,0x42,0xf6,0xf3,0x22,0xc5,
+  0x31,0x3,0xee,0x38,0xe0,0x13,0xec,0x47,0xf2,0xa1,0x1,0xe6,0x29,0x73,0x24,0x52,
+  0xac,0x91,0x3b,0x24,0x8a,0x72,0xac,0xe,0x8,0x3e,0xc6,0xbd,0xcf,0xe1,0x97,0x8e,
+  0xa4,0xf1,0xd,0xbb,0xe9,0x5a,0x94,0x81,0xb5,0x18,0x17,0x72,0x48,0x7a,0xcc,0x9e,
+  0xa7,0xfd,0xa1,0xdf,0xd7,0xf3,0xaf,0x4,0x3c,0x7d,0x6b,0xa1,0xf0,0x15,0xcc,0x96,
+  0xde,0x3b,0xd1,0x9e,0x36,0x20,0xb5,0xca,0xc6,0x7d,0xc3,0x70,0x47,0xe4,0x69,0x88,
+  0xfa,0x7e,0x8a,0x28,0xa4,0x30,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,
+  0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa8,0x6e,
+  0xad,0x60,0xbd,0xb5,0x92,0xda,0xe6,0x24,0x96,0x9,0x54,0xab,0xa3,0x8c,0x86,0x15,
+  0x35,0x14,0x1,0xe4,0xda,0xd7,0xc1,0x68,0xa6,0xb8,0x69,0x74,0x7d,0x44,0x41,0x1b,
+  0x1c,0xf9,0x33,0xa9,0x60,0xbf,0x46,0x1c,0xfe,0x62,0xb9,0xab,0x9f,0x87,0xba,0xbf,
+  0x84,0xe4,0x4d,0x5a,0x60,0xb3,0x43,0x69,0x2a,0x4a,0x64,0x81,0xfb,0x6,0x7,0x0,
+  0x75,0x19,0xc6,0x33,0x5e,0xfb,0x8a,0x6c,0x91,0x24,0xb1,0xb4,0x72,0x2a,0xba,0x30,
+  0x21,0x95,0x86,0x41,0x7,0xb5,0x3,0x4e,0xdb,0x14,0xf4,0x6d,0x62,0xcf,0x5d,0xd2,
+  0xe1,0xd4,0x6c,0x64,0xdf,0x4,0xa3,0xf1,0x53,0xdd,0x48,0xec,0x45,0x5f,0xaf,0x2c,
+  0xbb,0x82,0xeb,0xe1,0x97,0x88,0x4e,0xa1,0x6a,0x92,0x4d,0xe1,0xdb,0xd7,0xc5,0xc4,
+  0x2b,0xc9,0x89,0xbd,0x47,0xb8,0xfd,0x47,0x1d,0x40,0xaf,0x4d,0xb5,0xbb,0x82,0xfa,
+  0xd2,0x2b,0xab,0x59,0x56,0x58,0x26,0x50,0xf1,0xc8,0x87,0x21,0x81,0xe8,0x68,0x11,
+  0x35,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,
+  0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,
+  0x15,0xef,0x6c,0xad,0xf5,0xb,0x39,0x6d,0x2e,0xa2,0x59,0x60,0x95,0x76,0xba,0x37,
+  0x71,0x5e,0x6f,0xa7,0xdd,0x5c,0xfc,0x35,0xd7,0xff,0x0,0xb3,0x2f,0xdd,0xa4,0xf0,
+  0xed,0xe3,0x96,0x82,0x73,0xff,0x0,0x2c,0x18,0x9e,0xfe,0x83,0xfb,0xc3,0xf1,0xf5,
+  0xaf,0x50,0xac,0xfd,0x67,0x46,0xb4,0xd7,0x74,0xc9,0x6c,0x2f,0x53,0x74,0x4e,0x38,
+  0x3d,0xd4,0xf6,0x23,0xde,0x80,0x2f,0xab,0x2b,0x28,0x65,0x21,0x94,0x8c,0x82,0xf,
+  0x4,0x52,0xd7,0x9c,0xf8,0x5f,0x57,0xbb,0xf0,0x9e,0xb0,0x3c,0x25,0xae,0xbe,0x60,
+  0x27,0xfe,0x25,0xf7,0x6d,0xf7,0x48,0xec,0x84,0xfa,0x7a,0x7a,0x1e,0x3d,0x2b,0xd1,
+  0xb3,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,
+  0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,0x51,0x40,0x5,0x14,
+  0x51,0x40,0x18,0x7e,0x28,0xf0,0xd5,0xa7,0x89,0xf4,0xa6,0xb4,0xb8,0x1,0x65,0x5f,
+  0x9a,0x19,0xb1,0xcc,0x6d,0xfe,0x1e,0xb5,0x87,0xe0,0xef,0x12,0x5d,0xa5,0xdb,0xf8,
+  0x63,0xc4,0x4,0xa6,0xad,0x6d,0xc4,0x52,0x39,0xff,0x0,0x8f,0x84,0x1d,0xe,0x7b,
+  0xb6,0x3b,0xf7,0x1c,0xfa,0xd7,0x71,0x5c,0xc7,0x8c,0x3c,0x28,0xbe,0x20,0xb4,0x8e,
+  0xe2,0xd5,0xfc,0x8d,0x56,0xd4,0xef,0xb6,0x9d,0x4e,0xe,0x47,0x3b,0x49,0xf4,0xcf,
+  0x4f,0x43,0xf8,0x82,0x1,0xd3,0xe6,0x8a,0xe5,0x7c,0x1d,0xe2,0x96,0xd6,0xe1,0x92,
+  0xc3,0x51,0x4f,0xb3,0xeb,0x36,0x7f,0x25,0xc4,0x2c,0x31,0xbb,0x1c,0x6f,0x3,0xf9,
+  0x8e,0xc7,0xf0,0xae,0xaa,0x80,0xa,0x28,0xa2,0x80,0xa,0x28,0xa2,0x80,0xa,0x28,
+  0xa2,0x80,0xa,0x28,0xa2,0x80,0xa,0x28,0xa2,0x80,0xa,0x28,0xa2,0x80,0xa,0x28,
+  0xa2,0x80,0xa,0x28,0xa2,0x80,0x3c,0xff,0x0,0xe2,0x17,0x87,0x6e,0x73,0x1f,0x89,
+  0xb4,0x66,0x78,0xb5,0x2b,0x3f,0x9a,0x43,0x10,0xe5,0x90,0x7f,0x16,0x3b,0x90,0x3a,
+  0x8e,0xe3,0xe9,0x5a,0xde,0x9,0xf1,0x8c,0x3e,0x29,0xb0,0x65,0x91,0x56,0x2d,0x46,
+  0x0,0x3c,0xf8,0x81,0xe1,0x81,0xe8,0xeb,0xfe,0xc9,0xfd,0x3a,0x57,0x52,0x46,0x78,
+  0x3d,0x2b,0xc9,0xbc,0x49,0x6c,0x7c,0x1,0xe3,0x6b,0xd,0x72,0xc5,0xa,0x69,0x97,
+  0x4c,0x52,0x58,0xd4,0x70,0xa4,0xf2,0xeb,0xf4,0x23,0xe6,0x3,0xd4,0x50,0x7,0xad,
+  0x51,0x4c,0x8a,0x54,0x9a,0x24,0x96,0x36,0xd,0x1b,0xa8,0x65,0x61,0xd0,0x83,0xd0,
+  0xd3,0xe8,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,
+  0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x0,0xae,
+  0x77,0xc7,0x3a,0x28,0xd7,0x7c,0x21,0x7f,0x68,0xa0,0x19,0x96,0x3f,0x3a,0x3,0x8e,
+  0x92,0x27,0xcc,0x3f,0xc3,0xf1,0xae,0x8a,0x93,0x19,0xeb,0x40,0x1c,0x57,0xc2,0xdd,
+  0x67,0xfb,0x5b,0xc1,0x70,0x2b,0xb6,0x64,0xb4,0x63,0x9,0xcf,0x5d,0xbd,0x57,0xf4,
+  0x38,0xfc,0x2b,0xb6,0xaf,0x2b,0xf8,0x4d,0xfe,0x87,0xac,0xf8,0x9b,0x4b,0xfe,0x18,
+  0x6e,0x4e,0xd1,0xe9,0x87,0x71,0xfe,0x15,0xea,0x94,0x0,0x51,0x45,0x14,0x0,0x51,
+  0x45,0x14,0x0,0x51,0x45,0x14,0x0,0x51,0x45,0x14,0x0,0x51,0x45,0x14,0x0,0x51,
+  0x45,0x14,0x0,0x51,0x45,0x41,0x75,0x7b,0x6d,0x65,0x11,0x92,0xea,0x78,0xe1,0x41,
+  0xce,0x5d,0x80,0xa0,0x9,0xf3,0x4c,0x96,0x54,0x82,0x17,0x96,0x46,0xb,0x1a,0x29,
+  0x66,0x63,0xd8,0xe,0x49,0xae,0x17,0x5b,0xf8,0xa9,0xa2,0xe9,0xa1,0x92,0xd4,0xfd,
+  0xa6,0x4e,0xcd,0x9d,0xa9,0xfe,0x27,0xf2,0xaf,0x36,0xd7,0xfe,0x26,0x6a,0xda,0xdd,
+  0xa5,0xc5,0xac,0x57,0x46,0x8,0x67,0x42,0x85,0x51,0x0,0x1b,0x4f,0x4,0x7a,0xfe,
+  0xb4,0x58,0xd,0x8f,0x84,0xda,0xb4,0x33,0x78,0xe3,0x53,0x76,0xc8,0x3a,0x87,0x9c,
+  0xd1,0x67,0xfd,0xf0,0xd8,0xfc,0xb3,0xf9,0x57,0xb7,0x57,0xca,0xde,0x1a,0xbe,0xb8,
+  0xf0,0xfe,0xb5,0xa7,0xdf,0x82,0x8e,0x2d,0xe6,0xf3,0x19,0x57,0x20,0xb2,0xe3,0x5,
+  0x7f,0x22,0x6b,0xe9,0xad,0x23,0x59,0xb0,0xd7,0x2c,0x12,0xf3,0x4f,0x9d,0x66,0x89,
+  0xba,0xe0,0xf2,0xa7,0xd0,0x8e,0xc6,0x9b,0x2,0xfd,0x14,0x51,0x48,0x2,0x8a,0x28,
+  0xa0,0x2,0x8a,0x28,0xa0,0x2,0x8a,0x28,0xa0,0x2,0x8a,0x2b,0x8b,0xf1,0xd7,0x8e,
+  0xa1,0xf0,0xbd,0xb7,0xd9,0x6d,0x76,0xcb,0xaa,0x4a,0xb9,0x44,0x3c,0x88,0x87,0xf7,
+  0x9b,0xfa,0xe,0xf4,0x1,0xb7,0xaf,0x78,0xa3,0x4a,0xf0,0xe4,0x2,0x4d,0x42,0xe4,
+  0x2b,0xb0,0xca,0x42,0x9f,0x33,0xbf,0xd0,0x7a,0x7b,0x9e,0x2b,0x82,0xbd,0xf8,0xb9,
+  0x2b,0x93,0xf6,0x2b,0x28,0xe3,0x4e,0xc6,0x43,0xb9,0xbf,0x4e,0x2b,0xcc,0xe5,0xd4,
+  0x75,0x1b,0xc9,0xa6,0xbc,0xb9,0x96,0x59,0x64,0x98,0xee,0x79,0xdd,0x72,0x49,0x1d,
+  0xb3,0xd8,0x73,0xd3,0xb5,0x50,0x12,0x15,0x3c,0x10,0x47,0xb5,0x3b,0xa,0xe7,0x6f,
+  0xa8,0xfc,0x4f,0xd7,0x66,0x4,0x25,0xcf,0x94,0x3f,0xd8,0x50,0x3f,0x95,0x71,0xba,
+  0x8e,0xbf,0x7f,0x7c,0x5e,0x5b,0x8b,0x97,0x72,0x39,0xf9,0x9f,0xfa,0xd4,0xc,0xdb,
+  0xfd,0xaa,0x7,0x8c,0x8c,0x81,0x9c,0x1f,0x4a,0x60,0x52,0x5,0xe5,0x90,0xb3,0x92,
+  0xcd,0xd4,0xe7,0xaf,0xff,0x0,0x5b,0xf9,0x7a,0x1a,0xb1,0x1a,0xe4,0x7c,0xbc,0xfd,
+  0x39,0xfe,0x59,0xfe,0x75,0x1a,0xdb,0x6d,0xe1,0x59,0x48,0x1d,0x1,0x18,0xc7,0xf4,
+  0xfc,0xb1,0x57,0xa0,0x81,0x77,0x3,0x23,0x7,0xf4,0xcf,0xff,0x0,0x5e,0x80,0x24,
+  0x44,0x22,0x5,0x62,0x3f,0x3f,0x4a,0xd2,0xd1,0x75,0xed,0x43,0xc3,0xd7,0xcb,0x79,
+  0xa7,0xce,0x63,0x71,0xf7,0x90,0xf2,0xae,0x3d,0x18,0x77,0xaa,0xce,0x54,0xc7,0x81,
+  0x8e,0x5,0x56,0xeb,0x40,0x1f,0x49,0xf8,0x53,0xc5,0x16,0x9e,0x29,0xd2,0x16,0xf2,
+  0xdf,0xe4,0x99,0xe,0xd9,0xe1,0x27,0x26,0x36,0xff,0x0,0xf,0x43,0x5b,0xd5,0xf3,
+  0x6f,0x83,0x3c,0x45,0x2f,0x86,0x75,0xf8,0xee,0xd7,0x71,0xb7,0x7f,0x92,0xe2,0x31,
+  0xfc,0x49,0xeb,0xf5,0x1d,0x45,0x7d,0x1d,0x4,0xf1,0x5c,0xdb,0xc7,0x3c,0x2e,0x1e,
+  0x29,0x14,0x32,0x30,0x3c,0x10,0x7a,0x1a,0x96,0x34,0x49,0x45,0x14,0x50,0x1,0x45,
+  0x14,0x50,0x1,0x45,0x14,0x50,0x6,0x3f,0x89,0xb5,0xe8,0x7c,0x39,0xa2,0x4d,0x7d,
+  0x20,0xd,0x20,0xf9,0x61,0x8f,0xfb,0xee,0x7a,0xf,0xea,0x7d,0x85,0x7c,0xf3,0x7d,
+  0x75,0x7d,0xa9,0xcf,0x75,0x24,0xb3,0xc4,0xd7,0x37,0x4c,0x5d,0xe4,0x97,0x8c,0x9f,
+  0x40,0x7a,0xf,0x6f,0xa5,0x76,0x7f,0x11,0x35,0xc3,0xab,0xf8,0x81,0xed,0x63,0x7c,
+  0xda,0xd8,0x93,0x12,0xe3,0xa1,0x7f,0xe2,0x3f,0xd3,0xf0,0xae,0x40,0x79,0x42,0x7,
+  0x56,0xf3,0x44,0x9b,0x81,0x0,0x11,0xb1,0x87,0xbf,0x7c,0x8a,0x68,0x46,0xd,0xbc,
+  0x57,0x11,0xa4,0x81,0xde,0x44,0x80,0x9c,0xb4,0x79,0xe1,0x8e,0x7d,0x2a,0xc5,0xbc,
+  0xaf,0x6d,0x30,0x95,0xed,0x16,0x45,0x1f,0xc2,0xc3,0x23,0xf1,0x2,0xb5,0xcc,0xe,
+  0x63,0x49,0xa4,0x8d,0xc,0x6c,0x48,0xd,0xc6,0x73,0xf8,0x77,0xfa,0xd3,0x47,0x94,
+  0x5b,0x69,0x52,0x38,0xce,0x4d,0x34,0x27,0x7e,0x85,0x20,0x6c,0x2e,0xb9,0xde,0xd6,
+  0xb2,0x1e,0x4f,0xcb,0xba,0x3c,0xfd,0x7,0x2b,0xfa,0xd3,0x65,0xd3,0xee,0x62,0x8f,
+  0xcc,0x55,0x12,0xc3,0xff,0x0,0x3d,0x23,0x3b,0x97,0xf1,0xc7,0x4f,0xc6,0xae,0xbe,
+  0x99,0x1d,0xc0,0xdc,0xbb,0x4f,0xa1,0x1c,0x1a,0xa8,0x6d,0xae,0xac,0x65,0x12,0x43,
+  0x33,0x29,0xcf,0x52,0x70,0x7f,0x31,0xd6,0x9d,0x85,0x72,0x83,0x6d,0x3d,0x47,0xe5,
+  0x51,0x94,0xc7,0xdd,0x6a,0xbb,0xc,0x90,0x5c,0xdf,0xb7,0xda,0x6e,0x63,0xe,0x5b,
+  0x2c,0x5f,0x38,0x73,0xdc,0x64,0x54,0x8e,0x6d,0x66,0x56,0x7,0x76,0x4f,0xdd,0x93,
+  0xcb,0x3,0x6f,0x3d,0x4e,0x3a,0xd2,0x28,0xcf,0x4f,0x30,0x9c,0x6e,0x35,0x6a,0x38,
+  0x82,0x26,0xe7,0x7e,0x2a,0x9,0x90,0x41,0x26,0xd5,0x94,0x49,0x8f,0xe2,0x1d,0x2a,
+  0x94,0xfa,0x82,0x44,0x32,0x5f,0xbe,0x1,0xeb,0x93,0xe8,0x7,0x7a,0x0,0xd6,0x8d,
+  0xb2,0xfc,0x70,0x2b,0xe9,0x4f,0x9,0x59,0xcf,0xa7,0xf8,0x53,0x4c,0xb5,0xb8,0x5d,
+  0xb3,0x47,0x0,0xdc,0xbe,0x99,0xe7,0x1f,0xad,0x78,0xa7,0x80,0x7c,0x3d,0xfd,0xad,
+  0xa9,0xdb,0xdc,0x5d,0x21,0x36,0xd1,0x90,0xe5,0x48,0xc6,0xe2,0x39,0x0,0xfe,0x35,
+  0xf4,0x22,0xf2,0xa0,0x9a,0x4c,0x10,0xb4,0x51,0x45,0x21,0x85,0x14,0x51,0x40,0x5,
+  0x50,0xd6,0xae,0xe5,0xb0,0xd0,0xef,0xee,0xe1,0x42,0xd2,0xc3,0x6e,0xf2,0x22,0x81,
+  0xd4,0x85,0x24,0x7e,0xb5,0x7e,0x99,0x22,0xe5,0x4f,0x0,0xfa,0x83,0xde,0x80,0x3e,
+  0x66,0xb4,0xd4,0x94,0x87,0xf3,0x12,0x39,0xb,0xfd,0xef,0x30,0x73,0x9e,0xb9,0xcf,
+  0x50,0x69,0x49,0x0,0x64,0x9e,0x3b,0xd7,0x4d,0xe3,0x2f,0x4,0xc9,0xa7,0x5f,0x4d,
+  0x75,0x6d,0x19,0x16,0xac,0xc5,0x91,0xd0,0x7d,0xcc,0xff,0x0,0xb,0xf,0xeb,0x5c,
+  0x61,0x7b,0x8b,0x33,0x89,0x57,0xe4,0xfe,0xf0,0xe4,0x1a,0x60,0xb4,0x7a,0x9a,0x51,
+  0xdb,0xab,0x7c,0xdb,0x81,0xd,0xc8,0x61,0xc8,0xfa,0xd3,0xa6,0xde,0xa8,0x91,0x1f,
+  0x28,0x85,0x24,0x7,0x45,0xc1,0x6f,0xaf,0xae,0x3d,0x6a,0x94,0x33,0xc6,0x4e,0xe8,
+  0xa4,0x31,0x31,0xf7,0xe0,0xff,0x0,0x4a,0xb5,0xbe,0x56,0x20,0xb0,0x8c,0xff,0x0,
+  0xb4,0x32,0xd,0x4a,0x72,0xbe,0xa7,0x4c,0xe3,0x42,0x51,0xe6,0x83,0x69,0xf6,0x7f,
+  0xa3,0xff,0x0,0x31,0xc4,0x22,0x2a,0x18,0xa6,0x2f,0xb8,0x64,0xa9,0x5c,0x6c,0x3e,
+  0x98,0x34,0x3c,0x6,0xe2,0x41,0xe7,0x23,0x83,0xd3,0x5,0xb0,0x8,0xf6,0x27,0xa5,
+  0x3e,0x35,0x89,0xdf,0x64,0xce,0x50,0x10,0x70,0xdb,0x72,0x33,0xe8,0x7d,0x2a,0x59,
+  0xe3,0xb8,0x8a,0x28,0x64,0xb9,0x2e,0x15,0x93,0xf7,0x65,0xcf,0x3b,0x47,0xeb,0xf9,
+  0xd5,0x9c,0xa6,0x44,0xda,0x4d,0x91,0x95,0x59,0x7c,0xcd,0x80,0xe4,0x83,0x80,0x71,
+  0xf8,0x55,0x7b,0xf9,0xe0,0x57,0x65,0xb6,0x52,0xa8,0x3a,0x64,0xf4,0xa9,0x6f,0x6f,
+  0x9,0x25,0x23,0xe2,0xb3,0xbc,0x97,0x9c,0x94,0x45,0x2c,0xc4,0x50,0x6,0x3d,0xe5,
+  0xeb,0x16,0x11,0xc6,0xa5,0xdd,0xfe,0xea,0xe,0xad,0xee,0x7d,0x5,0x74,0x1e,0x19,
+  0xf0,0x94,0xf7,0x57,0x91,0xcf,0x78,0xbe,0x65,0xc3,0x7d,0xd8,0xfb,0x28,0xfe,0x82,
+  0xb4,0x34,0xf,0xd,0x9,0x2e,0x43,0x45,0x8,0x7b,0x96,0x3,0x7c,0x84,0x70,0xbc,
+  0x62,0xbd,0x6f,0xc3,0xfe,0x1e,0x4b,0x28,0xc7,0x1b,0x9c,0xf2,0xce,0x7a,0x9a,0x6,
+  0x6a,0x78,0x63,0x47,0x4b,0x8,0x11,0x14,0x73,0xdc,0xe3,0xa9,0xae,0xc0,0x74,0x15,
+  0x46,0xc2,0x0,0x8b,0x9f,0x4a,0xbf,0x52,0x1,0x45,0x14,0x50,0x1,0x45,0x14,0x50,
+  0x1,0x45,0x14,0x50,0x5,0x5b,0xab,0x28,0xee,0x10,0x82,0x1,0xcd,0x70,0x7a,0xe7,
+  0x80,0xad,0xee,0x19,0xe4,0xb6,0x1e,0x4b,0x9e,0xb8,0x19,0x53,0xf5,0x15,0xe8,0xd4,
+  0xd6,0x40,0xc3,0x4,0x50,0x7,0xce,0xda,0xaf,0x84,0x2e,0xac,0x5d,0x99,0xe0,0x64,
+  0x3,0xfe,0x5a,0x45,0xca,0xfe,0x22,0xb1,0xc,0x17,0x96,0xfc,0xa1,0xe,0xbe,0xc7,
+  0x7,0xf2,0xaf,0xa6,0x2e,0x34,0xc8,0x67,0x7,0x2a,0xe,0x6b,0x96,0xd5,0x3c,0xf,
+  0x65,0x76,0x4b,0x8,0x42,0xbf,0xf7,0x93,0x83,0x4e,0xe2,0x3c,0x41,0x75,0x19,0x10,
+  0xed,0x91,0xe,0x7d,0xc5,0x17,0x17,0xb2,0xdc,0x6d,0x55,0x2d,0x80,0x30,0xa0,0x64,
+  0xe2,0xbd,0x3,0x51,0xf0,0x5,0xdc,0x79,0xf2,0x4a,0x4c,0xbf,0xdd,0x71,0x83,0xf9,
+  0xd5,0xb,0x5f,0x3,0x6a,0x25,0xf1,0xe4,0x2c,0xa,0x7a,0x9e,0xa6,0x98,0x1c,0x6c,
+  0x3a,0x7b,0x31,0x1e,0x66,0x79,0xe8,0xab,0xc9,0x35,0xd6,0xe8,0xbe,0x11,0xb9,0xbb,
+  0xda,0xd2,0x46,0x61,0x87,0xd3,0xb9,0xae,0xd3,0x43,0xf0,0x54,0x16,0x4,0x3c,0xa0,
+  0xcb,0x2e,0x72,0x59,0xab,0xb0,0xb7,0xb0,0x54,0x50,0x15,0x30,0x29,0x5c,0xc,0x1d,
+  0x27,0xc3,0xd0,0xd9,0x44,0xaa,0x88,0x0,0x1d,0xab,0xa1,0x82,0xd8,0x20,0x0,0xa,
+  0xb4,0x90,0x63,0xad,0x4e,0xa8,0x5,0x21,0x89,0x1a,0x84,0x5c,0xa,0x7d,0x14,0x50,
+  0x1,0x45,0x14,0x50,0x1,0x45,0x14,0x50,0x1,0x45,0x14,0x50,0x1,0x45,0x14,0x50,
+  0x1,0x48,0x7a,0x51,0x45,0x0,0x56,0x94,0xc,0xe,0x5,0x43,0xb4,0x3,0xc0,0x14,
+  0x51,0x40,0x13,0x28,0x1e,0x82,0xa7,0x5e,0x94,0x51,0x40,0xf,0xa2,0x8a,0x28,0x0,
+  0xa2,0x8a,0x28,0x0,0xa2,0x8a,0x28,0x3,0xff,0xd9,
+    // /Users/zhenkai/Develop/mumble-1.2.3/src/actd/images/logo1.jpg
+  0x0,0x0,0x59,0x2f,
+  0xff,
+  0xd8,0xff,0xe0,0x0,0x10,0x4a,0x46,0x49,0x46,0x0,0x1,0x2,0x0,0x0,0x64,0x0,
+  0x64,0x0,0x0,0xff,0xec,0x0,0x11,0x44,0x75,0x63,0x6b,0x79,0x0,0x1,0x0,0x4,
+  0x0,0x0,0x0,0x3c,0x0,0x0,0xff,0xe1,0xa,0x7f,0x68,0x74,0x74,0x70,0x3a,0x2f,
+  0x2f,0x6e,0x73,0x2e,0x61,0x64,0x6f,0x62,0x65,0x2e,0x63,0x6f,0x6d,0x2f,0x78,0x61,
+  0x70,0x2f,0x31,0x2e,0x30,0x2f,0x0,0x3c,0x3f,0x78,0x70,0x61,0x63,0x6b,0x65,0x74,
+  0x20,0x62,0x65,0x67,0x69,0x6e,0x3d,0x22,0xef,0xbb,0xbf,0x22,0x20,0x69,0x64,0x3d,
+  0x22,0x57,0x35,0x4d,0x30,0x4d,0x70,0x43,0x65,0x68,0x69,0x48,0x7a,0x72,0x65,0x53,
+  0x7a,0x4e,0x54,0x63,0x7a,0x6b,0x63,0x39,0x64,0x22,0x3f,0x3e,0xa,0x3c,0x78,0x3a,
+  0x78,0x6d,0x70,0x6d,0x65,0x74,0x61,0x20,0x78,0x6d,0x6c,0x6e,0x73,0x3a,0x78,0x3d,
+  0x22,0x61,0x64,0x6f,0x62,0x65,0x3a,0x6e,0x73,0x3a,0x6d,0x65,0x74,0x61,0x2f,0x22,
+  0x20,0x78,0x3a,0x78,0x6d,0x70,0x74,0x6b,0x3d,0x22,0x41,0x64,0x6f,0x62,0x65,0x20,
+  0x58,0x4d,0x50,0x20,0x43,0x6f,0x72,0x65,0x20,0x34,0x2e,0x31,0x2d,0x63,0x30,0x33,
+  0x36,0x20,0x34,0x36,0x2e,0x32,0x37,0x36,0x37,0x32,0x30,0x2c,0x20,0x4d,0x6f,0x6e,
+  0x20,0x46,0x65,0x62,0x20,0x31,0x39,0x20,0x32,0x30,0x30,0x37,0x20,0x32,0x32,0x3a,
+  0x31,0x33,0x3a,0x34,0x33,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x22,0x3e,0xa,
+  0x20,0x3c,0x72,0x64,0x66,0x3a,0x52,0x44,0x46,0x20,0x78,0x6d,0x6c,0x6e,0x73,0x3a,
+  0x72,0x64,0x66,0x3d,0x22,0x68,0x74,0x74,0x70,0x3a,0x2f,0x2f,0x77,0x77,0x77,0x2e,
+  0x77,0x33,0x2e,0x6f,0x72,0x67,0x2f,0x31,0x39,0x39,0x39,0x2f,0x30,0x32,0x2f,0x32,
+  0x32,0x2d,0x72,0x64,0x66,0x2d,0x73,0x79,0x6e,0x74,0x61,0x78,0x2d,0x6e,0x73,0x23,
+  0x22,0x3e,0xa,0x20,0x20,0x3c,0x72,0x64,0x66,0x3a,0x44,0x65,0x73,0x63,0x72,0x69,
+  0x70,0x74,0x69,0x6f,0x6e,0x20,0x72,0x64,0x66,0x3a,0x61,0x62,0x6f,0x75,0x74,0x3d,
+  0x22,0x22,0xa,0x20,0x20,0x20,0x20,0x78,0x6d,0x6c,0x6e,0x73,0x3a,0x64,0x63,0x3d,
+  0x22,0x68,0x74,0x74,0x70,0x3a,0x2f,0x2f,0x70,0x75,0x72,0x6c,0x2e,0x6f,0x72,0x67,
+  0x2f,0x64,0x63,0x2f,0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x2f,0x31,0x2e,0x31,
+  0x2f,0x22,0xa,0x20,0x20,0x20,0x20,0x78,0x6d,0x6c,0x6e,0x73,0x3a,0x78,0x61,0x70,
+  0x52,0x69,0x67,0x68,0x74,0x73,0x3d,0x22,0x68,0x74,0x74,0x70,0x3a,0x2f,0x2f,0x6e,
+  0x73,0x2e,0x61,0x64,0x6f,0x62,0x65,0x2e,0x63,0x6f,0x6d,0x2f,0x78,0x61,0x70,0x2f,
+  0x31,0x2e,0x30,0x2f,0x72,0x69,0x67,0x68,0x74,0x73,0x2f,0x22,0xa,0x20,0x20,0x20,
+  0x78,0x61,0x70,0x52,0x69,0x67,0x68,0x74,0x73,0x3a,0x4d,0x61,0x72,0x6b,0x65,0x64,
+  0x3d,0x22,0x54,0x72,0x75,0x65,0x22,0xa,0x20,0x20,0x20,0x78,0x61,0x70,0x52,0x69,
+  0x67,0x68,0x74,0x73,0x3a,0x57,0x65,0x62,0x53,0x74,0x61,0x74,0x65,0x6d,0x65,0x6e,
+  0x74,0x3d,0x22,0x54,0x72,0x75,0x65,0x22,0x3e,0xa,0x20,0x20,0x20,0x3c,0x64,0x63,
+  0x3a,0x72,0x69,0x67,0x68,0x74,0x73,0x3e,0xa,0x20,0x20,0x20,0x20,0x3c,0x72,0x64,
+  0x66,0x3a,0x41,0x6c,0x74,0x3e,0xa,0x20,0x20,0x20,0x20,0x20,0x3c,0x72,0x64,0x66,
+  0x3a,0x6c,0x69,0x20,0x78,0x6d,0x6c,0x3a,0x6c,0x61,0x6e,0x67,0x3d,0x22,0x78,0x2d,
+  0x64,0x65,0x66,0x61,0x75,0x6c,0x74,0x22,0x3e,0xc2,0xa9,0x44,0x45,0x3c,0x2f,0x72,
+  0x64,0x66,0x3a,0x6c,0x69,0x3e,0xa,0x20,0x20,0x20,0x20,0x3c,0x2f,0x72,0x64,0x66,
+  0x3a,0x41,0x6c,0x74,0x3e,0xa,0x20,0x20,0x20,0x3c,0x2f,0x64,0x63,0x3a,0x72,0x69,
+  0x67,0x68,0x74,0x73,0x3e,0xa,0x20,0x20,0x3c,0x2f,0x72,0x64,0x66,0x3a,0x44,0x65,
+  0x73,0x63,0x72,0x69,0x70,0x74,0x69,0x6f,0x6e,0x3e,0xa,0x20,0x3c,0x2f,0x72,0x64,
+  0x66,0x3a,0x52,0x44,0x46,0x3e,0xa,0x3c,0x2f,0x78,0x3a,0x78,0x6d,0x70,0x6d,0x65,
+  0x74,0x61,0x3e,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xa,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xa,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xa,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xa,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xa,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xa,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xa,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xa,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0xa,0x3c,0x3f,0x78,0x70,0x61,0x63,0x6b,0x65,0x74,0x20,0x65,0x6e,
+  0x64,0x3d,0x22,0x77,0x22,0x3f,0x3e,0xff,0xee,0x0,0xe,0x41,0x64,0x6f,0x62,0x65,
+  0x0,0x64,0xc0,0x0,0x0,0x0,0x1,0xff,0xdb,0x0,0x84,0x0,0x6,0x4,0x4,0x4,
+  0x5,0x4,0x6,0x5,0x5,0x6,0x9,0x6,0x5,0x6,0x9,0xb,0x8,0x6,0x6,0x8,
+  0xb,0xc,0xa,0xa,0xb,0xa,0xa,0xc,0x10,0xc,0xc,0xc,0xc,0xc,0xc,0x10,
+  0xc,0xe,0xf,0x10,0xf,0xe,0xc,0x13,0x13,0x14,0x14,0x13,0x13,0x1c,0x1b,0x1b,
+  0x1b,0x1c,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1,0x7,0x7,0x7,
+  0xd,0xc,0xd,0x18,0x10,0x10,0x18,0x1a,0x15,0x11,0x15,0x1a,0x1f,0x1f,0x1f,0x1f,
+  0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,
+  0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,
+  0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0x1f,0xff,0xc0,0x0,
+  0x11,0x8,0x1,0x39,0x2,0x58,0x3,0x1,0x11,0x0,0x2,0x11,0x1,0x3,0x11,0x1,
+  0xff,0xc4,0x0,0x8e,0x0,0x1,0x0,0x1,0x5,0x1,0x1,0x1,0x0,0x0,0x0,0x0,
+  0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x3,0x4,0x5,0x6,0x7,0x2,0x1,0x9,0x1,
+  0x1,0x1,0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
+  0x0,0x1,0x2,0x10,0x0,0x1,0x3,0x3,0x3,0x1,0x5,0x6,0x3,0x7,0x2,0x4,
+  0x5,0x3,0x5,0x0,0x1,0x0,0x2,0x3,0x11,0x4,0x5,0x21,0x12,0x6,0x31,0x41,
+  0x51,0x22,0x13,0x7,0x61,0x71,0x81,0x32,0x14,0x8,0x91,0xa1,0x23,0xb1,0x42,0x52,
+  0x62,0x72,0x82,0x15,0xc1,0x33,0xd1,0xe1,0x92,0x16,0xf0,0xa2,0xb2,0x53,0x24,0xc2,
+  0x43,0x25,0x83,0x34,0x44,0x64,0x17,0x11,0x1,0x1,0x1,0x0,0x3,0x1,0x1,0x0,
+  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x11,0x21,0x31,0x2,0x41,0x12,
+  0xff,0xda,0x0,0xc,0x3,0x1,0x0,0x2,0x11,0x3,0x11,0x0,0x3f,0x0,0x95,0x28,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x29,0xdc,0x5c,0x43,0x6d,0x6f,0x2d,0xc4,0xef,0x11,0xc1,0xb,0x1d,0x24,
+  0xb2,0x3b,0x40,0xd6,0x34,0x55,0xce,0x3e,0xc0,0x2,0xe,0x23,0xf7,0x31,0xcc,0x79,
+  0x57,0x1f,0xc5,0xf1,0x9c,0xe7,0x16,0xca,0xbe,0xda,0xd5,0xf7,0x33,0x47,0x3b,0xed,
+  0xde,0x1d,0x1c,0xae,0x74,0x61,0xd1,0x6f,0xea,0xd7,0xb7,0xc0,0xfd,0x11,0x5a,0x97,
+  0x0,0xfb,0xad,0xcb,0x42,0x5b,0x67,0xcb,0x6c,0xff,0x0,0xc8,0xb5,0xc4,0x6d,0xbf,
+  0xb5,0xc,0x8a,0x66,0x76,0x52,0x48,0xf4,0x8d,0xfa,0xd2,0x84,0x16,0xfc,0x50,0x76,
+  0x7e,0x21,0xeb,0x27,0x8,0xe5,0x79,0x8f,0xf0,0xf8,0xd9,0xa6,0x8b,0x22,0x63,0x74,
+  0xb1,0xc1,0x73,0x11,0x88,0xbd,0xac,0xf9,0xb6,0x1a,0x90,0xe2,0x6,0xba,0x76,0x21,
+  0x8d,0xe1,0x10,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,
+  0x40,0x41,0xe6,0x59,0xa2,0x86,0x27,0x4b,0x33,0xdb,0x1c,0x4c,0x5,0xcf,0x91,0xe4,
+  0x35,0xad,0x3,0xa9,0x24,0xe8,0x10,0x60,0xf2,0x1c,0xfb,0x84,0x63,0x98,0x1f,0x7b,
+  0x9e,0xb0,0x84,0x11,0x50,0xd,0xc4,0x45,0xc4,0x7b,0x1a,0x1c,0x49,0x41,0xad,0xe2,
+  0x7d,0x79,0xf4,0xcf,0x2d,0xc9,0xad,0xf8,0xf5,0x86,0x49,0xd2,0xde,0x5d,0xbb,0xcb,
+  0xb6,0x98,0xc4,0xf6,0x41,0x24,0x87,0xa3,0x1a,0xf7,0x1,0xe2,0x77,0x66,0x9a,0xa0,
+  0xe8,0x48,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x3c,0xbe,0x58,
+  0xa3,0xa7,0x98,0xf6,0xb3,0x76,0x8d,0xdc,0x40,0xaf,0xba,0xa8,0x3e,0xb2,0x46,0x3d,
+  0xbb,0x98,0xe0,0xe6,0xf7,0x83,0x51,0xf9,0x20,0xf3,0x3d,0xc4,0x16,0xf1,0x3a,0x69,
+  0xe4,0x6c,0x30,0xb3,0x57,0xc9,0x23,0x83,0x5a,0x3b,0x35,0x27,0x44,0x1a,0x3e,0x53,
+  0xd7,0x5f,0x49,0xb1,0x97,0xf,0xb7,0xba,0xe4,0x96,0xc6,0x68,0xdf,0xe5,0xc8,0xc8,
+  0x44,0x93,0x51,0xc0,0xd0,0xd4,0xc4,0xd7,0x8d,0x3d,0xe8,0x36,0xab,0x7e,0x4b,0xc7,
+  0xae,0x31,0x91,0xe5,0x61,0xc9,0xda,0xc9,0x8d,0x97,0xfd,0xbb,0xd1,0x34,0x7e,0x49,
+  0xf6,0x7,0xd7,0x6d,0x50,0x5d,0xb2,0xf6,0xce,0x41,0x58,0xe7,0x8d,0xe2,0x80,0xd5,
+  0xaf,0x69,0xd0,0xf4,0xe8,0x50,0x5,0xed,0x99,0xad,0x27,0x8c,0xd3,0x43,0x47,0xb7,
+  0x4f,0xcd,0x7,0xa1,0x75,0x6c,0x4d,0x4,0xcc,0x27,0xbb,0x70,0x41,0xe9,0xb3,0x44,
+  0xe3,0x46,0xbd,0xae,0x3d,0xc0,0x82,0x83,0xd2,0xf,0x8f,0x7b,0x18,0xd2,0xe7,0xb8,
+  0x35,0xa3,0xab,0x89,0xa0,0x1f,0x8a,0xf,0xa8,0x8,0x8,0x35,0xe,0x41,0xea,0xdf,
+  0xa7,0x7c,0x7f,0x35,0x6,0x17,0x2d,0x9a,0x82,0xc,0x8c,0xee,0xc,0x31,0x2,0x5e,
+  0x22,0x27,0x41,0xe7,0xb9,0x81,0xcd,0x8a,0xbf,0xce,0x47,0xe0,0x83,0x6c,0xb7,0xb8,
+  0x82,0xe2,0x16,0x4f,0x6f,0x23,0x26,0x82,0x40,0x1d,0x1c,0xb1,0xb8,0x39,0x8e,0x69,
+  0xe8,0x5a,0xe1,0x50,0x42,0xf,0x68,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x15,0x8,0x34,
+  0xdf,0x55,0x5c,0x2e,0x78,0x17,0x24,0xb2,0xdf,0xe5,0xb4,0xe3,0x6e,0x5c,0xf9,0x35,
+  0x14,0xdb,0x19,0x7f,0x50,0x47,0x72,0x8b,0x88,0x87,0xc7,0xb3,0xd3,0x5f,0xf1,0x8c,
+  0x97,0x5,0xbd,0xbc,0x6b,0x6c,0xb2,0x90,0x36,0xff,0x0,0x8f,0xc7,0x72,0xef,0xc,
+  0x19,0x3b,0x57,0x7,0x86,0xc6,0xf2,0x76,0xc6,0x27,0x8f,0x73,0x69,0xd3,0x71,0xec,
+  0x54,0x68,0xf6,0x97,0x1b,0x5a,0x4e,0xcf,0x9b,0x47,0x30,0xf6,0x77,0xb4,0x85,0x51,
+  0x9e,0xb3,0xc8,0x96,0xb2,0x29,0xa1,0xb8,0x92,0xb,0xcb,0x77,0x35,0xf6,0xd3,0xc4,
+  0xe2,0xd9,0x18,0xe0,0x7a,0x7,0x3,0x51,0x45,0x17,0x5d,0xb,0x13,0xf7,0x21,0xea,
+  0x46,0x3f,0x91,0x47,0x79,0x7f,0x78,0x32,0x18,0xf8,0x9c,0xc6,0xdf,0x62,0xfc,0xb8,
+  0xda,0xd9,0x21,0x6b,0x76,0x97,0x46,0xfd,0xa5,0xcc,0x79,0x1e,0x2a,0xd7,0x57,0x76,
+  0x53,0x44,0x44,0xbc,0xc5,0x65,0x2c,0xb2,0xb8,0xdb,0x5c,0x8d,0x94,0x82,0x5b,0x4b,
+  0xc8,0x99,0x3c,0xf,0x1d,0xac,0x91,0xa1,0xcd,0x3f,0x81,0x41,0x74,0x80,0x80,0x80,
+  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x83,0x1d,0x9d,0xe4,0x78,0x1c,0x5,0x99,0xbc,
+  0xcd,0x64,0x20,0xc7,0xdb,0xa,0xd2,0x49,0xde,0xd6,0x6e,0xa7,0x63,0x41,0xd5,0xc7,
+  0xd8,0x35,0x41,0xc7,0x39,0x97,0xdd,0x6f,0x18,0xc6,0xca,0xfb,0x5e,0x35,0x61,0x2e,
+  0x6a,0x50,0x28,0xdb,0xc9,0x9,0xb7,0xb6,0xdc,0x46,0x94,0xe,0x6f,0x98,0xf0,0x3b,
+  0x74,0x8,0x39,0x2e,0x43,0xee,0x4b,0xd5,0xdb,0xfb,0x89,0x24,0xb7,0xbf,0x86,0xc6,
+  0x17,0xd4,0x8,0x2d,0xed,0xa2,0xd8,0xc0,0x7f,0x85,0xd2,0x89,0x1f,0x5f,0x6e,0xe4,
+  0x1a,0x8f,0x25,0xf5,0x63,0x9f,0xe6,0xac,0x8e,0x37,0x2f,0x9c,0xba,0xba,0xb2,0x99,
+  0xd5,0x7c,0x45,0xc1,0xb1,0x9a,0x10,0x68,0xe6,0xb0,0x37,0x70,0x4,0xf,0x9b,0x45,
+  0x46,0xab,0x20,0x9a,0x26,0xf9,0xbe,0x7b,0x5,0x41,0x24,0x9e,0xa4,0x75,0xef,0xd3,
+  0xde,0xa0,0xf7,0x85,0xcc,0xc5,0x67,0xca,0x31,0x52,0xcf,0x70,0xd1,0x4,0x17,0x30,
+  0xcf,0x2c,0xaf,0x24,0xb5,0xad,0x8e,0x40,0xf3,0xf2,0x82,0xea,0xd0,0x68,0x2,0xa2,
+  0x64,0xf1,0xcf,0xb9,0x2f,0x4e,0x2f,0x9f,0xf4,0xd7,0x37,0x17,0x56,0x4c,0x1b,0xbc,
+  0xab,0xcb,0xb8,0x8,0x8d,0xe2,0xba,0x6b,0x19,0x91,0xc3,0xfb,0x82,0x98,0x33,0x7c,
+  0xc3,0xd6,0x5e,0x1f,0x86,0xe2,0xd7,0x19,0x8c,0x66,0x52,0xc7,0x25,0x78,0x1b,0x5b,
+  0x2b,0x16,0xcf,0xe2,0x99,0xcd,0x20,0xb9,0x9f,0xa6,0x24,0x7b,0x3c,0x3d,0xa5,0xb4,
+  0xaf,0x54,0x1a,0xc7,0x18,0xfb,0xa5,0xe0,0xb9,0x47,0xb2,0x2c,0xbd,0xb5,0xce,0x1a,
+  0x47,0x1,0xba,0x57,0x81,0x71,0x0,0x27,0xa8,0x2f,0x8b,0xc4,0x3d,0xfb,0x10,0x76,
+  0x38,0x66,0x86,0x78,0x59,0x34,0x2f,0x6c,0xb0,0xca,0xd0,0xf8,0xe4,0x61,0xe,0x6b,
+  0x9a,0xe1,0x50,0xe6,0x91,0xa1,0x4,0x74,0x28,0x3d,0xa0,0x20,0x20,0x20,0xe2,0xbc,
+  0xab,0xee,0xab,0x83,0xe1,0xf2,0x77,0x58,0xdc,0x75,0x9d,0xce,0x5e,0x6b,0x37,0x3e,
+  0x39,0xe7,0x8c,0xb2,0x28,0x37,0xb0,0x96,0x90,0xd7,0xba,0xa5,0xc3,0x70,0xa5,0x76,
+  0xa0,0xd1,0x2f,0xfe,0xee,0xf3,0xd7,0x31,0x48,0xdc,0x76,0x36,0xc6,0xcc,0xbf,0x48,
+  0xe4,0x7c,0x8f,0xb8,0x7b,0x7,0x7d,0x3f,0x49,0xa4,0xa0,0xe7,0x79,0x9f,0x57,0xb9,
+  0xa6,0x76,0x69,0x25,0x9f,0x3f,0x74,0xed,0x7f,0xdb,0x8e,0x53,0xb,0x28,0x7b,0xa1,
+  0x8c,0xc6,0x7,0xc1,0x15,0x8d,0x97,0x9b,0xf3,0x97,0xd8,0x8b,0x69,0x33,0xb7,0xd3,
+  0x58,0x90,0x7,0xd3,0xb,0x99,0x3,0x4e,0xdd,0x45,0x45,0x6b,0xa2,0x23,0xf,0x7d,
+  0x92,0xbf,0xb9,0x77,0x9e,0xf9,0x25,0x96,0x60,0x7,0x85,0xf2,0xba,0x5a,0x1f,0xe5,
+  0x2e,0x76,0x81,0x6,0x73,0x85,0xfa,0x95,0xcd,0x78,0x6e,0x4f,0xfc,0x86,0x20,0xbd,
+  0xaf,0x95,0x82,0x2b,0x8b,0x69,0x58,0x24,0x86,0x46,0x83,0xb8,0x7,0x33,0x70,0xa5,
+  0x3b,0xb,0x68,0x50,0x75,0x4c,0xdf,0xdc,0x76,0x2f,0x98,0xf1,0xb,0xce,0x35,0xc8,
+  0x30,0xce,0xb2,0x9b,0x27,0xf,0x94,0x2e,0x6d,0xa5,0x12,0xc6,0xdb,0x86,0xb8,0x3e,
+  0x27,0x18,0xdc,0x1a,0xe0,0xdf,0x31,0x8d,0xaf,0x88,0xfc,0x50,0x88,0xf3,0x25,0x43,
+  0x2a,0x68,0x48,0x25,0xae,0xf7,0x82,0xa8,0xf5,0x69,0x73,0x70,0x5d,0xf4,0x8e,0x7b,
+  0xcd,0xae,0xe7,0x4b,0x1c,0x4,0x93,0x18,0x90,0xd0,0x39,0xc1,0x9d,0x1,0x70,0x1a,
+  0x94,0x19,0x8,0xdb,0x70,0xef,0x92,0x50,0xc6,0xd6,0x9b,0xbc,0x55,0xf7,0x12,0xf,
+  0x4f,0x82,0x83,0x61,0xc7,0xc5,0x34,0x30,0x31,0xbb,0x29,0xb6,0xa0,0x9a,0x92,0x4e,
+  0xbd,0xdf,0xea,0x8a,0xbc,0x92,0x4f,0x2e,0x2f,0x38,0x46,0x43,0x46,0x8e,0xda,0x4f,
+  0x7f,0x4a,0xd5,0x15,0x8e,0xbe,0xbc,0x85,0x8e,0x12,0x46,0xf7,0xb1,0xa3,0x52,0x5a,
+  0xf7,0xa,0x53,0xa9,0xd0,0xf6,0x26,0x22,0xd7,0x88,0x7a,0x89,0xc8,0x70,0xbc,0x9a,
+  0xcb,0x2b,0x8f,0xcb,0x5c,0x31,0x96,0xd3,0xb4,0xbd,0x93,0xc9,0x23,0xa2,0x7c,0x24,
+  0xed,0x90,0x3d,0x8e,0x71,0x4,0x6d,0x25,0x5a,0xcb,0xa3,0xfa,0xef,0xeb,0xb5,0x97,
+  0x32,0x8a,0xdf,0x15,0xc7,0xc4,0xd1,0xe1,0xad,0xa4,0x32,0x4b,0x2c,0xb5,0x67,0xd4,
+  0xbe,0x80,0x30,0x98,0xc1,0xf9,0x59,0xad,0x2b,0xd5,0x46,0x9b,0x17,0xa1,0x1e,0xba,
+  0xc1,0x89,0xe1,0x99,0xa6,0x72,0xbb,0xd9,0xae,0xd9,0x89,0x96,0x39,0x2d,0x64,0x91,
+  0xce,0x96,0x77,0x36,0xe0,0x6c,0x64,0xc,0xde,0x69,0xb4,0x3a,0x3f,0xe,0xba,0x54,
+  0xa2,0x63,0x4d,0xe7,0xbf,0x74,0xbc,0xef,0x2b,0x7e,0xdf,0xfb,0x7e,0xe4,0x61,0x2c,
+  0x23,0x78,0x74,0x6c,0x85,0xad,0x91,0xee,0x0,0xd4,0x79,0x92,0x3d,0xa7,0x77,0xb4,
+  0x0,0x1b,0xec,0x57,0x6,0xa5,0x9f,0xf5,0xef,0xd5,0x4c,0xd8,0xf2,0xae,0xf3,0xf3,
+  0xc7,0x1,0x67,0x96,0xf8,0xed,0xf6,0xdb,0xb5,0xe0,0xff,0x0,0x10,0x84,0x46,0xa,
+  0x61,0xad,0x21,0xd2,0xdc,0x3e,0x4f,0x31,0x8e,0x26,0x47,0x12,0xe7,0xb8,0x92,0x49,
+  0xed,0x35,0xaf,0x6a,0x9,0x1d,0xf6,0xd1,0xeb,0x1d,0xc5,0xad,0xcc,0x1c,0x23,0x2c,
+  0xf6,0xbb,0x1a,0xf6,0x3c,0xe1,0xe4,0xd0,0x3e,0x39,0x6a,0x64,0x74,0x24,0x92,0x37,
+  0x7,0xd5,0xc5,0xbd,0xb5,0xd3,0xa2,0x82,0x51,0xb1,0xed,0x7b,0x43,0xda,0x6a,0xd7,
+  0xa,0x82,0x3b,0x41,0x41,0xf5,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,
+  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x4,0x39,0xf5,0xfb,0xd5,
+  0xfb,0xfc,0xff,0x0,0x31,0x93,0x1d,0x89,0xbb,0x9a,0xd3,0xd,0x80,0x98,0xc5,0x17,
+  0x97,0x21,0x68,0x9a,0xee,0x19,0x8,0x75,0xc7,0x84,0xfe,0xeb,0x86,0xd6,0x57,0xb3,
+  0x5e,0xd4,0x83,0x67,0xe1,0x7e,0xae,0xde,0xf3,0xee,0x29,0xc9,0x38,0xdf,0x29,0xc9,
+  0x5a,0x58,0xe5,0xa6,0xb1,0xdb,0x8d,0xbd,0x2d,0xf2,0x3c,0xe6,0x96,0x91,0x27,0x98,
+  0x2b,0xb0,0x96,0x90,0xd2,0x76,0xd3,0x42,0x74,0xd1,0x2c,0x57,0x5,0xce,0xe1,0xaf,
+  0x71,0xd7,0x13,0xe2,0xf2,0xb6,0x72,0x5b,0x5e,0xc7,0xa4,0x91,0x48,0xb,0x76,0x83,
+  0xab,0x5c,0x3b,0xda,0x7e,0x66,0xb8,0x68,0x83,0x5,0x64,0xf9,0x18,0x5f,0x4,0x84,
+  0xef,0x8f,0x4a,0xf7,0xf6,0xb4,0xfe,0xa,0xa3,0x25,0x68,0xe3,0xe6,0x54,0x1a,0x57,
+  0x53,0xf0,0x41,0x7b,0x74,0xe6,0x48,0xc1,0x28,0xab,0x5f,0xd2,0x43,0x4d,0x4d,0xe,
+  0x87,0xf3,0x41,0x22,0x3e,0xdb,0xfd,0x42,0x9a,0xeb,0x13,0x2f,0x1d,0xb8,0x98,0xb,
+  0xec,0x35,0x1f,0x66,0xc3,0xa1,0x92,0xc9,0xc6,0x85,0xa7,0xf8,0xbc,0xa7,0x9a,0x7b,
+  0x88,0xee,0x59,0xad,0x24,0x73,0x1e,0xd7,0xb1,0xaf,0x69,0xab,0x5c,0x2a,0x8,0xf6,
+  0xaa,0xcb,0xea,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0xd,0x3f,0xd5,0x8e,0x65,
+  0x90,0xe2,0x1c,0x13,0x29,0x9c,0xc6,0x5a,0x7d,0x6d,0xf5,0xa4,0x6d,0x31,0xc4,0x7e,
+  0x56,0x7,0xbc,0x30,0xca,0xf1,0xda,0xd6,0x6e,0xad,0x3b,0x50,0x41,0x2e,0x43,0xcb,
+  0x39,0x7,0x20,0xbe,0x17,0x99,0x6c,0x84,0xf9,0x9,0xd9,0x51,0xe7,0x5c,0x3c,0xc9,
+  0x40,0xe2,0x5c,0x5a,0xc0,0x7e,0x56,0xd4,0xf4,0xa,0x8b,0xf,0xac,0x63,0x67,0x86,
+  0x37,0x6a,0xe7,0x83,0xe0,0x27,0xa0,0xa6,0x84,0xa0,0xb8,0xde,0x1c,0xed,0xa5,0xa4,
+  0xf9,0x60,0x39,0xb2,0x1d,0x6,0xb5,0xec,0x41,0x4e,0x49,0x9a,0x6,0x8f,0x23,0x76,
+  0xba,0x74,0xee,0xec,0x45,0x60,0x6e,0x7e,0xa2,0xe6,0xf4,0xc3,0x10,0x32,0x4a,0xe3,
+  0xb4,0x6,0xf6,0xfb,0x11,0x19,0x3b,0x5c,0x23,0x2c,0xe4,0x8d,0xd7,0xec,0x26,0x5a,
+  0x87,0x36,0x36,0xd4,0xb7,0x4d,0x7c,0x5b,0x6a,0x50,0x6d,0x11,0xcb,0xf,0x9c,0xd9,
+  0x5a,0xc,0x6c,0x2d,0xf1,0x7,0xf8,0x85,0x4f,0x42,0xf,0x75,0x3a,0x20,0x4d,0x3b,
+  0xcb,0x83,0x1c,0xe7,0x47,0xad,0x58,0xe0,0xd6,0x90,0x45,0x6b,0xdb,0xd5,0x15,0xf2,
+  0xc3,0x14,0xcb,0xbb,0xfb,0x76,0x4d,0x72,0xcb,0x5b,0x49,0xa6,0xd9,0x2c,0xa2,0x3f,
+  0x18,0xe,0x14,0xfe,0x20,0x5,0x7f,0x25,0x2d,0x31,0x39,0xb8,0x53,0xe6,0x16,0x16,
+  0xd0,0xc0,0xd3,0xfe,0x2a,0x3b,0x78,0xdb,0x6a,0x5c,0xe,0x8d,0x63,0x43,0x5a,0xd6,
+  0x93,0xec,0x1a,0xa9,0xa,0xd0,0x3d,0x78,0xf5,0x3b,0x97,0x71,0x29,0xf0,0x87,0x8e,
+  0x49,0x14,0x50,0x4d,0x24,0xe2,0xf1,0xf3,0x46,0xd9,0x5b,0x21,0x88,0x32,0x8c,0x35,
+  0xd4,0x37,0xc4,0x6a,0x5a,0x41,0x54,0xc6,0xd9,0xe9,0x2f,0xaa,0x56,0x1c,0xff,0x0,
+  0x4,0xfb,0x91,0xf,0xd1,0xe5,0xac,0x9c,0xd8,0xb2,0x76,0x55,0xa8,0x6b,0xdc,0x2a,
+  0xd9,0x23,0x3d,0xb1,0xbf,0xb2,0xba,0x8e,0x87,0xbc,0x91,0xbc,0xa0,0xf3,0x23,0x4b,
+  0x98,0xe6,0x83,0x42,0x45,0x2a,0x82,0x34,0x72,0xcf,0xb7,0xbe,0x29,0x5,0xfc,0x8f,
+  0xb5,0x6c,0xf8,0xd6,0xc8,0xe2,0x49,0x8c,0x89,0x9a,0xe2,0x49,0x22,0xbe,0x6d,0x5d,
+  0x51,0xfd,0x4a,0x34,0xe5,0x1c,0x8b,0xd1,0x4e,0x65,0x64,0xf9,0xa7,0xb5,0x8e,0xdb,
+  0x23,0x66,0xc2,0x76,0xca,0xc9,0x5b,0xb,0xcb,0x7b,0x37,0x36,0x42,0xca,0x3b,0xdc,
+  0xe4,0x31,0xa1,0xd9,0xcb,0x6b,0xf5,0x4f,0xb1,0x99,0x8e,0x8e,0x73,0x56,0x30,0x97,
+  0x7,0x34,0x3d,0xa7,0xb1,0xc0,0x9a,0xfe,0x2a,0xb2,0xca,0x45,0x6d,0x38,0x26,0x36,
+  0xce,0x40,0x75,0xe,0xd7,0x35,0xaf,0x6e,0x9d,0xc6,0x8d,0x77,0xe6,0x82,0x85,0xc8,
+  0xba,0x12,0x3c,0xb5,0xed,0x1,0xc4,0xd6,0x36,0xb0,0xed,0x1e,0xdd,0x4d,0x51,0x5e,
+  0xed,0xad,0x61,0x2f,0x74,0xf9,0x7,0x3d,0xd6,0xb6,0xf1,0x3a,0x57,0xc0,0xc7,0x10,
+  0x24,0x75,0x6b,0x57,0x6d,0xfd,0xde,0xc4,0x46,0x3a,0xe1,0xf2,0xcf,0x11,0x99,0x85,
+  0x91,0x54,0x81,0xe4,0xb7,0x40,0x1a,0x47,0x46,0x80,0x34,0xd,0x54,0x51,0xb3,0x7b,
+  0xc5,0x98,0x63,0xf5,0x74,0x6e,0x20,0xd7,0xd8,0x74,0x44,0x56,0x85,0xae,0x8a,0xe1,
+  0x92,0x2,0x4e,0x95,0x14,0xee,0x28,0xac,0xad,0xa5,0xc5,0xb8,0xfd,0x3b,0x89,0x83,
+  0xb,0xa9,0x46,0x92,0x2a,0x6a,0x74,0x3,0xda,0x83,0x30,0xdc,0x85,0x95,0xab,0x19,
+  0x1c,0xb7,0x91,0xdb,0x77,0x99,0x9c,0x4e,0xda,0xe,0xa0,0x75,0x3e,0xe5,0x96,0x96,
+  0x59,0x1e,0x6b,0x89,0x8e,0x17,0xc3,0x13,0xdf,0x79,0x2b,0xe,0xe6,0xba,0x10,0x58,
+  0xc3,0x4e,0x85,0xc4,0xd3,0xa7,0x78,0xa,0xa6,0xb5,0x4c,0x87,0x20,0xbe,0xc8,0x38,
+  0xc4,0x40,0x82,0x39,0xb4,0x2c,0x8c,0x54,0xd3,0xb2,0xa4,0xf7,0xaa,0x9a,0xb5,0x73,
+  0x25,0x6d,0xa1,0x64,0x9d,0x1e,0xe0,0x18,0x7a,0x75,0x76,0xa0,0x7e,0xd4,0x19,0x20,
+  0xe2,0xd8,0x83,0x69,0x52,0x0,0x35,0xf7,0x14,0x14,0xe0,0xc8,0xdf,0xc7,0x6b,0x7f,
+  0x63,0xf,0x86,0xb,0x89,0x2d,0x9f,0x3b,0xeb,0xae,0xe8,0x4b,0xdc,0xc1,0xf8,0xbc,
+  0xa0,0xf8,0xe8,0xdb,0x21,0x4,0x69,0x27,0xef,0x17,0x12,0x41,0xf8,0xaa,0x8f,0x86,
+  0x3,0xb8,0xd7,0x55,0x5,0x68,0xa2,0x20,0x54,0xe8,0x7,0x42,0x8a,0xd9,0xfd,0x36,
+  0x6b,0x87,0xa8,0xfc,0x60,0xf9,0x9e,0x5b,0x5b,0x7f,0x13,0xa4,0x70,0x3b,0x4d,0x1b,
+  0xa9,0xd7,0xbf,0x45,0x28,0x9d,0xd8,0x1b,0xfa,0x1f,0xa3,0x90,0xf7,0x98,0x89,0xfc,
+  0xda,0xa4,0x5a,0xcd,0xaa,0x82,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,
+  0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0xb,0x2c,0x94,0xcf,0x1,0x91,0x33,
+  0xab,0xb5,0xd3,0xa9,0xd7,0x40,0xa5,0x58,0xfc,0xfc,0xf5,0x2b,0xe8,0xc7,0x3e,0xe4,
+  0x83,0x14,0xe6,0x8b,0x4f,0xf2,0x37,0x66,0x0,0xc2,0xb,0x76,0x99,0x4f,0xcb,0xec,
+  0xad,0x55,0x88,0xc0,0xdb,0xdc,0xb9,0xcc,0x1,0xc2,0x85,0xa7,0x47,0x0,0x43,0x86,
+  0x94,0x3f,0x92,0xa3,0x6e,0xc2,0xc9,0x71,0xc8,0x2e,0xad,0x31,0x59,0x3c,0xa8,0x13,
+  0x90,0xdb,0x7c,0x4c,0xb7,0x8e,0x26,0x26,0x82,0x4b,0xbc,0x97,0xc8,0x3,0x9e,0xc0,
+  0xe3,0xf2,0x1d,0x40,0x3e,0xf4,0x56,0xb3,0xcd,0x78,0xc7,0x20,0xe3,0x39,0xb6,0x59,
+  0x67,0xad,0x9d,0x6b,0x23,0x9a,0x76,0xbd,0x86,0xad,0x92,0x30,0x74,0x7c,0x72,0xd6,
+  0x8f,0xa1,0xeb,0xdd,0xd1,0x11,0x4a,0x7,0x6d,0xd,0x7d,0x7c,0x43,0xb8,0x76,0x20,
+  0xc8,0x44,0x5a,0xf6,0xb9,0xa0,0x83,0xbc,0x7c,0xdd,0x9d,0x7b,0x11,0x59,0x9e,0x9,
+  0x9f,0x93,0x8b,0xf3,0x6c,0x5e,0x56,0xb4,0x65,0xbc,0xfe,0x55,0xd8,0x26,0x81,0xd0,
+  0x4d,0xfa,0x72,0x8a,0x9f,0xe5,0x75,0x6a,0xa0,0x9d,0x5c,0x7a,0xf1,0x8f,0x88,0xdb,
+  0xef,0xf,0x68,0xf1,0xc0,0xf6,0x90,0x5a,0xe6,0x1d,0x6a,0xd2,0x3a,0x8e,0xd5,0xa,
+  0xcc,0x2a,0x82,0x2,0x2,0x2,0x2,0x2,0x2,0xe,0x5f,0xcb,0xbe,0xe3,0x7d,0x36,
+  0xe3,0x19,0xf1,0x85,0xb9,0xb8,0x9a,0xf6,0x66,0x55,0xb7,0x93,0x59,0x30,0x4d,0x1d,
+  0xbb,0xc6,0x9b,0x1e,0x77,0xa,0xbb,0xbc,0x36,0xb4,0x41,0x1a,0x3d,0x5f,0xf5,0xb7,
+  0x3d,0xea,0xd,0xdb,0xad,0xd8,0xe,0x3f,0x8d,0xc2,0xfa,0xdb,0xe3,0xda,0x7c,0x52,
+  0xed,0x3e,0x19,0x2e,0x5c,0x3e,0x77,0x77,0x37,0xe5,0x6f,0xbf,0x54,0x1c,0xec,0x31,
+  0x8d,0x60,0xdc,0xd0,0x7a,0x9a,0x77,0xaa,0x31,0x76,0xf1,0x5e,0x1c,0x8b,0xde,0xf0,
+  0x58,0x68,0x5d,0x5d,0x68,0x5a,0x74,0x0,0x1e,0xe4,0x19,0x6b,0xdb,0xf7,0xf9,0x40,
+  0x48,0x77,0xb5,0xa0,0x52,0xba,0x91,0x41,0xde,0x50,0x67,0x38,0xf7,0xa6,0xf9,0xbe,
+  0x41,0x87,0x93,0x27,0x2b,0x5d,0x6b,0x6e,0xe1,0xff,0x0,0xc1,0x8c,0x9d,0xb2,0x4a,
+  0xde,0xa6,0x46,0x82,0x3e,0x5e,0xc1,0xdf,0xd8,0xa6,0xae,0x2b,0xc3,0xc1,0x39,0x5f,
+  0x1b,0x63,0x5d,0x2f,0x1d,0xba,0x99,0xd7,0xac,0x26,0x1b,0x93,0x10,0x3a,0x83,0x5f,
+  0x6,0xa1,0xcc,0xa8,0x15,0xda,0xe0,0x9a,0x65,0x5b,0xca,0x2e,0xda,0xe0,0xcb,0xeb,
+  0x7b,0x8b,0x79,0x8f,0xcc,0xe9,0x23,0xf2,0xda,0xd2,0x3a,0x8a,0x6b,0x53,0xde,0xa9,
+  0x8c,0x6b,0xbe,0x95,0xef,0x73,0xf6,0xec,0x6b,0x45,0x77,0x46,0x48,0x5,0xc3,0x43,
+  0xa7,0xb5,0x11,0xf6,0xdd,0xc4,0x37,0x6d,0xb3,0x89,0x76,0x84,0x47,0xa1,0x75,0x7b,
+  0x36,0x83,0x41,0xf0,0x41,0x5a,0x5c,0xdd,0xbc,0xb6,0xf2,0x59,0xcf,0x5b,0x7b,0x92,
+  0x46,0x9b,0x76,0xa,0xf4,0xa8,0x27,0xa1,0x34,0x53,0x17,0x52,0x97,0xed,0xe3,0xd5,
+  0xf8,0x32,0xf8,0xa8,0xb8,0xc6,0x66,0x56,0xc7,0x95,0xb1,0x8f,0x6d,0xb4,0xc7,0x41,
+  0x73,0x14,0x60,0x34,0x38,0x1f,0xe3,0x68,0xf9,0x87,0xc7,0xbe,0x81,0xc6,0xfd,0x62,
+  0xe6,0xf7,0x7c,0x8b,0x9a,0x5e,0xb0,0x47,0x71,0x6f,0x65,0x88,0x79,0xb6,0x8a,0xc2,
+  0xe8,0x0,0x63,0x91,0xbf,0xef,0xb8,0xc6,0xda,0xed,0x73,0xc8,0xaf,0x53,0xa0,0xea,
+  0x90,0xab,0x5f,0x4b,0xb9,0xbc,0xbc,0x3f,0x9e,0x58,0xe4,0x83,0xc8,0xb1,0xba,0x2d,
+  0xb4,0xc8,0xc6,0x3a,0x18,0xa5,0x20,0x35,0xe4,0x7f,0x23,0xa8,0xe4,0x13,0x7e,0x9,
+  0x99,0x34,0x4d,0x91,0x9d,0x1d,0xf9,0x1e,0xd0,0x88,0xf6,0x83,0x4d,0xf5,0x57,0x91,
+  0xf1,0x7e,0x3b,0xc5,0x65,0xc8,0xe7,0xaa,0xe1,0xb8,0x47,0x63,0x4,0x66,0x93,0x4d,
+  0x70,0x41,0x2d,0x8d,0x87,0x5e,0xc0,0x49,0x27,0xa0,0x45,0x88,0x73,0xca,0xb9,0x2c,
+  0xdc,0x9a,0x67,0xcd,0x98,0x91,0xd2,0x5b,0x9f,0x14,0x36,0x11,0x9a,0x45,0xb,0x4f,
+  0x60,0x1d,0x49,0xef,0x77,0x52,0x83,0x51,0xc9,0x60,0xe1,0x82,0x2f,0x36,0xcb,0x71,
+  0xdb,0xab,0x63,0x3e,0x2a,0x8f,0xe5,0xd0,0x6a,0xaa,0x2c,0x46,0x67,0x25,0xfe,0xdc,
+  0x30,0x97,0xb8,0xa,0x54,0xd4,0x9e,0xf3,0xe1,0x41,0x59,0x97,0x99,0x93,0x6f,0xe6,
+  0xce,0xc8,0xfc,0xaf,0xe0,0x35,0x6b,0xcf,0xba,0xb5,0x8,0x2b,0xe3,0x6e,0x62,0xbd,
+  0xf3,0x18,0xe6,0xd1,0xee,0x63,0x9b,0x35,0xe,0xae,0xe,0xd0,0x34,0x7f,0x4a,0xb,
+  0x5f,0xf1,0xd7,0x76,0xb7,0x1a,0x87,0x3e,0x2d,0x77,0x74,0x20,0x80,0x3a,0xa2,0x2c,
+  0x59,0x74,0x45,0xe9,0x67,0x58,0xdc,0x69,0xfe,0x95,0x8,0x32,0x77,0x36,0xe1,0xcd,
+  0x8e,0xba,0xb5,0xba,0xd3,0xbc,0x76,0x83,0xec,0x45,0x5a,0xc7,0x8d,0x7b,0xe2,0x92,
+  0x5b,0x4b,0x49,0x5f,0x1c,0x34,0x12,0xcb,0xb,0x5e,0xfd,0x85,0xdd,0x37,0x39,0xb5,
+  0xa5,0x68,0xa6,0x98,0xb5,0xb3,0xc6,0xc7,0x73,0x77,0xe4,0xba,0x53,0xe6,0xbe,0xa5,
+  0xa1,0xfe,0x12,0x69,0xaf,0x6a,0xa3,0x35,0x67,0x8e,0xb5,0x6c,0x26,0x17,0x46,0x1f,
+  0xb6,0x85,0xc3,0xb0,0xd1,0x5,0x3b,0xbb,0x58,0x5d,0x72,0xc9,0x5e,0xcd,0x23,0x20,
+  0x50,0x69,0xe1,0x3e,0xee,0xc4,0x14,0x73,0x2f,0x8a,0xb6,0x76,0xf1,0x8e,0x8f,0xdf,
+  0x4a,0x74,0xd,0x1f,0xf3,0x41,0xf4,0x90,0x1b,0x43,0xd8,0x7,0xe0,0x4d,0x7f,0xd1,
+  0x45,0x78,0x82,0xce,0x76,0xe2,0xef,0xb2,0x24,0x96,0x5b,0x7d,0x44,0x30,0x9d,0x2a,
+  0x1c,0xed,0xae,0x76,0xb4,0xe9,0xb5,0x54,0x78,0xb6,0x91,0x8e,0x71,0x23,0x6f,0x78,
+  0x1d,0xa5,0x11,0x7b,0x13,0x1a,0x77,0x17,0x33,0x51,0xda,0x8a,0xf9,0x40,0x46,0xb4,
+  0xd5,0xd4,0xad,0x7b,0xbd,0x88,0x2f,0xf8,0xb5,0xfc,0xb1,0x72,0xdc,0x4b,0xed,0x8,
+  0xfa,0x88,0x2f,0x2d,0x9e,0xd0,0xe1,0x50,0x4f,0x9a,0x5,0x8,0x3d,0xe1,0x4a,0x27,
+  0x4c,0x44,0x8b,0xa8,0xdc,0xd3,0x41,0xe6,0x2,0xd7,0x7c,0x54,0x69,0xb8,0xaa,0xc8,
+  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
+  0x80,0x80,0x80,0x83,0x40,0xf5,0xb7,0x99,0xc1,0xc4,0xf8,0x35,0xf6,0x40,0xbf,0x6d,
+  0xe4,0xd1,0xba,0xd7,0x1e,0xd0,0x68,0xe3,0x71,0x3b,0x4b,0x5a,0xe0,0x7f,0x91,0xbb,
+  0x9f,0xf0,0x52,0xaa,0x4,0x1a,0x3d,0xc4,0x97,0x92,0xe2,0x49,0x73,0x8f,0x79,0xf6,
+  0xfb,0x56,0x91,0x5a,0x18,0xe5,0x70,0x2,0x47,0xee,0x3f,0xc6,0x48,0x4,0x1,0xdf,
+  0xec,0x54,0x56,0xb7,0xb1,0x37,0x57,0xf6,0x96,0x90,0xb9,0xbe,0x7d,0xc4,0x8c,0x8a,
+  0x3d,0xc4,0x80,0x1f,0x21,0xa6,0xa5,0x4a,0x37,0xbb,0x3c,0x17,0x2d,0xf5,0x2b,0x14,
+  0xfe,0x3d,0x73,0x72,0xcf,0xab,0xe2,0xd1,0xb9,0xd6,0x17,0x17,0x0,0xee,0x77,0x98,
+  0xe0,0xc3,0x6f,0x2c,0xba,0x9f,0xdc,0xab,0x1c,0x7b,0xb5,0x53,0x5a,0xc6,0x8f,0x2e,
+  0x2f,0x2b,0x89,0xba,0x93,0x17,0x96,0xb7,0x75,0x9e,0x46,0xd4,0x88,0xe6,0x86,0x4d,
+  0x8,0x4,0x78,0x48,0x22,0xa0,0x83,0xa6,0xa2,0xa1,0x54,0x56,0x8b,0xf4,0xdf,0xb0,
+  0x1d,0x34,0xd3,0xd8,0x7f,0xe0,0x50,0x7d,0x99,0x80,0xc8,0x49,0xd5,0xae,0xf8,0xe8,
+  0x47,0x44,0x12,0xb7,0xed,0xff,0x0,0x95,0x49,0x90,0xe0,0x78,0xf3,0x24,0xa6,0x4b,
+  0xcc,0x34,0x8e,0xb0,0xb9,0xdd,0xf3,0x6c,0x67,0x8a,0x2f,0x87,0x94,0xe0,0x7,0xb9,
+  0x4a,0xae,0xe4,0xc7,0xb5,0xec,0x6b,0xda,0x6a,0xd7,0x0,0x41,0xf6,0x14,0x65,0xf5,
+  0x1,0x1,0x1,0x1,0x1,0x6,0x8d,0xeb,0x47,0x29,0x1c,0x7b,0xd3,0xbc,0xcd,0xcc,
+  0x77,0xbf,0x43,0x7b,0x2d,0xbb,0xa0,0xb2,0x9d,0xa3,0x73,0xfc,0xf9,0x7c,0x2c,0x6b,
+  0x5,0x47,0x89,0xda,0xeb,0xfb,0xbf,0x37,0x62,0x2c,0x41,0x11,0x6b,0x1f,0x95,0x57,
+  0x12,0xfd,0xdf,0x31,0xaf,0x69,0xeb,0xd5,0x54,0x78,0x70,0xd,0xf9,0x34,0xa7,0x62,
+  0xf,0x9b,0x9,0x6e,0xd7,0x9d,0xa4,0x83,0xa8,0xfc,0x90,0x65,0xec,0xac,0xa1,0xc8,
+  0xe2,0xed,0xee,0x4,0xc0,0x65,0xad,0xc3,0xe3,0x7d,0xb8,0x14,0x6b,0x99,0x46,0x98,
+  0xe4,0x24,0xff,0x0,0x11,0xa8,0xd3,0xa1,0xa,0x2b,0x76,0xe2,0x7e,0x92,0x3e,0x59,
+  0xad,0xef,0xf9,0x4,0x2e,0x78,0x96,0x92,0x59,0xe3,0x48,0x3e,0x3a,0x9a,0x3,0x27,
+  0x7e,0xbd,0x8a,0x5a,0xb2,0x24,0xff,0x0,0x4,0xf4,0xf6,0xd2,0xd6,0xde,0x2c,0x86,
+  0x52,0x16,0xc9,0x71,0x41,0xf4,0xd6,0xc4,0xf,0x2e,0x26,0xb7,0xe5,0xd3,0xa1,0x3a,
+  0x69,0xdc,0x92,0x16,0xb7,0x9b,0x9b,0x2b,0x4b,0x96,0x96,0xcf,0x13,0x64,0x7,0xb4,
+  0xf5,0xfc,0x46,0xaa,0xb2,0xd6,0x33,0xde,0x9e,0xe2,0xf2,0x70,0x39,0x8e,0x8e,0x29,
+  0x80,0x3b,0x99,0x5,0xc4,0x6d,0x91,0x95,0x1e,0xf0,0x75,0xf6,0xa8,0xba,0xe1,0xfe,
+  0xa3,0x7a,0x1f,0x87,0xc8,0xc3,0x3c,0xb8,0xab,0x41,0x8c,0xcf,0x5b,0x92,0xf8,0xe2,
+  0x88,0xf9,0x70,0xce,0xe1,0xff,0x0,0xdb,0x7b,0x4f,0x85,0xbb,0xbf,0x75,0xcd,0xed,
+  0x55,0x6a,0x3b,0xde,0x38,0x5b,0x3d,0xd6,0xd7,0x96,0x92,0x43,0x75,0x11,0x73,0x5f,
+  0x1c,0x80,0xb6,0x46,0xb8,0x1e,0xed,0xd,0x55,0x65,0x77,0x41,0x35,0xa4,0x6f,0x96,
+  0x36,0xcf,0x6b,0xb6,0xa1,0xaf,0x1e,0x2d,0x4e,0xbb,0x5c,0x3a,0xd3,0x5d,0xa,0x4,
+  0x30,0xdf,0xe2,0x2e,0xe2,0xbf,0xc2,0x4c,0xff,0x0,0xfe,0x3c,0x8d,0x95,0x96,0xe4,
+  0x9a,0xb5,0xcd,0xd4,0x3a,0x39,0x2,0x2a,0xfb,0x90,0x73,0x79,0xb9,0x5f,0x27,0xbf,
+  0xcc,0x5d,0x5b,0x45,0x6b,0x73,0x3b,0x62,0x64,0x8d,0x83,0x71,0x6b,0xb6,0x33,0xcb,
+  0x6b,0xdc,0x4f,0x57,0x90,0xd0,0x1d,0xed,0x51,0x16,0xdb,0x5,0xd4,0x11,0xf9,0x60,
+  0x8d,0x8e,0x74,0x64,0x91,0x4f,0xd,0x3,0x98,0x49,0x1f,0x10,0xa6,0xaa,0x5c,0x7d,
+  0xbf,0x7a,0x8b,0x1e,0x7f,0x0,0x71,0x39,0x9,0x98,0x33,0x38,0xc6,0xb6,0x39,0x99,
+  0x5a,0x19,0x23,0x63,0x43,0x59,0x36,0xbf,0xc4,0x34,0x77,0xf3,0xf,0x6a,0x15,0xd7,
+  0x55,0x47,0x20,0xfb,0x81,0xe1,0xb9,0xe,0x5d,0xc7,0x19,0xe,0x3e,0x66,0xc5,0x91,
+  0xc6,0x5c,0xb6,0xe2,0xd0,0x4a,0x48,0x8d,0xfe,0x2,0xc7,0x46,0xe3,0xae,0xdd,0xd5,
+  0xd1,0xdd,0xea,0x34,0x89,0x37,0xb8,0x9e,0x53,0x8b,0xb8,0x92,0xb,0xac,0x53,0x9b,
+  0x73,0x19,0xa4,0xb1,0x1d,0xa5,0xc0,0xeb,0xd0,0x77,0x2a,0x98,0xc6,0xdc,0x5d,0x65,
+  0xe3,0x70,0x32,0xe3,0xa6,0x68,0x1a,0xee,0x73,0x5c,0xed,0x48,0xf6,0x74,0x55,0x16,
+  0xaf,0xc8,0xe4,0x5c,0xef,0xff,0x0,0x6c,0xf6,0x9a,0xd4,0x1f,0x2d,0xd5,0x3e,0xed,
+  0x10,0x5b,0xdd,0xdd,0x64,0x2e,0x5c,0x37,0xc3,0x29,0xa7,0xee,0x6,0x3b,0x4a,0x7c,
+  0x2,0xb,0x7b,0x46,0x5d,0x5c,0x5c,0xb6,0x2b,0x56,0x97,0x5c,0x13,0xd1,0xba,0x1,
+  0x4e,0xd2,0x7b,0x29,0xed,0x41,0xbf,0xe0,0x7d,0x3a,0xca,0x65,0xb1,0x77,0x37,0xb7,
+  0x39,0x42,0xd7,0xc4,0x1c,0x23,0xb6,0x63,0xb,0x8b,0xe4,0x6b,0x77,0x50,0xbc,0xd3,
+  0x43,0xd3,0x45,0x2d,0x59,0x1a,0xe6,0x67,0x8f,0xdd,0x62,0xe0,0xc7,0x5e,0x4b,0x3,
+  0xc4,0x57,0x4c,0x32,0x43,0x24,0x8d,0xdb,0xb8,0xb1,0xe4,0x3d,0xa3,0xfa,0x48,0x49,
+  0x4b,0x7,0xcb,0xe,0x43,0x27,0x6,0x37,0xe,0xd7,0x5d,0xde,0xdc,0x48,0x23,0x85,
+  0x8c,0x1,0xa1,0xce,0x77,0xee,0xee,0x71,0x6f,0xe2,0xaa,0x37,0xfc,0x3,0x73,0x5e,
+  0x98,0x67,0x32,0x56,0x72,0x86,0x5e,0xbe,0xe6,0xda,0x33,0x7d,0x6a,0x49,0x68,0x82,
+  0xe4,0x1a,0xb0,0x6e,0x6d,0x43,0xc5,0x1c,0x46,0x8a,0x29,0x91,0xf5,0x3c,0x4e,0xe0,
+  0x32,0xbc,0x7f,0x1f,0x79,0x66,0xe0,0xe7,0x4a,0xe8,0x5a,0x63,0xb8,0x64,0x75,0x21,
+  0xde,0x54,0x95,0x75,0x1e,0x6,0xad,0x28,0x6b,0x52,0xbf,0xb4,0xb6,0x30,0x3f,0x31,
+  0x87,0xb9,0x17,0x38,0x77,0x5c,0xba,0xd6,0x17,0xcc,0xc,0x53,0x87,0x86,0x89,0x1a,
+  0xc9,0x23,0x3d,0x4e,0xd7,0x75,0x65,0x47,0xb9,0x54,0x6b,0x77,0xf7,0x2e,0x74,0xc1,
+  0x91,0x93,0x5a,0x87,0x39,0xbd,0x36,0xeb,0xd0,0xa0,0xce,0x63,0x30,0x6f,0xcb,0x58,
+  0xdc,0x6,0xd1,0xb3,0x44,0xe8,0xdc,0xcb,0x87,0x34,0x96,0xb6,0xa0,0xb5,0xcd,0x24,
+  0x7b,0x8,0x45,0x91,0xe2,0x5e,0x2b,0x9d,0x63,0xf6,0x36,0x16,0x4a,0x48,0x14,0xd8,
+  0xf1,0xa8,0x1e,0xc7,0x50,0xa8,0x63,0xb9,0xfa,0x3b,0xc5,0xe0,0xb6,0xe0,0x8c,0x7d,
+  0xcc,0xd,0x33,0x5d,0x5d,0x3a,0x4b,0xa8,0xa4,0xd,0x78,0x70,0x63,0x4b,0xb,0x5c,
+  0xd,0x41,0xf9,0xca,0x8b,0x1a,0x67,0xaa,0xde,0x8f,0xcb,0x5,0xdf,0xf9,0x5e,0x29,
+  0x8e,0x68,0xb2,0x31,0xd6,0xea,0xca,0x12,0x7c,0x2f,0x1a,0x97,0x46,0xd2,0x4e,0xd0,
+  0x47,0x60,0xd1,0x6b,0x4b,0x1c,0xcd,0x98,0xdc,0xeb,0x58,0x5d,0x35,0x84,0xa1,0x84,
+  0xa,0xbd,0xcc,0xd4,0x1a,0xd3,0xb3,0x54,0x67,0x2a,0x95,0xcf,0x9f,0x6e,0xf6,0xb6,
+  0x78,0xdf,0x1,0x78,0xe,0x69,0x91,0xa5,0xb5,0xaf,0x4a,0x55,0x51,0xb3,0x7a,0x53,
+  0x83,0xff,0x0,0x25,0xcf,0x6c,0xc1,0x69,0x30,0x59,0xff,0x0,0xf3,0x2e,0x8,0xef,
+  0x8c,0x8f,0x2c,0x13,0xfc,0xcf,0x21,0x67,0xd1,0x13,0x56,0xdd,0xb2,0x3a,0x48,0xda,
+  0xd1,0x57,0xee,0x14,0x1d,0xe6,0xaa,0x34,0xdd,0x15,0x64,0x40,0x40,0x40,0x40,0x40,
+  0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x41,0xc,
+  0xfe,0xe8,0x3d,0x43,0x1c,0x93,0x98,0x8c,0x1d,0x94,0xa1,0xd8,0xac,0x9,0x74,0x55,
+  0x69,0xd2,0x4b,0xa3,0x41,0x33,0xf4,0xec,0x65,0x36,0xf,0x71,0x48,0x38,0xbc,0x16,
+  0xd3,0xee,0xae,0xda,0xd7,0x5a,0x8d,0x74,0xf7,0xaa,0x2a,0xc9,0x6c,0x5a,0x6,0xea,
+  0x54,0xea,0x1f,0xd4,0x7c,0x40,0x54,0x78,0xfa,0x59,0xe0,0x9e,0x1b,0x9b,0x59,0x5c,
+  0x6e,0x63,0x7b,0x5f,0x0,0x8c,0xeb,0xbd,0xae,0x5,0xba,0x7b,0x4d,0x28,0x82,0x75,
+  0xe2,0x38,0xf3,0x1d,0x83,0x86,0xfa,0x48,0x19,0x6f,0x7d,0x92,0xb5,0x86,0x69,0xa3,
+  0x8d,0x8d,0x66,0xd9,0xb,0x1,0x78,0x75,0x7,0x5d,0xf5,0x58,0x6d,0xc5,0x7d,0x7e,
+  0xe3,0x2c,0xba,0xc1,0x5b,0x67,0x98,0x7c,0xbb,0xac,0x64,0x82,0xde,0x67,0x86,0x8a,
+  0x9b,0x7b,0x87,0x53,0x52,0x7f,0x82,0x4a,0x11,0xef,0x55,0x2b,0x87,0x47,0x6c,0xe3,
+  0x13,0x4b,0x5e,0x48,0x1a,0xef,0x22,0xae,0xa7,0x6d,0x55,0x65,0xe9,0xee,0x2e,0xa8,
+  0xa5,0x29,0xd4,0xd7,0x5f,0xc1,0x15,0xd2,0xbd,0x0,0xe4,0x73,0x62,0xf9,0xdc,0x78,
+  0xd9,0x64,0x2d,0xb4,0xcd,0x31,0xd6,0xcf,0x8f,0x71,0xda,0x67,0x60,0xdf,0x3,0xa9,
+  0xd0,0xb8,0x96,0x96,0x57,0xda,0xa5,0x22,0x61,0xe0,0x2e,0x44,0xb6,0x7e,0x55,0x7c,
+  0x50,0x9a,0x53,0xf9,0x4e,0xa1,0xa,0xc9,0xa2,0x8,0x8,0x8,0x8,0x8,0x39,0x7,
+  0xae,0x47,0x85,0x72,0x36,0xc3,0xc1,0xb3,0x39,0x1f,0xa3,0xcb,0x5d,0x96,0x5c,0xe3,
+  0xa3,0x65,0x44,0xbb,0xda,0x1e,0xc6,0x3b,0x75,0xb,0x35,0x2e,0x23,0x63,0x88,0xdc,
+  0x14,0x54,0x5e,0xe4,0xde,0x97,0x73,0x2c,0x5,0xc4,0x91,0xba,0x7,0xdc,0xdb,0x45,
+  0xac,0x77,0x8c,0x8d,0xee,0x85,0xec,0xec,0x76,0xe6,0x83,0xb4,0xf7,0x87,0x5,0x74,
+  0xc6,0xad,0x24,0x73,0xc7,0x20,0x12,0xc6,0xe8,0xcf,0xf1,0x7c,0xcd,0xf8,0x11,0x50,
+  0xaa,0x28,0x5c,0x4d,0x1c,0x40,0xbc,0xbc,0x1a,0x7e,0xed,0x7a,0xd7,0xa7,0xb5,0x6,
+  0xdf,0xe8,0xb4,0x5f,0xe5,0xbd,0x41,0x8e,0xdd,0x90,0x19,0x9b,0x1d,0xa5,0xc4,0x91,
+  0xf8,0x77,0x1,0x24,0x4c,0xde,0xd7,0x38,0x74,0xd,0xab,0x68,0x2b,0xda,0xa5,0x58,
+  0x9a,0xbc,0x57,0x1d,0x6d,0x92,0xb2,0x82,0xfb,0x25,0x6a,0xd6,0xe4,0x21,0x2,0x91,
+  0xd3,0xfd,0xb0,0x7b,0xbf,0xab,0xbb,0xb1,0x45,0xad,0xb0,0x0,0x5,0x6,0x80,0x74,
+  0xa,0xb2,0x20,0x20,0xc6,0x67,0x30,0x91,0x64,0xa1,0xec,0x6c,0xed,0x7,0x63,0xfa,
+  0x7b,0xaa,0x8b,0x2b,0x8b,0x7a,0x91,0xe9,0x76,0x3f,0x92,0xc6,0xd8,0x72,0x11,0x7d,
+  0x2e,0x52,0xde,0xbe,0x45,0xf0,0x60,0x73,0xb6,0xf4,0xd8,0xee,0x9b,0x99,0xdd,0xae,
+  0x9d,0x88,0xa8,0xf5,0xcc,0xbd,0x3a,0xe4,0x3c,0x3a,0x68,0xcd,0xde,0xe9,0xf1,0xd7,
+  0x2e,0x2d,0x8e,0xf2,0xd5,0xce,0x2d,0x2e,0x1d,0x58,0x5a,0x69,0xb5,0xd4,0xec,0x3d,
+  0x7b,0x15,0x95,0x9b,0x18,0x3b,0xc,0xa5,0xbc,0x55,0x85,0x93,0xd,0x9f,0x2f,0x96,
+  0xf0,0x5a,0x47,0x61,0x14,0x34,0xa1,0xa2,0xf,0x77,0xbf,0x46,0xcb,0x91,0xe5,0x48,
+  0xd2,0x65,0x8d,0xc1,0xf4,0xd3,0xc2,0xd7,0xd,0xa3,0x5f,0x7a,0xc,0xbe,0xa,0xe6,
+  0x10,0xc6,0xc4,0xe0,0xe,0xc6,0x3e,0x22,0x7b,0xc3,0xb5,0xaf,0xb7,0xe2,0xa5,0x8b,
+  0x2b,0x18,0xe7,0x4e,0xc9,0x24,0x84,0xbc,0x8d,0xae,0xda,0xf2,0x2a,0x2b,0x43,0x51,
+  0xf9,0x15,0x15,0x28,0x7e,0xd8,0x39,0x7d,0xe5,0xdf,0x1e,0xbc,0xc2,0x5f,0x5d,0x49,
+  0x76,0xfb,0xb,0xa0,0xd8,0x3c,0xd7,0x39,0xce,0x8e,0x19,0x63,0xab,0x1a,0xb,0xaa,
+  0x76,0xee,0x63,0xa8,0x3b,0x15,0x47,0x69,0xc8,0xe2,0xed,0x6f,0xad,0xe4,0x8a,0x46,
+  0x80,0xe9,0x5,0x37,0x8d,0xd,0x7b,0xe,0x88,0x6b,0x50,0xc9,0x7a,0x6f,0x61,0x7f,
+  0xb5,0xb7,0xb6,0x50,0x5e,0xec,0x14,0x63,0xe4,0xd4,0x81,0xdc,0x9,0x1,0xc1,0x45,
+  0xd6,0x35,0xbe,0x8b,0xf1,0x91,0x5a,0x61,0xa0,0xa7,0xb6,0x59,0x4f,0xff,0x0,0x52,
+  0x61,0xfa,0x57,0x1e,0x91,0x71,0xf6,0x1,0xb3,0xf,0x69,0xa7,0x4e,0xa6,0x9f,0xf5,
+  0x55,0x30,0xfd,0x31,0xd7,0xbe,0x96,0xd9,0xc0,0x4e,0xcc,0x2d,0xb4,0x91,0xd2,0xb5,
+  0x11,0xb0,0x91,0xf8,0x26,0x1a,0xd7,0xee,0x7d,0x39,0xe3,0x52,0x9d,0x8f,0xc2,0x42,
+  0xd7,0x13,0xa9,0x8d,0xae,0x8c,0xfc,0x4b,0x48,0x45,0xd5,0xd0,0xf4,0xeb,0x1,0x6d,
+  0x69,0x1c,0x16,0x46,0x4b,0x66,0x30,0x1d,0x1a,0x77,0xa,0x9d,0x49,0xf1,0x6b,0xf9,
+  0xa6,0x1a,0xc6,0x65,0xbd,0x9,0xc8,0xf2,0xee,0x3d,0x7b,0x6a,0xec,0xb3,0x1c,0x61,
+  0x94,0x4b,0x88,0x92,0x66,0x3a,0xb1,0x4b,0xb6,0x8f,0x63,0x88,0x27,0xf4,0xdf,0xf9,
+  0x29,0x86,0xb8,0xe,0x67,0xd2,0xfc,0xa7,0x4,0xe4,0x70,0x4b,0x93,0xbb,0xb7,0x75,
+  0xcc,0x7b,0x9f,0x3,0x2d,0x9c,0xe2,0xe6,0xc8,0xd3,0xb7,0x73,0xb7,0x6,0x91,0x43,
+  0x5a,0x7b,0x55,0x67,0x16,0x92,0xdc,0xc8,0x6e,0x62,0x64,0xae,0xdf,0xe7,0x3e,0xba,
+  0xba,0xbb,0xfb,0x75,0xef,0xd6,0x8a,0xaa,0x8d,0xef,0x92,0x5f,0x25,0x2a,0x1b,0xc,
+  0x74,0xa3,0x5b,0xa9,0x3f,0x35,0x28,0x89,0x58,0x16,0xe0,0x24,0xc9,0xc3,0x75,0x26,
+  0x38,0x97,0x4d,0x4,0xbb,0xcd,0xad,0x68,0xd7,0x31,0xed,0x14,0x73,0x3b,0x37,0x55,
+  0xa5,0x54,0xc6,0x4b,0x85,0xf0,0xdc,0xb6,0x63,0x95,0xb3,0xf,0x93,0x86,0xe2,0xda,
+  0xda,0xde,0xb3,0x64,0x84,0x8d,0x2c,0x95,0xb0,0xb7,0xa0,0xdc,0xe0,0x69,0xbd,0xde,
+  0x10,0x96,0x98,0x92,0x7c,0x6b,0x83,0xe0,0x32,0x11,0xdd,0x62,0xed,0xed,0xfe,0x91,
+  0xb2,0x5b,0x36,0x8,0x45,0xb8,0xd5,0xa1,0xaf,0xe,0x14,0x6,0xb5,0x35,0x2,0xa7,
+  0xa9,0x58,0x6d,0xbb,0x61,0xfd,0x2c,0xfa,0xc,0x7d,0xad,0xad,0xdd,0xab,0x6f,0x25,
+  0xb5,0xf,0x10,0x4e,0x4b,0x4b,0x98,0xd7,0x12,0x68,0x1d,0xe1,0x77,0x6a,0xa9,0xac,
+  0xd8,0xe0,0x18,0xfb,0x3c,0x23,0x23,0xb4,0x83,0xc8,0x99,0x85,0xd2,0x3d,0xa0,0x97,
+  0x0,0xe7,0x3a,0xbb,0xa8,0x3f,0x34,0x35,0xab,0xde,0x58,0x5d,0x5a,0x4b,0xb6,0x66,
+  0x96,0xff,0x0,0xb,0xbb,0x8,0xf6,0x2a,0xad,0x3f,0x96,0x70,0x7f,0xf2,0x2f,0xfa,
+  0xdb,0x20,0x20,0xbd,0xa7,0x8e,0x32,0xdd,0xac,0x94,0x77,0xd4,0xd,0x1d,0xed,0x50,
+  0x69,0x30,0xf0,0xfc,0xcd,0xed,0xc7,0xd1,0x5c,0x63,0xa4,0x2c,0x24,0x89,0x8c,0x91,
+  0xee,0x63,0x58,0x3e,0x62,0x6a,0x8,0xe8,0x8a,0xdf,0x38,0xef,0x10,0xb4,0xc4,0x32,
+  0x28,0xb1,0x18,0xa1,0x69,0x6f,0x3c,0x8c,0x2f,0x30,0xc6,0x6a,0xf2,0x8,0x0,0xb8,
+  0xea,0xe2,0xa2,0x3b,0x4e,0x17,0x1d,0x2b,0xae,0x5,0xc4,0xad,0x73,0x19,0x17,0xc9,
+  0xb8,0x53,0x73,0xbe,0x3d,0xca,0xa5,0x6c,0xa,0xb2,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xe7,0x9e,0xb9,
+  0x7a,0x90,0xce,0xd,0xc2,0xa6,0xb8,0xb7,0x78,0x19,0xac,0x8d,0x6d,0x71,0x4c,0xad,
+  0x8,0x91,0xc3,0xc7,0x37,0xba,0x26,0xf8,0xbd,0xf4,0x41,0x4,0xa7,0x95,0xa6,0x42,
+  0xf9,0x5e,0x5f,0x23,0x89,0x2e,0x75,0x6a,0x4d,0x7b,0x4a,0xa2,0xea,0xde,0xe6,0x26,
+  0x34,0x35,0x95,0xab,0xdb,0x47,0x3,0xe1,0xd3,0xdc,0xa8,0xf1,0x2c,0xac,0x1b,0x8d,
+  0x43,0x87,0xb7,0x4f,0xd8,0x83,0xa9,0x7a,0x17,0xe9,0xa5,0xce,0x67,0x90,0x59,0x65,
+  0x2f,0xa0,0x26,0x36,0x9f,0x36,0xd6,0xdd,0xcd,0xa1,0x2c,0x6e,0xbe,0x6c,0x95,0xef,
+  0xe8,0xca,0xfb,0xd6,0x6d,0x6a,0x44,0xc5,0xbc,0xb5,0xd9,0x63,0x8,0xd3,0x74,0x20,
+  0x34,0xd3,0xa7,0x4a,0x1f,0xcd,0x44,0x8e,0x61,0xce,0x78,0xe4,0x39,0x4b,0x1c,0xae,
+  0x1e,0x41,0xfa,0x79,0x28,0x24,0x8d,0x84,0xf4,0xe,0x78,0xab,0xf,0xf6,0xbc,0x2,
+  0xaa,0xa2,0x5,0xa7,0x9f,0xb,0xe5,0xb6,0xb8,0x1b,0x26,0x89,0xce,0x8e,0x56,0x9f,
+  0xdd,0x96,0x33,0xb5,0xc3,0xf1,0xa,0xb2,0xa8,0xd8,0x80,0x93,0x78,0xf1,0x10,0x4f,
+  0x84,0xf7,0xd2,0xa1,0x15,0x77,0x81,0xcb,0x3f,0x15,0xc8,0xac,0x72,0x30,0x9a,0x3a,
+  0xd2,0xe2,0x29,0x98,0x4e,0xa0,0x6c,0x78,0x75,0x7d,0xba,0x68,0x84,0x4e,0xac,0xd,
+  0xdc,0x6d,0xbe,0x6e,0xc2,0xc,0x37,0x2d,0xf0,0x11,0xd0,0x83,0xe2,0x69,0x59,0x5a,
+  0xd9,0xd5,0x64,0x40,0x40,0x40,0x41,0xe2,0x77,0x98,0xe1,0x7b,0xc7,0x56,0x82,0x47,
+  0xbf,0xb1,0x4,0x26,0xf5,0xff,0x0,0x95,0x8c,0xf7,0xa9,0xb7,0xb2,0xc5,0x23,0x66,
+  0xb7,0xc6,0xb6,0x3b,0x28,0x1f,0x18,0xa0,0xac,0x2,0xb2,0xf8,0x87,0xcd,0xfa,0xce,
+  0x75,0xf,0xb3,0x44,0x8a,0xd7,0x30,0x7e,0xa1,0xf3,0x3c,0x64,0xdb,0xad,0x73,0x37,
+  0x7b,0x1b,0xaf,0x97,0x33,0xcc,0xd1,0xba,0x94,0xf0,0xec,0x94,0xbc,0x52,0x82,0x8a,
+  0xa3,0x31,0x6b,0xea,0xe4,0x39,0x3c,0xa8,0x8f,0x95,0x63,0x2c,0xae,0x30,0xcf,0xf,
+  0x12,0x1b,0x38,0x1b,0x5,0xcc,0x6e,0x0,0xd1,0xf1,0x4a,0xd3,0x5a,0xee,0xea,0x1d,
+  0xa1,0x4c,0x5d,0x74,0x47,0xfa,0x21,0x67,0x95,0xb4,0x8f,0x23,0x81,0xc8,0xc5,0x2d,
+  0xb5,0xd3,0x19,0x23,0x19,0x77,0x18,0xdc,0x3,0xda,0x1c,0x1a,0xf7,0x32,0xa4,0x38,
+  0x57,0x50,0x5a,0xb2,0xd3,0x7a,0xf4,0xb7,0xd3,0xb,0xec,0x4,0xc2,0x36,0x36,0xda,
+  0x36,0x86,0x3f,0xea,0x26,0x85,0xb4,0xde,0xf7,0x1a,0xd4,0x90,0x3e,0x1a,0xa2,0x57,
+  0x60,0xc7,0xd8,0xb2,0xce,0x12,0xc6,0xb8,0xb9,0xce,0x3b,0x9e,0xe3,0xa5,0x4a,0xac,
+  0xae,0x50,0x10,0x10,0x10,0x52,0xb8,0xb5,0xb6,0xb8,0x61,0x64,0xf1,0xb6,0x46,0x91,
+  0x42,0x1c,0x3b,0x10,0x69,0xbc,0x8b,0x82,0x43,0x3d,0xb4,0xf1,0x32,0x36,0x5c,0xe3,
+  0xe6,0x69,0x13,0xda,0xcc,0x37,0x2,0xd3,0xd9,0x4a,0x6a,0x7,0xe2,0xa2,0xea,0x3b,
+  0x72,0xcf,0xb6,0xb9,0x9d,0x74,0xf9,0xb8,0xf3,0xc5,0xbd,0xbb,0xda,0x5f,0xe5,0x5c,
+  0x17,0x2,0x1c,0x35,0xa3,0x5e,0x1a,0xe0,0xe1,0xdc,0x7a,0xa6,0xae,0x39,0x7e,0x6b,
+  0xd3,0xee,0x57,0xc6,0x1e,0x6e,0x33,0x56,0xb2,0x1b,0x47,0xfe,0x9b,0x2e,0xb,0xdb,
+  0x34,0x45,0xee,0xd4,0x33,0x73,0x49,0xa1,0x20,0x15,0x65,0x4b,0x16,0xd8,0xdb,0xc7,
+  0xc5,0x3b,0x19,0x10,0x68,0xf0,0x91,0xb5,0xfa,0x92,0xee,0xc0,0x28,0x9a,0x62,0xb3,
+  0xa4,0x96,0x57,0x9,0x80,0xa4,0xce,0xa8,0x94,0x1,0xa0,0x73,0x7d,0x9f,0xd2,0xa4,
+  0x57,0x62,0xfb,0x6a,0xc8,0xc8,0xce,0x47,0x9a,0x60,0xa3,0x7c,0xcb,0x58,0x67,0x6e,
+  0xd1,0x4a,0x98,0xa5,0xd,0xaf,0xe0,0xf5,0x68,0x95,0xf1,0xbc,0x3e,0x36,0xbc,0x74,
+  0x70,0x4,0x7c,0x45,0x51,0x97,0xa4,0x4,0x4,0x4,0x16,0x39,0x1c,0x45,0xb5,0xe3,
+  0x49,0xa7,0x97,0x37,0x64,0xa3,0xfd,0x47,0x6a,0x2e,0xb0,0x17,0x3c,0x67,0x24,0xd0,
+  0x76,0x86,0x4c,0x3d,0x86,0x87,0xf0,0x28,0xba,0xca,0x61,0xa3,0x97,0x1b,0x86,0x71,
+  0xb9,0x68,0x89,0xe1,0xce,0x70,0x6b,0x88,0xed,0xe9,0x54,0x44,0x39,0xf5,0x37,0x96,
+  0xdb,0xf2,0x6e,0x67,0x7f,0x93,0x8e,0xaf,0xb4,0x8d,0xdf,0x4f,0x68,0x5b,0xa1,0x74,
+  0x51,0x12,0xb,0xc8,0xfe,0x77,0x12,0xe5,0x22,0xd6,0x9e,0xc1,0x67,0x3e,0x5e,0xda,
+  0xa5,0xcc,0xd,0x63,0xdc,0x68,0x4b,0x4b,0x48,0xed,0xfc,0x95,0x45,0x5c,0x93,0x6c,
+  0xed,0xe4,0x92,0x28,0xb,0xc6,0xd6,0xea,0x5c,0xed,0xc7,0x5d,0x7b,0x54,0x8b,0x57,
+  0xde,0x9c,0x58,0x43,0x75,0xcb,0x5d,0x8d,0x7b,0xa9,0x13,0xed,0xcb,0xaa,0xcd,0x49,
+  0xf2,0x80,0x94,0x8e,0xee,0x95,0xaa,0xb5,0x22,0x57,0x9c,0x16,0x3e,0xfe,0x28,0x6d,
+  0xfc,0x8f,0x31,0xce,0xa7,0x95,0x23,0x74,0x7d,0x8,0xa8,0x1b,0x87,0x65,0x3b,0x3a,
+  0x28,0xad,0xb3,0x8c,0x70,0xac,0x5e,0xd,0xc6,0xe2,0x30,0xe9,0x2f,0x5e,0xdd,0xae,
+  0x95,0xc6,0xbb,0x41,0xea,0xd6,0xa6,0x25,0xad,0x85,0x54,0x10,0x5b,0xdf,0x58,0x5b,
+  0x5e,0xc2,0x62,0x9d,0x81,0xdf,0xc2,0xea,0xa,0xb4,0xf7,0x84,0x1a,0xb5,0xce,0xb,
+  0x25,0xb,0xdf,0x48,0xbc,0xc6,0x37,0xa3,0xdb,0x43,0x51,0xee,0xea,0x8d,0x3d,0xda,
+  0xf1,0xdc,0x84,0xec,0xde,0x43,0x60,0xe,0xec,0x7d,0x43,0x8f,0xc0,0x4,0x35,0x7f,
+  0x8d,0xe3,0xb7,0x10,0x5d,0x45,0x3c,0xf2,0x33,0x6c,0x67,0x70,0x6b,0x6a,0x4d,0x47,
+  0x4e,0xa1,0x13,0x59,0xf4,0x41,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,
+  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x4,0x4b,0xfb,0xb7,0xcc,0xdb,0xe4,
+  0x39,0x8e,0x2f,0xd,0x6a,0xe1,0x35,0xd6,0x2e,0xd9,0xee,0xba,0x6b,0x7f,0x71,0xd7,
+  0xe,0xe,0x63,0xf,0x60,0x3b,0x1a,0x1d,0xf1,0x48,0xae,0x17,0x16,0x23,0x23,0x24,
+  0xf1,0xf9,0xae,0xb7,0x6e,0xfe,0xaf,0x24,0x92,0xc1,0xee,0x1,0x5d,0x4c,0x5d,0xc3,
+  0x63,0x8f,0x82,0x56,0x8b,0xa0,0x8,0xdd,0xfa,0x8f,0x60,0xde,0x68,0x7a,0x9e,0xad,
+  0xaf,0xba,0xa8,0xae,0xc1,0xe9,0x87,0xa1,0xb0,0xf2,0xdb,0x48,0x73,0xb6,0xd2,0xc1,
+  0x3e,0x33,0xcd,0x7c,0x5b,0x24,0x8d,0xcc,0x2d,0x92,0x27,0x0,0x44,0x83,0x5e,0x9d,
+  0x68,0xe,0xbd,0xea,0x55,0x49,0xfe,0x25,0xc4,0x2c,0x38,0xdd,0x8f,0x91,0x1,0xf3,
+  0xae,0x1f,0xac,0xd7,0x2e,0x68,0x6b,0x9c,0x7b,0x80,0x1d,0x1a,0x3b,0x2,0x25,0xac,
+  0xe4,0xac,0xf,0x89,0xcc,0x3f,0xbc,0x8,0x44,0x68,0xfc,0x96,0xd6,0xb0,0xb2,0x7f,
+  0xdf,0x8d,0xdb,0x4f,0xb8,0xff,0x0,0xcd,0x46,0x91,0x1b,0xd6,0x1c,0x4b,0x71,0x1e,
+  0xa3,0x5e,0xbd,0x91,0xec,0xb6,0xc9,0xc7,0x1d,0xec,0x74,0xe9,0xbd,0xe3,0x6c,0x82,
+  0x9d,0xc6,0x46,0x13,0xf1,0x5a,0x46,0xaa,0xd8,0xfe,0xa1,0x8d,0x78,0xab,0x5c,0xda,
+  0x7,0x53,0xf2,0x28,0x28,0xcf,0x13,0x98,0xff,0x0,0x28,0xd0,0xbf,0xa0,0x23,0xa1,
+  0x6b,0xb5,0xd1,0x4,0xcb,0xf4,0xe6,0xea,0x79,0x78,0x37,0x1d,0xb9,0x96,0x51,0x3c,
+  0xdf,0x43,0x6e,0x4c,0xcd,0x35,0xa9,0x63,0x40,0x1a,0xf7,0x80,0xda,0x1f,0x6a,0xcd,
+  0x69,0xd5,0x60,0x99,0x93,0x42,0xc9,0x59,0xf2,0xbc,0x7,0xf,0x8a,0xac,0x3d,0xa0,
+  0x20,0x20,0x20,0xc3,0xf2,0xac,0xac,0x78,0xdc,0x3d,0xd5,0xd3,0xdd,0xb2,0x3b,0x78,
+  0x25,0xb8,0x95,0xdd,0xcc,0x89,0x85,0xff,0x0,0xe8,0xa5,0x58,0xfc,0xf7,0x7c,0x86,
+  0x57,0xba,0x43,0x52,0x5e,0xe2,0xea,0x7f,0x51,0x25,0x51,0xf1,0xe5,0xac,0x65,0x7,
+  0x75,0x49,0xed,0xa7,0x53,0x52,0xa8,0xb2,0xb5,0xb6,0x99,0xec,0xa9,0x65,0x24,0xba,
+  0xd1,0xac,0xfe,0xb3,0xa7,0xed,0x41,0x3c,0x78,0x2e,0x2,0xd2,0xc5,0xf6,0x82,0x36,
+  0xf,0x34,0x5a,0xc6,0xcb,0xa2,0x4d,0x43,0xcb,0x23,0x6b,0x4b,0xb6,0xf4,0xae,0xed,
+  0x6a,0x16,0x56,0xb7,0xc6,0x31,0x8c,0x68,0x6b,0x1a,0x1a,0xd1,0xd0,0x1,0x40,0xab,
+  0x2f,0xa8,0x8,0x8,0x8,0x8,0x8,0x8,0x29,0xcf,0x6d,0x6f,0x3c,0x7e,0x5c,0xb1,
+  0xb5,0xec,0xfe,0x12,0x3a,0x7b,0x90,0x70,0xaf,0x5f,0xf8,0xd5,0x84,0x3e,0x9b,0x66,
+  0x64,0x68,0x7b,0x24,0xb5,0x74,0x53,0x30,0xea,0xe0,0xb,0x24,0x14,0xd0,0x74,0xa8,
+  0x3d,0x7b,0x14,0x69,0x12,0xe2,0x71,0xdc,0xd7,0x35,0xd5,0x2,0x8e,0x7,0xa6,0xa1,
+  0x45,0x66,0xed,0x66,0xb6,0x36,0x8d,0x7b,0x89,0x13,0x97,0x7,0xb9,0xbb,0x8e,0xa4,
+  0x9a,0x1d,0x16,0x99,0x75,0xf,0xb7,0xa6,0x16,0xf3,0xab,0xd6,0xb3,0xfd,0xb6,0xd8,
+  0x4a,0x4d,0x7d,0xb2,0xc6,0x2,0x8a,0x96,0xf8,0x89,0xb,0xf1,0xd0,0x13,0xa9,0xd,
+  0xda,0x7f,0xb4,0xd1,0x56,0x6a,0xed,0x1,0x1,0x1,0x1,0x1,0x6,0x83,0xeb,0x16,
+  0x4f,0x21,0x67,0xc3,0x73,0x53,0x63,0xeb,0xf5,0x56,0xd6,0x32,0x3a,0x32,0x5,0x48,
+  0xdf,0xe1,0x7b,0xa9,0xfc,0xac,0x24,0xa9,0x5a,0x88,0x48,0xc6,0x88,0xdb,0xe2,0x14,
+  0x7f,0x7e,0xb4,0x70,0x3d,0x10,0x5b,0x5b,0xcb,0x33,0xe7,0x12,0xc8,0x5a,0xfd,0xcd,
+  0x31,0xb9,0x91,0x3a,0x9b,0x18,0x1d,0x41,0x57,0x1f,0x6d,0x7b,0x15,0x46,0x6a,0x79,
+  0x6d,0xe5,0xb9,0x24,0x1d,0xf1,0x6d,0x6b,0x67,0x73,0xb4,0x4,0xb8,0x50,0x6a,0x7b,
+  0x47,0x55,0x99,0x38,0x6a,0xde,0x5b,0x87,0xa0,0x96,0xed,0x1e,0xa5,0xb3,0x73,0x43,
+  0xc3,0xed,0x2e,0xa8,0x69,0xa6,0xad,0x15,0xff,0x0,0xca,0xb4,0xcf,0xd4,0xc7,0xc3,
+  0xe3,0x2c,0xed,0xad,0xa0,0x92,0x28,0xc0,0x90,0xc6,0xd1,0xbb,0xad,0x34,0x1d,0x3b,
+  0x90,0xac,0x8a,0x20,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
+  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x83,0xcc,0x8f,
+  0x6c,0x6c,0x2f,0x76,0x8d,0x68,0xa9,0x41,0xf9,0xff,0x0,0xc9,0x9f,0x96,0x1c,0xa3,
+  0x36,0xfc,0xd4,0x9e,0x7e,0x61,0xd7,0xd7,0x1f,0x54,0xfd,0xc1,0xdf,0xa8,0xd7,0x91,
+  0xd4,0x50,0x50,0xa,0xa,0x76,0x22,0xc6,0x3e,0x29,0x58,0x2d,0xb7,0xf,0xf7,0x1d,
+  0xa3,0x41,0xd4,0x20,0xb3,0x9d,0xc3,0x76,0x80,0x50,0x50,0xa,0xf7,0xf7,0xaa,0x24,
+  0x6f,0xda,0xe6,0x4b,0x3b,0x6d,0xc4,0xb2,0xed,0xf3,0x43,0x71,0xa7,0x20,0x3e,0x8d,
+  0x84,0x3,0x49,0x4,0x63,0xcf,0x20,0xf7,0x1f,0x2,0x95,0x52,0x45,0xb5,0x20,0x13,
+  0xd7,0xb5,0x19,0x10,0x60,0x33,0xb6,0x7b,0xd9,0x34,0x74,0xd2,0x46,0x97,0x33,0xde,
+  0xa3,0x51,0x18,0x3e,0xe4,0xb0,0xcd,0x38,0xbc,0x46,0x74,0x69,0x2d,0xac,0xee,0xb2,
+  0x9d,0xb4,0x3e,0x28,0xa6,0x5,0xed,0xd7,0xb3,0x6b,0x98,0x7f,0x15,0xa4,0x71,0xcb,
+  0x6b,0xdc,0x7b,0x5a,0xd7,0xbe,0x56,0x31,0xc3,0x47,0xd,0xdb,0x7f,0x6a,0xb,0xab,
+  0x2b,0x49,0x32,0xb7,0xec,0x8e,0xda,0x58,0xa1,0xf3,0x5f,0xe5,0xb4,0xb9,0xd5,0x11,
+  0xd7,0x5d,0xf2,0xb8,0xd0,0x35,0xa3,0xf8,0x45,0x49,0x41,0x26,0x3d,0x2f,0xe5,0x7c,
+  0xe,0xdb,0xe9,0x78,0xf,0x1f,0xbf,0x9a,0xfe,0x6c,0x75,0xab,0xa7,0x37,0x52,0xea,
+  0xc7,0xc8,0x5f,0xbe,0x68,0xd8,0xfa,0x34,0x39,0xcd,0x2f,0x73,0xa8,0xd1,0xb4,0xe,
+  0xd2,0xa5,0x57,0x6c,0xe3,0xb2,0xef,0xc7,0xec,0xad,0x5d,0x1b,0x88,0x20,0xf7,0x1d,
+  0x42,0x91,0x2b,0x26,0xaa,0x8,0x8,0x8,0x38,0x5f,0xdc,0xcf,0x33,0x38,0xce,0x26,
+  0x71,0x76,0xf2,0x81,0x75,0x9c,0x97,0xe9,0xb6,0x8f,0x98,0x5a,0x45,0xe2,0x98,0x8f,
+  0xea,0x76,0xd6,0xfc,0x4a,0x8d,0x22,0x99,0x60,0xae,0xea,0xd0,0xf6,0x1,0xed,0x55,
+  0x9,0xe3,0xa8,0xf2,0x9b,0xad,0x47,0x8c,0xf6,0x7b,0x50,0x67,0xf8,0xe,0x25,0xd9,
+  0x7e,0x61,0x65,0x1b,0x9b,0xba,0x1b,0x63,0xf5,0x12,0x81,0xdd,0x19,0x1b,0x7,0xc5,
+  0xe4,0x25,0x58,0x9a,0xdc,0x79,0xbe,0x55,0xf4,0x11,0xb4,0x56,0x8c,0x2c,0x3e,0xe0,
+  0xda,0x7f,0xa2,0x85,0x6d,0x6a,0xb2,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xc0,
+  0xf2,0xbc,0x4b,0x2f,0x6c,0x27,0x63,0x98,0xd9,0x63,0x99,0x85,0x92,0x44,0xf1,0x56,
+  0x91,0x4a,0x50,0x8e,0xe7,0xd,0x14,0x58,0x82,0xde,0xa1,0x70,0xbb,0xae,0x23,0xc8,
+  0xa6,0xb3,0x73,0x49,0xc7,0xdd,0x17,0x4d,0x8c,0x9b,0xb1,0xd1,0x57,0xe4,0x3f,0xcc,
+  0xcf,0x94,0x8f,0x8f,0x6a,0x55,0x8c,0x43,0xa9,0x1f,0x96,0xe1,0x28,0xac,0x8d,0x68,
+  0x70,0x6,0xa7,0x52,0xe,0xda,0x2a,0x8e,0xf3,0xe8,0x7,0x1b,0xbc,0xc6,0xdd,0xdc,
+  0xe4,0x32,0x11,0x98,0x6e,0xef,0xe3,0x70,0x8e,0x17,0x7c,0xcc,0xb7,0x6d,0xb,0x77,
+  0x77,0x17,0xbb,0x5a,0x77,0x28,0xa9,0x31,0x86,0x8c,0xb3,0x1b,0x8,0x3a,0x54,0x17,
+  0x53,0xd8,0x49,0x21,0x58,0x95,0x7a,0x88,0x20,0x20,0x20,0x20,0x20,0xd4,0xf9,0xc5,
+  0x88,0xba,0xb0,0xc8,0x5b,0x6d,0xe,0x37,0x96,0x53,0x44,0x1a,0xee,0x84,0xba,0x37,
+  0x36,0x87,0xf1,0x52,0xb5,0x10,0x6f,0x39,0x8f,0xc8,0xe2,0x67,0x16,0xb9,0x5b,0x39,
+  0xac,0xe4,0xa1,0xf2,0xcc,0xac,0x3b,0x1c,0x7,0xf0,0x3c,0x55,0x8e,0x1e,0xe2,0x85,
+  0x60,0xa3,0x96,0xc7,0xeb,0xa4,0x71,0xb9,0x2,0x27,0x34,0x38,0x80,0xe0,0x0,0x22,
+  0x80,0x9a,0x77,0xaa,0x8d,0x8b,0x1f,0x2d,0x9d,0xcc,0x7b,0xa3,0x99,0xb2,0x8a,0x82,
+  0xe0,0xd7,0xb7,0xe6,0x1d,0x8f,0x24,0xe9,0x55,0x31,0x5d,0xb,0xd0,0x8,0xe4,0x9f,
+  0xd4,0x29,0xae,0x3,0x0,0x86,0xda,0xca,0x56,0x99,0x1a,0x77,0xa,0xcc,0xea,0x35,
+  0xb5,0xef,0x0,0x15,0x6a,0x25,0xf6,0x21,0xe5,0xf8,0xd8,0x9,0x35,0x21,0xb4,0xfc,
+  0x34,0x44,0xab,0xb4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,
+  0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x18,0x3e,
+  0x5f,0x9b,0xb7,0xc3,0x61,0x6e,0xb2,0x37,0xe,0xd,0x86,0xca,0x9,0x2e,0xa4,0x27,
+  0xa5,0x22,0x69,0x2d,0x1f,0x17,0x50,0x29,0x56,0x20,0x4d,0xc5,0xd4,0xd7,0xb7,0x77,
+  0x17,0xd7,0x25,0xcf,0xb8,0xba,0x95,0xf3,0x4a,0xf3,0xab,0x8b,0xa4,0x25,0xcf,0x71,
+  0x3e,0xd2,0x55,0x14,0xc8,0x71,0x8c,0xbe,0x9f,0xa6,0xe,0xd0,0x5d,0x51,0xba,0x9d,
+  0x28,0x15,0x18,0xdb,0xcb,0xa8,0xa2,0x21,0x95,0xa3,0x9d,0xae,0x80,0x9e,0xde,0xd2,
+  0x88,0x96,0x9f,0x6f,0x58,0xbb,0x73,0xe9,0xfe,0x1c,0xdb,0xee,0xf2,0xef,0x9c,0xe9,
+  0x9f,0xb8,0x50,0xd4,0x38,0x89,0x1d,0x41,0xfc,0xcd,0x34,0x52,0xb4,0xee,0x88,0xc8,
+  0x82,0xcf,0x27,0x1e,0xe8,0x43,0xff,0x0,0x84,0xfe,0xd5,0x2a,0xc7,0x2d,0xe7,0x3c,
+  0x57,0x17,0x99,0xb4,0xbb,0xc3,0xe4,0xe2,0x32,0xe3,0xef,0x43,0x5c,0xf6,0xb4,0xed,
+  0x70,0x2d,0x70,0x73,0x5c,0xc7,0x76,0x39,0xae,0xa,0xaa,0x30,0x7a,0x93,0xe8,0xf5,
+  0xff,0x0,0x14,0x96,0x7c,0x85,0x93,0x7e,0xa3,0x0,0xf9,0x48,0x86,0xe3,0x76,0xf9,
+  0x60,0x6b,0xa9,0xb5,0xb3,0xd4,0xa,0x6a,0x68,0x1c,0x34,0x2a,0xd,0x21,0x96,0x4f,
+  0xbf,0xb8,0x89,0xf2,0xb6,0x38,0x61,0x89,0x81,0xad,0x86,0x21,0x40,0x43,0x47,0x53,
+  0x5e,0xae,0x77,0x57,0x1e,0xd5,0xa4,0x6d,0x5c,0x37,0x36,0xfe,0x39,0xca,0xb1,0x79,
+  0x78,0x5e,0x5a,0xdb,0x3b,0x86,0x79,0xc5,0xba,0xee,0x89,0xc7,0x6c,0xa0,0xfb,0x1c,
+  0xc7,0x14,0x22,0x74,0xf1,0xbb,0x88,0xdb,0x71,0x2c,0x21,0xd5,0x6c,0xa0,0x3a,0x32,
+  0x3a,0x1a,0x7f,0xc8,0xac,0x95,0xb0,0xaa,0x82,0x2,0xa,0x17,0xb3,0x79,0x56,0xcf,
+  0x70,0xf9,0x8f,0x85,0x83,0xda,0x51,0x62,0x13,0xfa,0xf1,0xca,0xff,0x0,0xcf,0xfa,
+  0x83,0x7b,0x14,0xe,0xdd,0x69,0x85,0x1f,0xe3,0xed,0xc8,0x20,0x8d,0xd1,0x12,0x66,
+  0x7f,0xf7,0x4a,0x4f,0xc0,0x22,0xb9,0xeb,0x6a,0x6,0xa3,0xa0,0x15,0x3e,0xc5,0x51,
+  0xe4,0xba,0x47,0x55,0xc0,0x50,0x52,0x9e,0x2e,0xc0,0x83,0xaf,0xfd,0xbf,0x71,0xe1,
+  0x2c,0x8e,0xc8,0xb9,0xba,0xde,0x4f,0x46,0x39,0xc3,0x5f,0x26,0xd7,0x52,0x7f,0xb9,
+  0xff,0x0,0xb1,0x66,0xac,0x4a,0x2e,0x39,0x1b,0x9d,0x77,0x24,0xbd,0x8c,0x65,0x2b,
+  0xed,0x71,0xff,0x0,0x92,0x42,0xb6,0x25,0x59,0x10,0x10,0x10,0x10,0x10,0x10,0x10,
+  0x10,0x7c,0x7b,0x1a,0xf6,0x16,0x38,0x55,0xae,0x14,0x28,0x39,0x27,0xaa,0x5e,0x96,
+  0xe2,0xb9,0x1c,0x51,0xdb,0xe4,0x23,0x97,0xc8,0x8e,0x53,0x2d,0xbc,0xf6,0xe4,0x35,
+  0xf1,0xbd,0xed,0xa3,0x85,0x48,0x70,0xda,0xee,0xd1,0xec,0x51,0xa7,0x2e,0xe3,0x5e,
+  0x90,0x5e,0x60,0xaf,0x7c,0xe9,0xf1,0xfe,0x64,0x90,0x38,0xfd,0x2b,0x98,0x3c,0xed,
+  0xdd,0xd2,0x17,0xeb,0x4f,0x60,0x51,0x5d,0x93,0x81,0xf0,0xbc,0x83,0x24,0x7e,0x43,
+  0x20,0xcf,0x26,0x39,0x0,0x6c,0x6c,0x26,0xaf,0x2d,0xad,0x49,0xa7,0x65,0x55,0x91,
+  0x2d,0x74,0x96,0xb4,0x35,0xa1,0xa0,0x50,0x1,0x40,0x3d,0x8a,0xb2,0x20,0x20,0x20,
+  0x20,0x20,0x20,0xd0,0x3d,0x66,0xe6,0x96,0xbc,0x3f,0x8c,0xc,0xb9,0xb5,0xfa,0xcb,
+  0xc7,0x4c,0xcb,0x6b,0x7b,0x7d,0xe5,0x8d,0x26,0x50,0xe3,0x57,0x90,0x1d,0xe1,0x1,
+  0x87,0xa2,0x8b,0x11,0x83,0x27,0xce,0xb1,0x5c,0x99,0x91,0x5b,0x72,0x6c,0x21,0x75,
+  0xac,0x6f,0x7b,0xe0,0x9e,0xce,0x77,0x45,0x3c,0x21,0xdd,0x76,0xef,0xa8,0x76,0x94,
+  0xea,0x98,0xad,0x7b,0x2b,0xc6,0x38,0x74,0x97,0xc,0x7f,0x1c,0xb9,0xbc,0xb9,0xd4,
+  0x79,0xd6,0xf7,0xd0,0x44,0xd2,0xd1,0xd3,0xc3,0x28,0x70,0xe,0xfc,0x15,0x45,0x84,
+  0xf8,0xe,0x31,0x35,0xe0,0x32,0x36,0xe3,0x1f,0xb,0xa4,0xe,0x32,0xc0,0xf6,0xcc,
+  0xdd,0xad,0xd0,0xee,0x68,0xc,0xd6,0xba,0xee,0x6f,0xe0,0xa8,0x94,0x9e,0x98,0x70,
+  0x26,0x5a,0xb,0x57,0x62,0x61,0x86,0x1c,0x63,0x20,0xf,0x8e,0xe5,0x8e,0xe,0xf3,
+  0x84,0x8d,0xf0,0xc8,0x5c,0x2a,0xe7,0x92,0xd,0x75,0x59,0x57,0x67,0x82,0x26,0x43,
+  0xb,0x22,0x60,0xa3,0x58,0x28,0x15,0x65,0xed,0x1,0x1,0x1,0x1,0x1,0x1,0x1,
+  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,
+  0x1,0x1,0x1,0x4,0x7a,0xfb,0xa3,0xe7,0x8f,0xb3,0xb3,0xb7,0xe2,0x96,0xba,0x3b,
+  0x2a,0xdf,0x3e,0xfa,0x5d,0x74,0xb6,0x86,0x4a,0x35,0x8d,0xfe,0xb9,0x1a,0x49,0xf6,
+  0x5,0x15,0x1b,0xed,0xc0,0x27,0x73,0xe8,0xe6,0xea,0x5c,0x4e,0x80,0x50,0xf7,0xaa,
+  0x2d,0xee,0x1f,0xfa,0xa4,0x3f,0x4d,0x3,0xc9,0xa9,0xd,0x15,0xeb,0xd5,0x54,0x7d,
+  0xe3,0x98,0xc9,0x73,0x59,0xe8,0x31,0xd6,0xed,0x32,0x3a,0xfe,0x46,0xc4,0x3b,0x43,
+  0x5b,0xfb,0xce,0xa7,0xb9,0x15,0x3d,0x78,0xf,0x18,0xb3,0xc1,0x71,0xfb,0x1b,0x58,
+  0x1b,0xb5,0x96,0xd0,0x88,0xa1,0x68,0xe8,0x1a,0xe,0xa4,0x7b,0xcd,0x54,0x2d,0x6c,
+  0xe8,0x82,0xf,0x32,0x46,0xd9,0x18,0x58,0xee,0x8e,0x14,0x28,0x35,0xde,0x43,0xc7,
+  0x84,0xb6,0xbe,0x7b,0x65,0x3b,0xa1,0xd6,0x94,0xea,0xd3,0xd5,0x17,0x51,0xd7,0xee,
+  0x2b,0x23,0x8d,0x8f,0x8d,0xda,0x62,0x45,0xc1,0x65,0xc4,0xd7,0x4c,0x9d,0xb6,0xc4,
+  0x3b,0xf5,0xa3,0x88,0x3d,0xae,0x2e,0x20,0x6d,0x1b,0x5c,0xe0,0x40,0x25,0x16,0xb8,
+  0x34,0xe,0x2d,0x73,0x1c,0xdd,0x5,0x68,0xaa,0x2e,0x24,0x2,0x85,0xa3,0xa1,0xed,
+  0xf7,0x22,0x25,0xc7,0xa3,0xdc,0x91,0xd9,0x8e,0x7,0x84,0xc8,0xee,0xdd,0x73,0x66,
+  0xc1,0x69,0x74,0x7b,0x7c,0xcb,0x53,0xb3,0x5f,0x7b,0x36,0x95,0x9a,0xd3,0xb3,0x31,
+  0xed,0x7b,0x1a,0xf6,0x9a,0xb5,0xc0,0x10,0x7d,0x85,0x56,0x5f,0x50,0x10,0x62,0x73,
+  0x13,0xd6,0x46,0x44,0x3a,0x33,0xc4,0x7d,0xe5,0x46,0xa2,0x32,0x7a,0xe7,0x98,0xf4,
+  0x90,0xe6,0xae,0xb1,0x27,0x1a,0x7f,0xcf,0x32,0x32,0xdb,0xac,0x9e,0x32,0x38,0xd8,
+  0xe8,0x6e,0xf,0x88,0x32,0x66,0x92,0xc6,0x4a,0xef,0xe2,0x4,0x76,0xf5,0xaa,0xb2,
+  0x15,0xc0,0x85,0x8e,0x4d,0xe0,0x32,0x3b,0xe6,0x7,0x49,0xa8,0x8e,0xe0,0x79,0x6e,
+  0xf6,0x53,0x47,0x2,0xab,0x2a,0xd1,0xe0,0xb9,0x8c,0xcf,0x36,0xb1,0x5a,0xba,0xe2,
+  0x47,0xfc,0xa6,0x16,0x87,0xfc,0xc4,0xa,0x92,0xd3,0xa0,0x15,0xea,0x42,0x8a,0x96,
+  0x5e,0x96,0x61,0xe0,0xc7,0xd8,0xf9,0x11,0x80,0x1b,0x63,0x4,0x76,0xcc,0x77,0x67,
+  0x4a,0xbc,0xff,0x0,0x73,0x85,0x54,0x69,0xd9,0x30,0x36,0x8e,0x82,0xcf,0x7b,0xc5,
+  0x1f,0x31,0xdd,0xfd,0xb4,0xf0,0xa4,0x66,0xb2,0x4a,0xa0,0x80,0x80,0x80,0x80,0x80,
+  0x80,0x80,0x80,0x83,0xc4,0xd0,0xc7,0x34,0x4e,0x8a,0x56,0xee,0x63,0x85,0x8,0x41,
+  0x65,0x16,0x7,0x1d,0x19,0x24,0xb0,0xbf,0xd8,0xf3,0x51,0xf9,0x51,0x17,0x59,0x0,
+  0x0,0x0,0x1,0x40,0x34,0x1,0x10,0x40,0x40,0x40,0x40,0x40,0x40,0x41,0xc1,0xbe,
+  0xea,0x6e,0xa5,0x1c,0x4e,0x6,0xb7,0x4b,0x6f,0xf2,0x16,0xf1,0xdc,0x3b,0xb8,0xf9,
+  0x72,0x16,0x7f,0xe6,0x48,0xd7,0xc4,0x63,0x86,0xe5,0xd1,0xbf,0xa3,0x64,0x6b,0x80,
+  0x2d,0x4,0x50,0x9d,0x55,0x65,0x77,0x25,0xf8,0xc,0x10,0x46,0xf0,0xd7,0x38,0x55,
+  0xf2,0x36,0x9a,0x2,0x3a,0x2,0x3d,0xc8,0xaa,0x2d,0x95,0x8d,0x8b,0xc6,0x37,0x38,
+  0x6d,0x6b,0x8,0xa5,0x5,0x4d,0x7e,0x5e,0xfa,0x22,0x25,0x17,0xdb,0x4e,0x56,0x48,
+  0x78,0x3b,0x21,0x91,0xfb,0xed,0xdd,0x7d,0x71,0x1b,0x1,0x35,0xd8,0x3c,0x25,0xa0,
+  0x7b,0x2a,0x4e,0x8a,0x55,0x76,0xe4,0x41,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,
+  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,
+  0x1,0x5,0xb,0xd9,0x8c,0x36,0xee,0x73,0x7e,0x63,0xe1,0x1e,0xf2,0x8b,0x10,0xeb,
+  0xee,0x53,0x27,0x14,0xbe,0xa6,0xb6,0xd5,0xe7,0x5b,0x1c,0x7d,0xbb,0x8,0x2e,0xdb,
+  0x53,0x26,0xe9,0x74,0xdd,0xfd,0x63,0xa2,0x42,0xb9,0xcc,0x2d,0xa4,0x4d,0xd,0x77,
+  0x7b,0x89,0x1a,0xf5,0x54,0x58,0xe5,0xe5,0x22,0x1f,0x15,0x3c,0x7a,0x34,0x1d,0x6a,
+  0x2b,0xd1,0x21,0x5d,0x23,0xed,0xbb,0x8e,0xb6,0xfb,0x9a,0x4d,0x92,0x20,0xb9,0x98,
+  0xc8,0x48,0x88,0xe,0x86,0x69,0xbc,0x22,0xbe,0xe1,0xd1,0x29,0x13,0x56,0xde,0x21,
+  0x14,0x11,0xc4,0x3f,0x71,0xa1,0xbf,0x80,0x51,0x14,0xef,0x72,0x16,0x16,0x10,0x1b,
+  0x8b,0xeb,0x98,0xad,0x60,0x1d,0x65,0x99,0xed,0x8d,0x83,0xfb,0x9c,0x40,0x41,0xe3,
+  0x1f,0x95,0xc5,0xe4,0xa1,0xf3,0xb1,0xd7,0x90,0x5e,0x43,0xff,0x0,0xb9,0x6f,0x23,
+  0x25,0x6e,0xbe,0xd6,0x12,0x3b,0x10,0x5d,0x20,0x39,0xa1,0xcd,0x2d,0x22,0xa0,0x8a,
+  0x11,0xec,0x41,0x14,0xfe,0xea,0xb8,0xcc,0xf6,0x96,0x38,0xac,0x9c,0x23,0x7d,0xb5,
+  0xad,0xd4,0xd0,0x4e,0xfa,0x78,0x83,0x26,0x3,0xcb,0xa9,0xee,0xdc,0xdf,0xcd,0x22,
+  0xd4,0x7d,0xd8,0x40,0xf3,0xda,0xe7,0x39,0x9a,0x79,0x80,0x9a,0xd0,0x2a,0x8b,0xea,
+  0x1d,0x80,0xf6,0x74,0x71,0xf6,0x76,0x20,0xed,0xff,0x0,0x6c,0xf9,0xc8,0x23,0x7e,
+  0x6f,0x8f,0xc9,0x25,0x26,0x94,0xb2,0xfa,0xd6,0x33,0x5a,0x16,0xb4,0x18,0xe6,0xa7,
+  0xb4,0x55,0x85,0x4a,0xd4,0x49,0xee,0x3f,0x72,0x25,0xb0,0x11,0x93,0xe3,0x84,0xec,
+  0x23,0xb6,0x9d,0x41,0x44,0xac,0x9a,0x20,0x83,0x13,0x95,0x6d,0xb3,0x6e,0x18,0xf7,
+  0x3a,0x8e,0x34,0xf3,0x47,0x60,0x68,0xed,0x3d,0xda,0x28,0xb1,0xf9,0xfb,0xc8,0xf2,
+  0x92,0x65,0xf9,0x46,0x5b,0x29,0x3c,0xc2,0x69,0x2f,0x2f,0x6e,0x25,0x74,0xed,0x1e,
+  0x17,0x55,0xe4,0x34,0x8f,0x66,0xda,0x51,0x6a,0x15,0x6d,0x38,0x8e,0x4b,0x78,0xd9,
+  0xb5,0x8f,0x2e,0x2e,0xd,0x3,0xb6,0xb5,0x35,0xaa,0x23,0xb7,0x7a,0x63,0x6b,0xc5,
+  0x2f,0xed,0x4,0x90,0x3a,0xee,0xdb,0x21,0x28,0x8e,0xda,0x51,0x26,0xc9,0x1b,0x1b,
+  0xce,0x9d,0x94,0x25,0x8f,0x70,0xaa,0x95,0xa8,0x91,0x3c,0x7b,0x81,0xdb,0xe2,0xec,
+  0x22,0xb7,0x7c,0xe6,0x59,0x37,0x6f,0xb8,0x20,0x0,0x1c,0x4f,0x60,0xf7,0x29,0x89,
+  0xad,0xa8,0x0,0x5,0x6,0x80,0x74,0xa,0xa0,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
+  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x83,0x41,0xf5,0x57,
+  0x8c,0x43,0x9b,0xc1,0x5e,0xe3,0xe6,0x8c,0xc9,0x5,0xf3,0x3c,0x61,0xa0,0x6e,0x5,
+  0xbd,0x4b,0x2b,0x5f,0x13,0x7e,0x60,0x8d,0x44,0x35,0xe7,0x1c,0x27,0x23,0xc4,0x2f,
+  0x7c,0x83,0x23,0xae,0x2c,0x6e,0xfc,0x36,0x17,0xef,0x1,0xbb,0x9e,0x5,0x4c,0x6f,
+  0x0,0xf8,0x5e,0xdf,0xcd,0x56,0x6c,0x6b,0x10,0x5c,0x48,0xd6,0xbf,0x7b,0xff,0x0,
+  0x54,0x1a,0x48,0xda,0xf8,0x85,0x5,0x15,0x17,0xc,0xbb,0x7b,0x88,0x1,0xa5,0xa4,
+  0x1f,0xd3,0x77,0x69,0x3d,0x9b,0xbb,0x10,0x48,0x3f,0xb6,0x7c,0xdd,0x71,0x39,0x6c,
+  0x24,0x8f,0x6f,0x9b,0x6f,0x33,0x2f,0x2d,0x85,0x7c,0x65,0xb2,0x55,0x92,0x69,0xdc,
+  0xd7,0x46,0xdf,0xc5,0x66,0xac,0x49,0xfb,0x59,0xbc,0xeb,0x68,0xa5,0xed,0x7b,0x43,
+  0x8f,0xbc,0x84,0x45,0x54,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,
+  0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x16,0x79,
+  0x36,0xbd,0xd0,0x34,0x35,0xa5,0xde,0x2a,0x9a,0x6b,0x45,0x2a,0xc7,0x5,0xfb,0x82,
+  0xe1,0xfc,0x7f,0x3b,0x86,0xc9,0x64,0xef,0xed,0x1f,0x26,0x4f,0x11,0x63,0x21,0xb0,
+  0xb8,0x84,0xb9,0xb2,0xb4,0xb4,0x6f,0xd,0x2d,0x1a,0x3d,0xbb,0x8f,0x47,0xe,0xfa,
+  0x24,0x2a,0x20,0x5b,0x3a,0xfa,0x1a,0x79,0x13,0x16,0xd4,0xe8,0xca,0x9a,0x1e,0xde,
+  0x9d,0x16,0xd1,0x56,0xea,0xe3,0x29,0x31,0x66,0xe0,0xe,0xdd,0x1a,0x58,0x2b,0xa9,
+  0xed,0x3d,0x50,0x76,0x89,0xf2,0xd9,0xff,0x0,0x4d,0x38,0x5e,0x3a,0xe,0x33,0x72,
+  0x6d,0x72,0x99,0x5b,0x89,0x64,0xbd,0x9e,0x48,0x5a,0xf9,0x9e,0x22,0x8d,0x80,0x3a,
+  0x27,0xbc,0x51,0x8c,0xde,0xe7,0x6,0x9d,0xbd,0x9a,0x1d,0x16,0x62,0xd6,0x23,0x1d,
+  0xeb,0x37,0xac,0xbb,0x1b,0x1b,0xf9,0x2d,0xc3,0x58,0x5c,0x1c,0xf2,0xf7,0x9,0x1d,
+  0x5e,0xed,0xc4,0x12,0x3d,0xa0,0x1a,0x2d,0x22,0xd7,0x93,0xf2,0xae,0x53,0xc8,0xe7,
+  0xb7,0xff,0x0,0x3b,0x91,0x97,0x25,0x34,0x6d,0x31,0xda,0xf9,0xae,0x5,0x8c,0x69,
+  0xa9,0x2e,0x1b,0x76,0x8d,0x4f,0x53,0x4a,0xf6,0x28,0xac,0x5e,0x27,0x37,0x9e,0xe3,
+  0xd7,0xcd,0xbb,0xc4,0x5f,0x4d,0x63,0x3b,0x5c,0xd2,0xd7,0xc0,0xfd,0x9a,0x8f,0xe2,
+  0x68,0xd1,0xc0,0x57,0xb5,0x11,0xbd,0x62,0x3e,0xe4,0x7d,0x53,0xc3,0xce,0x1d,0x2e,
+  0x4a,0x3c,0xa4,0xf,0x1b,0x44,0x17,0xb1,0x35,0xe0,0x91,0xdc,0xf8,0x84,0x6f,0x7,
+  0xe2,0x83,0x61,0x8f,0xee,0xdf,0x9e,0x1b,0xbb,0x87,0xb7,0x13,0x8e,0x74,0xf,0x6b,
+  0x4c,0x10,0x3b,0xce,0xfd,0x32,0x6,0xa7,0x7b,0x5d,0x57,0x54,0xeb,0xaa,0x60,0xaf,
+  0x91,0xf5,0xb3,0xb,0xcf,0x70,0x37,0xfc,0x77,0x98,0xda,0x45,0x89,0x96,0xfe,0x32,
+  0xc8,0x32,0x50,0xef,0x36,0xac,0x90,0x8a,0xb0,0xcc,0x1e,0x5c,0xf8,0xe8,0xf6,0x83,
+  0xb8,0x54,0x77,0xd3,0xaa,0x62,0xb8,0x1d,0xac,0x13,0x47,0x24,0xd6,0x32,0x37,0x6d,
+  0xdc,0x4e,0x74,0x44,0x3,0xa1,0x2d,0x75,0x1c,0x2b,0xda,0x34,0xd1,0x11,0xe2,0xde,
+  0x6f,0x2a,0x63,0x6b,0x29,0x2e,0x3d,0x1,0x20,0xf8,0x80,0xf6,0xa0,0xda,0x7d,0x3e,
+  0xe5,0x8c,0xe2,0x7c,0xd7,0x1d,0x99,0x78,0x2f,0xb5,0x63,0xcc,0x37,0x8d,0x6f,0x53,
+  0x4,0xc3,0x64,0x87,0xfb,0x41,0xdd,0xf0,0x45,0x89,0xb9,0xc5,0xe6,0x8f,0xea,0xa5,
+  0x60,0x21,0xc2,0x46,0x2,0xc7,0xe,0x84,0x3,0x5d,0x3e,0x5,0x64,0xad,0x95,0x54,
+  0x10,0x61,0x32,0xac,0x6,0xed,0xe1,0xc7,0x6b,0x5e,0xd0,0xb,0xbb,0x81,0x14,0x2a,
+  0x35,0x1f,0x9f,0x59,0xec,0x46,0x43,0xd,0xc8,0xb2,0x18,0x8b,0x87,0xb5,0xae,0xb5,
+  0xb9,0x96,0x19,0x24,0x6e,0xbb,0x88,0x79,0xa3,0x9b,0x51,0xd0,0xb4,0x83,0xf1,0x5a,
+  0x65,0x6e,0xf9,0x7c,0x89,0x63,0xf0,0x9f,0xd2,0xa9,0x78,0xed,0xd4,0xd0,0x3b,0x5e,
+  0xe0,0x83,0xa2,0x7a,0x67,0xcb,0xf0,0xdc,0x7b,0x92,0xdb,0x5f,0xdf,0x83,0xf4,0x5e,
+  0x5b,0x84,0xa2,0x2a,0x3d,0xe6,0x9e,0x26,0x4b,0xb0,0xb9,0xb5,0x11,0xc9,0x42,0x48,
+  0xe8,0x2a,0x96,0x2c,0xa9,0xa9,0x85,0xca,0xb7,0x21,0x6d,0xbf,0x42,0xe6,0x86,0x92,
+  0xe6,0x9a,0xb5,0xc1,0xc2,0xad,0x73,0x7d,0x84,0x28,0x56,0x41,0x10,0x40,0x40,0x40,
+  0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,
+  0x41,0xcc,0x3e,0xe1,0xb3,0xb3,0x59,0x7a,0x61,0x9f,0x82,0xd8,0xba,0x3b,0x87,0xc5,
+  0xc,0x62,0x76,0x3b,0x6b,0x98,0x25,0x99,0x8d,0x76,0xda,0x6b,0xab,0x9,0x8,0xb1,
+  0x14,0x78,0xf7,0xa9,0x39,0xb,0x19,0x2d,0xad,0x73,0x8f,0xff,0x0,0x33,0xc7,0xde,
+  0xf6,0x7d,0x4d,0x9d,0xe3,0x1b,0x39,0x63,0x6b,0xe1,0x7c,0x25,0xe0,0xbb,0x73,0x3a,
+  0xd0,0x9a,0x2b,0x49,0x59,0xac,0xff,0x0,0xa6,0xd,0xcf,0x5e,0x5c,0x67,0x38,0x94,
+  0x96,0xd7,0x58,0x8b,0xba,0xcd,0x6c,0x2d,0xe4,0xf2,0xdc,0xc7,0x90,0x2b,0x11,0x8d,
+  0xdd,0xb5,0xd4,0x3,0x4a,0x7b,0x14,0xd3,0x1a,0x76,0x6b,0x86,0x72,0x1c,0x33,0x36,
+  0xdd,0x5b,0x3c,0x18,0x9b,0xbe,0x6d,0xc0,0x1,0x51,0xab,0xb6,0x1e,0x8f,0xa0,0xd7,
+  0xaf,0x45,0x74,0xc7,0x56,0xfb,0x60,0xb2,0x6c,0xb9,0x6c,0xe6,0x4e,0x51,0xb9,0xf1,
+  0xc1,0x1d,0xbc,0xf,0xd3,0x4d,0xef,0xdf,0x25,0xf,0x7d,0x1a,0xda,0xfb,0xd4,0xa4,
+  0x4a,0xfc,0x1c,0xae,0x93,0x1b,0x11,0x73,0x69,0xb6,0xad,0x1e,0xd0,0xf,0x54,0x2a,
+  0xfd,0x10,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,
+  0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x41,0x80,0xe6,0xdc,0xe7,0x8f,
+  0x70,0xbc,0x29,0xcc,0x67,0x66,0x7c,0x56,0xa6,0x46,0xc3,0x1b,0x63,0x61,0x92,0x47,
+  0xc8,0xf0,0x48,0x63,0x5a,0x3b,0x68,0xd2,0x75,0xd1,0x7,0x1b,0xe5,0x7f,0x70,0x5e,
+  0x9c,0x4f,0x6d,0x3e,0x43,0x1f,0xf5,0x97,0x79,0x27,0x50,0x43,0x60,0xf8,0x7c,0x82,
+  0x48,0x6e,0x8e,0x74,0xa4,0x96,0x86,0x77,0xf5,0x3e,0xc4,0x57,0xd,0xca,0xe6,0x3d,
+  0x37,0xe4,0x57,0x26,0xef,0x35,0xc7,0x6e,0xb1,0xd7,0xb3,0x38,0xbe,0xe2,0x7c,0x4d,
+  0xc3,0x3c,0xb7,0x97,0x6a,0x5f,0xe4,0xcc,0xdd,0x1d,0xee,0x70,0x4c,0x16,0x18,0x6c,
+  0x77,0xa5,0xf8,0xcc,0x95,0xad,0xed,0xc6,0x4f,0x2d,0x7b,0x69,0xd,0xc3,0x24,0x76,
+  0x33,0xe8,0xa3,0x8c,0xc8,0xc6,0xbb,0x70,0xf,0x97,0xea,0x1c,0xda,0xa,0xa,0xf7,
+  0xa0,0xda,0xbd,0x4e,0xe6,0x1c,0x33,0xd4,0xc,0xcd,0xac,0x98,0xb6,0xdc,0x60,0x2e,
+  0x6d,0xe1,0xfa,0x4b,0x6b,0x8b,0xc6,0xc2,0x6d,0xa7,0x68,0xab,0x98,0xd9,0xb6,0x3a,
+  0xb0,0x1d,0xc6,0x81,0xf5,0x73,0x7b,0xe9,0xd5,0x58,0x39,0x9e,0x53,0x8b,0x72,0xac,
+  0x53,0x4b,0xf2,0xb8,0xfb,0x8b,0x68,0x64,0x1b,0x9b,0x74,0x58,0xe7,0x44,0x47,0x61,
+  0x12,0x34,0x6d,0xda,0x47,0x47,0x74,0x4d,0x4c,0x63,0xfe,0x84,0x36,0x27,0x97,0xbc,
+  0x3d,0xae,0x20,0x97,0x30,0xeb,0xae,0xb4,0x6f,0xb1,0x51,0x94,0x8f,0xc9,0xf2,0x37,
+  0xc2,0x45,0x3,0x6a,0x5d,0x5a,0xb8,0x7b,0xbe,0x28,0x2d,0x19,0x75,0xf,0x9a,0xd2,
+  0xea,0x1d,0x1c,0xd2,0xfe,0xde,0xbd,0xf5,0x41,0x74,0xdb,0xab,0x5d,0xce,0xd,0x1b,
+  0xd8,0xd0,0x5b,0x53,0xe2,0x26,0x82,0xb4,0xa7,0x7a,0xa,0x2d,0xb9,0x6d,0xcd,0xcb,
+  0x6c,0x20,0xb5,0x95,0xd2,0x11,0xfe,0xdb,0x18,0xe9,0x1f,0x42,0x28,0x76,0xb5,0x95,
+  0xaa,0x82,0xd6,0xfe,0xce,0xf3,0x7,0x95,0x9b,0x1f,0x95,0x8d,0xf6,0xd7,0x10,0x96,
+  0x3c,0xc6,0xff,0x0,0x9c,0x9,0x1a,0x1c,0xda,0xff,0x0,0x6b,0x82,0x41,0x4e,0xf7,
+  0x2d,0x6c,0xf1,0x18,0xb6,0xe,0x96,0xe1,0xb4,0x2d,0x75,0x28,0x1,0x1d,0x94,0xea,
+  0x50,0x53,0xb2,0x37,0xb3,0x5e,0x44,0xeb,0xd8,0xe5,0x7d,0x9e,0xe1,0xf5,0x11,0x44,
+  0xf6,0xc2,0xe7,0x47,0x5a,0xb9,0xa1,0xee,0xe,0xdb,0xef,0xa1,0x41,0x27,0x3d,0x13,
+  0xf5,0x57,0x98,0x72,0xe,0x72,0xcb,0x79,0x9b,0xc,0x78,0x1b,0xb,0x47,0x3,0x6d,
+  0x6e,0xd0,0x43,0x3,0x40,0x64,0x6e,0x92,0x67,0x9f,0x31,0xe4,0x86,0xd3,0xc2,0x29,
+  0x5e,0xc5,0x2a,0xa4,0xf3,0x5c,0xd7,0x34,0x39,0xa6,0xad,0x70,0xa8,0x3e,0xc2,0x88,
+  0xfa,0x83,0x13,0x9b,0x8a,0xa5,0x8f,0xfe,0x26,0x96,0x7f,0xe3,0xf1,0x51,0x62,0x14,
+  0xfa,0xef,0x8d,0x75,0x9f,0x3d,0xba,0x24,0xb0,0x9b,0xc8,0x20,0xb9,0x6b,0x1b,0xf3,
+  0x35,0xd1,0x8f,0x25,0xc1,0xc3,0xda,0x63,0xaf,0xb9,0x6a,0x15,0xa2,0x35,0xa5,0xe4,
+  0x9e,0xae,0x0,0x17,0x53,0x52,0x3d,0x85,0x11,0xf5,0xad,0x8e,0xdc,0x99,0x20,0xd,
+  0x8e,0x5a,0x11,0xbb,0x68,0x35,0x6b,0x85,0x8,0x20,0xf5,0x41,0x2d,0x3e,0xdf,0x79,
+  0xe1,0xc9,0xf0,0xab,0x5d,0xd2,0x19,0xae,0xf1,0x14,0xc7,0x5e,0xb1,0xc4,0x7,0xb9,
+  0x8c,0x0,0xc1,0x21,0xa7,0x7c,0x7a,0xf,0x72,0x95,0x5d,0xc2,0x39,0x1b,0x24,0x6d,
+  0x91,0x86,0xad,0x70,0x5,0xa7,0xd8,0x51,0x1e,0x90,0x10,0x10,0x10,0x10,0x10,0x10,
+  0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x70,0xcf,0xb8,
+  0xab,0x7b,0xbb,0xbf,0x4f,0x32,0xd2,0x34,0xd5,0xf6,0xb7,0x10,0xcf,0x33,0x7a,0xd6,
+  0x36,0x3f,0x6b,0x80,0xa7,0x76,0xea,0xfc,0x14,0x69,0x11,0xdb,0x1b,0x64,0x70,0x69,
+  0x23,0x6b,0xb,0x68,0xdf,0x67,0x40,0x16,0x99,0x57,0xb5,0xc9,0x64,0xf1,0x57,0xb7,
+  0xe,0xc5,0x5e,0x5c,0x59,0x19,0x64,0x1,0xed,0xb7,0x91,0xd1,0x87,0x6d,0x15,0xec,
+  0x34,0x34,0xa2,0xc,0xdd,0x8f,0xaa,0x7c,0xd9,0x92,0x5b,0xc5,0x77,0x74,0x72,0x16,
+  0x70,0x4c,0xd7,0x88,0x2f,0x63,0x8e,0x66,0x3d,0xcd,0x35,0x1,0xce,0xa6,0xef,0x10,
+  0xa8,0xad,0x50,0xd4,0x84,0xf4,0x3f,0x2f,0x80,0xe5,0xcd,0xbb,0x7f,0x1f,0xc7,0x33,
+  0x5,0x73,0x8d,0x79,0x75,0xce,0x1d,0x8e,0x6,0x2d,0x93,0x8d,0x25,0x8d,0xcd,0x6b,
+  0x34,0x2e,0xe,0xa8,0x3a,0xe9,0xee,0x52,0xc5,0xd7,0x7f,0xb2,0xb7,0xfa,0x6b,0x58,
+  0xa0,0xad,0x7c,0xb6,0xd0,0x9e,0xf3,0xda,0x88,0xac,0x80,0x80,0x80,0x80,0x80,0x80,
+  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
+  0x80,0x80,0x83,0x58,0xf5,0x1e,0xef,0x91,0x43,0xc4,0xb2,0x31,0xf1,0x99,0xe2,0xb6,
+  0xcf,0xbe,0x2f,0xfe,0x4,0xf3,0xd3,0xcb,0x6b,0xb7,0xd,0xd5,0x2e,0x5,0xa1,0xc5,
+  0xb5,0xd,0xa8,0xa5,0x68,0xa5,0x54,0x20,0xcf,0xf3,0x6e,0x6f,0xcb,0x32,0x1f,0x49,
+  0xc8,0x32,0x97,0x17,0xf3,0x43,0x31,0xf2,0xec,0xe7,0x70,0x11,0xc7,0x33,0x46,0xca,
+  0xb6,0x31,0xb5,0x8d,0x3d,0x9a,0xd,0x55,0x18,0x19,0x40,0x13,0xbc,0x16,0x96,0xc8,
+  0xcf,0xb,0x98,0xe3,0xbb,0xc4,0x34,0x72,0xa3,0xe3,0xa5,0xbb,0x2d,0xe,0x16,0xec,
+  0x74,0x43,0xe6,0x76,0xe3,0xba,0x95,0xd4,0xed,0xa7,0xfa,0xa2,0x3e,0x7d,0x5d,0xa0,
+  0xd3,0xf4,0xc3,0x4e,0x94,0xd3,0x5f,0x60,0x1d,0xe8,0x28,0x96,0xc6,0xd2,0x5d,0xb,
+  0x84,0x91,0x6b,0x40,0xe7,0x52,0x94,0xfd,0xdd,0x7a,0x1f,0x7a,0xd,0xeb,0x85,0xfa,
+  0xd7,0x9e,0xc3,0xc1,0x16,0x22,0xf5,0xac,0xcb,0xe0,0xda,0x4,0x32,0xe3,0xee,0x83,
+  0x5c,0xe6,0xc4,0x7a,0xb2,0x37,0x6b,0xa6,0xde,0x8d,0x75,0x5a,0x8a,0xdd,0x22,0xf4,
+  0xef,0xd1,0x8e,0x7f,0x71,0x35,0xc7,0x1b,0xbd,0x7e,0x3e,0xfe,0x40,0x1e,0xfb,0x6,
+  0xb0,0x44,0xe6,0x1f,0xde,0xdb,0x9,0x20,0x91,0xfd,0xe,0x20,0x20,0xd4,0x39,0x2f,
+  0xdb,0x57,0x2e,0xc7,0xbd,0xd2,0xe0,0xee,0x19,0x94,0xb7,0xa6,0x80,0x56,0x29,0x87,
+  0x78,0xda,0x74,0x3f,0x2,0x53,0x4c,0x73,0x8b,0xee,0x2d,0xc9,0x30,0xee,0x7b,0x2f,
+  0x6c,0x65,0x8c,0xb0,0xfe,0xa3,0x5c,0xc3,0x56,0xf6,0x6a,0xd2,0x2a,0x9a,0x63,0xe6,
+  0x33,0x8d,0xe6,0xb2,0x57,0x2,0x2b,0x5b,0x77,0x92,0x5b,0xb9,0xa0,0x90,0x9,0x14,
+  0xae,0xed,0x68,0x1a,0x0,0xea,0x4a,0x69,0x8d,0xc3,0x8e,0x66,0x7f,0xec,0x31,0x73,
+  0x71,0x6d,0x75,0x16,0x53,0x39,0x31,0x8e,0x91,0x42,0x6b,0x5,0xb9,0x8c,0x93,0xfa,
+  0xb7,0x3,0xe7,0x3f,0xca,0xcf,0xc5,0x45,0xdc,0x61,0x79,0x76,0x7e,0xf7,0x97,0x66,
+  0x1f,0x9b,0xcb,0x41,0x1f,0xd6,0x4a,0xd6,0xb0,0x8b,0x70,0x21,0x88,0x35,0x9d,0x34,
+  0x27,0x73,0xa9,0xde,0x5d,0x55,0x71,0x96,0x15,0xed,0x16,0xed,0xf,0x86,0x7,0xbc,
+  0x1e,0xbe,0x5b,0x3c,0x4,0xe,0xf9,0x28,0x6b,0xf0,0x41,0xe9,0xec,0xbe,0x10,0xb6,
+  0x41,0x2b,0x7c,0xb7,0xb4,0x16,0x6,0xb4,0x81,0x42,0x2b,0xd7,0xb1,0x4,0x85,0xf4,
+  0x1b,0x3f,0xc1,0xf1,0xf8,0xa9,0xee,0xe4,0x92,0xd7,0x4,0xd6,0x34,0x43,0x7a,0xfb,
+  0xa9,0xc6,0xe7,0xca,0x0,0x25,0xed,0xdd,0x59,0x25,0xe,0x1d,0x28,0x34,0x51,0xa4,
+  0xa6,0xc3,0x5d,0x58,0xdd,0xe2,0x6d,0x2e,0xac,0x2e,0x1b,0x77,0x67,0x3c,0x4d,0x92,
+  0xb,0x96,0x1d,0xcd,0x91,0x8e,0x15,0xe,0x7,0xda,0x8c,0xaf,0x10,0x59,0xe5,0xa3,
+  0xdd,0x68,0x5c,0x3a,0xb0,0x83,0xfe,0x88,0xb1,0x16,0x3e,0xe8,0xf0,0x2d,0x6b,0x31,
+  0xd9,0xd6,0x46,0x3,0xed,0xae,0xc,0x13,0xc9,0x4d,0x4c,0x57,0xd,0xdc,0xc0,0x7d,
+  0x82,0x46,0x1f,0xc5,0x21,0x5c,0x36,0x2b,0x83,0x40,0x5a,0x76,0x53,0x5d,0xde,0xc3,
+  0xd5,0x54,0x53,0x99,0xc1,0xd7,0xd,0xa9,0xe,0xdc,0x3,0xba,0xe9,0xd7,0xa8,0x45,
+  0x6f,0x7e,0x8a,0x73,0x46,0xf1,0x6e,0x6d,0x13,0x6e,0x9f,0xe5,0x62,0x72,0x80,0x59,
+  0x5e,0xd7,0xe4,0x63,0x9c,0x6b,0xc,0xbe,0xe6,0xbf,0x42,0x7b,0x89,0x4a,0x44,0xd9,
+  0xe3,0xb7,0x5e,0x65,0x99,0x81,0xe7,0xf5,0x60,0x71,0x69,0x1f,0xca,0x7a,0x28,0x56,
+  0x55,0x10,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x24,0x1,0x53,0xa0,0x1d,0x4a,0xe,
+  0x7b,0xc9,0x7d,0x77,0xf4,0xe7,0x6,0xc9,0x1a,0x2f,0xce,0x4a,0xe6,0x32,0x5b,0xf4,
+  0xf6,0x2d,0xf3,0x6a,0xe1,0xd9,0xe6,0x1d,0xb1,0xfc,0x77,0x22,0xe3,0x8d,0x4f,0xf7,
+  0x41,0xce,0x24,0xe4,0x90,0x4e,0xdb,0x4b,0x6b,0x6c,0x13,0x66,0x61,0x9f,0x1e,0xd6,
+  0x6f,0x99,0xd6,0xfb,0xfc,0x5b,0xa6,0x7f,0x47,0x96,0x76,0x80,0x5,0x50,0x49,0xfb,
+  0xb,0xeb,0x6b,0xeb,0x56,0x5c,0xdb,0x3b,0x7c,0x32,0xa,0xb5,0xdd,0xe0,0xea,0x3a,
+  0x77,0x8d,0x51,0x17,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x39,0xdf,0x2f,0xb3,
+  0x17,0xf8,0x4c,0xcd,0x9b,0xe3,0x12,0x1b,0x8b,0x6b,0x96,0x88,0x8f,0x47,0x3b,0x63,
+  0x88,0x1a,0xfb,0x42,0x8d,0xc4,0x10,0x8a,0x76,0x5b,0x4a,0x5a,0xe2,0xe7,0x3d,0xc3,
+  0xc4,0xdd,0x5d,0x47,0x30,0xd5,0xb4,0x3d,0x94,0x5b,0x61,0xe2,0x7c,0x8c,0xf2,0xc8,
+  0xef,0x2d,0x94,0x2e,0x71,0x32,0x10,0x2a,0xd0,0x69,0xd0,0x57,0xb5,0x41,0xea,0x19,
+  0xfc,0x23,0x75,0x77,0x8a,0x90,0x0,0x1e,0xfe,0xc5,0x51,0xdd,0x7e,0xd4,0xf2,0x9f,
+  0x4b,0x9d,0xe4,0x16,0xd1,0xbb,0xca,0xbc,0x7d,0xb4,0x32,0xc6,0x7b,0xd8,0xc9,0x5c,
+  0xd7,0x8d,0x7a,0xfc,0xed,0x2a,0x55,0x89,0x59,0x86,0xca,0xba,0xec,0x3a,0x29,0xa8,
+  0x26,0x68,0xa8,0x23,0x40,0xe0,0xa2,0xd8,0xc9,0xa2,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x31,0x1c,0x9a,0xc3,0xeb,0x31,0xaf,0x5,0xc1,0xad,0x88,0x19,0x1c,0xe2,
+  0x40,0xa0,0x68,0xad,0x6a,0x74,0xa6,0x9a,0xa9,0x56,0x21,0x3f,0xaa,0x1c,0xc7,0x17,
+  0xca,0xf2,0xc4,0x63,0xad,0x60,0x65,0xbd,0xb3,0xdb,0xf4,0xb9,0x86,0x46,0x63,0xbd,
+  0x94,0xb5,0xb4,0x71,0x32,0x54,0x1f,0x2e,0xbf,0x28,0x3d,0x8a,0x8d,0x19,0xd0,0x72,
+  0x18,0x5d,0x48,0xdf,0x1d,0xdb,0x46,0xa0,0x4a,0x3,0x89,0xfc,0x69,0x55,0x45,0x93,
+  0xe1,0xe4,0x2e,0x2e,0x3f,0x4f,0x23,0x58,0x35,0x73,0x21,0xd6,0x80,0xff,0x0,0x2d,
+  0x49,0x44,0x56,0x67,0x1c,0xc8,0x39,0xbe,0x63,0x5a,0xe0,0x5d,0xe2,0x2d,0x7e,0xda,
+  0xfc,0x5b,0x5e,0xa9,0xa6,0x3e,0xcd,0xc7,0xb2,0x45,0xb5,0x8a,0xd7,0x77,0x46,0xb9,
+  0xc5,0xed,0x2e,0x23,0xbe,0x95,0xd5,0x34,0xc5,0x58,0xb8,0xe8,0x6c,0x14,0x16,0xd3,
+  0x1b,0xb1,0xa9,0x71,0x1,0xb4,0xfc,0x1c,0x5a,0x47,0xc4,0x14,0xd5,0xc5,0x4b,0xc,
+  0x4e,0x5e,0x4c,0x84,0x31,0xd9,0xb2,0xe9,0x97,0xbb,0x87,0xd3,0x88,0x6b,0xbf,0x78,
+  0xe8,0x58,0x48,0x69,0x7,0xe2,0x89,0xca,0x5b,0xfa,0x69,0x9b,0xe5,0x52,0x61,0xb1,
+  0x78,0x7e,0x4f,0x8e,0xba,0x19,0x6a,0x1b,0x73,0x79,0x38,0x5,0xf3,0x16,0x93,0x49,
+  0x24,0x15,0x34,0xa8,0xed,0xaf,0x62,0x8d,0x3a,0x24,0xfc,0x56,0x6d,0xa1,0xdb,0x1b,
+  0x25,0x46,0xad,0x7,0xa7,0xe2,0x89,0xae,0x53,0xcd,0xfd,0xe,0xe3,0xd9,0xf7,0x46,
+  0x2d,0xed,0xa6,0xc1,0xfe,0xab,0xdf,0x3c,0xb6,0xac,0x14,0x9c,0x91,0x42,0xd7,0x36,
+  0x4a,0xb1,0xa0,0x75,0x1b,0x42,0x45,0x71,0xff,0x0,0xff,0x0,0xc0,0xf9,0x9c,0x93,
+  0x4b,0x6b,0x6f,0x8f,0xe,0x7c,0x2f,0x2d,0xdf,0x24,0x80,0x37,0xae,0x87,0x76,0x8c,
+  0xe9,0xae,0x89,0xb4,0xc8,0xd7,0x79,0x97,0xa5,0x99,0x6e,0x23,0x25,0xac,0x99,0x49,
+  0x20,0xba,0x17,0x4e,0x90,0x45,0xe4,0x39,0xcf,0x6b,0x5d,0x1d,0x2a,0xd7,0x6f,0xd,
+  0xd6,0x86,0xba,0x24,0x4a,0xc3,0xc7,0x72,0xd7,0x46,0xd8,0x8f,0x85,0xa0,0x12,0x5b,
+  0xd2,0xb4,0xe9,0xa7,0xe4,0xa8,0xc5,0xdc,0x34,0xc6,0xe9,0x60,0x12,0x50,0x9f,0x1c,
+  0x20,0x50,0x81,0x5f,0x7f,0xb5,0x11,0x78,0xe1,0x14,0xb0,0x47,0x34,0x4c,0xda,0x5f,
+  0x1b,0x6a,0xd1,0xd4,0x3c,0xf,0x17,0xe6,0x14,0x54,0xae,0xfb,0x4f,0xe6,0x43,0x27,
+  0xc3,0xae,0x38,0xec,0xce,0xad,0xce,0x12,0x4a,0xc4,0x9,0xff,0x0,0xf8,0xf3,0x92,
+  0xe6,0xd3,0xfa,0x5d,0xb8,0x21,0x5d,0xd1,0x11,0x4e,0xe6,0x3f,0x32,0xde,0x46,0x77,
+  0xb4,0xa0,0xe3,0xbe,0xb1,0x71,0x58,0xf9,0xf,0x15,0xbd,0xb1,0x76,0x8f,0x9e,0x7,
+  0x79,0x2e,0xeb,0xb6,0x78,0x7f,0x56,0x23,0xff,0x0,0x53,0x68,0xa4,0x69,0xd,0x6c,
+  0x5e,0x64,0x8d,0xa4,0x12,0xc7,0x36,0xbb,0xc7,0x6e,0x9a,0x53,0xf1,0x5a,0x65,0x5e,
+  0xf2,0xdd,0x95,0x7c,0xd0,0x80,0x5c,0xe6,0x37,0x69,0x3,0x5a,0xd7,0x50,0x3d,0xe8,
+  0xd,0x8d,0xc6,0x3a,0xbb,0xb7,0xa0,0x1a,0x1f,0x6a,0x2a,0x60,0x7a,0x1d,0xea,0x1,
+  0xcf,0x71,0x9b,0x3b,0xc9,0xdf,0xbb,0x23,0x63,0xb6,0xc7,0x2c,0xc3,0xd4,0xb9,0x80,
+  0x6c,0x97,0xff,0x0,0xd4,0x65,0x1d,0x5e,0xfa,0xa8,0x3b,0x4f,0x54,0x41,0x1,0x1,
+  0x1,0x1,0x1,0x1,0x7,0x3a,0xf5,0xbf,0x9d,0xda,0xf1,0x9e,0x1f,0x77,0x6e,0xb,
+  0x5d,0x7f,0x94,0x8d,0xf6,0x76,0xb0,0x91,0x52,0x4c,0xad,0xda,0xf7,0x69,0xd8,0xc6,
+  0x38,0x9f,0x7d,0x11,0x62,0x20,0x49,0x38,0xd9,0xe6,0x35,0xa4,0x11,0xa6,0xc0,0x74,
+  0xa7,0x4a,0x6b,0x44,0xc5,0x7c,0x90,0xb0,0x33,0xcc,0x91,0xdb,0x5a,0xe0,0x3,0x5a,
+  0xe3,0xab,0xbd,0x80,0xd,0x74,0x44,0x74,0x9f,0x4a,0xbd,0x68,0xe4,0x3c,0x3a,0xce,
+  0xe3,0x19,0x25,0xab,0xb2,0x38,0xc9,0x1a,0x4d,0x84,0x13,0xbc,0xc6,0xe8,0x66,0xec,
+  0xd9,0xa3,0xdd,0xe5,0x1e,0xd6,0x9f,0x85,0x10,0xc4,0x91,0xf4,0xcb,0x9a,0xbf,0x97,
+  0x70,0xcc,0x6e,0x6e,0xe5,0x91,0xc1,0x79,0x79,0xe7,0x36,0x58,0x22,0xdc,0x19,0xba,
+  0x9,0x9f,0x11,0xd9,0xb8,0x93,0x4a,0x32,0xbd,0x51,0x1b,0x5a,0x2,0x2,0x2,0x2,
+  0x2,0x2,0xd,0x3,0x34,0xf9,0x8e,0x3f,0x22,0xe8,0xf4,0xb8,0xf2,0x2e,0xc,0x64,
+  0x7f,0x17,0x96,0xea,0x53,0xe2,0xa3,0x71,0x2,0x65,0x60,0xde,0xe7,0xbe,0xbe,0x61,
+  0x76,0xb4,0xd3,0x53,0xd5,0x6d,0x83,0xc8,0x95,0xe0,0x8d,0xa0,0x39,0xc4,0x6e,0x6,
+  0xa2,0x81,0xa6,0x81,0x10,0x64,0x4e,0x63,0x9c,0x49,0x6d,0xe,0xdf,0xd,0x7b,0x29,
+  0xff,0x0,0x24,0x1d,0x93,0xed,0x9a,0xc2,0x39,0x39,0x8d,0xf5,0xff,0x0,0x98,0xea,
+  0xda,0x58,0x98,0x83,0x45,0x3,0x5c,0xe9,0xdd,0xd1,0xde,0xe6,0xb2,0xbe,0xf5,0x9a,
+  0xd4,0x4a,0x3c,0x34,0xe2,0x2c,0x8c,0x2e,0x3a,0x7,0x1d,0x87,0xfb,0xb4,0x1f,0x9a,
+  0x8b,0x5b,0x72,0xac,0x88,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x35,0x7f,0x53,0x6e,
+  0xdb,0x6d,0xc1,0x33,0xae,0x73,0xfc,0xb6,0x9c,0x75,0xe6,0xe7,0xd6,0x94,0x1f,0x4e,
+  0xf1,0xd7,0xde,0x42,0x94,0x40,0x6c,0x7c,0x40,0x86,0x37,0x70,0x60,0xd,0xd,0x6d,
+  0x7b,0x34,0x1,0x55,0x65,0xc,0xac,0x25,0xad,0x61,0xdc,0xd8,0xcf,0xcd,0x4a,0x57,
+  0xb9,0x5,0xb5,0xdd,0xd4,0xf0,0x5c,0x36,0x78,0x64,0x31,0x4c,0xcd,0x59,0x23,0xf,
+  0x88,0x15,0x44,0x9d,0xe2,0x18,0x1c,0x4f,0x2b,0xc1,0x5a,0x5c,0xf2,0xe,0x3f,0xf,
+  0xd4,0x32,0xda,0xde,0x57,0x4b,0x1c,0x7e,0x5b,0x5e,0xe9,0xa3,0xdd,0x50,0x63,0xc,
+  0x3a,0xf5,0xa5,0x56,0x5a,0x6d,0x8c,0xf4,0x43,0x85,0xdf,0xb5,0x92,0xdc,0x63,0x9b,
+  0x6c,0xda,0x50,0x36,0x3a,0x87,0x11,0xed,0xaf,0x44,0xc4,0xd6,0x5c,0xfa,0x41,0xc2,
+  0x4,0xc,0x81,0x98,0xbb,0x5d,0x91,0x80,0xd6,0x6e,0x85,0xa5,0xd4,0x1d,0x2a,0xea,
+  0x87,0x1f,0x8a,0x62,0x6a,0xc2,0x7f,0x46,0x38,0xa3,0x9e,0xd7,0xc,0x55,0xb6,0xe6,
+  0x90,0xe6,0x3e,0x32,0xf8,0x9c,0x8,0xe8,0x7c,0x24,0x26,0x2e,0xb7,0x1c,0x5e,0x2,
+  0xc2,0xce,0xda,0xdd,0x9e,0x43,0x44,0xb0,0x34,0x35,0xae,0xab,0x9d,0x4d,0xbd,0x35,
+  0x2a,0xa6,0xb2,0x88,0x8b,0x6b,0xcb,0x8,0x2e,0xfc,0xbf,0x3b,0x75,0x23,0x24,0x86,
+  0x83,0x40,0x6b,0xde,0x82,0xac,0x16,0xf0,0x40,0xcd,0x90,0xb0,0x31,0xbd,0xc1,0x7,
+  0x1d,0xf5,0xf7,0x85,0x43,0x95,0xc1,0x5c,0x4b,0xc,0x47,0xeb,0x20,0xf,0xbb,0xb3,
+  0x31,0x8a,0x93,0x2b,0x1b,0x57,0x36,0x9d,0xbb,0xdb,0x51,0x4f,0x72,0x2a,0x23,0x5f,
+  0x89,0xc,0xb6,0xf7,0x6c,0xf0,0x87,0xa,0x9a,0xf4,0xdc,0x3a,0xff,0x0,0xcd,0x51,
+  0xe6,0xfb,0x17,0x71,0x1c,0x43,0x2e,0x48,0x31,0x5b,0xb9,0xa2,0x46,0x3b,0xb6,0x37,
+  0xd0,0x69,0xdf,0xde,0x82,0xee,0x58,0x98,0xd8,0xbc,0xc,0x31,0xc7,0x5d,0xcd,0x4,
+  0x50,0x7b,0x7f,0x1e,0xab,0xd,0x37,0xdf,0x40,0xb9,0x7c,0x5c,0x5f,0xd4,0xdb,0x23,
+  0x3c,0xa2,0x2c,0x7e,0x61,0xa6,0xc6,0xe8,0x9f,0x94,0x3a,0x42,0x3c,0xa7,0x7b,0x3f,
+  0x52,0x9f,0x8a,0xb1,0x2a,0x6c,0xaa,0xc8,0x83,0x50,0xe4,0xf6,0x35,0x86,0xe1,0x8d,
+  0x1a,0xc6,0x44,0xd1,0x8f,0x76,0xb4,0x51,0xa4,0x13,0xe6,0xb6,0x3f,0xe2,0x39,0xd6,
+  0x6e,0xc5,0xdf,0xa9,0x17,0xd6,0x4a,0xe8,0xc9,0x2d,0xa9,0x6c,0x87,0x78,0xae,0xdd,
+  0x1,0xf1,0x2d,0x44,0xab,0x6,0xb9,0xd1,0x16,0x38,0x9f,0x9,0x34,0xad,0x3b,0x4f,
+  0x43,0xa7,0x62,0x22,0xb1,0x20,0xf8,0x3a,0x68,0x68,0x51,0x5d,0x23,0xed,0xd6,0xfe,
+  0xe2,0x1f,0x51,0x9d,0x66,0xc9,0x4b,0x20,0xbd,0xb1,0xb8,0xf3,0xa1,0x26,0x81,0xe6,
+  0x1a,0x3d,0x9a,0x1e,0xd6,0x9d,0x45,0x3b,0x2a,0xa0,0x99,0x78,0x2b,0xe6,0xdd,0x58,
+  0xb5,0xa4,0xfe,0xac,0x20,0x32,0x4f,0xc3,0x43,0xf1,0x42,0xb2,0x28,0x82,0x2,0x2,
+  0x2,0x2,0xb,0x6c,0x96,0x42,0xd7,0x1d,0x61,0x71,0x7d,0x74,0xf1,0x1d,0xbd,0xb4,
+  0x6e,0x96,0x57,0x9e,0x81,0xac,0x69,0x71,0x3f,0x0,0x10,0x42,0x7f,0x52,0xfd,0x43,
+  0xb8,0xe6,0x3c,0x9e,0x7c,0xa4,0xe1,0xd1,0x63,0x99,0xfa,0x38,0xc8,0x5c,0xd2,0x5c,
+  0xc8,0xab,0xf3,0x50,0x69,0xb9,0xe7,0x53,0xdd,0xd3,0xb1,0x15,0xaa,0x47,0x3d,0xa3,
+  0x2e,0x63,0x13,0x7,0xb8,0x5c,0x48,0x18,0x1a,0x3b,0x0,0x15,0xa8,0xa0,0xaf,0xbc,
+  0xaa,0x33,0xc,0x36,0x42,0xe2,0xb4,0x2,0xa2,0x9a,0xe,0xc1,0xd9,0xad,0x4a,0xca,
+  0xac,0xef,0x32,0x51,0x42,0xe2,0xf0,0x5b,0x14,0x6d,0xad,0x4b,0x8d,0x0,0x1,0x30,
+  0xd4,0x9f,0xfb,0x77,0x63,0x9b,0xc0,0xf8,0xe1,0x14,0xd,0x7c,0x13,0xc8,0x34,0xea,
+  0xd7,0xcb,0x23,0x87,0xed,0x44,0x76,0x15,0x50,0x40,0x40,0x40,0x40,0x40,0x26,0x82,
+  0xa8,0x34,0xb2,0x43,0xee,0xd,0x7a,0x3d,0xe4,0x3a,0xbd,0xa1,0xc5,0x46,0x90,0x33,
+  0x24,0x1b,0x6,0x77,0x2b,0x6b,0xb4,0x83,0x69,0x79,0x34,0x61,0x87,0x4d,0x3,0xdc,
+  0x29,0x43,0xdd,0x42,0xb4,0x97,0xb5,0xa5,0xc3,0xe7,0xf3,0x9b,0x57,0xa,0xd0,0x54,
+  0x57,0xf8,0x80,0xa1,0xff,0x0,0xca,0xaa,0x29,0x35,0x8f,0x92,0x28,0xda,0x25,0x68,
+  0x75,0x40,0xde,0x45,0x49,0x23,0xb0,0xfb,0x14,0x1d,0x77,0xed,0xa6,0xf8,0xc3,0xcf,
+  0x2e,0x2d,0x1a,0xe0,0x61,0xba,0xb2,0x7d,0x45,0x7f,0x7e,0x22,0x1c,0x1d,0xf9,0x94,
+  0xa4,0x4a,0x28,0x18,0xe9,0x26,0x8d,0x8c,0xd1,0xee,0x73,0x43,0x7d,0xf5,0x59,0x69,
+  0xbc,0xa,0xd0,0x54,0xd4,0xf6,0x95,0x59,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,
+  0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,
+  0x72,0xf,0xb9,0xac,0xe3,0x71,0xde,0x9b,0xdf,0xdb,0x87,0x52,0x5c,0x93,0xa1,0xb1,
+  0x8c,0x56,0x84,0xf9,0xb2,0x79,0x8f,0xa7,0xf6,0x44,0x47,0xc5,0x45,0x44,0x28,0x6,
+  0xda,0x13,0xa3,0x6b,0x42,0x29,0xd7,0xe2,0xa8,0xbb,0x22,0x91,0x3d,0xd5,0x2,0x84,
+  0x11,0x4e,0x80,0xf7,0x20,0xb3,0x2d,0x75,0xcc,0xec,0x88,0x6a,0xf9,0x5c,0xd6,0x0,
+  0x3b,0xdc,0x68,0x3f,0x6a,0xa2,0x7e,0xf0,0x7b,0x16,0xd9,0x61,0x22,0xb6,0x68,0xa3,
+  0x60,0x64,0x70,0xf,0x74,0x51,0xb5,0x9f,0xe8,0xa1,0x5b,0x2,0x20,0x80,0x80,0x80,
+  0x80,0x80,0x83,0xf,0xca,0x2c,0xbe,0xa3,0x1c,0xe2,0xd1,0xfa,0xac,0x20,0xb3,0xdf,
+  0xd4,0x7e,0xc4,0x58,0x84,0x1c,0xe3,0x15,0x1d,0x87,0x28,0xcb,0xe3,0x18,0x1a,0x63,
+  0x65,0xc4,0x8f,0x8d,0xcd,0xfd,0xc1,0x27,0x8d,0xad,0xfe,0xcd,0xd4,0x2a,0x8d,0x4f,
+  0x39,0x39,0xba,0xc2,0x18,0xf7,0x51,0xf0,0xd0,0xf9,0x62,0xb4,0xf0,0x9d,0x7f,0xe2,
+  0x83,0xc6,0x16,0xf4,0xdd,0x59,0xc6,0xc7,0xbc,0x19,0x62,0xd3,0x61,0xad,0x5e,0x19,
+  0xd9,0xff,0x0,0x4a,0xcd,0x8b,0x2a,0xea,0x77,0x53,0x69,0x89,0xfb,0x5e,0xc7,0x3,
+  0x4,0xb5,0xd7,0x70,0x35,0x6f,0xc5,0x22,0xd4,0xf8,0xf4,0xe3,0x94,0x47,0xca,0x38,
+  0x3e,0x1f,0x38,0xd7,0x6e,0x92,0xea,0xd9,0x9f,0x53,0x52,0x2a,0x27,0x67,0x82,0x50,
+  0x69,0xfc,0xed,0x2a,0xb3,0x5b,0x22,0x23,0x1d,0x99,0xb7,0xdd,0x13,0x65,0x1f,0xbb,
+  0xe1,0x7f,0xb8,0xa2,0xc4,0xd,0xf5,0xab,0x8d,0x1c,0x27,0xa8,0x59,0x68,0x5a,0x3f,
+  0x42,0xf2,0x53,0x7d,0x6c,0xee,0x82,0x93,0x12,0x5c,0x1,0xfe,0x57,0x87,0x5,0x61,
+  0x5a,0x8d,0xbd,0xc1,0x95,0x9e,0x5b,0xcf,0x8f,0xa5,0x7,0x61,0xef,0xff,0x0,0x54,
+  0x45,0x68,0x2e,0x43,0x9c,0x63,0x9a,0x82,0xe1,0x9d,0x47,0x4d,0xc3,0xf8,0x9b,0xef,
+  0x41,0x9d,0xe0,0xf1,0x72,0x59,0x79,0xc6,0x1f,0xfe,0xdc,0x8c,0xc9,0x97,0x8a,0x76,
+  0x4d,0x1d,0x34,0x6b,0x61,0x69,0xa4,0xc6,0x53,0xff,0x0,0xb7,0xb2,0xa1,0xc8,0xa9,
+  0xbf,0xc6,0xef,0x59,0x1e,0x53,0xcb,0x2e,0x1,0x93,0x82,0xc1,0xef,0x1a,0xb5,0x64,
+  0xad,0xb9,0xce,0x6b,0x46,0xe7,0x10,0xd6,0x8e,0xa4,0xe8,0x15,0x47,0xd4,0x4,0x4,
+  0x4,0x4,0x1c,0x9f,0xee,0x1b,0x9a,0xbb,0x8f,0xf0,0x7b,0xd6,0xc1,0xad,0xcd,0xef,
+  0xff,0x0,0x8f,0x84,0xd4,0x51,0xae,0xb8,0x69,0xde,0xf3,0x5e,0xbb,0x62,0xe,0xf8,
+  0x94,0x58,0x87,0x12,0x5c,0x3d,0xd1,0x10,0x37,0x92,0xea,0x78,0xaa,0x2a,0x0,0xee,
+  0xa8,0x55,0x1e,0x60,0xcb,0xc0,0x25,0x17,0x17,0x93,0xb6,0x26,0x46,0x1c,0xd6,0x35,
+  0xa4,0x19,0xd,0x4d,0x1c,0xea,0x37,0x5d,0x68,0x82,0xb5,0x9e,0x5f,0x25,0x95,0xb8,
+  0xfa,0x4c,0x1d,0x93,0xe4,0x73,0x88,0x60,0x7e,0xd2,0xf3,0xa9,0xa5,0x48,0x1a,0xf,
+  0x79,0x2a,0x62,0xba,0x47,0x15,0xf4,0x66,0x5b,0x8b,0xc8,0xa6,0xcc,0x87,0x64,0x1c,
+  0x8,0x71,0xb5,0x75,0x4b,0x49,0xeb,0x47,0x35,0xba,0x6,0xd7,0xad,0x4a,0x9a,0xb8,
+  0x95,0x5c,0x27,0x8c,0xc9,0x8b,0xc5,0x58,0x89,0x83,0x61,0x74,0x11,0x6d,0x65,0xb4,
+  0x40,0x6,0xb0,0x3a,0xbe,0x1d,0x34,0xd0,0x1e,0x81,0x12,0xd6,0xd2,0xaa,0x8,0x8,
+  0x8,0x8,0x8,0x3e,0x3e,0xbb,0x4d,0x3a,0xd0,0xa0,0xd3,0x1a,0xcf,0xd6,0x68,0x22,
+  0x87,0x78,0xa8,0xf8,0xa8,0xd2,0x6,0xf3,0x3b,0xa0,0x39,0x66,0x66,0x72,0x76,0xbe,
+  0xf6,0xf2,0x69,0x8b,0xb4,0xe8,0x65,0x76,0x8b,0x51,0x3d,0x76,0xc7,0x3a,0x60,0x19,
+  0x3,0xfa,0xb1,0xf4,0x34,0x1a,0xe9,0xf2,0x8f,0xc2,0xa8,0x80,0x8c,0xc2,0xe7,0xb7,
+  0x76,0x8c,0xa7,0x96,0x4f,0x53,0x5f,0xf8,0x76,0xaa,0x8e,0x89,0xf6,0xfc,0xf7,0xc7,
+  0xea,0x76,0x35,0xd1,0xf5,0x9e,0xb,0x80,0xe8,0xfd,0x81,0x95,0x3f,0x85,0x14,0xab,
+  0x12,0xea,0x39,0xc,0x72,0xb2,0x41,0xfb,0x8e,0xe,0xaf,0xb8,0xd5,0x65,0xa6,0xf0,
+  0xd7,0x7,0x34,0x38,0x74,0x70,0xa8,0xf8,0xaa,0xcb,0xea,0x2,0x2,0x2,0x2,0x2,
+  0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,
+  0x2,0x2,0x8,0xab,0xf7,0x61,0xc9,0xfe,0xab,0x3f,0x8a,0xe3,0x91,0x3a,0xb1,0xda,
+  0x35,0xf7,0xd7,0x43,0xb9,0xf2,0x7e,0x9c,0x4d,0x3e,0xe6,0x30,0xbb,0xfb,0x94,0x57,
+  0x16,0xb6,0xa9,0x6b,0x40,0x7,0xa5,0x5d,0x51,0x5a,0x7e,0xa,0x8f,0x97,0x4f,0x5,
+  0x86,0x9a,0x2,0xed,0x7,0x75,0x5,0x3b,0x50,0x64,0xfd,0x3d,0xc5,0x1c,0xaf,0x38,
+  0xc2,0x59,0x6d,0x2f,0x64,0x97,0x71,0xba,0x50,0x3f,0x82,0x33,0xbd,0xdf,0x93,0x51,
+  0x62,0x79,0x60,0xd9,0xb7,0x1b,0x1b,0xbb,0x64,0x2e,0x7f,0xe2,0x4a,0x33,0x57,0xe8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x2c,0xf2,0xcf,0xdb,0x66,0xe1,0x4a,0xee,0x20,0x7f,
+  0xaf,0xfa,0x22,0xc4,0x2a,0xf5,0x2a,0xd2,0x4b,0x2f,0x52,0xb3,0xd6,0xd2,0xb8,0x78,
+  0xae,0xdf,0x2f,0x9b,0xfc,0x93,0xd2,0x46,0xd7,0xdc,0xd7,0x0,0x55,0x1a,0x8e,0x74,
+  0x5a,0x43,0x23,0x60,0xb7,0x64,0x6e,0x94,0x1f,0x35,0xcf,0x6f,0x89,0x85,0x9d,0x1a,
+  0x3d,0xba,0x9d,0x12,0x15,0xa6,0x5b,0xde,0xb6,0xc2,0xfa,0x42,0x1a,0x5c,0xd8,0xe4,
+  0x3b,0x7,0x4e,0x8e,0x34,0x44,0x65,0x46,0x4e,0xdf,0x22,0xf6,0xda,0xc0,0xc9,0x3e,
+  0xa6,0xe1,0xc1,0x91,0x44,0x5,0x49,0x91,0xc4,0x6d,0x2,0x9e,0xd3,0x45,0x31,0x75,
+  0x34,0xbe,0xd9,0x71,0x5c,0x9f,0x11,0xe9,0xe3,0xf1,0xb9,0xeb,0x46,0x5a,0x3e,0x2b,
+  0xb9,0x24,0xb4,0x1,0xe1,0xcf,0x74,0x52,0x86,0xbf,0xc6,0x0,0xea,0x1d,0x5a,0x1e,
+  0xd4,0x2b,0xad,0xa2,0x3c,0x4d,0x18,0x96,0x27,0xc6,0x7a,0x38,0x10,0x82,0x31,0x7d,
+  0xcd,0xf0,0xa9,0xae,0x31,0x70,0xe6,0x6d,0x6d,0xdf,0x2d,0xde,0x3e,0x5f,0xd5,0x6c,
+  0x4d,0x2e,0x71,0x82,0x63,0x49,0x34,0x2,0xbe,0x9,0x0,0x77,0xc4,0xa3,0x55,0x19,
+  0xc3,0x37,0x49,0x58,0xab,0xe6,0x56,0x94,0x3a,0x10,0x7b,0x8d,0x69,0x45,0x59,0x5a,
+  0x5e,0xda,0x5e,0x80,0x6e,0x65,0xa8,0x75,0x7c,0x62,0x94,0x2d,0xd7,0xb3,0xd8,0x83,
+  0xb7,0x7a,0x45,0xc9,0xfd,0x3e,0xc1,0xe4,0xed,0x9a,0xfb,0x87,0xd9,0x5d,0xf9,0x5,
+  0xb7,0x77,0x97,0x31,0xbe,0xb3,0x3e,0x9d,0xb2,0xd,0xf4,0x6d,0x4e,0x9d,0x3d,0xaa,
+  0x62,0xeb,0xa9,0x5b,0x7a,0xc1,0xc3,0x6e,0xf9,0x1c,0x18,0x4b,0x2b,0x97,0xcf,0x24,
+  0xcf,0x2c,0x6d,0xfb,0x1b,0x4b,0x71,0x28,0x15,0x63,0x43,0x9d,0x47,0x3b,0x71,0x14,
+  0xad,0x29,0x54,0xc5,0x71,0xaf,0x5a,0xfd,0x53,0xcb,0x73,0x4e,0x51,0x3c,0x11,0xde,
+  0xbf,0xfc,0xe,0x3c,0x98,0x71,0xd0,0xc0,0xf2,0xd6,0x3c,0xb4,0x6,0xc9,0x31,0xda,
+  0x46,0xe7,0x3d,0xc0,0xd2,0xbd,0x7,0x45,0x51,0xb6,0xfa,0x73,0xf7,0x3d,0xca,0x70,
+  0x51,0x59,0xe3,0x79,0x5,0xb4,0x79,0x6c,0x35,0xbb,0x1b,0x3,0x65,0x8d,0xbe,0x55,
+  0xe4,0x71,0xc6,0xd0,0xd6,0xd0,0xd7,0xcb,0x93,0x6b,0x46,0xbb,0x85,0x4f,0xf1,0x28,
+  0x89,0x25,0xc7,0x3d,0x51,0xf4,0xff,0x0,0x91,0x5b,0x45,0x3e,0x2f,0x3b,0x68,0xf3,
+  0x29,0xd,0x6c,0x12,0xca,0xd8,0x66,0xde,0x7f,0x74,0xc5,0x21,0x6b,0xeb,0x53,0x4e,
+  0x88,0x36,0x73,0x2c,0x6d,0xf,0x25,0xed,0x2,0x31,0x57,0xd4,0x8f,0x8,0xa5,0x6a,
+  0x7b,0x90,0x78,0xb6,0xbc,0xb4,0xbb,0x8c,0x4b,0x6b,0x3c,0x73,0xc4,0x7a,0x3e,0x27,
+  0x35,0xed,0xfc,0x5a,0x4a,0xd,0x7b,0xd4,0xcf,0xf3,0xa3,0xd3,0xfe,0x40,0xfc,0xd,
+  0xc3,0xad,0x72,0xf1,0xd8,0xcd,0x25,0xa5,0xc3,0x34,0x7b,0x5d,0x1b,0x77,0x9d,0x87,
+  0x5a,0x38,0xb5,0xa4,0x37,0xda,0x84,0x43,0xae,0x45,0xea,0x7c,0x1c,0xbb,0xd3,0x6c,
+  0x2e,0x13,0x29,0xe6,0x9e,0x49,0x8b,0xbb,0x69,0x65,0xfc,0xb2,0x17,0x47,0x71,0x6e,
+  0xf6,0x39,0xae,0x92,0x57,0xbc,0xe9,0x20,0xab,0x41,0xdd,0xa5,0x35,0xaa,0xb8,0xba,
+  0xd0,0x32,0x38,0x5c,0xbf,0xd3,0x36,0x66,0xbe,0x28,0x22,0x71,0x73,0x5a,0xd9,0x26,
+  0x60,0x99,0xfb,0x5d,0x4a,0xb5,0x80,0xd7,0x6f,0x71,0x1d,0x47,0xb1,0x11,0xe6,0xcf,
+  0x89,0xb5,0x90,0x9,0xef,0x27,0x68,0xf,0x1b,0xa3,0x3,0xa6,0xd1,0x50,0x49,0xa8,
+  0xaf,0x51,0x44,0x1b,0x3f,0xa5,0x81,0xae,0xf5,0x23,0x8f,0x58,0xe3,0xe4,0x2d,0xf3,
+  0xee,0x4,0x37,0x2c,0x69,0x2d,0x6,0x17,0x34,0xf9,0xa1,0xdd,0x84,0xec,0x6,0x9e,
+  0xd4,0xa4,0x4e,0x5e,0x37,0x61,0x80,0x82,0x3f,0x26,0xca,0x2a,0x3e,0x30,0x3f,0xdc,
+  0x68,0xa9,0x1d,0xe3,0xaa,0xca,0xd6,0xc0,0xaa,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x35,0xdc,0xf4,0x25,0x97,0xd1,0xcc,0x5,0x1a,0xf0,0x9,0x23,0xb4,0xb4,0xeb,0xa2,
+  0x8b,0x1f,0x9d,0xdc,0xba,0xfa,0x1b,0x9c,0xc5,0xe4,0xc1,0xbb,0x5d,0x24,0xd2,0xbd,
+  0xac,0x3a,0xd0,0x3e,0x47,0x1a,0x2d,0x43,0xd7,0x6c,0x20,0xb8,0x90,0x31,0xb1,0x83,
+  0xe0,0x69,0xa8,0x6f,0xc6,0xa8,0x8b,0x97,0xe4,0x37,0x90,0x5e,0x2b,0x47,0x12,0x7b,
+  0xe8,0x47,0x41,0xee,0x54,0x74,0x1f,0x40,0x2f,0xdb,0x1f,0xaa,0x18,0x32,0xe3,0x47,
+  0x3d,0xf3,0x46,0x2b,0xda,0x24,0x85,0xc3,0xf6,0x85,0x28,0x98,0xe1,0xda,0x15,0x96,
+  0xdb,0xbd,0x8b,0xf7,0xd9,0xc0,0xee,0xf8,0xdb,0xfb,0x15,0x61,0x59,0x1,0x1,0x1,
+  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,
+  0x1,0x1,0x1,0x5,0x3b,0x89,0x4,0x70,0xbd,0xe4,0xd2,0x83,0xa9,0x41,0x1,0x3d,
+  0x40,0xe4,0x2e,0xe4,0x7c,0xff,0x0,0x31,0x97,0x4,0xba,0x9,0xee,0x5c,0xd8,0x2b,
+  0xd9,0xc,0x64,0x47,0x18,0xff,0x0,0xa1,0xa1,0x22,0xb1,0x31,0x87,0xb5,0xfe,0x7,
+  0x54,0x91,0xb9,0xc0,0x7f,0x55,0x43,0x48,0xfc,0x10,0x52,0xba,0x2e,0x23,0x53,0x53,
+  0xbb,0x5a,0xf5,0xea,0x83,0xa4,0xfd,0xbd,0x62,0xcd,0xcf,0x36,0x92,0xf7,0x76,0xd1,
+  0x61,0x6d,0x23,0xb6,0xed,0xae,0xe7,0x4a,0x36,0x1,0x5f,0xdd,0xa5,0x6a,0x95,0x62,
+  0x66,0x5a,0x47,0xe5,0x5a,0xc3,0x1f,0xf0,0x31,0xa3,0xf0,0x8,0xca,0xaa,0x2,0x2,
+  0x2,0x2,0x2,0x2,0xb,0x4c,0xab,0x37,0x59,0xb8,0xff,0x0,0x1,0xe,0xfc,0xd1,
+  0x62,0x26,0x7d,0xc1,0xe0,0xa4,0xb5,0xe4,0xd1,0x66,0x58,0xd7,0x11,0x7e,0x1d,0x6f,
+  0x3e,0xd0,0x5d,0x59,0xa3,0xd5,0x9a,0x0,0x7e,0x68,0xc8,0xa7,0xb9,0x58,0x57,0x1b,
+  0xb7,0xc5,0xe4,0xb2,0x97,0xae,0xb4,0xb3,0x6b,0xad,0x19,0x1b,0x9c,0xfc,0x95,0xe4,
+  0xcc,0x73,0x63,0x82,0x38,0xc7,0xef,0x12,0x3c,0x34,0xd7,0xc3,0xd4,0x95,0x34,0xc6,
+  0x73,0x2f,0x86,0xf4,0xe3,0xfc,0xed,0x84,0xf6,0x93,0x5e,0x64,0x71,0x2c,0x82,0x38,
+  0xb2,0x51,0xb4,0x7d,0x2c,0x8e,0x90,0x47,0x43,0x24,0x52,0xc9,0xba,0xa4,0xc9,0xa9,
+  0xdc,0xca,0x2b,0x82,0xcb,0x10,0x6c,0xb0,0x59,0x89,0x2f,0xf0,0xf0,0x16,0xc8,0xd7,
+  0x13,0x66,0xfb,0xc0,0xc9,0xe4,0x8d,0xa7,0xb3,0x40,0x23,0x27,0xb3,0x76,0xd4,0xc4,
+  0x6f,0x78,0xbf,0x58,0x7d,0x54,0xb9,0xc8,0x5a,0x58,0xc3,0x9d,0x95,0x8e,0xba,0xba,
+  0x89,0xa6,0x28,0x62,0x89,0xae,0x71,0x73,0xc0,0xdb,0x46,0x30,0x1a,0x7b,0x11,0x62,
+  0x68,0x45,0x91,0xb1,0x96,0x41,0x1c,0x73,0xb1,0xf2,0x1a,0x80,0xd0,0x75,0x34,0x51,
+  0x17,0x8,0x35,0xee,0x57,0x89,0x7c,0xd6,0xff,0x0,0x55,0x0,0x26,0x58,0x8d,0x48,
+  0x6f,0x5e,0xe2,0x45,0x11,0x62,0x27,0x7a,0xff,0x0,0xe9,0xed,0x85,0x86,0x3f,0xfe,
+  0xe4,0xc4,0x5a,0x3e,0x27,0xcb,0x39,0x19,0x43,0x1b,0xcf,0x96,0xc0,0xf0,0x48,0x90,
+  0x46,0x35,0x1b,0x9f,0xa3,0x88,0x34,0x1f,0x14,0x2b,0x88,0x4d,0x3d,0xe5,0xcc,0xc,
+  0x87,0x6f,0x87,0x4d,0xce,0xa9,0x71,0x34,0xf7,0xeb,0x45,0x51,0x91,0x82,0x33,0x1c,
+  0x5b,0x65,0x5,0xc4,0x80,0x3,0xf4,0x26,0xad,0xee,0xaf,0x4f,0x6a,0xb,0x98,0x6e,
+  0x8c,0x37,0x11,0x49,0xb,0xdc,0xd9,0x18,0xe0,0xf6,0x93,0xa5,0x1c,0xd2,0x8,0x3a,
+  0xfb,0x90,0x5a,0x46,0x3c,0xf1,0x25,0x40,0x8d,0xc2,0x57,0x92,0x58,0x36,0xb2,0x84,
+  0xd7,0xc2,0x7,0xcb,0x4e,0xe4,0x15,0xc4,0x71,0x97,0x6c,0x73,0x8e,0xd0,0x34,0x23,
+  0x51,0x51,0xdf,0x4e,0xf4,0x17,0x50,0xca,0xe6,0x3d,0xac,0x87,0x6e,0xea,0x68,0xee,
+  0x83,0xaf,0xf3,0x74,0x41,0x7e,0xcb,0xac,0xa9,0x6c,0x92,0x1b,0x9b,0x88,0x69,0x19,
+  0x17,0x1e,0x37,0x96,0x91,0x4a,0x16,0x90,0x4f,0x42,0xd5,0x35,0x54,0xb1,0xf9,0xbc,
+  0x8e,0x2a,0xe5,0x93,0x58,0x5f,0x5c,0x59,0x4a,0xca,0x16,0x4b,0x6b,0x33,0xe2,0x23,
+  0xdc,0x5a,0x42,0xa3,0xa1,0x5a,0x7d,0xc1,0x7a,0x95,0x67,0x80,0xbd,0xb3,0xb9,0xba,
+  0x6e,0x6b,0x18,0xe8,0x8d,0xb1,0xba,0xba,0x1f,0xab,0x1c,0x97,0x2c,0x73,0x23,0xa4,
+  0xcd,0xda,0xf9,0x1d,0xd5,0xd4,0x76,0xef,0x97,0x5a,0x28,0x38,0xeb,0x4,0xe,0x60,
+  0x68,0xdc,0xda,0x76,0x76,0x69,0xed,0x2a,0xa2,0xf3,0x1d,0x23,0x9d,0x2b,0x60,0xe,
+  0x25,0x91,0xb5,0xce,0xc,0x3d,0x80,0xf6,0x9f,0x62,0x6,0x56,0xf6,0x47,0x3f,0xca,
+  0x71,0x5,0x90,0xe9,0x51,0x4f,0xfd,0x5e,0xe4,0x1d,0x3b,0xd0,0x5e,0x21,0x7f,0xff,
+  0x0,0x75,0x63,0x79,0x25,0xe3,0x1b,0x6b,0x61,0x3,0xde,0x2d,0xa1,0x73,0x3c,0x53,
+  0x3e,0x48,0xcc,0x6d,0x90,0x77,0x6,0xee,0xa8,0x71,0x52,0xd5,0x91,0x2e,0x38,0xfd,
+  0xa4,0xb2,0x5d,0x79,0xe0,0x96,0xc7,0x17,0x52,0x3b,0x49,0xfd,0xd5,0x22,0xd6,0xca,
+  0xab,0x22,0x2,0x2,0x2,0x2,0x2,0x2,0xb,0x3c,0x95,0x87,0xd5,0xc4,0xdd,0xae,
+  0xd9,0x2c,0x66,0xac,0x71,0xe9,0xee,0x28,0xb2,0xa1,0xe7,0xad,0xde,0x99,0xf0,0x8c,
+  0x4e,0x72,0xef,0xcf,0x7c,0x96,0x39,0xa9,0xdd,0xe7,0xb2,0xda,0xc7,0x64,0x8c,0x7b,
+  0x1e,0x49,0x12,0x3e,0x37,0x6d,0x11,0xee,0xf7,0x8d,0x7b,0x12,0x2d,0xc7,0x14,0xbb,
+  0xc6,0x63,0xed,0x65,0x6b,0x1c,0x2e,0x5c,0x8,0x4,0x92,0xd6,0x52,0x87,0xaf,0x47,
+  0x75,0xf6,0x2a,0xcb,0xc5,0xbd,0x96,0x19,0xf3,0x11,0x3c,0xd3,0xdb,0xdb,0x9f,0x96,
+  0xe0,0xb0,0x3b,0xf1,0x63,0x6a,0x42,0xe,0xcd,0xe8,0xff,0x0,0xa6,0xd8,0x43,0x97,
+  0xc6,0xf2,0x8b,0x7b,0xe9,0xaf,0x60,0xb5,0xb8,0x68,0xb5,0xc,0x1,0xad,0xf3,0x98,
+  0x45,0x43,0xe8,0x2b,0xe1,0xdd,0xd3,0xb5,0x4b,0x57,0x12,0x68,0x76,0x8f,0xc5,0x45,
+  0x6e,0x78,0xa7,0x17,0x63,0xad,0xc9,0xeb,0xb0,0x2a,0xcd,0x5d,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
+  0x20,0x20,0x20,0xe5,0xbf,0x70,0xdc,0xfc,0x71,0x4e,0xe,0xfb,0x7b,0x67,0xf,0xf2,
+  0x99,0x8d,0xf6,0x96,0xbd,0xec,0x61,0x6d,0x26,0x96,0x9f,0xca,0xd7,0x50,0x7b,0x48,
+  0x50,0x43,0xab,0x4b,0x6d,0xc1,0xa0,0xd,0xc4,0x96,0x8a,0xaa,0xaa,0xbb,0xb,0x9d,
+  0x2b,0x99,0xe1,0x1b,0x86,0xda,0x76,0x1a,0x75,0x41,0x69,0x3f,0xee,0xb6,0xb5,0x35,
+  0x7,0xde,0x50,0x77,0xef,0xb6,0x1c,0x51,0x74,0x59,0x6b,0x9a,0x7f,0xbd,0x71,0x6d,
+  0x6e,0x1d,0xfd,0x1,0xcf,0x77,0xed,0xa,0x2a,0x4f,0xaa,0xc8,0x80,0x80,0x80,0x80,
+  0x80,0x80,0x83,0xcc,0xb1,0x89,0x22,0x73,0xf,0x47,0x2,0x3f,0x14,0x1a,0x46,0x77,
+  0x3,0xe4,0xdf,0xc7,0x3c,0x8f,0xdc,0x25,0x15,0x1,0xa2,0x80,0x3d,0xba,0x75,0x28,
+  0xd2,0x30,0x7a,0xdd,0x7d,0x4,0x9c,0xd2,0xeb,0x1b,0x8f,0x23,0xe9,0x2d,0xcb,0x25,
+  0xbd,0x89,0x80,0x35,0x86,0xf1,0xcd,0xf1,0x97,0x11,0xf3,0x50,0x75,0xaf,0x6a,0xb1,
+  0x1c,0xfd,0xde,0x1a,0x6e,0x73,0x77,0x53,0xa0,0xd7,0x43,0xd5,0x11,0x48,0xc8,0xd0,
+  0xdf,0x9,0xa5,0x7a,0xb5,0xa8,0x2e,0xf8,0xef,0x21,0x9f,0x5,0xc8,0x31,0xd9,0x88,
+  0x9b,0xe6,0x49,0x61,0x70,0xc9,0xcc,0x7d,0xaf,0x6b,0x4f,0x8d,0x95,0x3d,0xed,0xa8,
+  0x41,0x36,0x70,0xd2,0xfd,0x44,0xf6,0x33,0x5b,0x82,0xd6,0xcd,0xe5,0xcb,0x18,0x75,
+  0x2a,0x1a,0xe0,0x1d,0x47,0x52,0xa3,0xa1,0xd5,0x46,0x9b,0xca,0x32,0x20,0xd5,0xf9,
+  0x3f,0x10,0xb6,0xbf,0x8e,0x67,0x45,0x10,0x2c,0xb8,0x63,0xa3,0xb9,0x80,0x74,0x73,
+  0x5e,0x28,0xed,0x5,0x3a,0x83,0x42,0x8b,0x2a,0x30,0x73,0x9f,0xb6,0x6b,0xfb,0x39,
+  0xe6,0xbc,0xe2,0xb3,0xee,0x85,0xb5,0xff,0x0,0xf1,0x57,0x24,0x82,0xd0,0x7f,0x72,
+  0x39,0x8f,0xe4,0x1f,0xf8,0xa6,0x8e,0x41,0x96,0xc3,0xe7,0x30,0xb7,0x22,0xc,0xb5,
+  0x8c,0xb6,0x72,0x34,0xd1,0xe2,0x56,0x1d,0xa7,0xb9,0xbb,0xba,0x6b,0xd5,0x54,0x5b,
+  0xef,0x65,0x28,0xc6,0xf8,0x41,0xd4,0xf6,0x55,0x5,0xe7,0x1e,0xc2,0x5c,0xdf,0xcb,
+  0x2d,0xac,0x30,0x99,0x9e,0x64,0x84,0x6,0xb4,0xd4,0xef,0x99,0xe5,0xad,0x6d,0x4f,
+  0x7f,0x7a,0x55,0x8c,0x9f,0x3f,0xe1,0x57,0xdc,0x43,0x90,0x7f,0x8d,0x74,0xc1,0xd6,
+  0xb7,0x2d,0x75,0xcd,0xa4,0xad,0xd7,0xf4,0x37,0x6d,0xdb,0x20,0xa0,0xa3,0xda,0xed,
+  0xd,0x11,0x31,0x8a,0xb6,0xb7,0x6c,0xa3,0x68,0xba,0x63,0x8,0x7,0x57,0x1e,0xc3,
+  0xd8,0x6b,0xa2,0x8a,0xf1,0x71,0x7b,0x2e,0xcd,0x9b,0x8c,0xfb,0x6,0xd2,0xb,0xb4,
+  0xa9,0xee,0x77,0xe4,0x50,0x78,0x7d,0xf0,0x75,0x94,0x82,0x8d,0x6f,0x96,0x2b,0xb2,
+  0x9f,0x90,0xa7,0x7a,0xa8,0xc5,0x47,0x24,0x97,0x32,0xb8,0xbd,0xc4,0x18,0xdb,0xb9,
+  0x8c,0x6e,0x83,0x71,0xf6,0x7b,0x94,0xb5,0x64,0x7b,0x96,0x72,0xd3,0x47,0x2,0x5,
+  0x9,0x1a,0x6a,0x40,0xed,0xf7,0x22,0x62,0xf7,0x10,0xe2,0xd8,0xe4,0xb8,0xa9,0x63,
+  0xe5,0x70,0x3d,0x29,0x56,0x37,0xe5,0x1f,0x1e,0xaa,0x8d,0x9b,0xd3,0x1e,0x39,0x1e,
+  0x73,0x97,0x81,0x79,0x9,0xb8,0xb2,0xb5,0x63,0xae,0x66,0x8b,0x68,0x73,0x5c,0xfa,
+  0xd2,0x36,0xbf,0xd8,0x5c,0x7a,0xe,0xb4,0xee,0x52,0xac,0x4c,0xe,0x21,0xe9,0xd3,
+  0x83,0xed,0xef,0xb2,0x6c,0x2c,0x6b,0x28,0xf6,0x5a,0x9f,0x8,0x0,0x7c,0xad,0x2d,
+  0x1f,0xb1,0x49,0x16,0xd7,0x48,0x63,0x18,0xc6,0x86,0xb1,0xa1,0xad,0x1d,0x0,0x14,
+  0x1f,0x92,0xac,0xbe,0xa0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xd3,0xbd,0x4a,0xf5,
+  0x4f,0x8b,0xf0,0xc,0x63,0x2e,0x32,0xf3,0xd6,0xf6,0xe8,0x3c,0x63,0xac,0x23,0xa1,
+  0x96,0x67,0xb4,0x6b,0x4a,0xe8,0xd6,0x34,0x91,0xb9,0xc7,0xf3,0x3a,0x20,0x84,0x3c,
+  0xe7,0x97,0x65,0xb9,0x47,0x2a,0xb9,0xe4,0x39,0x2b,0x96,0xc7,0x3d,0xd6,0xd0,0xe8,
+  0x62,0x69,0x2d,0x8d,0x91,0xb7,0x6b,0x1a,0x9,0xa9,0x20,0xe,0xb5,0x54,0x60,0x26,
+  0xca,0xb5,0xac,0x3e,0x7b,0x87,0x8b,0x56,0xb8,0x78,0xb7,0x1e,0xde,0x83,0x44,0x14,
+  0x9b,0x91,0xc6,0x1f,0x16,0xf0,0xde,0xa1,0xde,0x3,0xdb,0xec,0xa6,0xa8,0x3b,0xf,
+  0xdb,0x67,0x34,0x75,0x8e,0x72,0x1c,0x9,0x9a,0xb6,0xf,0x95,0xd7,0x90,0xb7,0xc5,
+  0xa3,0xf7,0x34,0x48,0xdf,0xe1,0xa6,0xcf,0x17,0x4a,0xd4,0x29,0x56,0x26,0x4c,0xd6,
+  0x36,0x17,0x8d,0x6b,0xe4,0x8d,0xb2,0x2,0x2a,0xd7,0x8d,0x9,0x7,0xda,0x11,0x35,
+  0x70,0xc6,0x35,0x8c,0xc,0x68,0xa3,0x5a,0x28,0x7,0xb0,0x20,0xfa,0x80,0x80,0x80,
+  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
+  0x80,0x80,0x83,0xcc,0xb2,0x36,0x28,0xdd,0x23,0xbe,0x56,0x8a,0x94,0x10,0x67,0xd7,
+  0xee,0x55,0x9e,0xca,0x7a,0xa9,0x9a,0x6d,0xeb,0x6b,0x6d,0x8c,0x90,0x5a,0x58,0xdb,
+  0xd0,0xf8,0x20,0x60,0xe,0xe,0x15,0xff,0x0,0xdc,0x2e,0x2e,0x25,0x20,0xd6,0xb1,
+  0xf3,0x5a,0x4f,0x66,0xf9,0x98,0x7f,0xdd,0x1,0xcd,0x8c,0x10,0x43,0x48,0x4,0x38,
+  0x3a,0xbd,0xc9,0x55,0x6c,0x6a,0xb,0xc8,0x76,0x80,0x9a,0xf,0x70,0xed,0xf7,0x94,
+  0x16,0xc4,0x38,0xb9,0x81,0xc6,0xa4,0xea,0x49,0xef,0x28,0x25,0x5f,0xdb,0x3d,0x8b,
+  0x22,0xe2,0x96,0xf2,0x91,0xad,0xc5,0xdd,0xcc,0xd5,0xef,0xd8,0xd1,0x18,0xff,0x0,
+  0xd2,0x54,0x5a,0xee,0x8a,0xb2,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xc5,0x72,
+  0x19,0x26,0x36,0x33,0x41,0x66,0x58,0x32,0x2f,0x8a,0x41,0x69,0x23,0xc0,0x70,0x8e,
+  0x52,0xd2,0x18,0xed,0x7f,0x9a,0x88,0xb1,0xf9,0xf3,0x79,0x75,0x76,0x6f,0x27,0x75,
+  0xdc,0x8e,0x7d,0xdf,0x98,0xff,0x0,0x3d,0xd2,0x13,0xb8,0xc8,0x1c,0x77,0xee,0xef,
+  0x76,0xea,0xd5,0x54,0x5a,0xcb,0x38,0x6,0xb5,0xa6,0xed,0x4b,0x46,0x81,0x5,0xa4,
+  0xb7,0xcd,0xa9,0x68,0xa0,0xf6,0x7f,0xe3,0xfd,0x10,0x5a,0xbe,0xe4,0xca,0x44,0x45,
+  0xd5,0x32,0xfe,0x9b,0x41,0xd0,0x2,0xed,0x2a,0x7f,0x14,0x13,0xeb,0x8d,0x5a,0xcf,
+  0x65,0x6d,0x89,0xb3,0x2e,0x6c,0x93,0xda,0xc5,0x6f,0xb,0xa4,0x67,0xca,0xe7,0x46,
+  0xc6,0xb1,0xc5,0xb5,0xec,0x34,0x59,0x69,0xd0,0x15,0x64,0x40,0x41,0xf1,0xcc,0x63,
+  0x81,0xe,0x68,0x21,0xda,0x38,0x11,0x5a,0xa0,0xd5,0xb9,0x47,0xa7,0xb8,0x4c,0xe5,
+  0x8c,0xd6,0xb2,0xc1,0x1b,0xe0,0x9d,0xa4,0x4b,0x69,0x30,0xdf,0xb,0xfe,0x1d,0x5a,
+  0x7b,0x8b,0x51,0x75,0x18,0xfd,0x48,0xfb,0x6c,0xc8,0xe2,0x9f,0x2d,0xcf,0x16,0xf,
+  0xed,0x77,0xf8,0x89,0xdd,0xba,0xa3,0xff,0x0,0xeb,0x4c,0x74,0x77,0xf4,0xbf,0x5f,
+  0x6a,0x68,0xf5,0xf6,0xe3,0xc4,0x5,0xfd,0xd7,0x20,0x83,0x37,0x8e,0x91,0xb1,0x35,
+  0xd6,0xb0,0xb4,0x4c,0xd3,0x14,0xad,0x9d,0x92,0x97,0x1d,0x95,0x0,0x82,0xce,0xd2,
+  0x94,0x8d,0xef,0xd7,0x6f,0x47,0xee,0xf3,0xd6,0xc,0xfa,0x4d,0xbf,0xe5,0x6c,0x9e,
+  0xf7,0xe3,0x64,0x71,0xda,0xc9,0xe2,0x7e,0xb2,0x40,0xe7,0x74,0x69,0x34,0x4,0x13,
+  0xdb,0xec,0x28,0x23,0x55,0xd7,0x13,0xe4,0x11,0x5e,0x49,0x63,0x71,0x61,0x25,0xbd,
+  0xc4,0x2e,0xdb,0x38,0x9d,0xbb,0x76,0xd3,0xb4,0x9f,0xf8,0x21,0x8a,0xf6,0xde,0x9f,
+  0x72,0xb,0xa7,0xf9,0x36,0x97,0x2,0xe2,0xe9,0xe0,0x98,0xed,0x62,0x8c,0x97,0x3c,
+  0xb4,0x56,0x83,0xe1,0xda,0x9a,0x63,0x21,0xc7,0xfd,0x35,0xce,0xe4,0xae,0xae,0x5b,
+  0x75,0x6b,0x71,0x8a,0x8e,0xc5,0xb5,0x94,0xdd,0xc5,0xe5,0xbe,0x49,0x0,0xde,0xd8,
+  0xc3,0x49,0xe8,0x47,0x6f,0x62,0x5a,0x48,0xc2,0xe6,0xb8,0xe4,0xb6,0x39,0x13,0x77,
+  0x4,0xe,0x7d,0xa4,0x8d,0xdd,0x56,0x2,0xed,0x8f,0x1d,0x6a,0x7,0x7f,0x62,0x8b,
+  0x8c,0xb7,0x14,0xc0,0xb,0xeb,0x6b,0x9c,0x9c,0xf1,0xee,0xb5,0x63,0xdb,0x6c,0xc7,
+  0xb8,0x75,0x91,0xe0,0xbd,0xf4,0x3e,0xc0,0x0,0x29,0x15,0x92,0x67,0xa3,0x7c,0xce,
+  0x77,0xdb,0x4f,0x67,0x6c,0xd1,0x83,0xba,0x76,0xef,0xac,0x73,0xb5,0x86,0x1a,0xd3,
+  0x74,0x8c,0xeb,0xd3,0xe5,0xa7,0xcc,0xae,0xb3,0x89,0x1b,0xe8,0xdf,0x8,0xc6,0xe3,
+  0x27,0x89,0xb6,0x70,0xb5,0xb6,0x71,0xd6,0xaf,0x3f,0xee,0x4b,0x23,0x40,0xac,0x8f,
+  0x23,0xf0,0xfd,0x8a,0x2d,0x76,0xc5,0x59,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,
+  0x7c,0x91,0xdb,0x23,0x73,0x80,0xdc,0x5a,0x9,0xa0,0xed,0xa2,0x8,0x7f,0xf7,0x49,
+  0x27,0x9b,0xce,0x31,0x77,0x97,0xe,0x7f,0x97,0x71,0x60,0x5b,0x10,0x94,0xd6,0x36,
+  0x6d,0x99,0xd5,0x64,0x64,0xe8,0x9,0x4,0x54,0x24,0x5a,0xe2,0x82,0x18,0x5b,0x2b,
+  0xe6,0x8b,0xc2,0x40,0xf1,0x1,0xf2,0x92,0x3b,0x87,0x7d,0x15,0x45,0x4a,0x37,0x76,
+  0xc2,0xe1,0xe3,0xd4,0x34,0x9f,0xf4,0x54,0x7a,0xe,0x61,0x1,0xcd,0xd,0xf,0x3d,
+  0x9,0x60,0x20,0x13,0xd6,0x95,0x50,0x6c,0x9c,0x7,0x26,0xcb,0x5e,0x77,0xc7,0xf7,
+  0x8d,0x1d,0x79,0x14,0x2e,0x7b,0x6b,0xf2,0xca,0x76,0x68,0xdf,0x66,0xe4,0x13,0xc3,
+  0x8f,0x5c,0x79,0xb8,0xd6,0x30,0xfc,0xd0,0x93,0x19,0xf8,0x6a,0x3f,0x6a,0x8b,0x59,
+  0x24,0x41,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,
+  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x5,0xb5,0xed,0xa3,0xee,0x1a,0x3,0x64,0xda,
+  0x6,0xbb,0x3b,0x9,0xf6,0xa9,0x56,0x57,0x1d,0xe7,0xdc,0x17,0x8e,0xf2,0xcb,0x89,
+  0x62,0xcd,0xd9,0x87,0x4f,0x14,0x94,0x8a,0xe5,0xa0,0x36,0x78,0xf6,0xe8,0x0,0x7d,
+  0x35,0x6f,0xf2,0x9d,0x11,0x5c,0xb7,0x39,0xe8,0x15,0xc4,0x2,0x49,0x30,0x77,0x62,
+  0x76,0xbc,0x51,0xf6,0xf2,0x52,0x7,0xff,0x0,0x6b,0x85,0x58,0x4f,0xe0,0x9b,0x47,
+  0x37,0xc8,0x71,0x1b,0x8b,0x1b,0xa9,0x2d,0x2f,0x84,0xd6,0xf7,0x51,0x75,0x8e,0x70,
+  0x37,0xf,0x77,0x78,0x4d,0x31,0x6b,0x1f,0x1f,0xc8,0x3e,0xe9,0x8d,0x85,0xcd,0x9d,
+  0xef,0x21,0x91,0xb3,0x56,0x1a,0x9d,0x29,0xda,0xa,0x69,0x89,0x8f,0xe8,0xb6,0x12,
+  0x4c,0x57,0x17,0xc5,0xd9,0xcb,0xb4,0xc9,0x6b,0x69,0x59,0x1c,0xde,0x9e,0x64,0xcf,
+  0x2f,0x75,0x3b,0xfa,0xa1,0x5d,0x21,0x56,0x44,0x4,0x4,0x4,0x4,0x4,0x4,0x4,
+  0x18,0x3c,0x9b,0x5f,0x1c,0xf2,0xc8,0xfa,0xec,0x1e,0x2d,0xda,0xd2,0x94,0x51,0xa7,
+  0x6,0xf5,0x5b,0xd3,0xb,0x3e,0x49,0x61,0x71,0x7f,0x81,0xb2,0xb6,0xb7,0xe4,0x92,
+  0x5c,0x36,0x63,0x3d,0x7c,0x81,0x33,0x5c,0x7f,0x50,0x48,0x47,0x86,0xa4,0x6b,0xb8,
+  0x8a,0xd5,0x54,0x70,0x19,0xfd,0x37,0xe7,0xc,0xca,0xc9,0x8c,0xb8,0xc7,0x18,0xee,
+  0x18,0x7f,0x53,0x7b,0xc3,0xda,0x1a,0x7a,0x3c,0x6c,0xae,0xe0,0x7b,0xa,0xba,0x63,
+  0x6a,0xc0,0xfa,0xb,0x9f,0xbf,0x78,0xe,0xe,0x78,0x3f,0x31,0x5,0xb1,0xc6,0x3d,
+  0xe4,0x6e,0x3f,0x9a,0x9a,0xb8,0xea,0xdc,0x4f,0xed,0xa2,0xda,0xda,0x78,0xae,0x25,
+  0x8a,0x27,0xca,0xc7,0x34,0xee,0x7b,0x77,0xb6,0xa3,0xb7,0xc4,0x35,0xfc,0x54,0x38,
+  0x48,0x6c,0x76,0x22,0xd2,0xc5,0xa0,0xc6,0xb,0xa4,0xda,0x1a,0x64,0x76,0xa7,0x41,
+  0x4d,0x3b,0x95,0x65,0x7a,0x80,0x80,0x80,0x80,0x82,0x95,0xcd,0xad,0xb5,0xd4,0x46,
+  0x2b,0x88,0xdb,0x2c,0x67,0xf7,0x5c,0x2a,0x82,0xda,0xc7,0xd,0x61,0x65,0x24,0x92,
+  0xc3,0x18,0xf3,0x1f,0x41,0xbc,0x80,0x5c,0x1a,0xde,0x8d,0xad,0x2b,0x44,0x35,0x5e,
+  0xfa,0xc2,0xd6,0xfa,0xdd,0xd0,0x5c,0xb0,0x3e,0x33,0xaf,0xb4,0x1e,0xf0,0x7b,0xa,
+  0xd,0x5e,0xfb,0x81,0x59,0xcc,0x5d,0x1f,0x91,0xc,0xf1,0x3e,0x80,0xbe,0x51,0xfa,
+  0x94,0x1d,0x85,0xc0,0x56,0x83,0xba,0xaa,0x2e,0xb1,0xcc,0xf4,0xaf,0x1d,0x8e,0x9e,
+  0x6b,0xcc,0x7c,0x51,0x46,0xf9,0x3c,0x52,0x36,0x30,0x5a,0xe7,0x53,0xb3,0x71,0x2e,
+  0xfc,0x34,0x4c,0x5d,0x52,0x77,0x1c,0xb1,0xcb,0xbe,0x2b,0x6b,0x88,0xaa,0x5d,0x48,
+  0xfc,0xe6,0x68,0xf6,0xb3,0xa9,0xf1,0x6a,0x83,0xd4,0xfe,0x92,0xf1,0xbc,0x78,0xb7,
+  0x7e,0x2a,0xc4,0x38,0xc6,0xd7,0x47,0x23,0x9f,0x49,0x1e,0x5a,0xef,0x6b,0xbb,0xea,
+  0x6a,0x98,0x6a,0xae,0x3b,0xd2,0xce,0x3f,0x3b,0x9c,0xeb,0xfb,0x47,0x7d,0x35,0x46,
+  0xdb,0x17,0x11,0xe5,0x93,0x5a,0xd4,0x8e,0xbf,0x9a,0x61,0xac,0xc5,0xdf,0x18,0x30,
+  0xbf,0x6e,0x3d,0x8d,0x6d,0xbb,0xc8,0x2,0x21,0xa6,0xc0,0x45,0x29,0x43,0xa6,0xd5,
+  0x53,0x59,0xac,0x76,0x23,0x1f,0x8f,0x89,0xac,0xb5,0x81,0x91,0x51,0xb4,0x25,0xa2,
+  0x95,0xed,0x3f,0x89,0x44,0x5e,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xf8,
+  0xe6,0xee,0x69,0x6f,0x4a,0x8a,0x54,0x7b,0x50,0x72,0xbf,0x57,0xb8,0x3c,0x79,0x2c,
+  0xc,0xd6,0x8c,0x8d,0x97,0x2e,0xb9,0xb6,0x9e,0x28,0x84,0xcd,0x5,0xac,0x93,0x6d,
+  0x58,0xe2,0x7f,0x77,0x5f,0xde,0xec,0x46,0xa2,0x1e,0x5f,0x70,0x2e,0x5f,0x8f,0xbb,
+  0x7d,0x9d,0xde,0x3b,0x64,0xb1,0x50,0x39,0x8c,0xb9,0x68,0x6f,0x4d,0x8,0xa1,0xd4,
+  0x11,0xda,0xae,0xa6,0x2c,0xcf,0x13,0xce,0xb7,0x49,0x31,0x9a,0xb8,0xd7,0x73,0x48,
+  0x92,0xbd,0xde,0x2d,0xdb,0x93,0x53,0x1e,0xe0,0xe2,0xbc,0xa6,0x3d,0xec,0x83,0x1a,
+  0xe0,0xc2,0x41,0x6b,0xe4,0x91,0xad,0x3,0xdc,0x1c,0x6a,0x9a,0xb9,0x5b,0xa7,0xa6,
+  0xfc,0x17,0x3f,0xff,0x0,0x79,0xe3,0x72,0xf7,0x31,0xdb,0xc7,0x6d,0x8e,0xb8,0x86,
+  0x69,0x83,0x9e,0x64,0x24,0x31,0xf5,0xda,0xd0,0xd6,0xd3,0x77,0xc5,0x4d,0x31,0x35,
+  0x78,0xd4,0x25,0xb6,0xb2,0xcb,0x5d,0x24,0x7d,0x0,0xfe,0x9d,0x2a,0x85,0x66,0x11,
+  0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,
+  0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x18,0x7c,0xc7,0x1b,0xb5,0xbd,0x69,0x92,0x21,
+  0xe5,0xdc,0x57,0x75,0x41,0xd1,0xdd,0xe0,0xa8,0xba,0xd6,0x27,0xc5,0x46,0xc7,0xba,
+  0x37,0x87,0x31,0xe3,0x42,0xd2,0x7a,0x22,0xb1,0xd9,0x2e,0x23,0xc7,0xb2,0xac,0x11,
+  0xe4,0xec,0xd9,0x78,0x19,0xfe,0xd9,0x93,0x47,0x34,0x77,0x7,0x36,0x8e,0x1f,0x8a,
+  0xa,0xd8,0x5f,0x4a,0x78,0xad,0x7,0x91,0x89,0x8a,0xda,0x12,0x28,0x67,0x1b,0xbc,
+  0xc2,0xf,0x5d,0xae,0x24,0xb9,0x30,0xd7,0x42,0xb1,0xc7,0xd9,0xd8,0xc0,0xd8,0x2d,
+  0x62,0x11,0x46,0xd0,0x1a,0x0,0xeb,0x46,0x8a,0xa,0x93,0xaa,0xac,0xae,0x10,0x10,
+  0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x7c,0x7b,0x1a,0xf6,0x39,0x8e,0x15,0x6b,0x81,
+  0xe,0x1e,0xc2,0x83,0x53,0x9b,0x89,0xcb,0x9,0x2e,0x63,0x4,0xc2,0xba,0x34,0x13,
+  0x5a,0x1f,0x61,0xa2,0x2e,0xbd,0xb3,0x84,0x59,0x5e,0x3d,0x92,0xe4,0xa0,0x8c,0xf9,
+  0x62,0x8d,0x68,0xf9,0xa9,0x5a,0xd0,0x91,0xa5,0x10,0xd6,0xc3,0x69,0x8c,0xc7,0xda,
+  0x46,0xd6,0x5b,0xc0,0xc8,0xda,0xdf,0x94,0x0,0x34,0x44,0x5c,0xa0,0x20,0x20,0x20,
+  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xf2,0xc8,0xe3,0x65,0x76,0x34,0x36,0xba,
+  0x9a,0x0,0x3f,0x62,0xf,0x48,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x3c,0x4b,0xc,0x53,0x34,0xb6,0x46,0x7,0x2,0x8,0xd4,0x3,0xd7,
+  0x4e,0xd4,0x1a,0xb5,0xc7,0xa7,0xd8,0xf9,0x9d,0x57,0xb6,0x9,0x45,0xb,0x47,0x9b,
+  0xb,0x5c,0x76,0x9e,0xca,0x9a,0xa2,0xea,0x8c,0xde,0x98,0xe0,0x9d,0x1e,0xc6,0x5b,
+  0xdb,0x90,0x40,0xe,0x63,0xa1,0x68,0x6f,0xe4,0x86,0xb1,0xae,0xf4,0x93,0x9,0xc,
+  0xcd,0x96,0x1c,0x6d,0xa3,0xcd,0x6b,0xa8,0x75,0x7,0xf6,0xb8,0x90,0x54,0xc5,0xd6,
+  0x4b,0xf,0xc2,0x2d,0x63,0x94,0x79,0xb6,0x70,0xdb,0x45,0x4,0x81,0xec,0x8d,0x91,
+  0xb2,0x8e,0x20,0xd7,0x4a,0x7b,0x90,0xd6,0xe2,0xd6,0xb5,0xa0,0x35,0xa0,0x0,0x3a,
+  0x1,0xa0,0x55,0x97,0xd4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,
+  0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x14,0x26,0xb1,
+  0xb4,0x9a,0x56,0xcb,0x2c,0x41,0xef,0x68,0xa0,0x27,0xb9,0x0,0xd8,0x58,0x9a,0x7e,
+  0x83,0x34,0x35,0x1e,0x10,0x82,0xb8,0x0,0xa,0xe,0x88,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,
+  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x3f,0xff,0xd9,
+    // /Users/zhenkai/Develop/mumble-1.2.3/src/actd/images/setting.png
+  0x0,0x0,0xcd,0x6c,
+  0x89,
+  0x50,0x4e,0x47,0xd,0xa,0x1a,0xa,0x0,0x0,0x0,0xd,0x49,0x48,0x44,0x52,0x0,
+  0x0,0x1,0x0,0x0,0x0,0x1,0x0,0x8,0x6,0x0,0x0,0x0,0x5c,0x72,0xa8,0x66,
+  0x0,0x0,0xcd,0x33,0x49,0x44,0x41,0x54,0x78,0xda,0xec,0x7d,0x7,0xa0,0x1c,0x55,
+  0xd5,0xff,0x99,0xad,0xaf,0xd7,0xbc,0x74,0xd2,0x43,0x42,0x1a,0x90,0xd0,0x9,0x5d,
+  0x7a,0x47,0x10,0xa4,0x2b,0x45,0x42,0x2f,0xca,0x7,0x7e,0x58,0x50,0x10,0x10,0x11,
+  0xe9,0x8a,0xf8,0x89,0x22,0x8,0x82,0xa0,0x94,0x3f,0x68,0xe8,0x41,0x4a,0x68,0x21,
+  0x21,0x81,0x90,0xde,0x93,0xd7,0xfb,0xdb,0x36,0x33,0xff,0x73,0xce,0xbd,0x77,0xe6,
+  0xce,0xec,0xec,0x2b,0xc9,0x4b,0x5e,0x24,0xef,0x86,0x65,0x66,0x67,0xf7,0xed,0xcc,
+  0xee,0xdc,0xf3,0x3b,0xbf,0x53,0xaf,0x1,0xfd,0xa3,0x7f,0xf4,0x8f,0x1d,0x76,0x18,
+  0x7d,0x7d,0x1,0xfd,0xa3,0x7f,0xf4,0x8f,0xbe,0x1b,0xfd,0x0,0xd0,0x3f,0xfa,0xc7,
+  0xe,0x3c,0xfa,0x1,0xa0,0x7f,0xf4,0x8f,0x1d,0x78,0xf4,0x3,0x40,0xff,0xe8,0x1f,
+  0x3b,0xf0,0xe8,0x7,0x80,0xfe,0xd1,0x3f,0x76,0xe0,0xd1,0xf,0x0,0xfd,0xa3,0x7f,
+  0xec,0xc0,0xa3,0x1f,0x0,0xfa,0x47,0xff,0xd8,0x81,0x47,0x3f,0x0,0x7c,0xd,0x46,
+  0x4d,0x6d,0x4d,0x2c,0x93,0xc9,0x4c,0x4d,0x26,0x92,0x90,0x4c,0x25,0xc1,0x34,0x4d,
+  0x0,0x1b,0xa0,0xbd,0xa3,0x1d,0xc,0x63,0xcb,0x6e,0x31,0xfd,0x7d,0x5e,0x5e,0x1e,
+  0xef,0xc7,0x62,0x31,0x88,0x84,0x23,0x50,0x50,0x58,0x0,0x91,0x48,0x64,0x69,0x45,
+  0x79,0x45,0x53,0x5f,0x7f,0xf7,0xfe,0xb1,0x65,0xa3,0x1f,0x0,0xbe,0x6,0xe3,0xa3,
+  0x8f,0x3f,0x9a,0x89,0x82,0x3a,0x87,0x9f,0x68,0x77,0xd4,0xc8,0x71,0x7b,0x73,0x81,
+  0x82,0x6d,0xdb,0xd9,0xc7,0xc0,0xf6,0x1f,0x50,0xef,0xbd,0x62,0x8f,0x19,0x7b,0xdc,
+  0xdf,0xd7,0xdf,0xbd,0x7f,0x6c,0xd9,0xe8,0x7,0x80,0xaf,0xc1,0xf8,0xf8,0x93,0x8f,
+  0x7f,0x60,0x59,0xd6,0x2f,0x49,0x80,0x75,0xe1,0xe,0x4,0x80,0xae,0xee,0xb8,0x1d,
+  0x74,0xc8,0x3d,0xa8,0x40,0x22,0x14,0xe,0x3d,0xb1,0xc7,0xf4,0x3d,0xce,0xea,0xeb,
+  0xef,0xde,0x3f,0xb6,0x6c,0xf4,0x3,0xc0,0xd7,0x60,0x7c,0x3a,0xef,0xd3,0x67,0x91,
+  0xf6,0x9f,0xac,0xb,0x6a,0x90,0xf0,0x77,0xd7,0x1c,0xf0,0x33,0x1,0xf,0xb,0xb0,
+  0xc5,0xe7,0x84,0x42,0xa1,0xd5,0xd3,0x77,0x9f,0x3e,0xb2,0xaf,0xbf,0x7b,0xff,0xd8,
+  0xb2,0xd1,0xf,0x0,0x5f,0x83,0x31,0xef,0xb3,0x79,0xd5,0x28,0xb4,0x55,0x1e,0xed,
+  0xef,0x13,0xf6,0x9e,0xf8,0x2,0x2,0x4d,0x1,0xdb,0xcb,0x2,0xf8,0xf3,0xc,0x18,
+  0xbe,0xdb,0xb4,0xdd,0xd6,0xf5,0xf5,0xf7,0xef,0x1f,0x9b,0x3f,0xfa,0x1,0xe0,0xbf,
+  0x7c,0xcc,0x5f,0x30,0x7f,0x1c,0x6e,0x96,0xd0,0x3e,0x6a,0xe5,0x9c,0xef,0xdb,0x52,
+  0x0,0xd0,0x7,0x9a,0x1b,0x6a,0xf7,0x8c,0x69,0x53,0xa7,0x3d,0xd5,0xd7,0xbf,0x41,
+  0xff,0xd8,0xfc,0xd1,0xf,0x0,0xff,0xe5,0xe3,0xf3,0x85,0x9f,0x9f,0x83,0x2,0xfb,
+  0x67,0xda,0xd7,0x1,0x60,0x6b,0x32,0x0,0x5,0x0,0xf8,0x99,0xf7,0x4c,0x99,0x3c,
+  0xe5,0xea,0xbe,0xfe,0xd,0xfa,0xc7,0xe6,0x8f,0x7e,0x0,0xf8,0x2f,0x1f,0xb,0x17,
+  0x2d,0x7c,0x10,0x37,0xb3,0x68,0xbf,0x33,0x6,0x40,0x63,0x73,0x7d,0x0,0xfe,0xa1,
+  0x0,0x0,0xdf,0x37,0x17,0x1,0x60,0xef,0xbe,0xfe,0xd,0xfa,0xc7,0xe6,0x8f,0x7e,
+  0x0,0xf8,0x2f,0x1f,0x8b,0xbe,0x58,0xf4,0x11,0x6e,0x66,0xd0,0x7e,0x67,0xc,0x20,
+  0xd7,0xb1,0xa0,0x91,0xe5,0x4,0xc,0x78,0x2e,0x8f,0xa5,0xf0,0x33,0x8b,0x77,0x99,
+  0xb8,0x4b,0xaa,0xaf,0x7f,0x87,0xfe,0xb1,0x79,0xa3,0x1f,0x0,0x7a,0x71,0xcc,0xf9,
+  0xcf,0x9c,0x8a,0x90,0x11,0xaa,0xd8,0x7f,0xbf,0xfd,0x97,0x6e,0x8b,0xf3,0x7d,0xb9,
+  0xf8,0xcb,0x7c,0x14,0xc4,0x46,0x14,0xc2,0x18,0x9,0x77,0x16,0xed,0xef,0x69,0x18,
+  0xd0,0xce,0x75,0x38,0x3b,0xc,0xa8,0x40,0x0,0xcf,0xb9,0xf7,0xc4,0x9,0x13,0xe7,
+  0x6e,0x8b,0xef,0xfb,0xce,0x7f,0xde,0x29,0xc5,0xb3,0xe,0x3b,0x60,0xff,0x3,0x16,
+  0x6d,0x8b,0xf3,0xed,0x8,0xa3,0x1f,0x0,0x7a,0x61,0xbc,0xfd,0xce,0xdb,0x31,0x14,
+  0xfc,0xcb,0x51,0x20,0x7e,0x6c,0x84,0x8c,0xd6,0x70,0x38,0x7c,0xc0,0xbe,0x7b,0xef,
+  0xbb,0x62,0x6b,0x9f,0xf7,0xab,0x25,0x5f,0xed,0x85,0xe7,0xfc,0x80,0x4,0xdd,0x11,
+  0x7e,0x3d,0x11,0xa8,0xb,0x8d,0xaf,0x5e,0xef,0x8c,0xf2,0x67,0xbd,0x26,0x9f,0x5a,
+  0xb6,0xe3,0x7,0xb8,0x7a,0xe7,0xf1,0x3b,0xdf,0xb3,0xb5,0xbf,0xeb,0xbb,0xef,0xbf,
+  0x9b,0x6f,0x5b,0xf6,0xbf,0xd1,0xfc,0xd8,0x17,0xbf,0xe3,0xc3,0x78,0x5d,0x37,0x1d,
+  0x38,0xf3,0xc0,0xfa,0xad,0x7d,0xde,0xaf,0xfb,0xe8,0x7,0x80,0x2d,0x1c,0xa8,0xf5,
+  0x8f,0x45,0xa1,0xf8,0xd,0xee,0x8e,0x23,0x4d,0x89,0x40,0x0,0x8,0x0,0x2b,0x42,
+  0xe1,0xd0,0x1,0x7b,0xef,0xb9,0xf7,0x56,0xd,0x91,0x2d,0x59,0xba,0xe4,0x2a,0x14,
+  0x4,0x3a,0xb7,0x43,0xff,0xbb,0xc5,0x2,0x7a,0x30,0x82,0xb4,0x3f,0xd,0xc7,0x11,
+  0x8,0xc6,0x63,0xe3,0xc7,0x8f,0x3f,0x77,0x6b,0x7e,0xcf,0xf,0x3e,0xfc,0x20,0x66,
+  0x99,0xd6,0x8b,0x19,0x33,0x73,0x38,0x5f,0x83,0xcd,0xe7,0xad,0xb7,0xd,0xfb,0x26,
+  0xdc,0x7f,0xf8,0xc0,0x3,0xe,0x34,0xb7,0xe6,0xf9,0xbf,0xce,0xa3,0x1f,0x0,0x36,
+  0x73,0xa0,0xd6,0x9f,0x84,0x9b,0xbb,0xc,0xdb,0x38,0x8a,0x9e,0x1b,0x61,0xd6,0xc3,
+  0xa0,0xa8,0x38,0x82,0xc0,0x62,0x14,0xca,0x3,0xf6,0x98,0xb1,0x47,0xcd,0xd6,0xba,
+  0x6,0x4,0x80,0x3f,0xe3,0xb9,0xce,0xa1,0x7d,0x2,0x1e,0x67,0xf8,0xee,0xea,0xe6,
+  0xd4,0x3,0x4,0xb2,0x2,0xed,0x90,0x62,0x0,0xf8,0xbe,0xa5,0xe3,0xc7,0x8d,0x1f,
+  0xbf,0xb5,0xbe,0xe3,0x47,0x1f,0x7f,0x14,0x43,0xb0,0x79,0x1a,0x85,0xff,0x4,0x3a,
+  0x3f,0x5d,0x17,0x9f,0xdb,0x12,0xd7,0x80,0x8c,0x6b,0x11,0x1e,0xbf,0x1a,0x41,0x60,
+  0xf6,0xd6,0xba,0x86,0xaf,0xf3,0xe8,0x7,0x80,0x1e,0x8e,0xb7,0xde,0x7e,0xab,0x14,
+  0x27,0xdd,0xcd,0x38,0xe9,0x2e,0xc7,0xa7,0x61,0xdc,0x67,0xed,0x1b,0xe,0x85,0xf9,
+  0xd7,0x64,0x61,0x13,0x1a,0xa,0x42,0x91,0xd0,0x2,0x3c,0x7e,0xf0,0xee,0xbb,0xed,
+  0xbe,0x55,0xa8,0xea,0xb2,0x65,0xcb,0x96,0xe0,0x69,0x28,0xf,0x0,0xfc,0x3e,0x80,
+  0x40,0x27,0x60,0x37,0x6f,0xb7,0xd,0x5d,0x27,0x2,0xf1,0xd6,0xb2,0xd5,0xb9,0x2a,
+  0xc7,0x8c,0x19,0xd3,0xeb,0xdf,0xf1,0x93,0x4f,0x3f,0x9,0xa3,0x90,0x3f,0x8e,0xda,
+  0xff,0x74,0x62,0x1c,0xf4,0x9d,0xe8,0xda,0xe8,0xbc,0x24,0xfc,0x78,0x5c,0xf8,0x22,
+  0xc4,0xf5,0x3e,0x87,0x9b,0xeb,0xf,0x3a,0xf0,0xa0,0x6d,0xe2,0x7f,0xf9,0xba,0x8c,
+  0x7e,0x0,0xe8,0xe6,0x78,0xf3,0xed,0x37,0xc3,0xa8,0x65,0x2f,0xc6,0xc9,0x76,0xb,
+  0x4e,0xb4,0xa,0x99,0xe,0xeb,0x3c,0x18,0x8,0x50,0xb,0xcb,0xc,0x39,0x47,0x38,
+  0x22,0x91,0xc8,0x5c,0x7c,0xfd,0xe0,0x5d,0xa7,0xed,0xda,0xd1,0x9b,0xd7,0xb3,0x7c,
+  0xc5,0xf2,0x52,0xdc,0x34,0xd2,0xbe,0xc7,0xfb,0xef,0xad,0x6,0xea,0x9d,0xe1,0xc9,
+  0x4,0xce,0x36,0x3,0x70,0x1c,0x31,0x66,0xf4,0x98,0x5e,0xd7,0xc0,0x9f,0xce,0xfb,
+  0xf4,0x41,0x33,0x63,0xce,0x42,0x51,0x7,0xfc,0x95,0xf9,0xfb,0x90,0xe0,0xb3,0xd0,
+  0x2b,0x10,0xb0,0x4,0x10,0x48,0x46,0x92,0xc2,0xef,0x7f,0x3f,0xbe,0xfa,0x93,0x83,
+  0xf,0x3c,0xb8,0xb5,0xb7,0xaf,0xe7,0xeb,0x38,0xfa,0x1,0xa0,0x1b,0x3,0x85,0xff,
+  0x20,0x9c,0x58,0x14,0x6f,0x27,0xda,0xef,0x8,0x3c,0x69,0x7d,0xb5,0xcf,0x1a,0x3f,
+  0x24,0x26,0xa9,0x12,0x42,0x16,0x16,0xfc,0x2f,0x1a,0x8d,0x3e,0x8f,0xaf,0x9d,0x36,
+  0x65,0xf2,0x94,0x5e,0xb,0x97,0xad,0x5c,0xb5,0xf2,0x50,0xfc,0xec,0xd7,0x68,0x5f,
+  0x81,0x8e,0x1a,0x5b,0x92,0x4,0xa4,0x8f,0x4e,0xc3,0x81,0x92,0x8e,0xd3,0x3f,0xfc,
+  0xfc,0x1b,0x47,0x8d,0x1c,0x75,0x7b,0x6f,0xfe,0xe6,0x9f,0xcd,0xff,0xec,0x36,0x14,
+  0xfe,0x1b,0xd0,0xce,0x77,0xea,0xf,0x94,0xf6,0x77,0xcc,0x0,0x3c,0x6e,0x5a,0xa6,
+  0x0,0x3,0x4b,0x82,0x1,0x99,0x5,0x60,0x6c,0xc4,0xff,0xdd,0x84,0x20,0xf0,0x87,
+  0xde,0xbc,0xa6,0xaf,0xe3,0xe8,0x7,0x80,0x4e,0xc6,0x1b,0x6f,0xbd,0x41,0xf4,0xfa,
+  0x97,0x38,0xa1,0x4e,0x56,0x82,0x8d,0xb6,0x3d,0x55,0xc2,0x9,0x6d,0x1f,0x12,0xb4,
+  0x5b,0x69,0x7e,0xff,0x43,0x17,0x18,0x64,0x2,0x4f,0x20,0x0,0xf4,0x5a,0xf5,0xdc,
+  0xaa,0xd5,0xab,0xae,0xc5,0xcf,0xbf,0x4b,0xa7,0xfe,0xbd,0x61,0x2,0xd8,0x39,0x62,
+  0x81,0x81,0x26,0x80,0x1b,0xa,0x7c,0x66,0xe4,0x88,0x91,0xa7,0xf5,0xd6,0x77,0xfb,
+  0x7c,0xe1,0xe7,0xb3,0x32,0x99,0xcc,0x83,0xce,0x39,0xe5,0x6f,0x4f,0x2,0xae,0x40,
+  0x55,0xed,0x2b,0x40,0x20,0x20,0x60,0x93,0x0,0x9f,0x9b,0xb6,0xc9,0xef,0xc7,0x57,
+  0xe6,0xe1,0xff,0x2e,0x3d,0xe4,0xe0,0x43,0xde,0xeb,0xad,0x6b,0xfb,0xba,0x8d,0x7e,
+  0x0,0x8,0x18,0xaf,0xbf,0xf1,0x7a,0x11,0xa,0xf7,0xd,0x38,0x79,0x7e,0x80,0x4f,
+  0x63,0x7e,0x6d,0xdf,0xa9,0xf0,0x87,0xbc,0xce,0x40,0x4d,0x48,0x8,0x4,0xee,0x9c,
+  0xb4,0xcb,0xa4,0xeb,0x7b,0xe3,0x1a,0x57,0xaf,0x59,0xfd,0x38,0x6e,0xce,0xa4,0xfd,
+  0x9c,0x26,0x80,0x38,0xb0,0x65,0x23,0x2b,0xa,0x98,0x6d,0x2,0x90,0x23,0x10,0x1,
+  0xa0,0x57,0x1c,0x81,0x5f,0x7c,0xf9,0xc5,0x99,0x99,0x74,0xe6,0xcf,0xa8,0xc9,0xc3,
+  0x3a,0x88,0xa9,0xdf,0x51,0xd7,0xfe,0x6a,0x5f,0x67,0x5,0xc,0x0,0xa6,0x29,0x0,
+  0x42,0x31,0x14,0x30,0x9e,0xc0,0xd7,0x6e,0x3c,0xec,0x90,0xc3,0x56,0xf7,0xc6,0x35,
+  0x7e,0x9d,0x46,0x3f,0x0,0xf8,0x6,0xa,0xff,0x5,0xf8,0xab,0x90,0x9d,0x3f,0x98,
+  0x5,0x3c,0x2c,0x1c,0x7c,0x6a,0x9f,0xbd,0xed,0x6,0xb8,0x82,0x1f,0x40,0xff,0x19,
+  0x28,0x7c,0x5a,0x59,0x39,0xb1,0xd0,0x1c,0xb8,0x71,0xc2,0xce,0x13,0xb6,0x98,0x2e,
+  0xaf,0x59,0xbb,0xe6,0x4b,0xdc,0x4c,0x70,0x72,0x0,0xba,0x11,0xff,0xdf,0x92,0x54,
+  0xe0,0xae,0xf2,0x1,0x70,0x94,0xed,0x34,0x7c,0xa7,0x2d,0xea,0x10,0xb4,0xf8,0xab,
+  0xc5,0x87,0xa2,0xe6,0x7f,0x19,0x7f,0xab,0x98,0xff,0x7a,0x75,0x81,0x56,0x2,0xaf,
+  0x3,0x82,0xee,0x17,0x50,0x26,0x81,0x32,0xf,0xe4,0xb5,0x77,0xe0,0xde,0x9d,0x78,
+  0xfc,0xf6,0xc3,0xf,0x3b,0xbc,0x57,0xfd,0x31,0xff,0xcd,0xa3,0x1f,0x0,0xe4,0x78,
+  0xf5,0xf5,0x57,0xf7,0x42,0x51,0xba,0xf,0x7f,0x91,0xbd,0x94,0x10,0x7,0x39,0xf9,
+  0x3a,0x13,0xfe,0x5c,0xa6,0x80,0x1a,0x34,0x29,0xe9,0x3d,0x91,0x68,0xe4,0xac,0xf1,
+  0xe3,0xc6,0x3f,0xb1,0xb9,0xd7,0xba,0x6e,0xdd,0xba,0x22,0x9c,0xcc,0xe4,0x0,0xc,
+  0x77,0xe6,0xfd,0xdf,0xd2,0x1c,0x0,0x1a,0x7e,0x93,0xc0,0x6f,0xa,0x38,0x71,0x79,
+  0xc3,0x38,0x6c,0xd8,0xb0,0x61,0xaf,0x6f,0xee,0x79,0x96,0x2c,0x5d,0x32,0x15,0x6d,
+  0xfe,0x39,0x19,0x33,0x53,0xea,0x37,0xa3,0x34,0xa6,0x91,0x45,0xfd,0x83,0x40,0x40,
+  0xbd,0xce,0x4c,0x40,0x3,0x4,0x9,0x20,0xab,0x71,0x7b,0x23,0x82,0xc0,0x66,0xff,
+  0xfe,0x5f,0xa7,0xb1,0xc3,0x3,0xc0,0xec,0x57,0x67,0x8f,0x40,0x41,0xbe,0xcd,0xb0,
+  0x8d,0x33,0x59,0x83,0x4b,0x41,0xd7,0x35,0xbf,0x5f,0xf8,0xbb,0x12,0xf8,0x5c,0x20,
+  0xa0,0x26,0x27,0xfe,0x7d,0x2a,0x1a,0x89,0x1e,0x3d,0x66,0xcc,0x98,0xcd,0x12,0x98,
+  0xf5,0x1b,0xd6,0xcf,0xc4,0x49,0x3c,0xc7,0x63,0xff,0x77,0xc3,0xfb,0xbf,0x45,0xc5,
+  0x40,0x39,0x4c,0x1,0xad,0x32,0xf0,0xba,0xa1,0x43,0x86,0xfe,0x7a,0x73,0xbe,0xcf,
+  0xb2,0xe5,0xcb,0x86,0xa1,0xe6,0xff,0x0,0x5,0x76,0x98,0x32,0xaf,0xd4,0x75,0xe4,
+  0x7a,0x28,0x33,0xc0,0xf,0x8,0x8e,0x49,0xa0,0xc2,0x85,0x92,0x9,0x78,0x1c,0x86,
+  0xe2,0x6f,0xdf,0xc3,0x77,0x5c,0x7a,0xc4,0x37,0x8e,0x98,0xb7,0x39,0xd7,0xfc,0x75,
+  0x19,0x3b,0x2c,0x0,0xfc,0x6b,0xf6,0xbf,0xf2,0x71,0xb2,0x5d,0x8b,0xbf,0xc0,0xd,
+  0xf8,0xb4,0x48,0x4d,0x3c,0xb6,0xf5,0x95,0x93,0xaf,0x7,0xc2,0xaf,0xec,0x70,0x3f,
+  0xfd,0xe7,0xe7,0xe0,0x52,0x74,0xa5,0xa5,0xf0,0x1c,0x4d,0x91,0x48,0xe4,0x80,0xd1,
+  0xa3,0x46,0x2f,0xe8,0xe9,0xb5,0x6f,0xd8,0xb8,0xe1,0x2a,0x99,0x7d,0xb8,0xd5,0x22,
+  0x0,0x6a,0x74,0x37,0x12,0x80,0xe3,0x9,0x4,0x80,0x1e,0x3b,0x39,0x57,0xac,0x5c,
+  0x51,0x8a,0x82,0x3f,0x7,0xb5,0xff,0x54,0x95,0x47,0xa1,0xfb,0x4e,0x7a,0xb,0x4,
+  0xf4,0xbc,0x1,0xf5,0x5c,0x7e,0x97,0x3f,0xe0,0xf3,0x9b,0x8e,0x3a,0xe2,0xa8,0x8d,
+  0x5b,0xf4,0x43,0xfd,0x97,0x8e,0x1d,0x12,0x0,0x5e,0xf9,0xf7,0x2b,0xa7,0xe3,0x24,
+  0x23,0xef,0xfe,0x8,0x5d,0xe3,0xab,0xad,0x63,0xc7,0x77,0x26,0xfc,0x1a,0xfd,0x57,
+  0x42,0x16,0xb4,0xaf,0x84,0x5f,0x1,0x1,0x4d,0x4a,0xd6,0x9a,0x38,0xf7,0xc2,0xe1,
+  0xf0,0xba,0x70,0x24,0xbc,0xf7,0xc8,0x11,0x23,0x7b,0x94,0x32,0x8c,0x0,0xf0,0x47,
+  0x9c,0xbc,0xe7,0xeb,0xc0,0xd3,0x93,0x14,0xe0,0x9e,0x34,0x5,0x75,0x5e,0xeb,0x24,
+  0x25,0x58,0x9a,0x1,0x8b,0x87,0xe,0x1d,0x3a,0xb1,0x27,0xdf,0x63,0xd5,0xaa,0x55,
+  0x31,0xd4,0xca,0x2f,0xa3,0xf6,0x3f,0x94,0x7f,0x33,0xf9,0xbb,0xea,0xa6,0x85,0xfa,
+  0xbd,0xd4,0x39,0x1d,0x2a,0xef,0x7,0x83,0x1c,0x20,0xa0,0x83,0x84,0xe3,0x24,0x24,
+  0x26,0x60,0xe2,0x6b,0x60,0x29,0x6,0xd3,0x8a,0x7f,0xf3,0x33,0xea,0x6f,0x70,0xe4,
+  0xe1,0x47,0xee,0x50,0x95,0x8d,0x3b,0x14,0x0,0xbc,0xfc,0xaf,0x97,0xc7,0xe1,0x4d,
+  0x7e,0x4,0x1f,0x7,0xd1,0x73,0x95,0xc1,0xa7,0x34,0xbf,0x2e,0xe8,0x3d,0x11,0xfe,
+  0x6e,0x3d,0x24,0x10,0x38,0xda,0x4d,0x4e,0xce,0x68,0x34,0xba,0x80,0x8a,0x87,0xba,
+  0xe3,0x40,0xdb,0xb8,0x69,0x23,0x55,0xfd,0xcd,0x44,0x8d,0xf9,0x8,0x3e,0x1d,0x4d,
+  0x21,0x49,0xe7,0xb3,0xb5,0x11,0x28,0xe0,0x3d,0xbd,0xd3,0x41,0x56,0x80,0x6e,0xff,
+  0x6b,0x6f,0x90,0x5e,0x77,0x13,0xaf,0x87,0x42,0x81,0x6f,0xd,0x1e,0x34,0xb8,0x5b,
+  0x59,0x81,0xab,0x56,0xaf,0x7a,0x3c,0x9d,0x4e,0x9f,0xc9,0xdf,0x20,0xa4,0x5d,0xa0,
+  0x26,0xf8,0x6a,0x3f,0xc8,0x17,0x40,0x43,0x7,0x84,0x1e,0x83,0x80,0x96,0x3f,0x20,
+  0xc3,0x8b,0x4b,0xf1,0xf5,0x4b,0x8f,0x39,0xea,0x98,0x1d,0x26,0xad,0x78,0x87,0x2,
+  0x80,0x57,0xfe,0xf5,0xca,0x4c,0x9c,0x68,0x73,0x74,0xfa,0xae,0xc7,0xf4,0x7b,0x4b,
+  0xf8,0xd5,0xdf,0x76,0x6,0x4,0xba,0xf6,0x8a,0x46,0xa2,0xaf,0xe3,0xe7,0x1d,0x3d,
+  0x6c,0xd8,0x30,0x8f,0xf6,0xd9,0xb8,0x71,0x63,0x11,0xbe,0xf7,0x50,0x7c,0xcf,0xbe,
+  0xf8,0x98,0x89,0x13,0x75,0xa6,0x7a,0x8d,0xfa,0xf3,0x2b,0x0,0x70,0x46,0x90,0xdc,
+  0xf7,0xb2,0x9,0xe0,0xc9,0xa,0xd4,0xb4,0x72,0xc6,0xcc,0xb8,0x1d,0x83,0x43,0x21,
+  0x2a,0xd7,0x7d,0xb,0xb7,0x6f,0xe1,0xfb,0xdf,0x1a,0x3c,0x78,0x70,0x16,0xbd,0x5e,
+  0xb3,0x76,0xcd,0x6d,0x28,0xfc,0x37,0xd0,0xdf,0xe8,0xcc,0xc9,0xaf,0xfd,0x3d,0x8e,
+  0xbd,0x1e,0x82,0x40,0x60,0x74,0xc0,0x9f,0x49,0x68,0x5a,0x5e,0x47,0xa2,0x65,0xdf,
+  0x78,0xd4,0x91,0x47,0xf5,0x6a,0x52,0xd3,0xf6,0x3c,0x76,0x2c,0x0,0xf8,0xf7,0x2b,
+  0x61,0xbc,0xc1,0x75,0x91,0x68,0xa4,0x54,0xa7,0xfd,0x7e,0xe1,0x57,0x1a,0x69,0x4b,
+  0x85,0x3f,0xb,0x8,0x34,0x16,0xa0,0x6,0x4f,0x40,0xfc,0x87,0x4c,0xe0,0x89,0xe1,
+  0xc3,0x86,0x9f,0x85,0xf4,0x7e,0x34,0xbe,0xef,0x54,0x9c,0x8c,0x87,0xe3,0x64,0x3e,
+  0x14,0xb5,0x6b,0x98,0xde,0xc7,0x82,0x22,0xaf,0x27,0x12,0x89,0x88,0xe8,0x44,0xb8,
+  0x93,0x16,0x60,0xdd,0xb8,0xb5,0xfe,0x64,0xa5,0xce,0x46,0x2e,0x13,0x40,0xf9,0x1,
+  0x88,0x5,0x20,0x95,0x77,0xb3,0xf1,0x34,0x3f,0x8,0x2,0xd5,0xc7,0x78,0xed,0x2f,
+  0xe1,0x25,0xbd,0x34,0x64,0xf0,0x90,0xb9,0xeb,0xd6,0xaf,0x9b,0x95,0x4e,0xa5,0x39,
+  0xd1,0x87,0x4d,0x2e,0xbd,0x2c,0x39,0x87,0xe0,0xe7,0xf4,0x3,0x6c,0x2e,0x8,0x68,
+  0x5b,0x4e,0x22,0x22,0x10,0xc3,0xeb,0xc7,0x31,0xd,0x19,0x40,0x8f,0xfd,0x32,0xff,
+  0xad,0x63,0x87,0x2,0x0,0x1a,0x4f,0xfe,0xed,0xc9,0xc7,0x51,0xe3,0x9e,0x59,0x52,
+  0x52,0xc2,0x2b,0xdd,0x78,0x12,0x7a,0x42,0xbe,0xad,0xe6,0x4,0xd4,0x9d,0x7d,0x81,
+  0x82,0xaf,0x39,0xfb,0xf4,0xfd,0xce,0x4c,0x2,0x35,0xb9,0x79,0x25,0x1f,0x60,0xad,
+  0xbe,0x11,0x27,0xe5,0x60,0x35,0x39,0xd5,0x75,0x65,0x85,0x23,0xb5,0x6b,0x10,0x37,
+  0xb1,0x9b,0x8e,0xbf,0xee,0xde,0xed,0x5c,0x8d,0x41,0x72,0x98,0x0,0x8e,0xe0,0x49,
+  0x6d,0x4a,0xdf,0x47,0xf,0xcd,0x29,0x21,0x95,0x26,0x57,0xd,0xa,0x5c,0x5,0x1e,
+  0xf,0xf3,0x77,0x92,0x20,0xa9,0xb,0xb5,0x7,0x4,0x7c,0xf,0xa6,0xf2,0xb6,0xd5,
+  0x73,0x10,0xe8,0x4,0xc,0x32,0xe9,0xc,0xb4,0xb4,0xb6,0x40,0x7b,0x7b,0xfb,0xea,
+  0xb3,0xbe,0x7d,0xd6,0xe,0xd5,0xea,0x7c,0x87,0x3,0x80,0xa7,0xff,0xfe,0xf4,0x99,
+  0xa9,0x64,0xea,0xf1,0xb2,0xf2,0x32,0x28,0x2c,0x28,0x84,0x70,0x24,0x9c,0x25,0xfc,
+  0x59,0x80,0xb0,0x99,0xc2,0x9f,0x13,0x8,0x7c,0x4c,0x40,0xd7,0x42,0x34,0x1c,0xdf,
+  0x84,0xd0,0x9e,0x6e,0xce,0x41,0xe,0xa1,0xdf,0x1a,0x66,0x40,0x4e,0x66,0x60,0x7,
+  0xbf,0x47,0x1,0x82,0x23,0x98,0x96,0x2b,0x88,0xea,0xbb,0x29,0x8d,0xae,0xa7,0x54,
+  0x3b,0x9f,0xd3,0x89,0xd0,0xfb,0x5,0xbf,0x2b,0x10,0xf0,0x44,0x7,0xbc,0xf4,0xde,
+  0x93,0x17,0xa0,0xf6,0x3b,0x3a,0x3a,0xa0,0xa1,0xa1,0x81,0x9e,0x3f,0x84,0x0,0x70,
+  0x69,0x1f,0x4f,0xd1,0x6d,0x3a,0x76,0x38,0x0,0x78,0xf9,0x95,0x97,0x2b,0xea,0xea,
+  0xeb,0xaa,0xcb,0x4a,0xca,0xc2,0x45,0x25,0x45,0x64,0x7f,0x7b,0x35,0xbd,0xe,0x4,
+  0x3e,0xba,0x1f,0x4,0x0,0x3d,0x16,0x7e,0x5f,0xee,0xbe,0x62,0x2,0xee,0xd,0x11,
+  0xaf,0xb1,0xe0,0x87,0xbc,0xd9,0x84,0xea,0xb5,0x5c,0x2,0xbf,0x25,0x25,0xc0,0x41,
+  0xa3,0xab,0xb2,0x60,0xf9,0xa6,0xac,0xe3,0x4a,0x90,0xd5,0xeb,0x7a,0xe8,0xcd,0xf9,
+  0x1b,0x99,0x35,0xa9,0xb,0x7d,0x10,0x8,0xe4,0x12,0xfc,0x9e,0x82,0x80,0xe7,0x98,
+  0x6,0x2,0xe4,0xbb,0x68,0x6f,0x6b,0x87,0xfa,0x86,0x7a,0x28,0x2e,0x2a,0x3e,0xee,
+  0xc4,0x13,0x4e,0x7c,0x69,0x5b,0xcc,0xc3,0xed,0x65,0xec,0x70,0x0,0x40,0xe3,0xaf,
+  0x4f,0xfe,0x75,0x4e,0x2c,0x1e,0x9b,0x59,0x5e,0x56,0xce,0xb,0x5f,0x6,0x52,0x7f,
+  0x23,0x5b,0xf8,0x69,0x64,0x1,0x2,0x68,0xda,0xd9,0xb7,0xef,0xf8,0x2,0x82,0xc0,
+  0xc0,0xc7,0x2,0x9c,0xbf,0xd7,0x5a,0x7b,0xe5,0x14,0xfc,0x1c,0x42,0xdf,0x6d,0x53,
+  0xa0,0x7,0xa3,0xab,0xf5,0x2,0xfd,0xfe,0x0,0xfd,0x98,0xce,0xa,0xf4,0xd7,0x82,
+  0x84,0xde,0x79,0x2d,0xc0,0xee,0xef,0x29,0x8,0xf8,0xb5,0xbe,0xfe,0x9a,0x9f,0x9,
+  0xa4,0xd2,0x29,0x68,0x6e,0x6a,0x26,0x13,0xa0,0xa3,0x6a,0x40,0x55,0xe5,0x91,0x47,
+  0x1c,0xb9,0x43,0xa5,0x9,0xef,0x90,0x0,0xf0,0xec,0x3f,0x9e,0xbd,0x1,0xed,0xbe,
+  0xdb,0xca,0xcb,0xcb,0x79,0xa5,0x5b,0x15,0xa,0x74,0x1c,0x81,0x86,0x37,0xbd,0xb7,
+  0x33,0xe1,0xd7,0xb5,0xbd,0x5f,0xf8,0xfd,0xb9,0x0,0x41,0xc2,0xdf,0x95,0xe0,0x77,
+  0x26,0xf4,0x39,0xcd,0x80,0x4e,0x8e,0x6d,0xce,0xe8,0xb2,0x4b,0xb0,0x2e,0xe8,0xe2,
+  0x80,0xe7,0x79,0x10,0x23,0xf0,0x9b,0xc,0x7e,0xed,0xef,0x17,0xee,0xee,0x82,0x40,
+  0x4f,0xfd,0x0,0x89,0x8e,0x4,0x34,0x34,0x36,0x90,0x1f,0xe0,0x99,0xd3,0xbf,0x75,
+  0x7a,0xaf,0x55,0x34,0xfe,0xb7,0x8c,0x1d,0x12,0x0,0x5e,0xf9,0xd7,0x2b,0xa3,0x1b,
+  0x1b,0x1a,0x97,0x97,0x96,0x97,0x42,0x69,0x49,0xa9,0xe3,0x7,0xf0,0x7b,0xfc,0x3b,
+  0xb3,0xff,0x9d,0x30,0x61,0x67,0x2c,0xa0,0x27,0xc2,0xaf,0xe4,0x3c,0x0,0x10,0xd4,
+  0x71,0xf1,0x34,0x47,0xde,0x7f,0x6f,0xc4,0xfe,0x73,0x8d,0xae,0x72,0x2,0x7c,0x1a,
+  0xdf,0xf3,0xba,0x1d,0x0,0x4,0x5d,0xb0,0x81,0x9c,0x89,0x40,0x3d,0x30,0x1,0x3a,
+  0x63,0x4,0x6a,0xab,0xe8,0x7f,0x5d,0x5d,0x1d,0xe4,0xe7,0xe7,0x9f,0x85,0xf4,0x7f,
+  0x87,0xab,0xf,0xd8,0x21,0x1,0x80,0xc6,0x53,0x7f,0x7b,0x6a,0x3e,0x6a,0xff,0xa9,
+  0x65,0xa5,0x65,0x10,0xcf,0x8b,0xf7,0xc8,0xfe,0xdf,0x1c,0xe1,0xf,0xc,0x9,0x82,
+  0x9b,0xca,0x1b,0x74,0xcc,0xd9,0x87,0x60,0xfb,0xbf,0x33,0xe7,0x5f,0x6f,0x14,0x2,
+  0xa9,0x11,0xd8,0x23,0x20,0x97,0x33,0xb0,0x1b,0xf4,0x5f,0x3f,0xbe,0x35,0x40,0x20,
+  0xa7,0x49,0xa0,0xf9,0x3,0xe8,0x33,0xd3,0xa9,0x34,0x34,0x37,0x37,0x43,0x53,0x53,
+  0x53,0xc7,0x80,0x1,0x3,0x86,0x7f,0xe3,0xb0,0x6f,0xec,0x70,0x5d,0x86,0x77,0x58,
+  0x0,0xf8,0xe7,0xb,0xff,0xbc,0xd9,0xcc,0x98,0x3f,0xae,0xa8,0xac,0x80,0x82,0xfc,
+  0x2,0xc7,0xdb,0xae,0x9b,0x0,0xdd,0xb1,0xff,0x3,0x9d,0x7f,0x1,0x29,0xc0,0x3d,
+  0xd5,0xfa,0xb9,0x4,0x3f,0xa7,0x3,0x70,0x2b,0xd8,0xff,0x6a,0x74,0xe5,0x7,0x8,
+  0x2,0x83,0xee,0xfa,0x1,0xb6,0x14,0x4,0x2,0x53,0x82,0x73,0x38,0x5,0xfd,0xfe,
+  0x80,0x44,0x32,0x1,0xf5,0x75,0xf5,0x90,0x4e,0xa7,0x5f,0x3a,0xf5,0x9b,0xa7,0x1e,
+  0xb7,0x55,0x27,0xdc,0x76,0x3a,0x76,0x58,0x0,0x98,0xfd,0xea,0xec,0xa9,0x8d,0x4d,
+  0x8d,0xf3,0x2b,0xca,0x2b,0x80,0x72,0x2,0x38,0x2c,0xe5,0xb3,0xfb,0xb3,0xbc,0xfd,
+  0x9d,0x98,0x0,0x9b,0x23,0xfc,0xb9,0x98,0x80,0xb8,0x31,0x39,0x4,0x3f,0x87,0xd0,
+  0x77,0x69,0xe,0x40,0xcf,0x40,0x21,0x57,0x18,0xb0,0x2b,0xea,0x9f,0x65,0xff,0x77,
+  0xe1,0x7,0xc8,0x75,0x2c,0x28,0xc,0xd8,0x25,0x8,0x48,0x7,0x62,0x77,0x4c,0x0,
+  0x4,0x7f,0x68,0x6b,0x6f,0x63,0x0,0x88,0xc5,0x63,0xdf,0x3b,0xfe,0xd8,0xe3,0x1f,
+  0xde,0x86,0xd3,0x6f,0xbb,0x19,0x3b,0x2c,0x0,0xd0,0xf8,0xfb,0xb3,0x7f,0xff,0xb2,
+  0xa0,0xa0,0x60,0x2,0xe5,0x4,0xe4,0xc5,0xf3,0xba,0x8c,0x2,0xe8,0x19,0x82,0x7e,
+  0x6a,0xbf,0xb9,0xc2,0xef,0xd7,0xfa,0x5d,0x9,0xbe,0xe7,0x6f,0xa0,0x1b,0x82,0xdf,
+  0xcb,0x1d,0x81,0xf8,0x50,0xe,0xa7,0xa0,0x7,0x10,0x2,0x80,0x20,0x88,0xfe,0xab,
+  0xf7,0xe7,0x62,0x3,0x5d,0x25,0x1,0xf9,0x5,0xbf,0x4b,0xa7,0xa0,0xdc,0x52,0xd6,
+  0x1f,0xd1,0xff,0x86,0xc6,0x6,0xb3,0xaa,0xb2,0x6a,0xe0,0xc1,0x7,0x1f,0xbc,0xc3,
+  0xd1,0x7f,0x1a,0x3b,0x34,0x0,0xbc,0xf0,0xe2,0xb,0xb7,0xe1,0x84,0xb8,0xa1,0xa2,
+  0xa2,0x2,0xa,0xb,0xb,0xdd,0x6c,0xbb,0x1c,0x76,0xbf,0xc7,0xbe,0xf7,0xa7,0xfd,
+  0x76,0x95,0x3,0x90,0x4b,0xf8,0x73,0x98,0x1,0x5d,0x6d,0xfd,0xfb,0xe2,0x40,0xf0,
+  0xf7,0xdc,0x5c,0x7f,0x40,0xa0,0xed,0x2f,0x5e,0xf0,0x3e,0xcd,0xc5,0xa,0x6c,0x1f,
+  0x0,0x74,0xc3,0x19,0xd8,0x9b,0x20,0xe0,0x77,0xa,0xea,0xb9,0x0,0x89,0x4,0xd2,
+  0xff,0xfa,0x7a,0xda,0xbe,0x75,0xca,0xc9,0xa7,0x1c,0xbc,0xb5,0xe7,0xda,0xf6,0x3a,
+  0x76,0x68,0x0,0x78,0xe3,0xcd,0x37,0xa6,0x36,0x34,0x34,0xcc,0xaf,0xac,0xac,0x84,
+  0xe2,0x92,0x62,0x2e,0xb0,0xf1,0x84,0x1,0x41,0x8,0x73,0x4e,0xa7,0x5f,0x80,0x3f,
+  0x20,0x97,0xc3,0x2f,0x97,0xf0,0xfb,0x43,0x7e,0x4e,0xa2,0x90,0xa6,0xf1,0x79,0xdb,
+  0x85,0xf,0x40,0x7f,0x6f,0xd0,0xe8,0xd,0xfa,0xcf,0xaf,0x65,0x77,0x6,0x9,0xfc,
+  0xbb,0x2c,0xf3,0xc0,0xf6,0x82,0x80,0x56,0x8f,0x9f,0x6d,0x12,0xf8,0x41,0xa0,0xb3,
+  0x9a,0x80,0x1e,0x6a,0x7f,0x4e,0x55,0xb6,0x90,0xfe,0xb7,0xb6,0x41,0x6d,0x5d,0x2d,
+  0xc4,0x63,0xf1,0x4b,0x8f,0x3e,0xea,0xe8,0x87,0xb6,0xf6,0x5c,0xdb,0x5e,0xc7,0xe,
+  0xd,0x0,0x34,0x9e,0xfb,0xc7,0x73,0xb,0xb,0x8b,0xa,0x27,0x91,0x2f,0x20,0x1e,
+  0x8f,0x7,0x53,0xff,0x2e,0xbc,0xff,0x5d,0x55,0xff,0x75,0x26,0xfc,0x5b,0x2a,0xf8,
+  0xb9,0x9c,0x7f,0x5d,0xc5,0xee,0xf5,0xcf,0xcb,0x25,0xf0,0xdd,0x1,0x8d,0x1e,0x39,
+  0x3,0x75,0x8d,0xaf,0x4c,0x2,0xd,0x18,0x36,0x7,0x4,0x82,0x4,0x3f,0xc8,0x1f,
+  0xa0,0x3,0x40,0x3a,0x9d,0x26,0xcf,0x3f,0xa5,0xff,0x9a,0x55,0x3,0xaa,0x6,0x1e,
+  0x70,0xc0,0x1,0x3b,0x24,0xfd,0xa7,0xb1,0xc3,0x3,0xc0,0x2b,0xaf,0xbc,0xf2,0xe3,
+  0x8c,0x99,0xb9,0xb9,0xaa,0xaa,0xa,0xa,0xa,0xa,0x3c,0x66,0x40,0x90,0xc6,0xcf,
+  0xc5,0x2,0x7a,0x22,0xfc,0x4e,0x6e,0xbf,0x9f,0xf2,0x7,0xd8,0xf9,0x41,0x82,0x9f,
+  0x4b,0xd3,0x2b,0x61,0x6b,0x6e,0x6d,0x85,0xc6,0xa6,0x66,0x7c,0xb4,0x40,0x6d,0x7d,
+  0x3,0x54,0xd7,0xd6,0xa1,0xad,0xdb,0x4,0xf5,0xf8,0x68,0xc0,0xe3,0x4d,0x68,0xfb,
+  0xfa,0x3f,0x83,0x73,0xf4,0x11,0xc8,0x2a,0xcb,0xcb,0xa0,0xac,0xb4,0x4,0x2a,0xca,
+  0xe8,0x51,0x6,0x3,0x7,0x54,0x42,0x65,0x45,0x19,0x94,0x16,0x17,0x41,0x5,0xbe,
+  0x96,0x9f,0x97,0x97,0x7d,0x5d,0xd0,0x7d,0x47,0xa0,0x7a,0x3d,0x97,0x49,0xe0,0x24,
+  0xef,0xf8,0x40,0xc0,0xdf,0x1b,0xc0,0x2f,0xe0,0x41,0xda,0x3f,0x97,0x29,0x40,0xb9,
+  0xff,0x75,0xf5,0x75,0x90,0x4c,0x24,0x5f,0x39,0xf1,0x84,0x13,0x8f,0xee,0xeb,0x39,
+  0xd8,0x97,0x63,0x87,0x7,0x80,0x39,0xff,0x99,0x33,0xa9,0xae,0xb6,0x6e,0xe1,0x80,
+  0x1,0x3,0x38,0x1a,0x40,0xa5,0xb6,0x4a,0xd0,0xb3,0x1c,0x7c,0x39,0x9c,0x7e,0xb9,
+  0x52,0x81,0x75,0xe1,0xd7,0x57,0xd,0xa,0xb4,0xf7,0x8d,0xae,0x3d,0xff,0xea,0x75,
+  0x9a,0xc4,0xf4,0x1a,0x6d,0x49,0xd8,0xd7,0xae,0xdf,0x8,0x5f,0x2e,0x59,0xe,0x8b,
+  0xbe,0x5a,0xa,0xcb,0x57,0xad,0x81,0xd,0xd5,0x35,0xb0,0xa9,0xa6,0x16,0x5,0x9f,
+  0x43,0x5c,0x5b,0xfc,0x1b,0x15,0xe4,0xe7,0x23,0x10,0x54,0xc0,0xa0,0xaa,0x1,0x30,
+  0x64,0xd0,0x40,0x18,0x3f,0x7a,0x24,0x4c,0x9a,0x30,0xe,0x26,0x8c,0x1d,0xd,0x43,
+  0x7,0xf,0x74,0x40,0x41,0x5d,0xb3,0x2e,0xe8,0xea,0x7a,0xd5,0xb6,0x3b,0x20,0xa0,
+  0x7b,0xed,0x9d,0x5a,0x2,0x2d,0xf6,0xef,0x7,0x84,0xac,0x2e,0x41,0x7a,0xc6,0x9f,
+  0x4f,0xfb,0x93,0xf3,0xaf,0xad,0xd,0xe9,0x7f,0x6d,0x2d,0xa5,0x81,0x5f,0x78,0xf8,
+  0x37,0xe,0xdf,0xa1,0x17,0xf,0xd9,0xe1,0x1,0x80,0xc6,0xb,0x2f,0xbe,0x30,0xbf,
+  0xb0,0xa0,0x70,0x2a,0xe5,0x4,0x4,0x9a,0x1,0x41,0xe,0xc0,0x4e,0x9c,0x7e,0xba,
+  0xb0,0xeb,0x51,0x85,0x20,0x26,0xc0,0xc3,0x27,0xfc,0x59,0x21,0x3f,0x4d,0x90,0x92,
+  0xa9,0x14,0x7c,0xb5,0x6c,0x5,0xbc,0xff,0xf1,0x67,0x30,0x6f,0xe1,0x17,0xf0,0xd1,
+  0xbc,0xcf,0x61,0xcd,0xfa,0xd,0xfa,0x32,0x5d,0x9e,0x11,0x4c,0xe3,0x15,0x90,0x58,
+  0xe,0x90,0xf0,0x15,0x18,0x9d,0xdb,0xff,0xfe,0x11,0x9,0x87,0x61,0xe2,0xf8,0x31,
+  0xb0,0xfb,0x94,0x49,0x30,0x63,0xd7,0x29,0xb0,0xd7,0xee,0xd3,0x60,0xa7,0xa1,0x83,
+  0xa9,0xb7,0x81,0x87,0xd1,0xf8,0x9d,0x81,0xe2,0x90,0xdd,0x35,0x8,0x40,0xb0,0x40,
+  0xe7,0x4c,0x6,0xa,0x8,0x3,0xfa,0xff,0x96,0x0,0xb1,0xb1,0xb1,0x91,0xe8,0x7f,
+  0xa,0x59,0xdf,0x90,0xfd,0xf6,0xdd,0x6f,0x87,0xa5,0xff,0x34,0xfa,0x1,0x0,0x38,
+  0x27,0xe0,0x6,0xd4,0xc,0xb7,0x91,0x19,0xe0,0x44,0x3,0x7c,0x42,0xdf,0x99,0xdd,
+  0xef,0xf7,0x1,0x78,0xfe,0x16,0xba,0x27,0xfc,0x81,0x94,0x1f,0x84,0x20,0x2c,0x5b,
+  0xb9,0x1a,0xde,0xfd,0xe8,0x53,0x16,0xf6,0xf,0xe7,0xcd,0x87,0xb5,0x1b,0x36,0x42,
+  0x2a,0x95,0xad,0xd9,0x3d,0x9f,0xb,0xb4,0x92,0x8e,0xb6,0x6a,0xb6,0xac,0xc0,0x53,
+  0xe7,0xb4,0x6d,0x87,0x4f,0x48,0x7c,0xa1,0xe7,0x4a,0x10,0x71,0x9f,0x84,0xcb,0xb9,
+  0x14,0x3,0x72,0x36,0x9,0xd0,0x6,0x31,0x81,0x71,0xa3,0x47,0xc0,0x3e,0x33,0x76,
+  0x83,0xdd,0xa7,0x4e,0x82,0xfd,0xf7,0x9c,0x1,0x3,0xab,0x2a,0x3c,0xe1,0x4d,0xbf,
+  0xc0,0x77,0x5,0x2,0x3a,0xb,0xd0,0x99,0x80,0xdf,0xd6,0xcf,0xf2,0x7,0xe4,0xc8,
+  0x9,0x60,0xfa,0x5f,0x57,0x87,0xbf,0x5f,0xea,0xa5,0x63,0x8f,0x39,0x76,0x87,0x4c,
+  0xfe,0xd1,0x47,0x3f,0x0,0xe0,0x78,0xff,0x83,0xf7,0x47,0xa3,0x56,0x58,0x4e,0x8e,
+  0xc0,0x22,0xb4,0x75,0x75,0x33,0xc0,0x1f,0xfb,0xf,0xa4,0xfe,0xbe,0xd0,0x60,0x96,
+  0x8d,0xdf,0x3,0xe1,0x57,0x42,0xb1,0xc,0xa9,0xfc,0xdb,0xef,0xce,0x85,0x97,0x5e,
+  0x7b,0xb,0xe6,0x2f,0xfc,0x12,0xa9,0x7e,0x1b,0x78,0x85,0xd0,0xfd,0x3b,0xdb,0x11,
+  0x56,0xfa,0xc0,0x8,0x5e,0x64,0xc,0x1f,0x71,0x88,0xc4,0x8b,0x21,0xaf,0xa8,0x1c,
+  0x62,0x79,0xc5,0x10,0x8e,0xe6,0xe1,0x4b,0xc4,0x6e,0x50,0x3b,0x73,0xc2,0x13,0x7d,
+  0xb7,0x10,0xd8,0xf4,0x77,0x2c,0x24,0x24,0x3c,0xb4,0xcd,0x80,0x95,0x49,0x81,0x99,
+  0xee,0x80,0x4c,0xb2,0x1d,0x3a,0xda,0x1b,0x20,0xd3,0xd1,0x4,0xb6,0x99,0x4,0xc3,
+  0x42,0xd0,0xb1,0x92,0xc0,0x6b,0x73,0x77,0x3,0x14,0xc8,0x9f,0xb0,0xff,0x5e,0xd3,
+  0xe1,0xa8,0x43,0xf,0x84,0x3,0xf6,0xd9,0x3,0xaa,0x2a,0x2a,0x9c,0xd7,0x72,0x81,
+  0x40,0x2e,0x16,0xe0,0xf7,0x7,0xf8,0xbd,0xff,0x41,0xc2,0xee,0x7,0x3,0x6a,0x54,
+  0xd2,0xde,0xde,0xe,0xb5,0x68,0x1e,0xe5,0xe5,0xe7,0x9d,0x7b,0xd0,0x81,0x7,0x3d,
+  0xd6,0xd7,0x73,0xaf,0xaf,0x47,0x3f,0x0,0xc8,0x31,0x77,0xee,0xdc,0x8f,0x62,0xf1,
+  0xd8,0xc,0x2a,0xf,0xd6,0xab,0x3,0x3b,0xf3,0xfa,0x3b,0xc7,0xd,0xc3,0xe9,0x26,
+  0xec,0xb7,0xfb,0xbb,0xb2,0xf9,0x75,0x8d,0x4f,0xf6,0xfc,0x7f,0xe6,0x7e,0x2,0x4f,
+  0xbf,0xf0,0xa,0x6f,0x9b,0x9a,0x5b,0x3c,0xd7,0xe8,0xd2,0x75,0x7e,0x82,0x17,0x10,
+  0x5,0x8,0xe7,0x43,0x7e,0xc9,0x10,0x28,0x28,0x19,0x4,0x91,0x82,0x4a,0xb0,0x23,
+  0xc5,0x90,0xb2,0x22,0x90,0x30,0xd,0x48,0x65,0x48,0x43,0x4a,0x2a,0x1e,0xa,0x30,
+  0x2b,0x3c,0x77,0xdf,0x27,0xd0,0x84,0x29,0x96,0x60,0x7,0xd1,0x30,0x40,0x1c,0x4f,
+  0x15,0xf,0x99,0x10,0x32,0xdb,0xc1,0xec,0xa8,0x85,0x44,0x4b,0x2d,0xb4,0x35,0xae,
+  0x3,0xc8,0xb4,0xa2,0x94,0x25,0xdc,0xcf,0xf4,0xee,0x38,0x83,0x7c,0x7,0xdf,0x38,
+  0x70,0x3f,0x38,0xf5,0xb8,0x23,0x61,0xcf,0xdd,0xa6,0x7a,0xa3,0x10,0x3d,0x4,0x81,
+  0xac,0xce,0x3e,0x5d,0x44,0x5,0xd4,0x31,0xa,0xff,0x25,0x93,0x49,0x62,0x1,0x1d,
+  0x78,0x9f,0x87,0xec,0xb6,0xeb,0x6e,0x5b,0xb4,0x92,0xd1,0xd7,0x61,0x6c,0x97,0x0,
+  0xf0,0x97,0x27,0xfe,0x32,0xe,0x5,0xaa,0xf4,0xcc,0xd3,0xcf,0xfc,0x78,0x5b,0x9c,
+  0x6f,0xd1,0x17,0x8b,0x46,0xe3,0xe6,0x4d,0x14,0xe8,0x11,0x81,0xb5,0x0,0x1,0xce,
+  0x40,0x3f,0xd5,0xcf,0xe9,0xe4,0xb,0xd2,0xfe,0x9a,0xf0,0xd3,0x4,0x5d,0xb7,0x71,
+  0x13,0xfc,0xed,0xf9,0x97,0xe1,0xd9,0xff,0xf7,0x2a,0x2c,0x5d,0xb1,0x4a,0x5c,0x14,
+  0x6b,0x75,0x4f,0xd,0x30,0xfe,0x87,0x92,0x18,0x29,0x82,0x82,0xf2,0x11,0x50,0x58,
+  0x31,0x2,0xec,0xd8,0x0,0x68,0xcf,0x84,0xa1,0x5d,0xb5,0x12,0xd,0x29,0xbb,0x9b,
+  0x72,0x18,0xc,0xf,0xe5,0x57,0x9f,0xe1,0x1c,0xb0,0xe5,0xdb,0x58,0x56,0x49,0xb2,
+  0xf4,0xa9,0x60,0x7b,0xf7,0x6d,0x75,0x48,0x2e,0x2,0x2,0x42,0xf8,0x62,0x61,0x3,
+  0x8a,0xa2,0x26,0x84,0xad,0x66,0xe8,0x68,0x58,0x3,0x2d,0xf5,0x78,0xed,0xc9,0x6,
+  0x7c,0x5b,0x4a,0x5c,0x7f,0xe0,0xe7,0x1,0x4c,0x9f,0x36,0x9,0xce,0x3a,0xe5,0x44,
+  0x38,0xe6,0xb0,0x3,0xa1,0xb4,0xa4,0xd8,0xc3,0x7c,0x36,0x27,0x1c,0xe8,0x67,0x4,
+  0x9d,0x39,0x4,0x65,0x7,0x63,0xaa,0xf9,0x3f,0x6e,0xf2,0xa4,0xc9,0x9b,0xbd,0x92,
+  0x51,0x4f,0xc6,0x13,0x4f,0x3e,0x31,0x9a,0xda,0xa0,0x9d,0x73,0xe6,0x39,0xdb,0x64,
+  0x3e,0xf7,0x64,0x6c,0x97,0x0,0x80,0x3f,0xd8,0x1c,0x14,0xb6,0x99,0x28,0x54,0x1b,
+  0x51,0xc0,0x5e,0x41,0x30,0x78,0x1e,0xf7,0x5f,0x3f,0xf9,0xc4,0x93,0x7b,0x1d,0xb1,
+  0x17,0x2e,0x5a,0xc8,0xc2,0x8f,0x93,0x70,0x4,0xd7,0x3,0x68,0x55,0x81,0x59,0x11,
+  0x0,0xdd,0x24,0xe8,0xa2,0x19,0x48,0x57,0xc2,0x4f,0x83,0xbc,0xf6,0x7f,0x79,0xe6,
+  0x5,0x78,0x61,0xf6,0x1b,0x50,0x57,0xdf,0xe0,0x15,0x78,0xe7,0xe,0x21,0x1b,0xc9,
+  0x1b,0x0,0x65,0x83,0x27,0x40,0xb4,0x78,0x27,0x68,0xcb,0xc4,0xa1,0x2d,0x9,0xae,
+  0x56,0xa7,0xad,0xa1,0x9c,0x90,0xd2,0x8a,0x97,0xe7,0xcc,0xcb,0x8b,0x40,0x71,0x7e,
+  0x14,0x4a,0xf2,0x63,0x50,0x5a,0x1c,0x87,0x21,0x95,0x85,0x50,0x56,0x18,0xe3,0xeb,
+  0x28,0x2b,0x8a,0x41,0x4,0xbf,0x43,0x34,0x12,0xe2,0x8f,0xe9,0x48,0x99,0x2c,0xb3,
+  0xf5,0x2d,0x9,0xd4,0x94,0x36,0xb4,0x25,0x32,0xb0,0xa1,0xae,0xd,0x1a,0x5a,0x93,
+  0xd0,0xda,0x9e,0x86,0xd6,0x44,0xa,0x5a,0x3b,0x52,0x92,0xfd,0xb,0xc1,0x34,0x40,
+  0x3a,0xe2,0x2c,0x96,0x52,0x6,0x84,0xe2,0x58,0x6,0x3f,0x6c,0x23,0x34,0x6e,0xfa,
+  0xa,0x32,0x2d,0xc8,0x10,0xcc,0x4,0x78,0xd9,0x85,0xed,0x3c,0x1f,0x33,0x72,0x4,
+  0x33,0x82,0x6f,0x9f,0x7c,0x2c,0xc,0xac,0xaa,0x14,0xbf,0x4f,0x27,0x20,0xe0,0xf1,
+  0x7,0x4,0xd1,0x7f,0x5f,0xbd,0x7f,0x90,0x43,0x90,0x58,0x80,0xec,0x59,0x48,0x20,
+  0x70,0xc6,0x94,0xc9,0x53,0x9e,0xef,0xed,0x39,0xf5,0xec,0x3f,0x9e,0xd,0xe3,0xe7,
+  0x1f,0x8e,0xe7,0x3a,0x14,0xcf,0x79,0x32,0x5e,0xd3,0x38,0xcb,0xb4,0xd6,0xe1,0xb1,
+  0x89,0x67,0x9f,0x79,0x76,0x6b,0x6f,0x9f,0x6f,0x4b,0xc6,0x76,0x7,0x0,0x8f,0x3d,
+  0xf1,0xd8,0x9,0x91,0x70,0xe4,0x9f,0x4e,0x23,0x4c,0x25,0x90,0xa1,0x90,0x89,0xf,
+  0x6a,0x9f,0xfd,0x3c,0x3e,0x9e,0x39,0xe6,0xa8,0x63,0xb6,0x78,0x25,0x97,0xcf,0x17,
+  0x7e,0x3e,0xe,0x6f,0xca,0x9b,0xf8,0x18,0x46,0x76,0xbf,0x2a,0x8,0xca,0xa5,0xfd,
+  0x73,0xed,0x77,0x87,0xfa,0x3b,0x5e,0x71,0x9c,0xb0,0x14,0xb2,0xfb,0xc3,0x5f,0xff,
+  0xe,0xff,0x78,0xe5,0x55,0x68,0xef,0x48,0x4,0x5f,0x5c,0xac,0x2,0xca,0x87,0x4c,
+  0x82,0x48,0xc9,0x48,0x68,0x4e,0xc7,0x21,0x49,0xd,0x6b,0x59,0xb1,0x1b,0x62,0x87,
+  0xa4,0xd6,0x16,0x42,0x4f,0xa7,0x8b,0xc7,0x22,0x50,0x59,0x92,0xf,0xe3,0x86,0x95,
+  0xc2,0x98,0x21,0x25,0xb0,0x53,0x55,0x11,0xc,0x2c,0x2f,0x80,0x8a,0xa2,0x38,0x54,
+  0xa0,0xf0,0x97,0xe3,0x23,0xca,0xcb,0x9d,0x19,0x2c,0xe8,0x91,0xb0,0xf2,0x1f,0x80,
+  0xf4,0xfe,0x3,0xb,0x7e,0x86,0x5,0x46,0xec,0xa7,0x33,0x26,0x34,0xa3,0xf0,0xd7,
+  0x36,0x25,0xa0,0x1e,0x81,0xa0,0xa6,0xa9,0x3,0xd6,0xd7,0xb6,0xc1,0xca,0x8d,0x2d,
+  0xb0,0x62,0x63,0x33,0x6c,0x6a,0x6c,0x83,0x44,0x32,0xed,0x30,0x4,0x43,0xf5,0xd7,
+  0xb7,0x6c,0x6,0x87,0xb2,0x7c,0x3c,0xd6,0xbe,0x1e,0xea,0xd7,0x2d,0x0,0xbb,0x63,
+  0x13,0xbe,0x27,0x3,0xce,0x49,0xc5,0xe,0x4f,0xc1,0xc1,0x3,0x7,0xc0,0x39,0xa7,
+  0x9e,0x0,0x67,0x7d,0xf3,0x4,0xa8,0xaa,0xac,0x90,0x6f,0xe9,0xdc,0x14,0xe8,0xaa,
+  0x1a,0x30,0x57,0x24,0x40,0xd5,0x1,0xc8,0xd7,0x69,0x4e,0x9d,0x8b,0x20,0xb0,0xc5,
+  0x7d,0x0,0x5e,0x7a,0xf9,0xa5,0xa,0xfc,0xcc,0x63,0xf1,0x71,0x2a,0x75,0x73,0xc6,
+  0xf3,0x15,0xf1,0xe2,0x23,0xde,0xf6,0x63,0xb7,0x9f,0x73,0xd6,0x39,0x37,0x6e,0x55,
+  0x1,0xea,0xe1,0xd8,0xae,0x0,0xe0,0xb1,0xc7,0x1f,0x8b,0xe1,0xd,0x59,0x88,0x1a,
+  0x7f,0x5c,0xd8,0x8,0x7b,0x3a,0xe0,0x72,0xb9,0xae,0xa6,0x7d,0xf1,0xb9,0x2,0x83,
+  0xa7,0xbe,0x71,0xe8,0x37,0x7a,0xc,0x6,0x28,0xfc,0x13,0xf0,0xa6,0xbc,0x86,0xbb,
+  0xc3,0xc8,0xe6,0xa7,0xa6,0x20,0x81,0xb6,0xbf,0xa6,0xfd,0x83,0xc2,0x81,0x39,0x6d,
+  0xfd,0x0,0xdb,0x7f,0xf5,0xfa,0xd,0xf0,0xbb,0x3f,0xff,0xd,0x9e,0x79,0xe9,0x5f,
+  0xd0,0xd6,0xd6,0xee,0xbd,0xd,0x2c,0xd7,0x31,0xc8,0x2f,0x1f,0x5,0xc5,0x83,0xa6,
+  0x40,0xab,0x5d,0x8a,0xd4,0x5e,0x4a,0x27,0xdb,0xfb,0x21,0x67,0x9f,0x3e,0x2f,0xf,
+  0x8d,0xf2,0x51,0x83,0x4b,0x60,0xda,0x98,0x4a,0x98,0x3c,0xaa,0x2,0x76,0x1e,0x5a,
+  0xca,0x42,0x9f,0x1f,0x8f,0x40,0x5e,0x2c,0x8c,0x2,0x1e,0x62,0x21,0xb6,0x58,0xeb,
+  0xd1,0x44,0x54,0x61,0x38,0xe5,0x69,0x87,0xac,0xe7,0x96,0x96,0x9f,0xcf,0xaf,0xc9,
+  0x9,0x12,0x92,0xfe,0x3,0xda,0x64,0x70,0x52,0x27,0x52,0x19,0x7c,0x98,0xb0,0xb1,
+  0xa1,0x1d,0x96,0xac,0x6b,0x82,0x25,0x6b,0x9b,0xe0,0x8b,0x35,0xf5,0xb0,0x62,0x7d,
+  0x33,0x33,0x5,0xc1,0x8,0x88,0x2a,0xe0,0xc3,0x24,0xb0,0xb1,0xa1,0x34,0x9a,0x80,
+  0x64,0xdd,0x12,0x68,0xa9,0xfe,0x2,0x20,0xd5,0x1c,0x70,0x47,0x6c,0x18,0x3e,0x64,
+  0x30,0x9c,0x77,0xfa,0xc9,0x70,0xce,0x69,0x27,0x42,0x71,0x61,0x61,0x6e,0x10,0xb0,
+  0xec,0x40,0xb3,0xc0,0x9f,0xfc,0x13,0x94,0xd,0xa8,0x7c,0x1,0x4,0x2,0xaa,0x7b,
+  0x31,0xce,0xa5,0x4b,0xa7,0x4e,0x99,0xda,0xe3,0x74,0xe0,0xd9,0xaf,0xcd,0x1e,0x8c,
+  0x7f,0x7f,0x2,0x6a,0xf7,0x93,0xf1,0x33,0xa9,0x8d,0x7b,0xd8,0x59,0x6f,0xc0,0xb2,
+  0x3c,0xac,0x44,0x36,0x47,0x4d,0xe1,0x7b,0x27,0x9f,0x7b,0xf6,0xb9,0x4b,0xb7,0xbd,
+  0x74,0x5,0x8f,0xed,0xd,0x0,0x6e,0xc0,0x9b,0x71,0x9b,0xa6,0xf5,0xdd,0x25,0xbb,
+  0xbc,0x6c,0xc0,0xb1,0xb9,0x65,0x37,0x9f,0x77,0xf0,0x7d,0xcf,0x11,0x18,0x1c,0x38,
+  0xf3,0xc0,0x2e,0x97,0xd9,0x5a,0xf0,0xf9,0x2,0x57,0xf8,0x11,0x58,0x54,0x9f,0xfd,
+  0xce,0x6c,0x7f,0x67,0xe5,0xa0,0xa0,0x56,0x60,0xbe,0x98,0xbf,0x5f,0xf8,0xdb,0xda,
+  0x3b,0xe0,0x2f,0xcf,0x3e,0x8f,0xc2,0xff,0x34,0x54,0xd7,0xd5,0xb,0xe1,0xd0,0xed,
+  0xf1,0x70,0x1,0x94,0xe,0x99,0xc,0xd1,0xf2,0x9,0x50,0xdb,0x26,0x3c,0xf4,0x2c,
+  0x6d,0xc,0x36,0x42,0xf0,0x6d,0xdc,0x96,0xa1,0x36,0x9f,0x3c,0xba,0x2,0xf6,0xdd,
+  0x65,0x30,0xcc,0x18,0x57,0x5,0xa3,0x6,0x15,0x43,0x61,0x3e,0x32,0x17,0xbc,0x8e,
+  0x14,0x6a,0x6b,0x12,0x74,0x75,0x4b,0x69,0xdf,0x30,0x5c,0xc7,0xa1,0x8c,0xf4,0x3b,
+  0xc2,0xae,0xe4,0xdc,0xb2,0xbc,0xf6,0xb9,0x7a,0xee,0x56,0xee,0x29,0x4a,0x2e,0x0,
+  0xc2,0x35,0xed,0xc5,0xe,0x99,0x11,0x34,0xc1,0xdb,0xd1,0x64,0x58,0x5f,0xdf,0xe,
+  0x9f,0xaf,0xac,0x87,0x79,0xcb,0x6a,0x60,0xe1,0x8a,0x7a,0xa8,0x43,0xc6,0x20,0x3e,
+  0xc0,0x12,0xa0,0x80,0x42,0x50,0x92,0x67,0x43,0xa4,0x63,0x2d,0xd4,0xad,0xf9,0x8,
+  0x20,0x51,0xe7,0xbb,0x33,0xe2,0x2a,0x27,0x4f,0x18,0x7,0x57,0x5d,0x78,0x2e,0x1c,
+  0xf3,0x8d,0x83,0x9c,0x6b,0xf1,0xdb,0xff,0x59,0xe,0xc1,0x80,0x87,0x12,0xf0,0x5c,
+  0xbe,0x0,0xf5,0xa0,0xe7,0x78,0x2f,0xbf,0x33,0x6d,0xea,0xb4,0x47,0xbb,0x9a,0x3b,
+  0x6f,0xcf,0x79,0x7b,0x30,0xa,0xf2,0xe9,0x24,0xf4,0xf8,0x79,0x7,0x51,0x2b,0x74,
+  0x67,0xed,0x41,0xcb,0xca,0x3a,0xb7,0x7f,0x5,0x22,0x3c,0xfe,0x12,0x2,0xc0,0x76,
+  0x13,0x7e,0xdc,0x6e,0x0,0xe0,0x4f,0x8f,0xfd,0x69,0x18,0xa,0xf3,0x97,0x28,0x68,
+  0x45,0x8e,0xc6,0xd,0x69,0xb,0x76,0xea,0xbd,0xf1,0x41,0xf3,0xba,0x6b,0x25,0xbc,
+  0x74,0xc,0xcd,0x87,0x77,0xa4,0xcf,0xe0,0x89,0x7d,0xf6,0xde,0x27,0xb,0xc,0xe6,
+  0x2f,0x98,0x3f,0x9,0x6f,0xcc,0x6b,0x38,0x81,0x6,0x33,0x78,0x8,0x36,0x91,0xd3,
+  0xf6,0xd7,0xcf,0xd9,0x5d,0xed,0xaf,0x42,0x80,0x34,0xde,0x7c,0x77,0x2e,0xfc,0xf2,
+  0xc1,0x3f,0xc0,0x82,0x2f,0x9,0xf4,0x35,0xd7,0xbb,0x21,0x4,0xbf,0x62,0xa7,0xdd,
+  0xc1,0x2e,0x1a,0xb,0xd,0x6d,0xb6,0x10,0xfc,0xb0,0xd4,0xf8,0x12,0x4,0xe2,0xb1,
+  0x28,0x4c,0x1e,0x59,0x9,0x7,0xef,0x3a,0xc,0xf6,0x9d,0x34,0x8,0x86,0xd,0x28,
+  0x84,0x2,0xa4,0xfb,0x29,0xd3,0xf2,0x68,0x76,0x25,0xd1,0xee,0xca,0xba,0xf4,0xe7,
+  0x86,0x47,0xdb,0xbb,0x61,0x43,0x57,0xc0,0x2d,0x4f,0x92,0x8e,0x14,0x72,0xf5,0x63,
+  0x29,0xff,0x9f,0x53,0x44,0x63,0xbb,0x20,0x20,0xb7,0xe2,0x6f,0x6d,0xc7,0x94,0x20,
+  0x13,0x23,0x93,0xb1,0xa0,0xb6,0x39,0x81,0x40,0x50,0xb,0x73,0xbf,0xdc,0x4,0x9f,
+  0x23,0x18,0xb4,0x75,0x24,0x5d,0x66,0x80,0xf,0xc4,0x2d,0x28,0x34,0x37,0x41,0xcd,
+  0x8a,0xf7,0x11,0x8,0x6a,0xb4,0x3b,0xe4,0x2,0xd2,0xe1,0x7,0xed,0xf,0x37,0x5e,
+  0x71,0x31,0x8c,0x1f,0x3b,0x2a,0xdb,0x37,0xd0,0xd,0x16,0xa0,0xdb,0xfd,0x81,0x45,
+  0x41,0x1a,0x8,0xe0,0x30,0xf1,0xf7,0x39,0x6b,0xd7,0x69,0xbb,0x3e,0xe5,0x9f,0x33,
+  0xef,0x7d,0xf0,0x5e,0x15,0x7e,0xce,0xa9,0xf8,0xbe,0x53,0xc9,0xae,0xe7,0xf5,0xf,
+  0x2c,0xb9,0xb6,0xa0,0x5c,0xd8,0xc5,0x53,0x71,0x68,0x69,0xa0,0x60,0x6a,0x6c,0x40,
+  0xbe,0x8e,0x9f,0x73,0xdc,0x79,0xe7,0x9c,0xb7,0x5d,0x74,0x1f,0xde,0x6e,0x0,0xe0,
+  0xcf,0x7f,0xf9,0xf3,0xe3,0x28,0x88,0x67,0x3a,0x82,0x17,0xce,0xee,0x8d,0xaf,0x83,
+  0x80,0xf3,0x3e,0x25,0xb8,0x6c,0x17,0xb,0x2d,0xa7,0x6c,0x79,0x14,0xf0,0xb9,0xf8,
+  0x19,0xcf,0xe0,0xeb,0x4f,0xcd,0xd8,0x7d,0xc6,0xea,0x79,0xf3,0xe7,0x4d,0xc2,0x1b,
+  0xf7,0x1a,0xfe,0xdd,0x60,0xcf,0xa,0x3b,0x1,0xb9,0xff,0x3a,0xdb,0x8,0x12,0xf8,
+  0xae,0xb4,0x7f,0x5d,0x7d,0x23,0xdc,0xf5,0xdb,0x47,0xe1,0x89,0x7f,0xbc,0x24,0xb5,
+  0xaa,0x14,0x70,0xfa,0xd1,0xc3,0x68,0x93,0xef,0x34,0x3,0xac,0xc2,0xb1,0xd0,0xc8,
+  0x3d,0x68,0xc3,0x42,0xf0,0x43,0xd2,0xbe,0xc7,0xbf,0xaf,0x28,0xcd,0x87,0x83,0xa6,
+  0xd,0x83,0xc3,0x76,0x1f,0x6,0xbb,0x8c,0x28,0x87,0xc2,0xbc,0x28,0x6a,0x79,0xb2,
+  0x23,0x2d,0xe1,0xc0,0x97,0xd7,0x23,0x72,0xf8,0x15,0x45,0x37,0x3c,0x8e,0xc4,0xec,
+  0x7c,0x7d,0x9f,0x3b,0xce,0x76,0xd9,0x80,0x2,0x5,0xcb,0x76,0x5f,0x3,0xed,0x7d,
+  0xa6,0x69,0x4b,0x86,0x21,0x58,0x82,0x98,0xf4,0xf2,0x21,0x3f,0xc4,0x74,0x84,0x4b,
+  0x5c,0xb,0xe2,0x2b,0xa4,0xf1,0x9a,0x57,0x57,0xb7,0xc2,0xfb,0x5f,0x6c,0xc4,0xc7,
+  0x26,0xd8,0x58,0xd7,0x2a,0x40,0xc0,0xb4,0xf8,0xa4,0xf1,0xb0,0x5,0xc5,0x56,0x35,
+  0xd4,0x2c,0xff,0xf,0x40,0xb2,0x5e,0xbb,0x42,0x71,0xb5,0xc5,0x45,0x5,0x70,0xd9,
+  0x77,0xce,0x82,0xb,0xcf,0x3a,0xd,0x62,0x8,0x86,0x41,0xe,0xc1,0xee,0x34,0x6,
+  0x61,0x21,0xd7,0xf2,0x2,0x74,0x9f,0x80,0xc9,0xec,0x89,0x41,0x22,0x85,0xf7,0xfc,
+  0xb4,0xdd,0xa6,0xed,0xf6,0xfc,0xc7,0x9f,0x7e,0x5c,0x41,0xe,0x3c,0xb4,0xdb,0x4f,
+  0x45,0x21,0x3e,0x4a,0x2d,0x28,0x6a,0xda,0x26,0x5b,0x36,0x16,0x78,0x17,0x3d,0x61,
+  0x41,0xd7,0xa8,0xbf,0x5a,0xf,0xc1,0x59,0xa2,0x5c,0x5b,0x2c,0x5,0xdf,0xbb,0x0,
+  0x5f,0xdb,0xfd,0x3b,0xe7,0x7e,0xc7,0x84,0x3e,0x1e,0xdb,0x5,0x0,0x3c,0xfa,0xd8,
+  0xa3,0xfb,0xa2,0xe6,0x7e,0x57,0x75,0xe4,0xf1,0x6b,0xfc,0xc0,0x87,0x6f,0x69,0xaf,
+  0x5c,0xa1,0x38,0x5,0x6,0x28,0xec,0x73,0xf1,0x6,0x90,0xc7,0xbf,0x4a,0xa7,0xfd,
+  0xb9,0xb2,0xfe,0x3c,0x0,0x90,0xc3,0xdb,0xef,0xcf,0x6,0x54,0xe7,0xfe,0x7f,0xaf,
+  0xbd,0xd,0xb7,0xfc,0xe6,0xb7,0xb0,0x76,0x43,0xb5,0xf6,0x4b,0xd3,0xdf,0x85,0xa1,
+  0xa8,0xa,0xa9,0x7e,0xe5,0x34,0xa8,0xef,0x90,0xc2,0x1a,0x21,0x50,0x8,0x49,0x1b,
+  0x3f,0x4,0x43,0x6,0x14,0xc1,0x11,0x33,0x76,0x82,0x43,0x77,0x1b,0x6,0xc3,0x71,
+  0x9f,0x26,0x72,0x32,0x6d,0x9,0x81,0xf,0x79,0x6f,0x97,0xc1,0xd7,0xf,0xae,0x49,
+  0xe2,0x0,0x95,0x7b,0x7b,0x95,0x83,0x4f,0x6d,0xc1,0xf0,0x69,0x7a,0x8d,0x40,0x78,
+  0xfc,0x3,0x1a,0x20,0x88,0x89,0x2e,0xf6,0x49,0xc8,0xe9,0xe3,0x4d,0xe9,0x5b,0xe0,
+  0xd7,0x4c,0xc5,0x26,0x74,0x6f,0xbc,0xcd,0x60,0x45,0xef,0x8d,0x30,0xa0,0x52,0x84,
+  0x21,0x9,0x1f,0x7d,0x55,0x3,0xef,0x7c,0xbe,0x1,0x56,0x6d,0x68,0xc2,0xf,0x36,
+  0x65,0xae,0x1,0x32,0x2,0x4,0x82,0xfc,0xc4,0x4a,0xa8,0x5b,0xf9,0x1,0x40,0x46,
+  0x4f,0x7a,0x12,0x17,0xbd,0xc7,0x6e,0x93,0xe1,0x67,0x3f,0xb8,0x12,0xa6,0x4c,0xdc,
+  0x59,0x1c,0xd5,0x35,0x7a,0x40,0x44,0xc0,0x53,0x8,0xa4,0xf6,0x3,0xb4,0xb5,0xce,
+  0x4,0xe4,0xca,0x46,0x29,0x3c,0xdd,0xeb,0x28,0xf8,0x87,0xe3,0xf3,0xb0,0x3,0x22,
+  0x3a,0xeb,0x50,0x51,0x88,0x0,0xa1,0xd7,0xb5,0xbd,0xc,0x39,0x7a,0x98,0x80,0xe3,
+  0x88,0x34,0x33,0x97,0x22,0x0,0xf4,0x79,0x19,0xf2,0x76,0x1,0x0,0x48,0xff,0xe7,
+  0xa0,0xb6,0x9e,0x49,0x5a,0x9c,0x29,0xbf,0xd2,0xf8,0x1,0x2c,0xc0,0x71,0xd4,0xf9,
+  0xc0,0xc0,0xbf,0xc2,0xaf,0xbe,0xd5,0xb5,0xba,0xf2,0xf6,0x7b,0x7a,0x0,0x6a,0xaf,
+  0x3b,0xeb,0x3,0x1a,0xb9,0xb5,0xbf,0x3f,0xe3,0x2f,0x24,0x35,0x7b,0x6b,0x7b,0x3b,
+  0xfc,0xea,0xa1,0x3f,0xc2,0x1f,0x9f,0xfa,0x87,0xfc,0x66,0x42,0xeb,0xf3,0xfb,0xb,
+  0x86,0x40,0xd5,0xe8,0x99,0xb0,0xb1,0x2d,0x2e,0x9d,0x7a,0x61,0x69,0xe7,0xb,0x0,
+  0x28,0x2f,0xcd,0x83,0xc3,0xf7,0x18,0x1,0x47,0x4c,0x1f,0xe,0x43,0x2a,0xa,0x59,
+  0xe0,0xd2,0xa6,0xe5,0x38,0xfd,0x68,0x84,0xf8,0x7b,0x73,0xdc,0x4f,0xd0,0x7b,0x29,
+  0xf4,0xa1,0x90,0x6b,0x56,0x84,0x64,0x46,0xa0,0xe1,0x80,0x60,0x76,0x5a,0x8e,0xa5,
+  0x51,0x7b,0x70,0xaf,0xd4,0xd9,0xd1,0x5,0x5f,0x45,0x4,0x14,0x68,0x28,0x8d,0x2f,
+  0xcc,0x7a,0xcb,0x7d,0x9f,0x4,0x4,0x93,0xb5,0x9d,0xa5,0xd0,0x44,0xbe,0xdf,0xe2,
+  0xbf,0xa1,0xe8,0x21,0x2d,0x6,0xd4,0xda,0x91,0x66,0x20,0x78,0x7b,0xfe,0x3a,0x97,
+  0x11,0x58,0xe2,0x51,0x1e,0x33,0x21,0x59,0xfd,0x29,0xb4,0x55,0x2f,0x60,0x80,0xd0,
+  0x51,0x8a,0x72,0x6,0xae,0xbb,0xe4,0xbb,0x70,0xde,0xb7,0x4e,0x92,0x97,0xea,0x56,
+  0x10,0x76,0xca,0x2,0x7c,0xfb,0x3a,0xb,0xf0,0x83,0x80,0x23,0xb4,0xda,0x22,0xa4,
+  0x1e,0x33,0xc3,0xb6,0x3d,0x4e,0x46,0x47,0xcb,0xe7,0x0,0x2,0x3f,0x23,0x20,0x20,
+  0xa0,0x81,0xfb,0xf5,0xc8,0x3c,0xc6,0x7f,0xf7,0xfc,0xef,0xf6,0x69,0x2d,0x42,0x9f,
+  0x3,0xc0,0xff,0xfd,0xe9,0xff,0xce,0x44,0xed,0xff,0xb8,0xc7,0xd9,0xd7,0xdd,0x87,
+  0x26,0xf8,0x8e,0x0,0xeb,0xac,0x0,0x5c,0x7b,0x5c,0xff,0x3b,0x67,0xb9,0x2d,0x4d,
+  0xc8,0x83,0xcc,0x8a,0xae,0x7a,0x0,0xe8,0xac,0x60,0xc1,0x97,0x5f,0xc1,0xf,0x6f,
+  0xbb,0x7,0xe6,0x7f,0xb1,0xd8,0xf9,0x69,0x59,0x70,0x23,0xf9,0x30,0x60,0xd4,0x7e,
+  0xd0,0x2,0x43,0x21,0x61,0x49,0xdb,0x9e,0xa4,0x40,0x2,0x40,0x5e,0x34,0xa,0x7,
+  0xa3,0xd0,0x1f,0x89,0x8f,0xe1,0x55,0x45,0x2e,0xcd,0x6,0x65,0xc3,0xb,0x1,0x17,
+  0xdf,0x4f,0xee,0x6b,0x9a,0x5e,0x5c,0x8b,0x21,0x3,0x5,0x86,0xeb,0xa4,0x73,0x98,
+  0x80,0xe1,0xf8,0x9,0x84,0x43,0xd0,0xfd,0xed,0x55,0xa,0xb1,0x32,0xd,0x14,0xfd,
+  0xb7,0x64,0x6,0xa0,0xb2,0xf1,0x9d,0x6b,0x92,0x42,0x9d,0x91,0x71,0x7f,0xdd,0x2f,
+  0xa0,0x9b,0x3,0xa,0x0,0xf8,0x35,0xd6,0x7c,0xde,0x84,0x1d,0xbe,0x56,0x10,0x39,
+  0x7,0x1f,0x2f,0xa9,0x81,0xf7,0x16,0x6d,0x80,0xa6,0x66,0xe9,0x30,0xa4,0xfa,0x5,
+  0x7c,0x5f,0x55,0xac,0x19,0xaa,0xbf,0x7a,0x3,0xcd,0x2,0x72,0x14,0xea,0x6c,0x0,
+  0xe0,0xd8,0x6f,0x1c,0xc,0x37,0xff,0xe0,0xa,0x18,0x50,0x59,0xde,0xed,0xec,0x40,
+  0xbf,0x33,0x30,0x97,0xed,0xce,0x0,0xa0,0xa5,0xf,0xe7,0x5a,0x4c,0x34,0x48,0xe8,
+  0x75,0x7f,0x83,0xee,0x4,0xd4,0xd7,0x4c,0xf4,0xf9,0x2,0x1e,0xfa,0xce,0x79,0xdf,
+  0xe9,0xd3,0xa5,0xc8,0xfa,0x14,0x0,0xfe,0xf0,0xc7,0x3f,0x14,0xa1,0xc0,0x92,0xe3,
+  0x6f,0x98,0xc7,0xe3,0xef,0xd3,0xfc,0x9e,0x50,0xa0,0xc6,0x2,0xfc,0xb,0x7a,0xe8,
+  0x8b,0x67,0xfa,0x17,0xf9,0xc8,0xb5,0xf5,0xdb,0xfa,0x9d,0x26,0xfb,0xe8,0x7f,0xab,
+  0xb1,0x8b,0xe7,0xff,0xfd,0x6,0xfc,0xf4,0xae,0x7,0xa0,0xbe,0x51,0xb,0x6f,0x51,
+  0xa8,0xae,0x7c,0x34,0x14,0xf,0xdb,0x7,0x6a,0xda,0x68,0x81,0x5f,0x29,0xf8,0x2c,
+  0xfc,0x11,0x6,0x82,0x9,0x23,0xca,0xe0,0xe4,0xfd,0xc7,0xc0,0xc4,0x9d,0xca,0x1c,
+  0xad,0x2c,0x22,0xe,0x6e,0xb8,0xf,0xf8,0xfb,0xca,0x88,0x0,0x9b,0x34,0x86,0xa6,
+  0xf5,0xdd,0x6c,0x3f,0xdd,0xfe,0xa7,0x8d,0x65,0xb,0x36,0x60,0x68,0x2,0x4e,0xc3,
+  0xb4,0xdd,0xac,0x60,0x3d,0x1a,0xe0,0x71,0xc,0x5a,0x2e,0xb,0xb0,0x6c,0x2d,0x32,
+  0xa0,0x55,0xf4,0x59,0x1a,0x2b,0x70,0x80,0x40,0x3e,0x32,0xe,0x0,0x58,0x2e,0x30,
+  0x38,0xce,0x30,0x57,0xd8,0x44,0x32,0x91,0xcd,0x79,0x6,0x6f,0xcc,0x5b,0x7,0x9f,
+  0x2f,0xaf,0x15,0xb9,0x2,0xf2,0xef,0xb,0xa3,0x68,0x22,0x34,0x2c,0x84,0x96,0xd,
+  0x9f,0xe0,0x31,0x2a,0x7e,0x72,0xd1,0x6b,0x97,0x9d,0xc7,0xc2,0x1d,0x37,0x7d,0x1f,
+  0xa6,0xed,0x32,0x21,0x50,0x4b,0x93,0xe0,0xf9,0x9d,0x81,0xfe,0xf4,0x60,0xbf,0x73,
+  0xce,0x39,0x9e,0x63,0x15,0x61,0x87,0xca,0xfb,0x80,0x40,0x9,0x7d,0x67,0x26,0x41,
+  0xe,0xdf,0x0,0x62,0xa5,0xb9,0xc7,0x5,0xe7,0x5f,0x30,0xaf,0xaf,0x64,0xb0,0xaf,
+  0x1,0xe0,0x36,0xa4,0xfe,0x37,0x28,0x9b,0x3f,0xc8,0xe3,0xdf,0x95,0xfd,0xef,0x8,
+  0x7d,0x8e,0xe5,0xbe,0x3d,0xaf,0xe7,0x8,0xf5,0xf9,0x7d,0x9,0x41,0xf4,0xdf,0x1f,
+  0x6,0xa4,0x63,0x26,0xde,0x6c,0x72,0xf4,0x3d,0xf4,0xa7,0xa7,0xdc,0xc9,0xc9,0xde,
+  0xfb,0x28,0xc,0x40,0xba,0xdf,0x68,0xf,0x85,0x8c,0xad,0x6b,0x7c,0x61,0xeb,0x17,
+  0xe4,0xc5,0xe1,0x30,0xb2,0xf3,0xa7,0xd,0xe1,0x4,0x9e,0xc,0xc5,0xa2,0x99,0x99,
+  0xa8,0xeb,0x33,0x9c,0x7d,0xc3,0xb9,0xe,0x71,0xbb,0x14,0x1b,0x8,0x4b,0x46,0x0,
+  0x52,0xab,0xd3,0x69,0x95,0xad,0x1f,0x92,0x19,0x81,0x8a,0xfe,0xeb,0x5b,0x90,0xfb,
+  0x3a,0x8,0xa8,0x63,0x42,0x93,0x4a,0xa1,0xb7,0x5d,0x16,0x40,0x6c,0xc4,0xb6,0x34,
+  0x7f,0x80,0x7a,0x5d,0x1,0x85,0x64,0x4,0xc2,0xc9,0x6f,0x39,0xb9,0x7,0x4e,0x7,
+  0x5e,0x76,0xb4,0x89,0xa8,0x5,0x28,0x0,0x30,0x2d,0x9,0x10,0x16,0x44,0xc,0x83,
+  0xb7,0xb,0x56,0xd4,0xc1,0x9c,0xf9,0xeb,0xa1,0xa9,0xb5,0x43,0x24,0x15,0x91,0x10,
+  0xa3,0xd6,0xac,0x88,0xb6,0x40,0xdd,0x92,0xd9,0x0,0xe9,0x26,0x4f,0x12,0x51,0x51,
+  0x61,0x1,0xfc,0xec,0xfa,0x2b,0xe1,0x94,0x63,0x8e,0x8,0xc,0x7,0x7a,0xb4,0x7c,
+  0x27,0x99,0x81,0x41,0x20,0x90,0x5,0xa,0x3a,0x30,0xf8,0xbd,0xfc,0x76,0xb6,0xf6,
+  0xd7,0x4d,0xb,0x9d,0x9,0x78,0x7c,0x4,0xe2,0xdc,0x6f,0x7d,0xf7,0xbc,0xef,0x1e,
+  0xdc,0x57,0x32,0xd8,0x67,0x0,0xf0,0xfb,0xff,0xfb,0xfd,0x38,0xa4,0xfe,0xb,0x51,
+  0xa0,0x62,0x41,0xf4,0x3c,0x97,0xfd,0x1f,0xa,0x7b,0x29,0x7b,0xa0,0xe0,0xfb,0x9e,
+  0xe7,0x2,0x0,0x7f,0x68,0xd1,0x1f,0x6,0xd4,0xc3,0x8b,0x7e,0x47,0x60,0x47,0x22,
+  0x1,0xff,0x7b,0xc7,0x3d,0xf0,0x8f,0x57,0x54,0x3a,0xb9,0xd4,0xda,0xd1,0x32,0xa8,
+  0x1c,0xf7,0xd,0xa8,0x6d,0x8f,0x3,0xbb,0xc1,0x19,0x80,0xc2,0x60,0x4b,0xe1,0x1f,
+  0x5e,0x55,0x2,0xdf,0x3c,0x60,0xc,0x8c,0x19,0x5c,0x2,0xc9,0x8c,0xf0,0xe8,0x47,
+  0x22,0xe4,0x94,0x14,0xde,0x7f,0x97,0xed,0x84,0x38,0x99,0x47,0x9,0xbc,0xb,0x58,
+  0x42,0xeb,0x5b,0x60,0x38,0x42,0x1c,0x91,0xab,0xec,0x3a,0x37,0x35,0xeb,0xae,0xba,
+  0x9a,0x53,0xef,0x4,0xa4,0x6b,0x7c,0xc1,0x1a,0xc4,0x71,0xd6,0xe6,0xa0,0x4c,0x0,
+  0x2f,0x38,0xb0,0x4f,0x40,0x82,0x83,0x63,0x2a,0x58,0xae,0xaf,0xc0,0x92,0x7f,0xc4,
+  0xc7,0x24,0x18,0xa4,0x69,0xc2,0x9b,0x96,0x64,0xf8,0x96,0x4c,0xc7,0xb5,0xd8,0x79,
+  0x68,0xd8,0x22,0xb2,0xc1,0x40,0x80,0x5f,0xa8,0xa9,0x35,0x9,0x6f,0x7d,0xb6,0x1e,
+  0xbe,0x5a,0x5d,0x2b,0x1c,0x84,0xec,0x1b,0x48,0x43,0x71,0xcc,0x84,0xc4,0xda,0xf7,
+  0x20,0xd5,0xb8,0x44,0x5e,0xbc,0x6b,0xd6,0x5c,0x7f,0xd9,0x5,0x70,0xc9,0xb9,0x67,
+  0xe4,0xc,0x3,0xfa,0x63,0xf4,0xb9,0xfc,0x0,0x7e,0x16,0xa0,0xa8,0x7b,0x4e,0xe1,
+  0xb7,0xb2,0x99,0x41,0x57,0x5a,0x5f,0x7,0x2,0xae,0x50,0xcc,0x30,0x8,0x1c,0x77,
+  0xe1,0x77,0x2f,0xec,0x93,0xb0,0x60,0x9f,0x1,0xc0,0x23,0x7f,0x7c,0xe4,0x69,0x14,
+  0xe8,0x53,0x15,0xf5,0xf7,0x53,0xfe,0x9e,0xda,0xff,0xba,0x39,0x90,0xc5,0x0,0x72,
+  0xd0,0x7f,0x8f,0x56,0xf,0xa0,0xff,0xb9,0x32,0xff,0xa8,0xd3,0xce,0xd5,0x3f,0xbe,
+  0x1d,0x3e,0xf8,0x74,0xbe,0xfb,0x33,0x12,0xe5,0x2f,0x1b,0x7,0xe1,0x81,0x7b,0x43,
+  0x5b,0x5a,0x65,0xee,0x85,0x85,0x97,0x9f,0xcf,0x13,0x82,0x29,0x63,0xaa,0xe0,0xb8,
+  0xbd,0x47,0x40,0x49,0x61,0xc,0xd2,0xa6,0x74,0x10,0xe2,0xe7,0x93,0xf0,0x47,0x78,
+  0x35,0x60,0x5d,0xe8,0x43,0x2c,0x10,0x36,0x3e,0xa2,0xc,0x7a,0xe0,0x98,0x4,0x62,
+  0xe2,0xcb,0xba,0x7d,0x19,0x6,0x24,0x60,0x8,0x33,0x30,0xc8,0x3c,0x7d,0x7e,0xaf,
+  0x2d,0x6e,0xb0,0xe6,0xfd,0x57,0x31,0x7b,0x35,0x54,0x5c,0x5f,0x99,0xa,0xd9,0x66,
+  0x81,0x48,0x24,0xca,0x58,0x6e,0x24,0xc1,0xf2,0x81,0x42,0xc6,0x72,0x73,0x2,0x1c,
+  0xd3,0xc0,0xb2,0x1c,0x16,0x60,0xab,0x4c,0x38,0x53,0xbe,0xae,0x1c,0x85,0x72,0x4b,
+  0x8f,0x4c,0xc6,0xe4,0xe3,0x61,0xd9,0x94,0xe4,0x93,0x25,0x35,0xf0,0xc1,0xc2,0x8d,
+  0xf8,0x96,0xc,0xb3,0x0,0x7a,0x6f,0xd8,0x36,0xa1,0x20,0xb1,0x14,0x9a,0xd7,0xbc,
+  0x2b,0x1d,0x84,0x2e,0x1b,0x38,0xeb,0x94,0xe3,0xe1,0x27,0xdf,0xbf,0x8c,0xe7,0x4f,
+  0x60,0x66,0xa0,0x12,0xe6,0x80,0x5e,0x1,0x41,0xe6,0x40,0x77,0xe9,0x7f,0x57,0x7e,
+  0x80,0xa0,0x7c,0x0,0x1d,0x44,0x18,0x0,0x6c,0x6b,0x29,0x3e,0x9f,0x7c,0xf1,0x5,
+  0x17,0xa7,0xba,0x14,0x9c,0x5e,0x1e,0x7d,0x2,0x0,0xf,0x3f,0xf2,0xf0,0x4c,0xa4,
+  0xfe,0x73,0x74,0xd,0xee,0x50,0x7f,0x8d,0xda,0xeb,0x9e,0xfa,0xde,0xb6,0xff,0xbb,
+  0x2a,0xfc,0xf1,0x38,0xa,0x35,0xef,0xff,0xea,0xb5,0x1b,0xe0,0xd2,0x1f,0xde,0x2,
+  0x5f,0x2e,0x5d,0xae,0xfd,0x7c,0x6,0x94,0xee,0xb4,0x37,0xb4,0x46,0xc7,0x82,0x9,
+  0x42,0xf0,0xd,0xfc,0x1e,0x76,0x58,0x30,0x80,0x10,0xda,0xfc,0x33,0x77,0x1d,0xa,
+  0x7,0x4e,0x19,0xc2,0x82,0x93,0xb1,0x41,0x46,0x22,0x42,0x22,0x94,0x47,0xda,0x9e,
+  0xce,0x4d,0xbf,0x43,0xd8,0x10,0x60,0xa0,0xc2,0x7e,0xd2,0x24,0x60,0xb3,0x80,0xf7,
+  0xc1,0x71,0xfa,0x81,0x14,0x5c,0xcb,0xb9,0x12,0x5b,0x26,0x10,0x6a,0x65,0xc3,0x60,
+  0x4b,0x13,0xc0,0x76,0x12,0x7b,0x54,0xe3,0xf,0x37,0xe6,0xaf,0xde,0x69,0x4b,0x81,
+  0xd7,0xa,0x0,0x41,0x9,0xbd,0x3a,0x83,0xb,0x0,0x2a,0xbd,0xc1,0xb4,0xbd,0xfe,
+  0x2,0xe5,0x14,0x64,0x53,0x5e,0x26,0xff,0x28,0x5f,0x80,0x6d,0xe9,0x60,0x60,0xb2,
+  0x69,0x90,0x21,0x9a,0xac,0x1,0x2,0x7d,0x68,0x14,0x4f,0x47,0x69,0xc6,0xef,0x2c,
+  0x58,0x7,0x89,0x44,0x1a,0xc,0xa6,0xd2,0x26,0xe5,0x22,0x43,0x69,0xa8,0xe,0x1a,
+  0x97,0xbd,0x86,0x27,0x6e,0x3,0x27,0x66,0x9,0xe4,0x1c,0x3c,0x8,0xee,0xf8,0xd1,
+  0xf,0x20,0x2f,0x1e,0xb,0xae,0x3,0xc8,0x11,0x6,0xec,0xcc,0x27,0xa0,0xb,0x7a,
+  0x4f,0xfd,0x0,0x9d,0x39,0x2,0xfd,0xe7,0xca,0x98,0x99,0x1b,0x11,0x0,0x6e,0xdf,
+  0xd6,0xb2,0xb8,0xcd,0x1,0xe0,0xb7,0xbf,0xff,0x2d,0xca,0x7e,0xe4,0x23,0x14,0xb6,
+  0xdd,0x94,0xf0,0xb1,0x30,0x86,0x3,0xc0,0x40,0xd3,0xe0,0xe,0x33,0xf0,0x53,0xfc,
+  0x5c,0x66,0x40,0x27,0xf6,0x7f,0x10,0xed,0xd7,0xbd,0xfb,0xca,0xcc,0xf0,0x3,0xc0,
+  0x92,0x15,0xab,0xe0,0xb2,0x1f,0xde,0xa,0x2b,0x56,0xaf,0x75,0x7f,0xbe,0x70,0x1c,
+  0x2a,0x46,0x1f,0xc,0xf5,0x66,0xa5,0x6c,0xc6,0x11,0x22,0x4e,0x2f,0x7d,0x1,0x28,
+  0xe4,0xb1,0x30,0x1c,0x3c,0x6d,0x18,0x4c,0x1f,0x5f,0x85,0x54,0x58,0x68,0x6b,0x43,
+  0x25,0x2a,0x85,0xc5,0x77,0xf,0x47,0xb4,0xe4,0x27,0x69,0x6e,0x80,0xb4,0xf3,0xc3,
+  0x92,0xde,0xb,0xf0,0x3,0x7,0x4,0x44,0xec,0x5f,0x8,0xb7,0x12,0x70,0xde,0x37,
+  0xc0,0x11,0x8a,0x90,0xd4,0xa6,0x8e,0xed,0xaf,0x9,0x8b,0x72,0xec,0x59,0x2a,0x39,
+  0x20,0xd0,0x27,0x20,0xe,0x66,0x24,0xa3,0x70,0x34,0xbf,0x3c,0xab,0xa9,0x9b,0x4,
+  0xb6,0xb,0x1c,0x7a,0xce,0x80,0x63,0x36,0x98,0xa2,0xe9,0x8,0xd1,0x7e,0xdb,0x16,
+  0x3e,0x1,0xcb,0x72,0xb7,0x2c,0x38,0xcc,0x6,0x32,0x4e,0xc6,0x60,0x4,0x4f,0xb3,
+  0xba,0xba,0x5,0xfe,0xf3,0xf9,0x46,0xe8,0xa0,0xa2,0x29,0xa2,0x21,0x4,0x2,0xf8,
+  0x9e,0xd2,0x48,0x3b,0x82,0xc0,0xbf,0x1,0x52,0xd,0x9e,0xb,0x3f,0x74,0xe6,0xde,
+  0x70,0xe7,0x4f,0xae,0x87,0x92,0xa2,0xc2,0xe0,0xa4,0x20,0x5f,0x66,0x60,0x50,0x38,
+  0xb0,0x3b,0x7e,0x0,0xf,0x3,0xe8,0xa6,0xf3,0x2f,0x28,0x24,0xa8,0x9d,0xb3,0x15,
+  0xb7,0x13,0xbf,0x77,0xd1,0xf7,0xba,0x4c,0x65,0xef,0xcd,0xd1,0x17,0x0,0x30,0x2b,
+  0x1a,0x8e,0x3e,0x68,0x38,0xce,0x2c,0x57,0xf3,0x77,0xe6,0x0,0xec,0x2a,0xfe,0xdf,
+  0x5d,0xfb,0x5f,0xff,0x1c,0x3f,0xed,0x57,0xaf,0x5,0x85,0xff,0x16,0x2f,0x5f,0x9,
+  0xb3,0xfe,0xe7,0x66,0x58,0xb3,0x61,0x93,0xfb,0x65,0xc2,0xf9,0x50,0x39,0xfe,0x48,
+  0xa8,0x4b,0x14,0xa,0xcf,0x7e,0x38,0xc2,0x49,0x7d,0xa2,0x51,0x47,0x18,0xa9,0x7b,
+  0x4,0xf6,0x9f,0x36,0x18,0x26,0x8f,0xac,0xe0,0xb9,0xb,0x4a,0xe8,0x29,0x5,0x59,
+  0x32,0x0,0xf5,0x30,0x1c,0x6,0x13,0x96,0x39,0x41,0x52,0xeb,0xab,0xf0,0x9f,0xca,
+  0x10,0x96,0xa7,0x16,0xcf,0x6d,0x61,0x2,0x80,0xd0,0xea,0xa2,0x58,0xd0,0xe6,0x76,
+  0x5e,0x6e,0xce,0xbc,0xae,0xe6,0x15,0xb,0xb0,0x25,0x30,0x18,0x9e,0xd4,0x5f,0x9d,
+  0xfe,0x8b,0xf0,0x21,0x7f,0xa0,0xec,0x2,0x10,0x72,0x84,0x9f,0x1e,0x26,0x7f,0x86,
+  0x38,0x66,0x81,0x2,0x7,0x43,0x68,0x7d,0x69,0x6f,0x30,0x13,0xb0,0xd,0x27,0x43,
+  0xd0,0x32,0x15,0x33,0x10,0xda,0xde,0x96,0xfb,0xb6,0x29,0xb5,0xa5,0xa9,0x40,0x21,
+  0x23,0x84,0x3,0x1f,0x51,0xfc,0x52,0xeb,0xeb,0xda,0xe0,0xfd,0x45,0x1b,0xa1,0x9d,
+  0xd2,0x89,0x33,0xa6,0x3,0x2,0x45,0xe1,0x24,0xb4,0xac,0x40,0x26,0x90,0xd8,0xe4,
+  0xf9,0x8e,0x33,0xf7,0x9a,0x1,0xf7,0xdc,0xf2,0xbf,0x9c,0x45,0x18,0x18,0xe,0xb4,
+  0xb2,0x69,0xbe,0x8a,0xfb,0xeb,0x0,0x10,0x64,0x16,0x38,0x76,0xbf,0xef,0xb9,0x9f,
+  0x9,0xf8,0x1d,0x81,0x7e,0x53,0x20,0x90,0x39,0x58,0xd6,0x13,0x17,0x5f,0x78,0xf1,
+  0x59,0xdb,0x52,0x1e,0xb7,0x29,0x0,0x3c,0xf4,0xbb,0x87,0x2a,0x70,0xf2,0x2f,0x9,
+  0x1b,0xe1,0xa,0x1d,0x0,0xb2,0xec,0xfe,0x0,0x33,0xa0,0x3b,0xe,0xc0,0xae,0xfc,
+  0x0,0xfe,0x5,0x40,0x3d,0x26,0x41,0xc8,0xa5,0xdd,0xfe,0xf0,0x1f,0x69,0xfc,0x8b,
+  0xaf,0xbf,0x19,0x56,0xad,0x5d,0xef,0xfe,0x6c,0x94,0xc7,0x3f,0xfe,0x68,0xa8,0x4f,
+  0xc4,0x71,0x5f,0x8,0x3c,0x9,0xb1,0xcd,0xde,0x7e,0xd2,0xfc,0x11,0xd8,0x67,0x97,
+  0x41,0xb0,0xf3,0xf0,0x32,0xd4,0x90,0xd2,0x91,0x88,0xc7,0x23,0x51,0x21,0xf8,0xa,
+  0x0,0x42,0x9a,0xf0,0x1b,0x32,0x4,0xe8,0x8,0xbe,0xd2,0xf8,0x4e,0x14,0x40,0x8,
+  0x74,0x28,0x24,0x84,0x9e,0xc4,0x8f,0xab,0x7a,0x6d,0x99,0x78,0x43,0xa2,0x68,0xdb,
+  0x92,0x5,0x58,0x1e,0xe1,0x37,0x34,0xd1,0xd6,0xf3,0xf7,0x19,0x8,0xc,0x4d,0x7b,
+  0xab,0x50,0x9f,0xfc,0xb,0x5,0x2,0xa2,0xfa,0x9f,0x79,0x85,0x10,0x78,0x7,0x14,
+  0x8,0xc,0xc,0xb0,0xe4,0x15,0xb1,0x19,0xe0,0x40,0x92,0x21,0xed,0x7f,0x65,0x1e,
+  0x58,0xec,0xfb,0x50,0x60,0x60,0xb3,0x0,0x5a,0x9c,0x62,0x6b,0x51,0x12,0xe,0x9,
+  0x49,0xc6,0x74,0x0,0x81,0x8e,0x11,0xa2,0xd0,0x77,0xac,0x69,0x6c,0x87,0xf7,0xbf,
+  0xd8,0x80,0xe6,0x40,0x4a,0x30,0x1,0xe9,0x1b,0xc8,0xf,0xa7,0x21,0xb1,0xea,0x75,
+  0xb0,0xda,0xd7,0x79,0x7c,0x2,0x7,0xef,0xb7,0x17,0x82,0xc0,0xf,0xd1,0x1c,0x88,
+  0x7,0x66,0x5,0xe6,0xaa,0x11,0xd0,0x5,0x3a,0x17,0xed,0xcf,0x7a,0xee,0x8b,0x8,
+  0x78,0x52,0x7f,0x3,0xb4,0x7e,0x16,0x10,0xd0,0xfb,0x32,0xd2,0x27,0x60,0x99,0x7b,
+  0xcc,0xba,0x78,0xd6,0x36,0x6b,0x1c,0xb2,0x4d,0x1,0xe0,0xb7,0xf,0xff,0xf6,0x3e,
+  0x4,0x80,0xcb,0x1d,0xaa,0xad,0xa,0x71,0x72,0x44,0x0,0x82,0x42,0x7f,0x39,0xfd,
+  0x0,0x7e,0x20,0x8,0x88,0xf7,0x7b,0x0,0x44,0xa7,0xfd,0xfe,0x1e,0x0,0x1a,0x0,
+  0xac,0xdf,0x58,0xd,0x17,0xfd,0xe0,0x27,0xb0,0x74,0xe5,0x6a,0xf9,0x73,0x51,0x72,
+  0x4f,0x21,0x94,0x8f,0x3d,0x1a,0x1a,0x92,0x31,0xa1,0xed,0x23,0x2a,0xc4,0x27,0x4c,
+  0x0,0xb2,0xfd,0x77,0x1b,0x37,0x80,0x73,0xf8,0x85,0xf0,0xa3,0xb0,0x47,0x25,0xd0,
+  0x49,0x73,0x87,0x3c,0xff,0x4,0x0,0xe4,0xe4,0xb3,0xd,0x43,0xd6,0xea,0x93,0x1f,
+  0xc0,0x70,0x52,0x67,0x39,0x35,0x9a,0x2b,0x7,0x9,0x8,0x6c,0x16,0x37,0x7e,0x18,
+  0xd2,0xe0,0x46,0x51,0x23,0x71,0x64,0x1,0xb7,0x6d,0xb7,0x41,0x87,0x6d,0x9,0x86,
+  0x20,0xc1,0xc0,0x35,0x3,0x94,0x8a,0x77,0x8b,0x7f,0x5c,0xc7,0x9e,0x7a,0xaf,0xb,
+  0x15,0xea,0xaf,0x2c,0x19,0xa,0x54,0xc2,0x6d,0x69,0x2,0x4f,0x55,0x8a,0x96,0xac,
+  0x56,0xe4,0xab,0x33,0x4,0x17,0xa1,0xcf,0x31,0x25,0x33,0xb0,0x64,0x3,0x52,0x2a,
+  0x25,0x66,0x2b,0xdc,0x54,0xe,0x42,0xd9,0xab,0x5f,0x32,0x82,0x4c,0x46,0x6a,0x4a,
+  0x5,0x2,0xcc,0x4,0x70,0x3f,0x43,0x11,0x2,0x1b,0x36,0xd4,0xb5,0xc3,0xc7,0x4b,
+  0xaa,0xc1,0xa4,0x56,0xe7,0xc4,0x4,0x28,0x4c,0x98,0x49,0x43,0x5e,0x28,0x3,0x89,
+  0xb5,0x6f,0x82,0xdd,0xb6,0x46,0x7e,0x35,0x1,0x4f,0x47,0x1c,0xbc,0x3f,0xfc,0xa,
+  0xcd,0x81,0x78,0x34,0x96,0x33,0x1f,0x20,0x17,0xe5,0xd7,0x13,0x82,0x7a,0xea,0x8,
+  0xec,0x2e,0xfd,0xf7,0x47,0x1b,0x32,0xc8,0x6a,0x70,0xfb,0xce,0x25,0x17,0x5d,0x72,
+  0xc0,0xd7,0xe,0x0,0xee,0x7b,0xf0,0xbe,0x71,0xb1,0x68,0x8c,0xc3,0x7e,0xba,0x76,
+  0x76,0xea,0xf0,0x7b,0x18,0x1,0xf0,0x67,0xe,0x76,0xe5,0xf9,0xf7,0x1f,0xcf,0x4a,
+  0x1f,0xe,0xc8,0x11,0x68,0x69,0x69,0x83,0xef,0x5e,0x7b,0x13,0x2c,0x58,0xbc,0xc4,
+  0x23,0xfc,0x65,0x28,0xfc,0x8d,0x24,0xfc,0x44,0xf9,0xe9,0xef,0x99,0xfa,0x87,0x59,
+  0xc3,0x5b,0xf8,0xf7,0x63,0x87,0x95,0xc1,0xd4,0xd1,0x15,0x2c,0x14,0xa0,0x7a,0xd,
+  0xc8,0x7,0x9,0xbe,0xc1,0x6c,0x6,0xcf,0x15,0x91,0xdf,0x43,0x2,0x51,0x98,0xfd,
+  0x21,0x42,0xeb,0xd3,0x14,0x66,0x9b,0x9f,0x45,0x4d,0x12,0x6f,0x9b,0xb4,0xa1,0xd0,
+  0xf2,0xdc,0xc0,0xd3,0x32,0x85,0x3e,0xb6,0x6d,0xc9,0x6,0x4,0xc5,0x56,0x66,0x80,
+  0x10,0x72,0x4d,0xf8,0xc1,0xa5,0xfd,0x21,0xad,0x33,0x91,0x5e,0x22,0x6c,0x4b,0xea,
+  0xee,0xda,0xfa,0x42,0x80,0x5d,0xfa,0x2f,0xa6,0x8d,0x0,0x1,0x21,0xfc,0xfc,0x3a,
+  0x85,0x3a,0xd,0xc1,0x72,0x2c,0x69,0x90,0xd0,0xeb,0x4,0x80,0x4,0xa,0xa6,0x25,
+  0x4c,0x2a,0xd6,0xfc,0x20,0x7d,0x2,0xaa,0xa0,0xc8,0x94,0x20,0x40,0xc5,0x36,0x28,
+  0x4,0x19,0x9,0x0,0x2c,0xfc,0x24,0x88,0xf2,0x79,0x4,0xdf,0xbf,0xb2,0xba,0x99,
+  0x4b,0x8d,0xd,0x62,0x0,0xa,0x4,0xcc,0x34,0xc4,0x20,0xd,0xa9,0xb5,0x6f,0x81,
+  0xdd,0xbe,0xc6,0xc3,0x4,0xbe,0x79,0xec,0x11,0xf0,0x8b,0x1b,0xaf,0xc9,0x99,0xf,
+  0x90,0x2b,0x19,0xc8,0x4f,0xdd,0x73,0x66,0x2,0x6,0xd8,0xff,0x5d,0x45,0x2,0x3c,
+  0x45,0x42,0xca,0x17,0xa0,0xb1,0xe,0x33,0x63,0x9e,0x75,0xd9,0xac,0xcb,0xb6,0xb8,
+  0x49,0xc9,0x76,0x5,0x0,0xf,0xfc,0xf6,0x81,0x17,0xa3,0x91,0xe8,0xb1,0xaa,0x60,
+  0x46,0x69,0x78,0x5,0x0,0x59,0x36,0x7f,0x40,0x5,0xe0,0xe6,0x44,0x0,0xfc,0x9f,
+  0xd5,0xdd,0x4,0x20,0xba,0x39,0xb3,0x6e,0xf8,0x39,0xbc,0xfd,0x81,0x62,0x63,0x6,
+  0xdb,0xfc,0xe5,0xe3,0x8f,0x81,0xfa,0x8e,0x38,0x18,0x11,0x21,0xf4,0x22,0xc1,0x47,
+  0xec,0x93,0xe6,0xa7,0x2e,0x3c,0xd3,0xc7,0x55,0x71,0xdc,0x9f,0x3f,0x3f,0x1a,0x61,
+  0xad,0xcf,0x82,0x1f,0x56,0x20,0x20,0x80,0x21,0x24,0xb5,0x3d,0x47,0x2,0xa4,0x9d,
+  0x2f,0xf1,0x88,0xb5,0x7c,0x18,0x6c,0x25,0x66,0x10,0xb2,0x2d,0x59,0x3c,0x63,0x31,
+  0x10,0xa8,0xe3,0x6c,0xef,0x5b,0x1a,0x48,0x80,0x2b,0xf0,0x61,0xe9,0x38,0x54,0x9e,
+  0x79,0xf2,0xb6,0x53,0x75,0x5e,0x46,0x85,0xdf,0xa4,0xdd,0xab,0xc2,0x88,0x4,0x44,
+  0x11,0x19,0x91,0x88,0x70,0x9f,0x5,0xc3,0x29,0xfa,0xb1,0x9c,0xf8,0xbf,0x3c,0x8b,
+  0xa1,0xce,0x26,0x19,0x0,0x6f,0x43,0x1c,0x5,0xb1,0xd,0x9,0x86,0x86,0xd8,0x27,
+  0x80,0xe0,0x2b,0x36,0x42,0xae,0xb3,0xd0,0x52,0xc9,0x46,0xb6,0x48,0x12,0x92,0x4e,
+  0x42,0xd2,0xf6,0x1c,0x29,0x90,0x26,0x0,0x9b,0x6,0x69,0xda,0x8a,0xc,0xc1,0x30,
+  0xfe,0xcd,0xb2,0xf5,0x8d,0xdc,0x91,0xc8,0x30,0x65,0x88,0x90,0x81,0x20,0x3,0x71,
+  0x48,0x41,0xc7,0x9a,0xd7,0xc1,0xe8,0x58,0xe7,0x29,0x6e,0x98,0x75,0xde,0x19,0x70,
+  0xd5,0x45,0xe7,0x66,0x55,0x1,0x76,0x27,0x21,0xc8,0x1f,0xb6,0xdb,0xd2,0x48,0x40,
+  0x67,0x6c,0x40,0x15,0x18,0xe1,0xb1,0x75,0xe4,0x10,0xbc,0xe2,0xd2,0x2b,0xb6,0x7a,
+  0xfb,0xb0,0x6d,0x2,0x0,0xf7,0x3e,0x70,0xef,0xb1,0xd1,0x68,0xf4,0x45,0xd5,0xe5,
+  0x47,0x17,0x56,0xf,0x0,0xf8,0x6c,0xff,0x2e,0x53,0x80,0x43,0x5d,0xb0,0x0,0xcd,
+  0xc9,0xd8,0x55,0xde,0xbf,0xbf,0xf9,0xc7,0x8f,0xef,0xbc,0xf,0x9e,0x7a,0xfe,0x15,
+  0xc7,0xfe,0x65,0x6f,0x3f,0x6a,0xfe,0xba,0x64,0x81,0x10,0x7e,0xd6,0xfc,0x42,0xfb,
+  0xdb,0x72,0x9f,0xba,0xf4,0xec,0x3e,0x7e,0x0,0x14,0x50,0x18,0x8a,0x28,0x7d,0x34,
+  0x2a,0xec,0x7c,0xe9,0xf4,0x33,0x22,0x61,0xe9,0xe9,0x57,0x5b,0x83,0x69,0x7f,0xc8,
+  0x10,0x5a,0xdf,0x8,0x9,0x3d,0x1b,0x66,0x9a,0x2f,0x5,0xdd,0x36,0x59,0xd3,0x47,
+  0xf8,0xb8,0x88,0x95,0xd3,0x31,0x7a,0x8d,0x2d,0x70,0x5b,0x81,0x84,0xec,0xdc,0x83,
+  0xc7,0xa9,0x39,0x48,0x22,0x95,0x86,0xc6,0xd6,0x4,0xd4,0x36,0xb7,0x41,0x4d,0x53,
+  0x2b,0xb4,0x75,0xa0,0x70,0xe0,0xb1,0xf6,0x24,0xda,0xcc,0xe9,0x8c,0x2c,0x81,0x55,
+  0xc9,0x34,0x22,0x99,0x88,0xae,0x2b,0x2f,0x16,0x81,0x42,0xbc,0xfe,0xfc,0x58,0x14,
+  0x8a,0xb,0xa8,0x9d,0x58,0x1,0x94,0x16,0xe6,0x41,0x51,0x5e,0x1c,0xa,0xf3,0x63,
+  0x68,0xaa,0x84,0x99,0x9d,0xa4,0x99,0xce,0x4b,0xe7,0x9f,0x11,0x92,0xa0,0x40,0x20,
+  0x10,0x76,0xb6,0xf4,0xe0,0xdf,0x87,0x9e,0x4b,0x2e,0xc3,0xc7,0x95,0x3f,0x52,0x5a,
+  0x32,0xa6,0xa4,0xc0,0xb6,0x4c,0xe,0x2,0x4b,0x99,0x0,0xa6,0xe3,0xb,0x10,0x4c,
+  0x20,0x83,0x42,0x2f,0xc0,0xe1,0xf3,0x95,0x75,0xd0,0xd8,0x92,0x0,0x23,0xa3,0xf2,
+  0x4,0x4,0x13,0xc8,0x43,0x10,0x68,0x5f,0x3d,0x1b,0x41,0xa0,0x1a,0xf4,0xb2,0xe2,
+  0x9b,0x7f,0x70,0x39,0x7c,0xeb,0x84,0xa3,0xbc,0x4e,0x3f,0x5f,0x79,0x70,0x67,0xe6,
+  0x40,0x8f,0x22,0x1,0xdd,0x28,0xd,0xe,0x4c,0x10,0x62,0xf3,0xc7,0x12,0x7d,0x6,
+  0x2c,0xeb,0xf6,0xcb,0x67,0x5d,0xbe,0xd5,0xdb,0x87,0x6d,0x75,0x0,0xf8,0xcd,0xbd,
+  0xbf,0x89,0xa1,0x90,0x2f,0x8c,0x44,0x22,0xe3,0xf4,0xcc,0x3a,0x25,0x68,0x1e,0xda,
+  0xdf,0x49,0xd,0x40,0x77,0x53,0x80,0x83,0xd8,0x41,0x56,0xe,0x80,0x1e,0x9,0x8,
+  0xa8,0xff,0xa7,0x46,0x9d,0xb7,0xde,0xfb,0x30,0x38,0xd2,0x61,0x44,0xa1,0x62,0xdc,
+  0x11,0x50,0x97,0x2a,0x65,0x2d,0xce,0x76,0x7f,0x54,0x68,0x7f,0x5b,0xda,0xfd,0xc4,
+  0x2,0x76,0xde,0xa9,0xc,0x86,0xc,0x28,0x4,0xd3,0x10,0x9a,0x9e,0x5,0x3f,0x42,
+  0x82,0x15,0x11,0xa1,0x3f,0xa2,0xfc,0x74,0xee,0x88,0x38,0x5f,0x34,0x2c,0xca,0x79,
+  0x45,0x14,0x4e,0x50,0xf8,0x8,0xd3,0x77,0x31,0xa1,0x69,0x1b,0x62,0xad,0x2f,0xf6,
+  0xc3,0xe,0x13,0xb0,0x64,0xd2,0x8c,0x8d,0x9f,0x61,0xb0,0x40,0xb4,0x25,0x52,0xb0,
+  0xb1,0xa1,0x15,0xd6,0xd4,0x36,0x42,0x35,0x6e,0xeb,0x5a,0x44,0xbf,0x3e,0x4b,0xb,
+  0xfd,0x15,0x44,0x49,0xb8,0x23,0xfc,0x95,0x62,0xc4,0x44,0xb4,0x8e,0x41,0x69,0x59,
+  0x7d,0x48,0x49,0x3d,0x6d,0xc9,0xc,0x24,0x33,0xaa,0x54,0x5d,0xb0,0x83,0x82,0xbc,
+  0x18,0x54,0x95,0x16,0x41,0x55,0x59,0x11,0xc,0xab,0x2c,0x81,0x1,0xa5,0x85,0xf8,
+  0x19,0xa2,0xa4,0x3a,0xc5,0x60,0x20,0x98,0x0,0xfb,0x5,0x42,0x2e,0x0,0xb8,0xf,
+  0x7c,0x6f,0x24,0xc2,0x4c,0xc1,0x74,0xbc,0x19,0x86,0x93,0x2f,0x0,0x8e,0x33,0xce,
+  0x14,0x66,0x82,0x46,0xfd,0x2d,0x67,0x5f,0x80,0x0,0x1,0x64,0x2b,0x82,0xdb,0xc2,
+  0x55,0xf5,0x90,0x4e,0x65,0x4,0x13,0x60,0xa7,0x20,0xda,0xd0,0x99,0x34,0x14,0x85,
+  0x92,0xd0,0xba,0x1c,0xc1,0x3b,0xd5,0xe8,0x7c,0xf7,0x7c,0x4,0xb0,0x87,0xef,0xbc,
+  0x19,0x66,0xec,0x3a,0xd9,0xe3,0xec,0xf3,0x47,0x2,0x82,0x4c,0x3,0xf,0x0,0xf8,
+  0x23,0x1,0x1,0xe,0xc0,0x2e,0x7d,0x0,0x39,0xcc,0x2,0x37,0x45,0x9a,0x7f,0xfb,
+  0x54,0x26,0x93,0x99,0x78,0xd5,0xe5,0x57,0xad,0xf8,0xaf,0x6,0x80,0x7b,0xee,0xbb,
+  0xe7,0x6,0x14,0xfe,0xdb,0x3c,0x89,0x35,0x12,0x0,0xd4,0x72,0xdc,0x9d,0xe5,0x0,
+  0x74,0x55,0x3,0xd0,0x59,0x8,0xd0,0xf3,0x5e,0x5f,0x12,0x90,0xdf,0x24,0x50,0x9f,
+  0xf3,0xc1,0x27,0xf3,0x91,0xfa,0xff,0xc,0x85,0x27,0xe5,0x0,0x40,0xf9,0xa8,0x83,
+  0xa0,0xde,0x1e,0x8a,0xaf,0xcb,0x50,0x5f,0x44,0xda,0xfd,0xf8,0xdc,0x96,0x79,0xfe,
+  0xe5,0xa5,0xf9,0xec,0xf1,0xa7,0x88,0x80,0xd0,0xf6,0x6,0x4f,0xf8,0x30,0x53,0xff,
+  0x8,0x27,0xf9,0x10,0x8,0x44,0x19,0x2f,0xc2,0xdc,0xea,0x4b,0x84,0xf8,0x85,0xcd,
+  0x1e,0x91,0xfe,0xf4,0x8,0x69,0x7e,0x9c,0xcc,0x36,0x4e,0xe6,0x10,0x6e,0x95,0xe0,
+  0xd3,0xe4,0x26,0xc1,0xa7,0xc9,0x1f,0xd,0x89,0x70,0x5f,0x4b,0x7b,0x2,0x36,0xd6,
+  0xb7,0xc0,0xaa,0xea,0x6,0x58,0x5b,0xd3,0x28,0xfa,0xf1,0xe1,0x44,0xcd,0x8f,0x85,
+  0xa1,0xb2,0x30,0xe,0x55,0x45,0x71,0x18,0x51,0x51,0x0,0x83,0x4a,0xf2,0xa0,0x92,
+  0x9a,0x83,0x16,0xc6,0xa0,0x24,0x2f,0xca,0x11,0x86,0x42,0xd4,0xf4,0x2a,0xc3,0x90,
+  0x40,0x82,0xd2,0x92,0xa9,0x33,0x30,0x99,0x7,0x8d,0xed,0x69,0xa8,0x6f,0x4b,0x42,
+  0x6d,0x6b,0x12,0x36,0x34,0x75,0xc0,0x9a,0xfa,0xe,0xa8,0x6b,0x17,0xcf,0xc9,0x91,
+  0x47,0xbf,0x5b,0x71,0x41,0x1e,0x8c,0xa8,0x2a,0x83,0x61,0x3,0x4a,0x11,0x18,0x10,
+  0xc,0x62,0x31,0x51,0x9,0x68,0x87,0x1c,0xdf,0x87,0x29,0xcd,0x2,0x12,0x7e,0x8b,
+  0x99,0x0,0xfd,0xe,0x51,0x36,0xb,0x88,0x35,0x99,0xb6,0xe4,0x2e,0x2a,0x5,0xd9,
+  0xb1,0x85,0x5,0x1b,0x20,0x81,0x27,0xf6,0xa3,0x80,0xc0,0x96,0x66,0x80,0x89,0xc,
+  0x86,0xb2,0x2,0xd7,0x54,0xb7,0xc2,0xda,0xea,0x66,0x6,0x48,0x46,0x11,0x2a,0x18,
+  0x4a,0xd3,0x6f,0x97,0x86,0xd2,0x50,0x33,0x34,0x2e,0x7b,0x5,0xc1,0xa1,0x3,0x14,
+  0x13,0xd8,0x69,0xe8,0x10,0x78,0xec,0xfe,0x3b,0x60,0x60,0x65,0x45,0x16,0x8d,0x57,
+  0x7e,0x81,0xc0,0xd0,0x9f,0x19,0x60,0x6,0x4,0x98,0x6,0x59,0xda,0xbc,0x13,0x0,
+  0xf0,0x9b,0x5,0xaa,0x5b,0xb1,0x2,0x0,0x36,0x43,0x4d,0xeb,0x89,0x2b,0x2e,0xbb,
+  0x62,0xab,0x86,0x5,0xb7,0x2a,0x0,0xfc,0xfa,0x9e,0x5f,0x57,0xa0,0xb0,0xad,0xa2,
+  0x36,0x5f,0x2c,0x8,0x3e,0xed,0xab,0x3,0x80,0x4e,0xef,0x7b,0x23,0x7,0xc0,0x63,
+  0x2e,0x4,0x8,0x7f,0x50,0x8,0x70,0x53,0x6d,0x1d,0x9c,0x75,0xf9,0xff,0xc0,0x86,
+  0x4d,0x35,0x8e,0xf0,0x17,0xe,0x9c,0x2,0xad,0x79,0x53,0x58,0x88,0x45,0x82,0x8f,
+  0xb,0x0,0xb6,0xc,0xfd,0x11,0xd5,0x27,0xc7,0x5f,0x31,0xa,0x99,0xcd,0xb6,0x7d,
+  0x84,0xb5,0xbd,0xd0,0xfa,0x2,0x24,0xf4,0x84,0x9f,0x8,0xb,0x9e,0x2d,0xcc,0x21,
+  0x5b,0x38,0xb7,0x42,0x86,0xb0,0x63,0x49,0x83,0x85,0x6d,0x31,0xc1,0x43,0xb8,0x75,
+  0xb5,0xbf,0x60,0x8,0xa4,0xf9,0x89,0xd6,0xaf,0xda,0x58,0xf,0xcb,0x36,0xd4,0xb2,
+  0xe6,0x27,0xa1,0xaf,0x2a,0x8e,0xc3,0x84,0x81,0xc5,0x30,0x15,0xaf,0x63,0x74,0x55,
+  0x11,0x8c,0xac,0x2c,0x84,0xfc,0x68,0xd8,0xa9,0x17,0xd8,0x92,0x41,0xac,0xa0,0x25,
+  0x91,0x81,0x65,0x35,0x2d,0xb0,0xa2,0xb6,0xd,0xe6,0xaf,0x6b,0x84,0xe5,0x35,0xad,
+  0xd0,0xd4,0x91,0xe6,0xdf,0xa8,0xc,0xcd,0x84,0x11,0x55,0xe5,0xb0,0x53,0x55,0x29,
+  0x94,0x17,0x15,0x30,0xd5,0xa7,0x22,0x28,0x66,0x4,0x52,0xfb,0xdb,0xf8,0x9b,0x58,
+  0x4,0x98,0xfc,0x40,0x10,0xa0,0xd0,0x29,0x3b,0xc,0x5,0x1b,0xa0,0xe6,0x6,0x96,
+  0x9e,0x98,0x93,0x91,0x5a,0x5a,0xd2,0x7f,0x50,0xa6,0x40,0x46,0x6c,0xd,0xdc,0xa6,
+  0x91,0xe1,0x2c,0x5e,0xd7,0x20,0x42,0x83,0xd4,0x7c,0x84,0xcd,0x1,0x11,0x21,0xa0,
+  0x95,0x8c,0x4a,0xed,0x4d,0xd0,0xb4,0xfc,0x55,0x91,0x37,0x20,0xc7,0xcc,0xbd,0xa6,
+  0xc3,0x3,0xbf,0xf8,0x11,0xdf,0x8b,0x5c,0xa1,0x40,0xbf,0xc6,0xf7,0x50,0xf7,0x4e,
+  0x6a,0x2,0xba,0x95,0xb,0x90,0xc3,0xfe,0xe7,0x8,0x80,0xee,0x18,0x94,0x26,0xa,
+  0x1e,0x3f,0xe0,0x9a,0x2b,0xaf,0x79,0xe7,0xbf,0x12,0x0,0x7e,0x75,0xf7,0xaf,0x46,
+  0xa7,0x52,0xa9,0x39,0x54,0xee,0x9b,0x97,0x9f,0x7,0xb1,0x68,0xcc,0x6d,0xc0,0xc9,
+  0xe,0x27,0x2f,0x0,0xf4,0x34,0x9,0xa8,0x33,0xea,0xef,0xd7,0xf2,0xfe,0xbf,0x75,
+  0xa,0x7e,0xe4,0x83,0x7e,0xec,0x2b,0x6e,0xfa,0x5,0xbc,0xf1,0xee,0x5c,0xe7,0xfa,
+  0xc3,0x45,0x43,0x20,0x34,0xf0,0x10,0x48,0xdb,0x61,0x21,0xfc,0x7c,0xe,0x9c,0xc0,
+  0x8,0x0,0x76,0xc4,0xa5,0xfe,0xd4,0xbe,0x6b,0xf8,0xc0,0x12,0xd4,0x72,0xe4,0xd3,
+  0x10,0x4e,0x3f,0x72,0xfe,0x9,0x37,0x7e,0xc4,0xb1,0xf7,0x5,0xd8,0x88,0x50,0x9f,
+  0xa,0xe7,0x29,0x9a,0x4f,0x42,0x6f,0x98,0x29,0x7c,0xa4,0xc5,0x31,0x4,0x83,0x90,
+  0xd4,0xfe,0x64,0x16,0x90,0x77,0x7c,0x43,0x7d,0x33,0x2c,0x5d,0x57,0x7,0xeb,0xeb,
+  0x1a,0x79,0x52,0x15,0x23,0x9d,0x9f,0x3a,0xac,0x4,0xf6,0x1a,0x55,0x9,0xd3,0x47,
+  0x54,0xb0,0x96,0xd7,0x9b,0x7c,0x90,0x56,0xa6,0x95,0x8e,0xe8,0x91,0x9f,0x9f,0xcf,
+  0xcf,0x69,0xe1,0x4e,0x7a,0xd0,0x7d,0xd0,0x7,0x87,0xa1,0x50,0x80,0x68,0xf1,0x4c,
+  0xbc,0x67,0xfc,0xa0,0x75,0xf4,0x12,0x89,0x4,0x3f,0xe8,0x35,0x35,0xc8,0x4c,0xdf,
+  0xd4,0xdc,0x1,0x73,0x97,0xd5,0xc1,0x7b,0x2b,0x6b,0x11,0x18,0xd0,0xdc,0x40,0x6,
+  0x41,0xfe,0x81,0xe1,0x8,0x4,0x63,0x86,0x54,0x40,0x59,0x51,0xa1,0xeb,0xf8,0x93,
+  0xa6,0x12,0x1,0x1,0x31,0xa4,0x8c,0xdc,0x42,0x24,0x2a,0x58,0x14,0x8,0x87,0xa1,
+  0x8c,0x6c,0xca,0x7a,0x2,0x65,0xa,0x8,0x73,0x80,0x93,0x9,0xb8,0x61,0x47,0x86,
+  0x41,0x0,0x98,0x21,0x59,0xb0,0xb1,0xae,0x1d,0xd6,0xd5,0x34,0x8b,0xa8,0x80,0x74,
+  0x8,0x92,0x49,0x60,0xe3,0x6f,0x69,0xe3,0x77,0x29,0xec,0x58,0xc,0x6d,0xeb,0xe7,
+  0x7a,0xbe,0xeb,0x55,0x17,0x9e,0x3,0x17,0x9d,0x7d,0xaa,0x67,0xc9,0xb0,0x9c,0xce,
+  0x3f,0xdd,0x47,0x90,0x9,0xce,0xd,0xe8,0xc,0x0,0xb4,0xda,0xff,0x60,0xda,0xef,
+  0xdb,0xa7,0xf7,0xa5,0xd2,0xe2,0xb7,0xc7,0xcf,0xea,0x88,0xc6,0xa2,0xa7,0x7c,0xff,
+  0x9a,0xef,0xbf,0xf2,0x5f,0x9,0x0,0x34,0x7e,0xfa,0xf3,0x9f,0x8e,0x6e,0x6f,0x6b,
+  0x7f,0x33,0x1e,0x8f,0x8f,0x28,0x29,0x2d,0x41,0x2d,0x59,0xcc,0x13,0xd0,0x9f,0xff,
+  0xdf,0x59,0x24,0xa0,0xc7,0x0,0xa0,0xf9,0x12,0x82,0x68,0x7f,0x56,0xa6,0x20,0x1e,
+  0x7b,0xc,0xed,0xfe,0x3b,0x1e,0xd0,0x56,0x8a,0xe,0xe7,0x43,0xe9,0xf8,0xe3,0xa1,
+  0x31,0x11,0x95,0xda,0x5f,0xc5,0xfb,0x85,0x16,0x73,0x84,0x1b,0x5,0x69,0xe4,0x90,
+  0x12,0x14,0xb0,0x98,0x8,0x5,0xb2,0xdd,0x1f,0x65,0xed,0xaf,0x68,0x7f,0x28,0x6c,
+  0x48,0xca,0xaf,0x1c,0xa0,0x32,0x6c,0x7,0x72,0x22,0xdb,0xa4,0xb5,0x52,0x10,0x61,
+  0x10,0x48,0xb3,0x16,0x23,0x10,0x88,0x1a,0x64,0xf3,0xdb,0x68,0xdb,0x37,0xc1,0x57,
+  0x6b,0x6b,0xa1,0xa6,0x91,0x96,0xa,0xb3,0x61,0x34,0x6a,0xf7,0x83,0xc6,0xf,0x80,
+  0x7d,0xc6,0xc,0x80,0xe1,0xe5,0x5,0x8e,0xd0,0x93,0x80,0x17,0x15,0x15,0xf1,0x32,
+  0xe7,0xf4,0x28,0x28,0x28,0xe0,0x63,0xf4,0xdd,0xbb,0x3b,0xfc,0xbd,0x0,0x15,0x28,
+  0xb4,0xb6,0xb6,0x42,0x4b,0x4b,0xb,0x34,0x35,0x35,0xf1,0xfa,0x7a,0xa,0x10,0xc8,
+  0x77,0x40,0x6c,0xe0,0xdd,0x65,0x35,0x30,0x67,0x69,0x1d,0xd4,0xa0,0x99,0x40,0xe7,
+  0x1b,0x5a,0x89,0x4c,0x64,0x50,0x39,0x94,0x97,0x14,0xe2,0x7b,0x10,0x8,0x64,0xb4,
+  0xc4,0x92,0xc,0xc0,0x42,0x0,0x30,0x22,0xe4,0x2c,0x8d,0xb1,0x8f,0xc5,0x34,0x84,
+  0x83,0x50,0x9c,0x3e,0x24,0x73,0x5,0x84,0xb0,0x88,0x4c,0x22,0x17,0x4,0x98,0x5,
+  0xa4,0xc5,0x6f,0x97,0x4e,0xa5,0x61,0xc5,0xfa,0x26,0xc1,0x2,0x88,0x2d,0x29,0x16,
+  0x40,0x42,0x88,0xbf,0x69,0x14,0x81,0xc1,0xdc,0xf0,0x36,0x58,0xad,0xab,0x41,0xd9,
+  0x1a,0x51,0x4,0xe7,0x47,0xee,0xfa,0x39,0x4c,0x9f,0xba,0x4b,0xe7,0x75,0x0,0x1,
+  0xb9,0x0,0x8e,0xa6,0xee,0x61,0x32,0x50,0x2e,0xda,0xaf,0x28,0x3f,0xb3,0x80,0xb4,
+  0x58,0xba,0xbc,0xb9,0xa5,0x19,0x50,0x66,0x3a,0xe2,0xb1,0xf8,0x71,0xb7,0xfc,0xfc,
+  0x96,0xad,0xba,0x7a,0xd1,0x36,0x89,0x2,0xdc,0x7a,0xdb,0xad,0xc3,0x5a,0xdb,0x5a,
+  0x5f,0x43,0xad,0x33,0xa1,0xb4,0xa4,0x14,0x8a,0x8b,0x8b,0x21,0x9e,0x17,0x77,0x85,
+  0xb4,0x8b,0x62,0x20,0x3d,0xb,0x30,0x88,0xf2,0xfb,0x81,0x20,0x2b,0xe6,0x1f,0x90,
+  0x3,0xa0,0x58,0x8,0x1d,0x5b,0xb2,0x7c,0x15,0x52,0xff,0x1b,0xb8,0xc4,0xd7,0x90,
+  0x5e,0xff,0x1,0x13,0x8e,0x86,0x9a,0x64,0x29,0xdb,0xac,0x22,0xd3,0x2f,0x22,0xb,
+  0x7c,0xa2,0xe,0xf5,0xb7,0x51,0xd0,0xb,0xb,0xe2,0x30,0x74,0x60,0x11,0x33,0x83,
+  0x50,0x54,0x0,0x80,0x21,0xf3,0x2,0x42,0xbc,0x6f,0x48,0x9b,0x1f,0x64,0x77,0x22,
+  0xaa,0xfd,0xb7,0x58,0x7b,0x51,0x99,0xab,0x81,0x93,0xd4,0xb0,0x52,0x10,0x22,0xa1,
+  0x47,0xad,0xa5,0x34,0x3f,0xf9,0x2,0x5a,0x5a,0xdb,0x61,0xe9,0x86,0x3a,0xd8,0x50,
+  0xd7,0xc4,0xf6,0xff,0xce,0x78,0x9e,0x23,0x26,0xd,0x86,0xfd,0xc7,0x56,0x41,0x51,
+  0x3c,0xec,0x8,0x7d,0x69,0x69,0x29,0x54,0x54,0x54,0xf0,0x96,0x34,0x7d,0xd6,0x4d,
+  0xd6,0xda,0x8a,0x75,0x26,0xf8,0xba,0xf0,0xe7,0x1a,0x34,0x51,0x49,0x3b,0x35,0x34,
+  0x34,0x40,0x7d,0x7d,0x3d,0x34,0x37,0x37,0xf3,0xe4,0x66,0x13,0xaa,0x39,0x1,0xaf,
+  0x7d,0xb9,0x9,0xde,0x58,0x5c,0xd,0x1b,0x70,0x3f,0x82,0xbf,0xcf,0x4e,0x55,0x65,
+  0x30,0x72,0x10,0x2d,0xbb,0x1e,0x13,0xce,0x3f,0xf6,0x9b,0x44,0x19,0x4,0x0,0x1,
+  0xc0,0x42,0x0,0xb0,0x38,0x75,0x3a,0x26,0x23,0x8,0x62,0xfd,0x7,0xaa,0x3f,0xb0,
+  0x65,0x7d,0x80,0xd3,0x56,0x9c,0x35,0x3b,0xa,0x52,0xda,0x64,0x7f,0x0,0xbd,0x4e,
+  0x26,0x52,0x75,0x5d,0x1b,0xd4,0x36,0xb4,0xb1,0xed,0x6f,0x98,0x22,0x4b,0xd0,0x60,
+  0x33,0x20,0xc5,0x26,0x55,0x71,0x24,0x9,0x2d,0x5f,0xbd,0x28,0xd6,0x31,0x94,0x20,
+  0x30,0x6e,0xd4,0x8,0xf8,0xf3,0x7d,0xb7,0x71,0x4f,0x81,0x9c,0x75,0x0,0x24,0x9c,
+  0xb6,0x99,0x95,0x3,0xe0,0xc9,0xe6,0xdb,0x42,0x0,0x50,0xa0,0x42,0x80,0xda,0xd6,
+  0xd2,0xc6,0x0,0x9b,0x48,0x26,0x5a,0xf1,0x3e,0x1e,0xfd,0x93,0x1f,0xfd,0x64,0xab,
+  0x51,0x7f,0x67,0x6e,0x6c,0xed,0x13,0xa8,0x71,0xfb,0x9d,0xb7,0xf,0x46,0xd,0xf2,
+  0x5a,0x34,0x1c,0x9d,0x54,0x5c,0x52,0xc,0xa5,0x65,0xa5,0x80,0x8,0xb7,0xd9,0x0,
+  0xd0,0x99,0xed,0xdf,0x2d,0x0,0x90,0x7f,0x93,0xc1,0x9b,0x70,0xf1,0xf7,0x7f,0xa,
+  0x1f,0x7e,0xf6,0xb9,0xf8,0x41,0xf0,0x3d,0xc5,0x83,0xa7,0x41,0x73,0x6c,0x17,0xd6,
+  0xfa,0x46,0x38,0xe6,0x24,0xfa,0xb0,0xdd,0x2f,0x13,0x79,0x40,0xe6,0x1,0xc,0xac,
+  0x28,0x42,0xad,0x9b,0xc7,0xa0,0x40,0xd4,0x1f,0x38,0xe1,0x47,0x78,0xfd,0x21,0xac,
+  0xb1,0x8c,0x88,0x21,0x43,0x76,0xf4,0x90,0x9a,0x3e,0x8d,0xda,0x92,0x40,0x0,0xed,
+  0xd5,0x90,0xd4,0xfc,0x61,0x5b,0xf8,0x2,0xd6,0xd7,0x36,0xc2,0x4a,0xb4,0xf3,0x53,
+  0xa8,0x7d,0xc7,0xe,0x28,0x80,0x93,0x76,0x1d,0xa,0x7b,0x8e,0xae,0x84,0x82,0xa8,
+  0x10,0x7c,0x2,0xd1,0x81,0x3,0x7,0x42,0x65,0x65,0x25,0x6b,0xfa,0x1e,0xdd,0x74,
+  0x4f,0xb5,0xe0,0xe6,0xf,0xfa,0xc,0x62,0x6,0x35,0x35,0x35,0xfc,0x20,0x60,0xa0,
+  0xcf,0x26,0x67,0x21,0x81,0xc0,0xcb,0x8b,0x36,0x41,0x4d,0x4b,0x12,0xa,0xd1,0xfc,
+  0x1b,0x3b,0xb4,0x12,0xaa,0xca,0x8a,0x85,0x43,0xd0,0x10,0xfe,0x14,0x2b,0x84,0x42,
+  0x1f,0x11,0x0,0x60,0x87,0xe3,0xc,0x8,0xcc,0x12,0xc,0x11,0x1a,0xb1,0x90,0x39,
+  0xd8,0xaa,0x8f,0x9e,0xaa,0x1f,0xc8,0xb8,0x3e,0x1,0x3b,0x93,0xe1,0xbc,0x1,0x72,
+  0xd8,0xae,0xd9,0xd4,0x28,0x4c,0x83,0x8c,0x0,0x6,0xa4,0x2d,0xd2,0x2c,0x48,0x33,
+  0x8,0x94,0x59,0xd5,0xd0,0xb0,0xe2,0xdf,0xec,0x73,0x51,0x89,0x42,0xe7,0x9f,0x7e,
+  0x12,0x5c,0xfb,0xbd,0xf3,0x3a,0x2d,0xb,0xf6,0x57,0x3,0xea,0x0,0xe0,0x9,0x5,
+  0x6e,0x6,0x0,0xa8,0x7,0x99,0x5b,0x2d,0xad,0x2d,0xd0,0xdc,0xd8,0x4c,0xfb,0xf5,
+  0x79,0x5,0x79,0x47,0xfc,0xe8,0x87,0x3f,0xda,0x26,0xe9,0xc0,0xdb,0x34,0x15,0xf8,
+  0xce,0x5f,0xdf,0x59,0xd1,0xd2,0xd4,0xf2,0x32,0xa,0xf6,0x5e,0xc5,0xa5,0xc5,0x50,
+  0x56,0x5a,0xc6,0x1a,0xac,0xb7,0x0,0xa0,0x2b,0xea,0xef,0x7c,0x96,0x16,0x41,0xf8,
+  0xcb,0xb3,0x2f,0xc0,0xed,0xf7,0xb,0xea,0xcf,0xef,0xcb,0x2b,0x87,0xbc,0xe1,0x47,
+  0x40,0x5b,0x1a,0xff,0x2e,0x1a,0x93,0xb6,0x7f,0xc4,0x71,0xfa,0x31,0x10,0x44,0xc4,
+  0xf3,0x68,0x3c,0xa,0x3,0x91,0x8e,0x47,0xf9,0x7d,0x61,0x29,0xf4,0x6e,0xf8,0x8f,
+  0x7d,0xd,0x21,0x11,0xea,0x13,0xd9,0x79,0x16,0x7b,0xfa,0x89,0xee,0x1b,0x99,0x24,
+  0x6b,0x7f,0x30,0x9,0x4,0x84,0xfd,0x1f,0xc1,0xd7,0x68,0x11,0x91,0xe5,0x1b,0x6a,
+  0xa1,0x9,0xb5,0x7f,0x59,0x7e,0x4,0x4e,0x9a,0x36,0x4,0xb5,0xfe,0x10,0xd6,0xf8,
+  0x74,0x7d,0xa4,0xe5,0x87,0xc,0x19,0xc2,0x1a,0x5f,0x2d,0x63,0xbe,0x3d,0xc,0xf2,
+  0x13,0x10,0x8,0x6c,0xdc,0xb8,0x91,0x69,0x2c,0x5d,0xd7,0xfa,0xc6,0xe,0xf8,0xc7,
+  0xbc,0xb5,0xf0,0xef,0x2f,0xab,0x39,0x3a,0x30,0xa8,0xa2,0x4,0x46,0xf,0xa9,0xe4,
+  0xdf,0x2b,0xc3,0x39,0x2,0x51,0x36,0x1,0xec,0x48,0x5c,0x6c,0x25,0x8,0xb0,0x93,
+  0x50,0x66,0x18,0x82,0x6c,0x22,0x62,0xab,0x6c,0x41,0x5b,0x80,0x80,0xa1,0x4c,0x81,
+  0x8c,0x60,0x5,0xeb,0x6b,0x5b,0x20,0x41,0x8b,0x26,0xd2,0x73,0x19,0x12,0x64,0x73,
+  0x0,0x85,0x9f,0xa3,0x7,0x8,0xb6,0xf1,0xe6,0xcf,0x20,0x59,0xbb,0x50,0x5e,0xb1,
+  0xcd,0x73,0xef,0xf7,0x77,0xfe,0x14,0x76,0x9d,0x3c,0x21,0xab,0xe,0x20,0x2b,0xa,
+  0xe0,0xb3,0xfd,0x3d,0xf6,0x7e,0xe,0x0,0xe8,0xca,0xf3,0xcf,0xb5,0x11,0x8,0x54,
+  0xa4,0xf5,0x9b,0x9a,0x9b,0xc8,0x9c,0xd9,0x58,0x58,0x50,0x78,0xc4,0x8d,0x37,0xdc,
+  0xb8,0x60,0x5b,0xdd,0xb7,0x6d,0x3e,0x7b,0xee,0xbe,0xe7,0xee,0x7c,0xa4,0x8d,0x4f,
+  0xe3,0x4,0x39,0x96,0xb4,0x58,0x59,0x19,0x82,0x0,0xd2,0xc3,0xac,0x90,0x60,0xf,
+  0x1,0x80,0x93,0x8c,0xc2,0x5e,0xaf,0x7f,0x60,0xe,0x80,0xd6,0x7,0x60,0xed,0xfa,
+  0x4d,0x70,0xe6,0x65,0xd7,0x43,0x53,0x8b,0x48,0xb8,0x22,0xcd,0x5e,0xb5,0xf3,0x31,
+  0x50,0xdd,0x51,0x84,0x86,0x62,0xcc,0xb5,0xfd,0x25,0xdd,0xe7,0xe4,0x1f,0xf2,0x3,
+  0xb0,0x3f,0x20,0x82,0x74,0x3b,0xf,0x2a,0x4b,0xf3,0x78,0x22,0x1b,0x11,0x51,0x6,
+  0x1c,0xe6,0x8,0x81,0x5b,0xe7,0x6f,0xc8,0xc2,0x7d,0x91,0xcd,0x47,0x5e,0x7d,0xd2,
+  0xfc,0x9,0x6,0x0,0x30,0x5,0x10,0x84,0xf0,0x18,0x51,0xff,0x5a,0xb4,0xf1,0xd7,
+  0x56,0xd7,0x43,0x1a,0x27,0xee,0x1e,0x23,0x4a,0xe1,0xec,0xbd,0x46,0xc2,0x98,0x1,
+  0x85,0x7c,0x6d,0x24,0xf8,0xc3,0x86,0xd,0x63,0xc1,0x67,0xa7,0xa5,0x36,0xf4,0xe7,
+  0xaa,0xb8,0x67,0x5b,0xe,0x55,0x49,0x47,0x83,0x26,0x74,0x75,0x75,0x35,0xac,0x5f,
+  0xbf,0x9e,0x7d,0x5,0x74,0x2d,0x1f,0xae,0xac,0x87,0xc7,0xe6,0xae,0x86,0x95,0xf5,
+  0x1d,0x50,0x80,0xbf,0xd9,0xa8,0x41,0x95,0x50,0x52,0x54,0xc0,0x20,0x60,0xa0,0xf0,
+  0x5b,0xec,0x10,0xcc,0x13,0xfe,0x80,0x48,0x9c,0x1f,0x36,0x27,0x1c,0x89,0x5e,0x8a,
+  0xc2,0xfc,0xcf,0xc8,0x2e,0x43,0xa6,0xa4,0xf9,0x64,0xa,0x8,0xe1,0xa7,0xdf,0xae,
+  0xa1,0x39,0x9,0x75,0x8d,0x78,0xbe,0x74,0x9a,0x99,0x81,0x2a,0x16,0x52,0x3e,0x1,
+  0x1b,0x7f,0xe7,0x2,0x23,0x9,0xed,0x2b,0x5e,0xc1,0x8b,0x6c,0x6,0xb5,0x3a,0xd3,
+  0x94,0x9,0xe3,0xe0,0xff,0xee,0xfe,0x39,0x44,0x89,0x91,0x68,0xd4,0xdf,0x11,0xe2,
+  0x1c,0x49,0x3f,0x3d,0x5,0x80,0x20,0xcf,0x3f,0x69,0x7e,0x12,0xfe,0xc6,0xa6,0x46,
+  0x72,0x30,0x2e,0x2a,0x2a,0x2a,0x3a,0xfa,0xfa,0xef,0x5f,0xbf,0x7a,0x5b,0xde,0xbb,
+  0x3e,0x51,0x1f,0xf,0x3c,0xf4,0x40,0x18,0x6d,0xc8,0x7,0x51,0x2e,0x2e,0x26,0xa7,
+  0x55,0x69,0x39,0xda,0xae,0x79,0xf9,0xde,0xbe,0x0,0x3d,0x5,0x80,0x80,0xb0,0x5f,
+  0x2e,0x53,0x40,0xfd,0xcd,0xf,0x6f,0xbf,0x7,0x5e,0x9c,0xfd,0x96,0x73,0x5d,0xc5,
+  0x83,0xa7,0x40,0x4b,0x6c,0x12,0x6b,0x21,0x72,0x50,0x29,0x4d,0xef,0x68,0x7f,0x2,
+  0x80,0x68,0xc4,0x1,0x80,0xd2,0xe2,0x3c,0xa4,0xb7,0x71,0xe7,0x7d,0x4,0x2,0x6,
+  0x47,0x39,0xb4,0xb6,0xdf,0x5c,0x98,0x63,0x89,0x98,0x3e,0x9,0x3a,0x6a,0x7c,0xd2,
+  0x46,0x46,0x86,0xea,0xdb,0x85,0xf6,0x27,0x5b,0x75,0x3,0x52,0xfe,0x9a,0x86,0x66,
+  0x28,0x40,0x53,0xe1,0x8c,0x3d,0x86,0xc1,0xf1,0x53,0x87,0xf2,0x9f,0x93,0x7,0x7f,
+  0xa7,0x9d,0x76,0x82,0x41,0x83,0x6,0x79,0x9c,0x79,0x6a,0xb2,0x72,0x1b,0x32,0xf0,
+  0x36,0x33,0xd9,0x56,0xa3,0x33,0xbf,0x1,0x4d,0xee,0x75,0xeb,0xd6,0x31,0x10,0x90,
+  0x7d,0x4b,0x61,0xc4,0xc7,0x3f,0x5c,0x8d,0x66,0x41,0x35,0xfb,0x44,0x46,0x20,0x8,
+  0xc,0x28,0x2f,0xe1,0xa4,0x29,0xb6,0xff,0x49,0xe8,0x23,0x82,0x5,0x18,0xd1,0x3c,
+  0xe1,0x20,0x44,0x26,0x60,0x82,0x9b,0x3e,0xac,0x32,0x4,0x41,0x85,0x7,0x33,0x32,
+  0x5f,0xc2,0x24,0xbf,0x44,0xa,0xaa,0x1b,0xda,0xc1,0x4a,0xa5,0x58,0xeb,0x73,0xde,
+  0x4,0x81,0x45,0xda,0x94,0x2c,0x40,0x98,0x5c,0x65,0x50,0xd,0x8d,0x54,0x42,0xac,
+  0x85,0x6,0x6f,0xb8,0xfc,0x2,0x38,0xe3,0x84,0xa3,0xbd,0x9a,0xbf,0x3b,0x59,0x7f,
+  0xa6,0xb5,0xd9,0xc,0x20,0x99,0x4c,0xb2,0xf0,0x93,0xf,0x25,0x63,0x66,0xde,0x29,
+  0x29,0x29,0x39,0xf1,0xda,0xab,0xae,0xdd,0xe6,0x2d,0xc2,0xfb,0x94,0x3f,0xde,0x7e,
+  0xc7,0xed,0x3f,0xc6,0x2f,0x7f,0x73,0x61,0x51,0x21,0x94,0x97,0x95,0xb3,0x2d,0x2b,
+  0xd7,0xfa,0xeb,0x11,0x0,0xa8,0xbf,0xe9,0x2c,0xc,0xe8,0xe9,0x2e,0x84,0x7f,0xfb,
+  0xe1,0xfc,0x85,0x68,0xfb,0xff,0xc4,0x5d,0x5a,0x2b,0x5c,0x0,0xc5,0x63,0x8f,0x83,
+  0x96,0x54,0x98,0x35,0x50,0x8,0x19,0x0,0x39,0xa4,0x90,0xaf,0x8a,0x64,0x1f,0xe9,
+  0x3,0x20,0x61,0x37,0xa2,0x2,0x0,0xca,0x4b,0xf2,0x99,0xbd,0xb0,0x5f,0x20,0x2c,
+  0x22,0x1b,0x20,0x93,0x9c,0x80,0xab,0xfc,0xdc,0x30,0x1f,0x7b,0xf6,0x33,0x9,0x49,
+  0xfd,0x13,0xc2,0xf9,0x87,0xfb,0x56,0x3a,0x5,0x1b,0xeb,0x1a,0x91,0xf2,0xb7,0xc1,
+  0xc8,0xb2,0x38,0x5c,0x72,0xc0,0x68,0x98,0x34,0xa4,0x84,0x2f,0x89,0x84,0x7e,0xd4,
+  0xa8,0x51,0xc,0x2,0x6a,0x90,0x30,0xd1,0x43,0xae,0x67,0x27,0xbe,0x17,0x67,0x34,
+  0xba,0xce,0x3e,0x3f,0x43,0xe8,0xcd,0xe1,0x8f,0x12,0x74,0xf5,0x5e,0x8a,0x1c,0xac,
+  0x58,0xb1,0x82,0x9d,0x86,0x34,0x5e,0x5b,0x5c,0xd,0x7f,0x7c,0x7f,0xd,0xb4,0xa6,
+  0x2c,0x18,0x50,0x56,0x2,0x83,0x2b,0xcb,0x20,0x14,0x8b,0x73,0x74,0x80,0x59,0x0,
+  0x31,0x0,0x4,0x0,0xc5,0x4,0x18,0x20,0x28,0x94,0x68,0xa9,0xa6,0x85,0x42,0x43,
+  0x83,0x74,0x2,0x8a,0xf4,0x60,0x8a,0xa,0x64,0xb8,0x64,0x38,0xdd,0x21,0x1c,0x7f,
+  0x2,0x4,0x44,0xa4,0x40,0x98,0x3,0x69,0x6,0x5c,0x3,0x7f,0xef,0x70,0xdd,0x5c,
+  0x24,0x1,0xcb,0xd5,0x55,0xc2,0xa0,0xaa,0x4a,0x78,0xfc,0xbe,0xdb,0xa1,0xa2,0xac,
+  0x34,0xab,0x39,0x48,0x2e,0xea,0xcf,0xc7,0x4d,0x6a,0x95,0x96,0xe9,0x91,0xf,0x80,
+  0x1c,0x7e,0xc9,0x44,0x12,0x1a,0x1b,0x1b,0xf9,0xb7,0xc1,0xd7,0x9e,0x29,0x2d,0x2b,
+  0x3d,0xf7,0xca,0xcb,0xae,0xec,0xd8,0xe6,0x2,0x8,0xdb,0xc1,0xba,0x0,0xbf,0xbc,
+  0xf3,0x97,0xe7,0xa7,0xcd,0xf4,0x23,0x68,0xfb,0x84,0xcb,0xcb,0xcb,0x81,0xc0,0xc0,
+  0x29,0x14,0xa,0x8,0x3,0x6,0xd9,0xfe,0x7e,0x0,0xd0,0xd3,0x88,0x83,0x4a,0x81,
+  0x89,0xfd,0x7d,0xf7,0xba,0x1f,0xc1,0x67,0x8b,0x16,0x3b,0xd7,0x31,0x60,0xec,0x21,
+  0x50,0x9b,0x19,0x24,0xe9,0x7c,0x4c,0x68,0xfa,0xb0,0xf0,0x58,0xab,0x90,0x1f,0xd7,
+  0x0,0x10,0x20,0xe0,0x36,0x12,0x8b,0x22,0x8d,0x45,0xd6,0x12,0xc7,0xf7,0x33,0x50,
+  0x88,0x95,0x7d,0x8c,0xb0,0x4c,0xf7,0x35,0x54,0xab,0x8c,0x8c,0xb4,0xf9,0xf1,0x91,
+  0xee,0x10,0x9a,0x9f,0x18,0x0,0x6a,0xfd,0x4c,0x32,0xc1,0xc2,0x4f,0xd1,0x87,0x3d,
+  0x77,0x2a,0x81,0x4b,0xf,0x1c,0xc3,0xd9,0x7a,0xf1,0x78,0x1c,0x46,0x8f,0x1e,0xd,
+  0x55,0x55,0x55,0x8e,0x46,0xa7,0x9,0xd4,0xc1,0xf1,0xf8,0xb4,0xf3,0x1d,0xd5,0x43,
+  0x67,0x3a,0x7c,0x53,0xb7,0x12,0x8,0xe8,0x6d,0xc1,0xbb,0xf3,0x3e,0xb5,0x4f,0xd7,
+  0x4e,0x4c,0x60,0xd5,0xaa,0x55,0xbc,0xbf,0x78,0x53,0xb,0x3c,0xf4,0xce,0x4a,0x58,
+  0xd5,0x90,0x44,0x16,0x55,0x4,0x43,0x1c,0x10,0x40,0xe6,0x15,0x73,0x41,0xc0,0x96,
+  0x66,0x1,0x25,0x11,0x81,0xcc,0x1a,0x34,0x6c,0x4b,0x3a,0x1,0x2d,0x4e,0x1b,0xa6,
+  0xde,0x0,0xb6,0xd4,0xf2,0x8d,0x2d,0x49,0xe8,0x68,0x4f,0x70,0xf8,0x4f,0xd8,0xff,
+  0x19,0xd1,0x59,0x38,0x2d,0x0,0x80,0x80,0xc1,0x30,0x13,0x50,0x6c,0xb4,0x43,0xf3,
+  0xf2,0x97,0xf1,0x33,0x12,0xf2,0x3e,0x19,0x70,0xd6,0xc9,0xc7,0xc2,0xb5,0x17,0x9f,
+  0xeb,0x6d,0x12,0xea,0x8f,0x2,0xe8,0x2,0xdf,0xd,0x6,0x10,0x94,0x7,0xd0,0x91,
+  0xe8,0x80,0x86,0xfa,0x6,0x68,0x43,0xc0,0x47,0x5,0x71,0x3f,0x2a,0xbe,0xab,0x67,
+  0x7d,0x6f,0x56,0x9f,0x2d,0x11,0xd6,0xe7,0x0,0x40,0xe3,0xae,0xdf,0xdc,0x75,0x54,
+  0x3a,0x99,0x7e,0x16,0x35,0x5d,0x7e,0x79,0x45,0x39,0xc7,0xb2,0xd5,0xa,0x3e,0x5d,
+  0xe5,0x1,0x74,0x6a,0x12,0x4,0x98,0x2,0xf4,0x99,0xff,0x7a,0xf3,0x5d,0xb8,0xe1,
+  0x17,0x77,0x3b,0xe7,0x8f,0x14,0xa0,0xa0,0xd,0x3a,0x18,0xd2,0x76,0x4c,0xd8,0xfe,
+  0x11,0xe1,0xd4,0xb3,0x35,0xef,0x3f,0xd3,0xfc,0x88,0xa0,0xff,0x6,0x3e,0x22,0xf1,
+  0x8,0x14,0x15,0x22,0x55,0xe5,0x6a,0xbf,0x8,0x37,0xff,0x14,0xce,0x45,0x4a,0x7a,
+  0x1,0xa7,0x90,0x87,0x9c,0x7c,0x42,0xf3,0x24,0x1c,0x0,0x20,0x30,0x48,0xa1,0x30,
+  0x57,0xd7,0x37,0x22,0x55,0x4e,0xc2,0x21,0xe3,0x2a,0xe0,0x7b,0x33,0x47,0x41,0x1c,
+  0x3f,0x83,0x6c,0xfc,0x31,0x63,0xc6,0x40,0x61,0xa1,0xb0,0xfd,0x69,0x2,0xd1,0xa4,
+  0x49,0x74,0x24,0x44,0x19,0x6f,0x48,0x34,0x10,0x55,0x95,0x94,0x8e,0xef,0xc4,0x67,
+  0x2,0xf8,0xf7,0x37,0xc7,0x37,0xa0,0xff,0x8d,0x6e,0xe7,0x77,0xf5,0x37,0xfa,0x56,
+  0x1f,0x14,0x36,0x5c,0xb6,0x6c,0x19,0x3b,0x9,0x29,0x4c,0xf8,0x9b,0x37,0x57,0xc0,
+  0x92,0x9a,0x76,0x28,0x44,0xe6,0x37,0x64,0x40,0x39,0xb2,0x2e,0xa1,0xf5,0x81,0x40,
+  0x20,0x9a,0x8f,0xf7,0x82,0x9a,0xad,0x8,0x40,0xa0,0x32,0x6b,0xca,0x9c,0x10,0xd,
+  0x6,0xc4,0x3a,0x7d,0xc0,0x79,0x2,0x22,0xe4,0x47,0xc2,0xde,0xd2,0x96,0xc4,0xcf,
+  0x4e,0x4a,0xba,0x9f,0xe6,0x63,0xa0,0xfc,0x1,0x4,0x2,0xe4,0x1f,0x90,0xf7,0xa3,
+  0xa0,0x6d,0x31,0xb4,0x57,0x7f,0x22,0xda,0xaa,0xe2,0xb5,0x92,0x6f,0xe2,0xf1,0xfb,
+  0xef,0x80,0x11,0xc3,0x6,0x7b,0x5,0xd7,0x17,0x5,0x8,0xca,0x3,0xf0,0xd7,0xf6,
+  0x7,0x25,0x2,0x11,0x6b,0xeb,0x68,0xef,0x80,0xba,0x86,0x3a,0xe8,0x68,0xeb,0xa0,
+  0x39,0x7a,0x23,0xda,0xfb,0xdb,0xbc,0x7,0xa0,0x7f,0x6c,0x17,0x0,0x40,0xe3,0xde,
+  0xfb,0xef,0xdd,0xab,0xa3,0xa3,0xe3,0x9f,0xf1,0x58,0x7c,0x70,0x59,0x79,0x19,0x94,
+  0x14,0x97,0xa0,0x2c,0x46,0xbb,0xcc,0x4,0xf4,0x3,0x40,0x67,0x19,0x81,0xf4,0x48,
+  0xe3,0x44,0x38,0xff,0x9a,0x9b,0xe0,0xcb,0xa5,0xaa,0xc6,0xc2,0x80,0x1,0x3b,0x1f,
+  0xd,0xb5,0x89,0x22,0xd6,0x3a,0x4c,0xef,0x59,0xa0,0x63,0xae,0xdd,0xaf,0x9,0x3f,
+  0x31,0x0,0x62,0x2,0x11,0xa4,0xfe,0x85,0x85,0x71,0xe1,0xf9,0x97,0x76,0x3f,0x6b,
+  0x5d,0xca,0x15,0x50,0x8d,0x3a,0x32,0x94,0x8d,0x96,0x10,0x4e,0xbf,0x54,0x3b,0x6f,
+  0xc9,0x7,0x90,0x46,0xcd,0x5f,0xd7,0xd0,0xc4,0xc2,0x7f,0xec,0xa4,0x2a,0xf8,0xce,
+  0x3e,0x23,0xd8,0xde,0x1f,0x3e,0x7c,0x38,0x53,0x7e,0x65,0xeb,0xd3,0x4,0xa2,0x30,
+  0x1b,0x39,0xd6,0xc4,0xa2,0x21,0x2a,0xa1,0xc8,0xfd,0x6e,0x9c,0x59,0x29,0x59,0x87,
+  0xbb,0x36,0xa0,0x2b,0xf8,0xce,0x8d,0xce,0x21,0xfc,0xfa,0xf1,0x5c,0x9a,0xbd,0xbb,
+  0x21,0x43,0xf5,0x3e,0x3f,0x58,0xa8,0x73,0xd0,0xeb,0x14,0x2d,0xf8,0xea,0xab,0xaf,
+  0x44,0x1e,0x41,0x5b,0xa,0xee,0x79,0x6b,0x5,0x2c,0xd8,0xd8,0xc6,0x20,0x30,0x88,
+  0x98,0x40,0x34,0xce,0x9a,0x5f,0x30,0x81,0x7c,0xc1,0x2,0x18,0x8,0x84,0x49,0x66,
+  0xcb,0xe6,0x22,0xb6,0xec,0xf,0xa8,0xea,0x3,0x28,0x22,0xd0,0x91,0x48,0x21,0xad,
+  0xee,0x10,0x9a,0x3f,0xa3,0x81,0x80,0x29,0x80,0x40,0xb1,0x0,0x40,0x10,0x66,0x87,
+  0xe0,0xca,0x7f,0xe1,0xb1,0x56,0x2e,0x43,0xa6,0xf1,0xcd,0x63,0xe,0x87,0x1f,0x5e,
+  0x79,0x61,0x96,0xf,0xc0,0x1f,0xf7,0xf7,0x6f,0x59,0xd0,0x3b,0x49,0x5,0xa6,0x2d,
+  0xd1,0xfd,0xc6,0x6,0x62,0x7b,0x1d,0xa9,0x68,0x34,0x7a,0xe1,0xb5,0x57,0x5f,0xfb,
+  0x58,0x5f,0xcb,0x9c,0x98,0xfd,0xdb,0xd1,0x78,0xe8,0x77,0xf,0x8d,0x43,0x6a,0xf4,
+  0x32,0xfe,0x40,0xe3,0xc8,0xeb,0x4d,0xb9,0x2,0x1c,0x26,0xec,0xa4,0x30,0x28,0x97,
+  0x33,0x30,0x17,0x0,0xbc,0xf4,0xea,0xdb,0xf0,0xe3,0x5f,0x3d,0xe0,0x9c,0x33,0x5a,
+  0x34,0xc,0xac,0xca,0x7d,0xd1,0xd6,0x8c,0xb1,0xc6,0x61,0x0,0x8,0x45,0x9d,0x38,
+  0xbf,0xad,0xc2,0x7e,0x51,0x91,0xba,0xaa,0xec,0x7f,0x32,0x1,0x8a,0xa,0xe3,0x4e,
+  0x52,0x10,0x28,0xaf,0xbf,0x28,0x2b,0x11,0x5,0x3d,0xe4,0xe9,0x27,0xc1,0x4f,0x91,
+  0xd6,0xef,0x60,0x16,0x60,0xe1,0xa3,0xa1,0xa9,0x99,0x5,0xe1,0x94,0x69,0x3,0xe1,
+  0xec,0x3d,0x86,0xf3,0x35,0x92,0xe0,0x13,0x0,0xa8,0x41,0x4e,0x22,0x8a,0xab,0x8b,
+  0x2e,0x31,0x74,0x44,0x50,0xd5,0x90,0xfe,0x5d,0xc3,0x2e,0x3,0xd0,0xcd,0x9e,0x20,
+  0x10,0xd8,0x12,0xe7,0x60,0xb7,0x81,0x41,0x96,0xd7,0x6,0xbd,0x47,0x3f,0x3f,0x69,
+  0x43,0x62,0x2,0x1b,0x36,0x6c,0x80,0xd6,0x64,0x6,0xee,0x7b,0x7b,0x5,0x7c,0xb4,
+  0xb6,0x95,0xcd,0x81,0x8a,0xb2,0x12,0xc7,0x17,0x60,0xc4,0xb,0x78,0xdf,0x24,0x40,
+  0x60,0x93,0x20,0x4a,0xbf,0x0,0xff,0xe,0xb6,0x2c,0x1c,0x12,0x35,0x2,0xc2,0xe3,
+  0x9f,0x4c,0x64,0x18,0x0,0x84,0x90,0x8b,0x70,0x2b,0x38,0xdd,0x83,0xd2,0x4e,0x58,
+  0x90,0x80,0xd8,0x46,0x33,0xac,0x28,0xb5,0xa,0xda,0xd6,0x7d,0xc0,0xcd,0x55,0x69,
+  0x50,0xc5,0xe0,0x1f,0x7f,0xfd,0x73,0x18,0x33,0x72,0xb8,0xa7,0x41,0x87,0xbf,0x18,
+  0xc8,0xff,0xbc,0x33,0x0,0x50,0x59,0x94,0x4,0x78,0x78,0xcf,0x5b,0x91,0xe5,0x9e,
+  0x78,0xe5,0xe5,0x57,0x6e,0xd5,0xec,0xbe,0x9e,0x8c,0xed,0xa,0x0,0x68,0x3c,0xf2,
+  0x7f,0x8f,0xc,0x6e,0x6e,0x6e,0xfe,0x27,0xe5,0xa,0x50,0x3a,0x2b,0x85,0x9,0xc9,
+  0x26,0x56,0xe1,0x3b,0x4f,0x27,0x20,0x9f,0xc0,0x67,0x39,0x3,0x7d,0x5d,0x83,0x28,
+  0xc7,0xfc,0xbc,0xab,0xff,0xd7,0xd5,0xfe,0xf8,0xda,0x80,0xf1,0x47,0x9,0xed,0x8f,
+  0x1a,0x5f,0x68,0x9f,0xa8,0x4c,0xf8,0x51,0xb6,0x7f,0xd4,0xb1,0xfd,0x5,0xb,0x10,
+  0xfe,0x1,0x32,0x1,0x28,0xb,0xd0,0xe,0x9,0xbb,0x9f,0xfd,0x0,0x21,0xd9,0x93,
+  0xdf,0x4e,0xb3,0x1d,0xa,0x48,0xf9,0xe9,0x61,0x27,0xdb,0xa5,0xed,0x9f,0x80,0xe6,
+  0xe6,0x16,0x14,0xec,0x76,0x38,0x66,0x62,0x25,0x5c,0xb8,0xdf,0x48,0xbe,0xae,0xf1,
+  0xe3,0xc7,0xc3,0xe0,0xc1,0x83,0xf9,0x92,0x68,0xe2,0x90,0x7,0x9d,0x0,0x40,0x6f,
+  0x30,0x61,0xcb,0x6e,0x3e,0x6e,0xf7,0xa2,0x90,0x5c,0x3c,0x44,0xd4,0x1e,0x84,0x3,
+  0xa2,0x1e,0xfc,0x15,0xbb,0xa1,0xf9,0xfd,0xa3,0x2b,0x8d,0x4f,0x13,0x3f,0x88,0x39,
+  0x38,0x5b,0xa7,0xf5,0x98,0x97,0x15,0x38,0x75,0x17,0xf2,0xf8,0xf2,0xe5,0xcb,0xd9,
+  0x2f,0xd0,0x9e,0x32,0xe1,0x8e,0xd7,0x96,0xc3,0x17,0x35,0x9,0x64,0x7e,0x45,0x50,
+  0x8a,0xf7,0x9d,0x4d,0xb1,0x68,0x1,0x58,0x51,0xc1,0x4,0x8c,0x18,0x3e,0xa2,0xb2,
+  0xff,0xa2,0xa4,0xed,0xdc,0x3c,0xc4,0x74,0xd3,0x84,0xa9,0x7d,0x78,0x4b,0x6b,0x42,
+  0xa,0xb9,0xc8,0x3,0xb0,0xd3,0x69,0x37,0x2a,0x90,0x71,0x9d,0x81,0x36,0xde,0xf,
+  0xea,0x1d,0x90,0x5c,0xfd,0x2a,0xbe,0xb7,0xd1,0xf9,0x2e,0xa7,0x1e,0x7b,0x38,0x5c,
+  0x7f,0xe9,0x77,0x72,0x16,0xf0,0x78,0x6a,0xfe,0xad,0x0,0xea,0x2f,0x1,0x40,0x9,
+  0x3f,0x79,0xf9,0xc9,0xe1,0x97,0x4a,0xa6,0x36,0x16,0x14,0x16,0x1c,0x7d,0xe9,0x25,
+  0x97,0xf6,0xd9,0x32,0x60,0x81,0xf3,0xa0,0xaf,0x2f,0x20,0x68,0x3c,0xfa,0xe7,0x47,
+  0xf3,0xf1,0x47,0x7b,0x16,0x27,0xcb,0x51,0x94,0x2c,0x44,0x7e,0x1,0x66,0x2,0xba,
+  0xe3,0x2f,0xdc,0x49,0x22,0x10,0xf7,0xd0,0x97,0x69,0xb8,0x86,0xcb,0x2,0xe6,0xcc,
+  0xfd,0x4,0xae,0xfd,0xe9,0x9d,0xce,0x79,0x48,0xfb,0x67,0xca,0xf7,0x71,0xe2,0xcf,
+  0x82,0xfe,0xc7,0xd8,0xc9,0x67,0x28,0xed,0x1f,0x15,0x36,0xbf,0xed,0x78,0xff,0x71,
+  0x9f,0x0,0x0,0xf7,0xb,0xa,0xa2,0x5c,0xe8,0xa2,0x96,0xf0,0x62,0x4d,0x42,0xf5,
+  0xfb,0x6c,0x83,0xa2,0xe0,0x13,0x0,0xa0,0xf0,0xdb,0x69,0x8a,0x4f,0xa3,0x7d,0xda,
+  0x8a,0xc2,0xdf,0xde,0xe,0x7,0x8e,0x2e,0x85,0xcb,0xf,0x1c,0xc9,0x42,0x3b,0x61,
+  0xc2,0x4,0x8f,0xf0,0x73,0xee,0x3d,0x3e,0xdc,0x95,0x6a,0x95,0xd,0x6a,0x3b,0x4d,
+  0xfc,0xc,0xa7,0x90,0x49,0x3a,0x2,0x15,0x3,0xd0,0x80,0xc0,0xcf,0x4,0x7a,0x23,
+  0x3f,0x40,0x85,0xfd,0xfc,0x99,0x84,0x9d,0xed,0xeb,0x0,0x20,0x5a,0x91,0x19,0x5c,
+  0xb,0xa2,0xc6,0xd2,0xa5,0x4b,0x19,0x4,0x1a,0xda,0xd3,0x70,0xc7,0xeb,0x2b,0x61,
+  0x45,0x63,0xa,0xca,0x10,0x0,0x8a,0x11,0x8,0x2c,0xa6,0xff,0x79,0x0,0x31,0x32,
+  0x5,0xa,0xd8,0x2c,0xe0,0x10,0xad,0x4c,0x19,0x76,0x42,0x82,0xb2,0x23,0x50,0x2,
+  0xd9,0x44,0x6b,0x7b,0xa,0x42,0xe9,0x94,0x34,0x3,0x32,0x92,0x5,0x64,0xdc,0xa8,
+  0x0,0x3,0x43,0x92,0x19,0x0,0x99,0x2,0x85,0xc9,0xd5,0xd0,0xbe,0xfe,0x7d,0x47,
+  0x12,0x8a,0x8b,0xa,0xe1,0x2f,0xf7,0xfc,0x2,0x6,0xd,0xac,0xc,0x6c,0xf3,0x95,
+  0x8b,0x5,0xe8,0x39,0xfd,0xca,0xe6,0x27,0xe1,0xaf,0xab,0xab,0x23,0x20,0x58,0x5c,
+  0x5c,0x5c,0x7c,0xc4,0x45,0x17,0x5c,0xb4,0x4d,0x63,0xfc,0xdd,0x19,0xdb,0x25,0x0,
+  0xd0,0x78,0xe2,0xc9,0x27,0xc2,0xb5,0xb5,0xb5,0xbf,0x43,0xca,0x74,0x1,0xa5,0xbc,
+  0x52,0x28,0xcc,0x53,0x32,0x1c,0xd6,0x4c,0x81,0x90,0xf,0x10,0x7c,0xcf,0x95,0x4d,
+  0x7d,0xc5,0x4d,0xb7,0xc1,0x7,0x9f,0x2e,0x70,0xf2,0xfd,0x2b,0xc6,0x1e,0xe,0x75,
+  0xa9,0x12,0x31,0xa9,0xa2,0x32,0xb,0x4d,0x8b,0xfd,0xb3,0xe7,0x3f,0x16,0xe1,0xf8,
+  0xb4,0x8,0xff,0x9,0x66,0x40,0xce,0xc1,0x8,0x1e,0xa7,0x26,0x19,0x62,0xc9,0xaf,
+  0x30,0x2f,0x3,0xc0,0xc2,0x4f,0xda,0x3f,0x25,0x1c,0x7e,0x76,0x8a,0xb4,0x7f,0x1b,
+  0xef,0xa7,0x50,0xeb,0x13,0x15,0xdc,0x7d,0x48,0x3e,0x5c,0x77,0xc8,0x68,0x76,0xf8,
+  0x8d,0x1b,0x37,0x8e,0x63,0xfc,0x6a,0x28,0x7b,0xd1,0xf3,0x50,0xad,0xaa,0xd4,0x6a,
+  0xb5,0xb6,0xec,0x4e,0x28,0x5b,0x88,0xeb,0x0,0xa0,0xcc,0x0,0xbd,0xe4,0xb9,0xb7,
+  0x72,0x3,0x82,0x9c,0x80,0x7e,0xa6,0xa0,0x33,0x1,0x7d,0xe9,0x6e,0x4f,0x6b,0x6e,
+  0x76,0x64,0x1a,0x4e,0x1a,0x38,0xbd,0xbe,0x68,0xd1,0x22,0xce,0x20,0xdc,0xd0,0x9c,
+  0x84,0x3b,0xde,0x58,0x5,0x35,0x1d,0x36,0x32,0xbf,0x52,0x88,0xe7,0x15,0x30,0x8,
+  0x90,0x29,0x40,0x4e,0x41,0x7a,0x90,0x29,0x40,0x20,0xcd,0x80,0x2b,0x17,0x1e,0xb1,
+  0x65,0x47,0x20,0x4a,0x9,0x6e,0x6b,0x97,0x11,0x0,0xdd,0xf3,0xcf,0xc9,0x41,0x26,
+  0x27,0x5e,0x41,0xda,0xe4,0x8,0xc,0x3,0x40,0x9a,0x58,0x40,0x2,0x12,0xab,0x5f,
+  0xc3,0xf7,0x36,0x3b,0x1d,0x52,0x2f,0x38,0xe3,0x64,0xb8,0xe8,0xac,0x6f,0x66,0x65,
+  0x6,0xea,0xe,0x40,0x3d,0x22,0x90,0xd5,0x7,0x0,0xc1,0x80,0x2a,0xfa,0x48,0xf8,
+  0x9b,0x9a,0x9a,0xde,0x2b,0x2f,0x2f,0x3f,0xee,0xbc,0x73,0xce,0xeb,0xd3,0x65,0xc0,
+  0x73,0x8d,0xed,0x16,0x0,0x68,0x3c,0xf9,0xb7,0x27,0xa7,0xa2,0xdd,0x34,0x9f,0xc2,
+  0x83,0x6c,0x6,0x48,0x0,0x88,0x84,0x22,0x8e,0x76,0xf7,0xb4,0x12,0xf,0x85,0x3c,
+  0x1a,0x5f,0xb7,0x8d,0x17,0x2d,0x59,0xe,0x17,0x5c,0xf7,0x13,0x77,0x22,0xc7,0x2b,
+  0x21,0x3c,0xe8,0x40,0xc8,0x40,0x54,0x38,0xff,0x38,0xb9,0x27,0x2e,0x0,0x20,0xe2,
+  0x8f,0xf9,0xb,0xfa,0x6f,0xab,0x7d,0x7c,0x8d,0xda,0x7e,0xe7,0xe5,0x45,0x9c,0xe5,
+  0xbd,0x98,0xa2,0xcb,0x92,0x5e,0xb2,0xfb,0x49,0xf8,0x49,0xfb,0xa3,0xe4,0xe3,0xbc,
+  0x43,0xe1,0x6f,0x69,0x81,0xaa,0x7c,0x80,0x9f,0x1c,0x3e,0x6,0x2a,0xb,0xa3,0x2c,
+  0xf8,0x44,0xfd,0x75,0xd,0xed,0xf,0x19,0x65,0x54,0x4f,0x3c,0x4d,0xb3,0xa8,0x5b,
+  0xc6,0x2c,0xc0,0xd7,0x58,0x35,0x8b,0x5,0xa8,0x25,0xd2,0xb7,0xc0,0xf,0xa0,0x7e,
+  0x2f,0x9d,0x41,0x4,0x99,0x8,0x8e,0xb6,0xd7,0xd6,0x1d,0x70,0x84,0xdf,0x59,0x66,
+  0x5b,0x2d,0x22,0x6a,0xf1,0xf5,0x52,0xe1,0x12,0x7d,0x26,0x69,0xcb,0x79,0xf3,0xe6,
+  0x71,0x94,0x60,0xd1,0xa6,0x36,0xb8,0xeb,0xad,0xb5,0x90,0x9,0x45,0x19,0x4,0x88,
+  0xfa,0x3,0x9,0x7f,0xac,0x10,0x81,0x40,0x2,0x0,0xb1,0x35,0x4a,0x23,0x6,0x91,
+  0x1b,0x60,0x4b,0x16,0x90,0xa4,0x96,0x67,0x1d,0x42,0xe0,0xb9,0x24,0x98,0x81,0x20,
+  0xed,0x64,0x7,0x1a,0xd2,0x14,0xb0,0xf9,0x1e,0xa5,0x38,0x1c,0x4b,0x60,0x9d,0xd7,
+  0xbe,0x4,0x52,0xb5,0xf3,0x9c,0x65,0xd7,0x6,0xf,0xa8,0xe0,0xbc,0x80,0xfc,0xfc,
+  0x78,0x70,0x63,0xcf,0x1c,0xd9,0x80,0xb2,0xab,0xaf,0x3,0x0,0x94,0xe8,0x83,0xe3,
+  0xd2,0x73,0xce,0x3a,0xe7,0xa1,0xbe,0x96,0xa5,0x5c,0x63,0xbb,0x6,0x80,0x7f,0xbe,
+  0xf0,0xcf,0x9b,0x71,0xf3,0x63,0x2e,0x1f,0xf6,0xf5,0x7,0xd0,0xb,0x80,0xc8,0xe,
+  0xe,0x72,0xfc,0xe9,0x8c,0xe1,0x57,0xbf,0xfb,0x13,0xfc,0xed,0x85,0x7f,0x39,0x93,
+  0xb8,0x7c,0xe4,0x1,0x50,0x67,0x56,0x71,0x2a,0x2a,0x85,0x9d,0x54,0xe6,0x9f,0xad,
+  0x7a,0xfc,0x4b,0xcf,0xbf,0xcd,0xb6,0xa8,0x68,0x68,0x1,0xe,0x18,0x88,0xa6,0x1f,
+  0xd4,0x3,0x50,0xd8,0xff,0xc2,0x46,0x17,0x1a,0x26,0x21,0x0,0x40,0xa,0x3f,0xa4,
+  0xda,0x90,0xfa,0xb7,0x42,0x14,0x99,0xc1,0x75,0x7,0xe,0x83,0x29,0x83,0x8b,0xb8,
+  0x80,0x67,0xda,0xb4,0x69,0x9e,0xcc,0x3e,0xff,0x2,0x16,0x5e,0x16,0x20,0x62,0xde,
+  0x4e,0xf6,0x9f,0xbc,0x75,0xca,0x14,0x70,0x1b,0xac,0x46,0xc4,0x42,0x23,0x21,0xd9,
+  0x7e,0x5c,0x4b,0x84,0xe2,0xbf,0xe8,0x1,0x0,0x4,0x85,0xf3,0x84,0x2f,0x32,0x38,
+  0xcc,0x97,0xb5,0x32,0xaf,0x14,0x76,0x5b,0x2e,0xb,0x96,0xf5,0x3a,0x7e,0x17,0x32,
+  0xeb,0x54,0x21,0x13,0xa5,0xd,0x7f,0xf4,0xd1,0x47,0xec,0xf8,0x9c,0xfd,0x55,0x3,
+  0x3c,0xfa,0x49,0xd,0xbe,0x56,0x8,0x45,0x25,0xc5,0x60,0x86,0xf1,0xfe,0xe4,0x15,
+  0x42,0x28,0x5e,0xc8,0x26,0x81,0x11,0x11,0xa6,0x80,0xad,0xba,0x9,0xc9,0x14,0xe1,
+  0x8e,0x4,0xf5,0x32,0x90,0x74,0x5f,0x85,0x0,0x55,0x24,0x40,0x6e,0x29,0x4,0xab,
+  0xc0,0x80,0x4d,0x34,0xbc,0x5f,0x85,0xd0,0xe,0xed,0xab,0x28,0x3b,0xd0,0xcd,0xc5,
+  0xf9,0xe9,0xb5,0x97,0xc0,0xe1,0x7,0xee,0x13,0xd8,0xfa,0x4b,0xf,0xd,0xaa,0x1e,
+  0x1,0x9e,0x8c,0x3f,0xcd,0xf,0x80,0x8f,0x97,0x4e,0x3e,0xf1,0xe4,0xe3,0xfa,0x5a,
+  0x96,0x72,0x8d,0xed,0x1d,0x0,0xe6,0xa3,0x90,0x4c,0xf5,0x27,0xf3,0x28,0x81,0xcf,
+  0x32,0x9,0x7c,0x8e,0x3f,0x5,0x4,0x2d,0x6d,0xed,0x70,0xf6,0x15,0x37,0xf2,0xa2,
+  0x9e,0x2c,0x4,0xe1,0x2,0x28,0x18,0x71,0x38,0xb4,0x65,0xa4,0xf6,0xa7,0x62,0x1e,
+  0x2a,0x44,0x89,0x86,0x25,0x0,0x44,0xb8,0xac,0x97,0x1c,0x51,0xca,0xf6,0xb7,0x23,
+  0x51,0x27,0x1c,0x68,0x4b,0x86,0x50,0x10,0x17,0xc5,0x38,0x22,0xe3,0x4f,0x94,0xf6,
+  0xda,0x52,0xe8,0xd9,0xf1,0x87,0x13,0x2c,0xd1,0xd6,0x2,0x49,0xa4,0xff,0xa7,0x4f,
+  0xad,0x80,0x93,0xa6,0x54,0xb1,0x29,0x33,0x7d,0xfa,0x74,0x27,0xce,0xaf,0x86,0x6e,
+  0x2b,0xeb,0x29,0xa3,0xd9,0x2c,0x40,0xf9,0x2,0xc4,0xed,0x13,0x20,0x20,0x1,0x80,
+  0xbb,0xf9,0x46,0x2,0x13,0x84,0xba,0x3,0x2,0xdd,0xb2,0xeb,0xc5,0x1,0xcf,0x71,
+  0x5b,0xad,0x2e,0xa4,0x9,0xbe,0x93,0x4c,0xa3,0x5a,0x6e,0xa9,0x76,0xe3,0xce,0x43,
+  0xac,0x16,0x5c,0x80,0x2c,0x40,0x95,0x30,0x6f,0xda,0xb4,0x9,0xe6,0xcf,0x9f,0xcf,
+  0x3e,0x90,0x87,0xde,0xdb,0x0,0xef,0xaf,0xef,0x80,0x62,0xa,0x7,0xe7,0x23,0x48,
+  0x20,0x3,0x80,0x58,0x1,0xb2,0x80,0x42,0x11,0x11,0x20,0x33,0x80,0xee,0x15,0xf9,
+  0x2,0x24,0xed,0xee,0x40,0xed,0x9f,0x51,0x5e,0x7f,0xe5,0xf8,0x73,0xf2,0x1,0xd2,
+  0xbe,0xfd,0x94,0x7c,0x74,0x70,0xa8,0x36,0xd2,0x30,0xf,0xac,0xb6,0x95,0xea,0x1b,
+  0xc2,0xbe,0xd3,0xa7,0xc1,0x2f,0x6f,0xba,0x5a,0xb6,0x51,0xf,0xd6,0xf8,0x41,0xfd,
+  0xfd,0x3,0xda,0x81,0x75,0xe0,0xa3,0x12,0x41,0xa0,0x4f,0x32,0xfd,0xba,0x1a,0xdb,
+  0x2d,0x0,0x3c,0xf7,0xcf,0xe7,0x46,0xe0,0xe4,0x5d,0x15,0x98,0xd,0xa8,0x35,0x9,
+  0x75,0xc2,0x5f,0x7e,0x20,0xd0,0x18,0xc3,0x2b,0x6f,0xbe,0xb,0x3f,0xbb,0xfb,0xb7,
+  0xce,0x67,0x17,0xc,0x98,0x4,0xad,0xb1,0xf1,0x42,0x93,0x70,0xe8,0x4f,0x38,0x1,
+  0xed,0xa8,0x9e,0xf8,0x23,0x42,0x7e,0x74,0x4c,0x39,0x1,0x39,0xc,0x15,0x75,0x3b,
+  0x2,0xc7,0xd1,0xc,0x8,0xb3,0x12,0xb2,0x44,0xc2,0xf,0xd9,0x95,0x52,0xf8,0x89,
+  0x5,0x58,0x9,0xd4,0x2c,0x8,0x0,0xbb,0xf,0x8c,0xc1,0x35,0xa8,0xfd,0xa9,0xdd,
+  0xf6,0xd4,0xa9,0x53,0x1d,0xa7,0x9f,0x7f,0xe8,0xda,0xd3,0x56,0x2c,0xc0,0x12,0xeb,
+  0xe5,0x99,0xaa,0x39,0xa6,0x14,0x1c,0x5b,0x2e,0xe4,0x61,0xa8,0x46,0xab,0x4e,0x9e,
+  0x44,0x98,0x13,0x85,0x74,0x10,0xf0,0xf7,0x3f,0xf4,0x3b,0xf2,0x3a,0xf3,0xfa,0xbb,
+  0x9e,0x7d,0xd0,0xfa,0xed,0x7b,0x1d,0x7c,0x81,0xcb,0x6f,0xf9,0xbe,0x8b,0x5a,0x3,
+  0xc0,0xcf,0x4,0x88,0xa5,0x14,0x97,0x94,0x40,0x4c,0x3a,0x6,0xbf,0xfc,0xf2,0x4b,
+  0x4e,0x1d,0x6e,0xec,0x30,0xe1,0xd6,0xb7,0xd6,0x41,0x6d,0x32,0x4,0x45,0x8,0x2,
+  0x6c,0xa,0xc4,0x5,0xb,0x0,0x36,0xb,0x84,0x2f,0x80,0xd7,0x62,0x63,0xfb,0xdc,
+  0x16,0x4d,0x50,0x65,0x8,0x90,0xb4,0x7c,0xc8,0xcc,0x38,0xe,0x40,0xc7,0x17,0x40,
+  0xcf,0xcd,0x94,0x6,0x2,0x9,0xbc,0x5f,0x9,0x28,0x86,0x3a,0x68,0x5b,0x3b,0xc7,
+  0xa9,0x11,0x88,0x22,0xc8,0x3f,0xfa,0xeb,0x9f,0xc1,0xc8,0xe1,0x43,0x82,0x3b,0xf8,
+  0xfa,0x72,0x0,0xfc,0x0,0xe0,0xcb,0x2,0x3c,0xee,0x94,0x93,0x4e,0xe9,0x93,0xe5,
+  0xbf,0xbb,0x1a,0xdb,0x33,0x0,0xcc,0xc2,0x49,0xfb,0x60,0x50,0x7b,0xb0,0x5c,0xa1,
+  0xc0,0x40,0x46,0x80,0xef,0xb9,0xfe,0xd6,0xbb,0xe1,0x9d,0xb9,0x9f,0xca,0x6f,0x1c,
+  0x82,0xb2,0x31,0x47,0x40,0x7d,0x82,0x42,0x4b,0x22,0xe5,0x34,0x84,0xda,0xdf,0x8a,
+  0xa9,0xa6,0x1f,0x4a,0xcb,0x2b,0x0,0x88,0x7a,0x13,0x81,0x64,0x86,0xa0,0xc1,0x31,
+  0xf8,0x10,0x4e,0x14,0x5b,0x94,0x9f,0xb2,0x53,0x89,0xec,0xfe,0x36,0xe1,0xf9,0x47,
+  0x20,0xe8,0x40,0xe1,0x2f,0x34,0x32,0x70,0xd3,0xc1,0xc3,0x60,0x58,0x69,0x8c,0xab,
+  0xf9,0xa6,0x4c,0x99,0x92,0xf3,0x3b,0x3b,0x2c,0x40,0x1,0x80,0xec,0x8f,0x1f,0xc4,
+  0x2,0x74,0xa1,0x55,0x9,0x42,0x2,0x1c,0xdd,0xdf,0x48,0xf9,0x5,0xfc,0x0,0xd0,
+  0xd9,0x8,0xf2,0xf2,0xeb,0xd7,0xa6,0x6b,0xfb,0x20,0xca,0xaf,0xbc,0xfd,0xa0,0xb,
+  0xbf,0xed,0x65,0x0,0xa0,0xfc,0x2,0xb2,0x7,0x20,0x45,0x54,0xca,0xcb,0xca,0x64,
+  0xa2,0x56,0x1a,0xe6,0xce,0x9d,0xcb,0xa1,0xb3,0xf,0xd6,0xb4,0xc2,0x6f,0x3f,0xaa,
+  0x83,0x38,0x9a,0x2,0x79,0x5,0xc5,0xcc,0x0,0x8,0x4,0x38,0x24,0x18,0x2b,0xe0,
+  0x5e,0x2,0x7c,0xbf,0x70,0x1a,0x93,0x5c,0x27,0x52,0x42,0xe3,0xdb,0x5a,0x76,0xa0,
+  0xa1,0x1a,0x85,0x2a,0x6,0x90,0x96,0x91,0x81,0x8c,0xba,0x67,0x22,0x35,0x3b,0x62,
+  0x76,0x40,0x66,0xe3,0x3b,0x8,0x12,0xd,0xce,0x77,0xbe,0xe8,0xdb,0x27,0xc3,0xb9,
+  0xa7,0x1e,0xe7,0xc9,0xa,0x14,0x7d,0xa,0xb3,0x23,0x2,0x7e,0x47,0xa0,0xaf,0x1f,
+  0xe0,0x13,0x8,0x0,0xdb,0x74,0xcd,0xbf,0xee,0x8e,0xed,0x16,0x0,0x9e,0xfd,0xc7,
+  0xb3,0xcf,0xe2,0xe4,0x3d,0xd9,0xdf,0x1a,0x3c,0x4b,0xd8,0xc3,0xe1,0x2c,0xcf,0xbf,
+  0xd3,0x5b,0x0,0x8f,0x6f,0xaa,0xab,0x83,0x73,0xaf,0xba,0x89,0xeb,0xec,0xf9,0xb,
+  0xc7,0x2a,0xc0,0x18,0xb8,0xbf,0x4c,0xfc,0xc9,0x93,0xde,0x7f,0xa5,0xfd,0x65,0xaf,
+  0xba,0xa8,0x4b,0xfb,0xd,0x99,0xfb,0xcf,0xaf,0x45,0xb5,0x8,0x1,0xb3,0xe,0x9c,
+  0x8f,0x11,0x5b,0x76,0xa3,0x95,0x21,0x3f,0x2,0x80,0x14,0x15,0xa5,0x20,0xf5,0x47,
+  0xbb,0xf6,0xf4,0xc9,0x25,0x70,0xdc,0xc4,0x72,0xa6,0xb9,0xfb,0xec,0xb3,0x8f,0xa7,
+  0xb0,0x27,0x68,0x64,0xf9,0x2,0xd8,0x96,0x14,0x2c,0xc0,0xd5,0x30,0xb6,0x47,0x3,
+  0xab,0x42,0x20,0xbd,0xdd,0x7a,0x28,0xec,0x46,0x8,0xba,0x63,0xa,0x4,0x39,0xf9,
+  0xb2,0x42,0x7a,0x6a,0x71,0x51,0x9f,0xf0,0x8b,0x42,0x3d,0x33,0x4b,0xd0,0x6d,0x6d,
+  0x39,0x2e,0xe5,0x8,0x54,0x91,0xc,0xf,0x8,0xe0,0xd3,0x42,0xa4,0xf9,0x94,0xf7,
+  0x41,0x83,0xfa,0xa,0x90,0x3f,0x80,0xbe,0xff,0x7d,0xef,0x6d,0x82,0x8f,0xab,0x33,
+  0xc8,0x2,0x8a,0x21,0x9c,0x5f,0x24,0xcc,0x0,0x34,0x7,0x6c,0xce,0xb,0xc8,0x17,
+  0x60,0x6c,0x44,0x20,0x91,0xb1,0x79,0x45,0x21,0xc7,0xf6,0x37,0x33,0xb2,0x3f,0xa0,
+  0x2,0x80,0xc,0x6b,0x7c,0xa7,0x5c,0x98,0xf6,0x99,0x19,0x20,0x0,0x20,0x3,0x20,
+  0xd3,0x2d,0xde,0xb1,0xc,0xd2,0xf5,0xb,0x9c,0xb5,0x20,0x26,0x8d,0x1b,0x5,0xf,
+  0xdc,0x7a,0x23,0xff,0x86,0x81,0xe,0xbf,0x4e,0xfc,0x0,0x3e,0x33,0x60,0x23,0x2,
+  0xc0,0x90,0xbe,0x96,0xa9,0xa0,0xb1,0x3d,0x3,0x40,0x1d,0x4e,0xe0,0xa,0xcf,0xa,
+  0x3f,0x4a,0xa3,0xf9,0x12,0x7f,0x3c,0x91,0x0,0xcd,0x2c,0xa0,0xc7,0x3f,0xff,0xfd,
+  0x26,0xdc,0xf9,0xd0,0xa3,0xce,0xe7,0x96,0xc,0x9d,0x1,0x8d,0x30,0xcc,0x71,0xfe,
+  0x85,0xd0,0xc,0xb0,0x38,0xb9,0x27,0xea,0x36,0xfb,0x20,0x4d,0x1f,0x73,0x33,0xff,
+  0x4,0xfd,0x97,0xec,0x40,0xd5,0x5,0xf0,0xda,0x5a,0x16,0xc4,0xa8,0xd4,0x97,0xe8,
+  0x7f,0x2a,0xc1,0x5a,0x1f,0x12,0xad,0x60,0x21,0x10,0x74,0xb4,0xb7,0xc0,0x48,0x64,
+  0xab,0xff,0x33,0x73,0x20,0x14,0x44,0x5,0xf5,0x1f,0x31,0x62,0x44,0x97,0xdf,0x3b,
+  0xc8,0x59,0x66,0x66,0xb1,0x0,0xdb,0x59,0x49,0x46,0x25,0xdc,0x18,0x86,0x5a,0xe1,
+  0x47,0xb,0x9,0x6a,0x8d,0x56,0xd4,0x6f,0x22,0xde,0x9b,0x1b,0x4,0x9c,0x7d,0x4d,
+  0xd8,0xb3,0xae,0x4b,0x9,0xb3,0xa2,0xfc,0xf4,0xba,0x5f,0xf3,0xeb,0x0,0x60,0x6b,
+  0x42,0x6f,0x6b,0x20,0x0,0x2e,0x9b,0xa0,0x6b,0xa1,0x8a,0x50,0x8a,0xf6,0xd0,0xf8,
+  0xec,0xb3,0xcf,0x60,0xf5,0xea,0xd5,0xb0,0xaa,0x31,0x9,0x77,0xbe,0x5b,0x7,0xe9,
+  0x48,0x3e,0xe4,0x17,0x16,0xa1,0xe0,0x4b,0x0,0x90,0x4c,0x80,0x9d,0x81,0x4,0x0,
+  0x69,0x90,0xcb,0x8b,0x65,0x9c,0x6e,0x41,0x86,0x69,0x7a,0x93,0x82,0x64,0x66,0xa0,
+  0x41,0x80,0x40,0xf4,0x9f,0xc0,0x21,0x25,0x12,0xb4,0x8,0x0,0x8a,0xa0,0x5,0xda,
+  0xd7,0xbe,0x8d,0x67,0x4f,0xf3,0x35,0x91,0x29,0xf5,0xdb,0xdb,0x7f,0x8,0x3b,0x8f,
+  0x1a,0xe9,0x14,0x5,0x29,0xc1,0xf7,0x77,0x6,0xd2,0x23,0x0,0x7e,0x33,0x40,0xbe,
+  0x77,0xe2,0x69,0xdf,0x3c,0x6d,0x31,0x6c,0x67,0x63,0xbb,0x4,0x80,0x67,0x9e,0x7d,
+  0x66,0x2a,0xa,0xf9,0x7c,0x7f,0xa3,0x50,0x7f,0x59,0x70,0x56,0x3b,0x71,0xad,0x31,
+  0x88,0x2,0x86,0x1b,0x6f,0xbf,0x57,0xa3,0xff,0x61,0x28,0x19,0x7d,0x38,0x34,0x26,
+  0x45,0x6a,0x29,0xa8,0xba,0x73,0x9,0x0,0x86,0x4c,0xfc,0x1,0x2d,0xf4,0xa7,0x1c,
+  0x81,0x8a,0x5,0x18,0xb2,0xed,0x17,0xb0,0xf3,0xcf,0x84,0x8,0xad,0xda,0x63,0x91,
+  0x1d,0x49,0xc,0xa0,0x15,0x6c,0x4,0x80,0x74,0x47,0x1b,0xce,0xa9,0x36,0x98,0x35,
+  0xa3,0xc,0xf6,0x1e,0x5e,0xc8,0x5,0x3e,0x7b,0xef,0xbd,0x77,0xb7,0x9a,0x73,0x3a,
+  0x82,0x11,0xc8,0x2,0x14,0x8,0xc8,0xe5,0xb3,0xa4,0x3f,0x40,0xa5,0x9,0xab,0x25,
+  0xbe,0xc,0x55,0x30,0x94,0xc3,0x1c,0x8,0x2,0x80,0x20,0x6d,0xef,0x84,0xf5,0x7c,
+  0x20,0xe0,0x69,0x94,0x69,0xbb,0x54,0xde,0xf5,0x4f,0x58,0x8e,0xd0,0xbb,0x4c,0xc5,
+  0x7d,0xae,0xae,0x17,0x94,0x39,0x21,0xff,0x4f,0xb9,0x1,0x14,0xf2,0xa5,0xeb,0xa2,
+  0x9c,0x89,0xff,0xfc,0xe7,0x3f,0x9c,0x11,0xf9,0xd7,0x5,0xd,0xf0,0xea,0x9a,0x14,
+  0x14,0x14,0x96,0x30,0xb,0x50,0x20,0x40,0x66,0x0,0xdd,0x1f,0xa,0xe5,0xa6,0xac,
+  0xb0,0xec,0x1d,0x68,0xba,0xc,0x80,0x12,0x85,0x32,0xa2,0x8,0x88,0xfd,0x0,0x4e,
+  0x44,0x40,0xfa,0x0,0xe8,0x91,0x4a,0x3a,0x0,0x10,0x31,0x13,0x90,0xa9,0xfe,0x0,
+  0x42,0xe9,0x5a,0x7,0x94,0x2e,0x38,0xe3,0x24,0x38,0xe7,0x94,0x63,0x72,0x37,0xf6,
+  0xb0,0xbd,0x5a,0x5f,0x8f,0x0,0xf8,0xa2,0x7,0x17,0x22,0x0,0xfc,0xa1,0xab,0xfb,
+  0xbf,0xad,0xc7,0x76,0x9,0x0,0x4f,0xff,0xfd,0xe9,0x59,0x38,0x69,0x1f,0xd4,0x57,
+  0x9,0xd2,0xbd,0xff,0x59,0xbe,0x80,0x20,0x20,0xc0,0x2d,0x75,0xfa,0x39,0xfb,0xca,
+  0xff,0x85,0xa6,0xe6,0x16,0xfe,0xdc,0x50,0xbc,0x12,0x60,0xc0,0x3e,0x90,0x31,0xe2,
+  0x2e,0x0,0xc4,0xe2,0xae,0x76,0x57,0xb1,0x7e,0xd5,0xd,0x48,0xf7,0x1,0x38,0xda,
+  0x5f,0xad,0x4,0x6c,0xb0,0xed,0x4f,0x71,0xff,0xa8,0x95,0x4,0x23,0xd9,0xc6,0xf4,
+  0xdf,0x42,0x0,0x48,0xb4,0xb7,0xc2,0xc4,0x52,0x80,0x6b,0xf7,0x1d,0xc0,0x9,0x3f,
+  0xe4,0xf5,0xa7,0x36,0x5e,0xdd,0x1d,0xae,0x2f,0xc0,0xdb,0x87,0x4e,0x25,0x6,0x89,
+  0xc9,0xe5,0xa,0xa2,0x12,0x20,0x15,0xf3,0x57,0x99,0x89,0xd4,0xfd,0x96,0xda,0x6f,
+  0xd1,0x56,0x81,0x69,0x77,0x87,0xbf,0xd9,0xa5,0x4e,0xfd,0x19,0x80,0x34,0xef,0xbe,
+  0x7,0x18,0x34,0xc1,0x77,0xa2,0x2,0xe0,0x8f,0x1a,0x48,0x96,0x6d,0x6b,0x69,0xc3,
+  0x32,0xaa,0x51,0x2a,0xbb,0x19,0xd3,0xf8,0xe2,0x8b,0x2f,0x60,0xf1,0xe2,0xc5,0x50,
+  0xdd,0x96,0x81,0x3b,0xde,0x6b,0x84,0x36,0x14,0xf4,0xfc,0x22,0xfc,0x61,0xe3,0x68,
+  0xa,0xc4,0xa5,0x3f,0x0,0x99,0x5c,0xc2,0x8e,0x32,0xb,0x90,0xc5,0x8,0x12,0x0,
+  0xd2,0x6e,0x9b,0x70,0x69,0xff,0xdb,0xd2,0x3c,0x30,0x52,0x49,0xc7,0x27,0x40,0x19,
+  0x9a,0x2a,0x29,0x88,0x18,0x5c,0x5e,0xc7,0x4a,0x48,0x35,0x2c,0x2,0xb5,0x34,0xea,
+  0xb4,0x49,0x3b,0xc3,0x3d,0x3f,0xb9,0xce,0x59,0xb7,0x4f,0x5f,0x1f,0x40,0x77,0x0,
+  0xea,0x66,0x40,0x8e,0x35,0x0,0x1e,0xfb,0xd6,0x37,0xbf,0x75,0x6e,0x5f,0xcb,0x96,
+  0x7f,0x6c,0xaf,0x0,0xf0,0x24,0x4e,0xd6,0xd3,0x83,0xda,0x84,0xeb,0x6b,0xa,0xea,
+  0x8e,0x40,0x3f,0xf5,0xa7,0xc7,0xbb,0x1f,0x7f,0x6,0x37,0xde,0x76,0xaf,0xf3,0xb9,
+  0x45,0x3,0xa7,0x40,0x73,0x78,0x94,0xeb,0xfd,0x8f,0xe5,0x39,0xf6,0xbf,0x6a,0xff,
+  0x65,0xeb,0xc,0x40,0xd2,0x7f,0x43,0x2,0x80,0x1d,0x51,0xab,0x0,0x8b,0xb4,0x5f,
+  0xe1,0xfc,0x4b,0x40,0x18,0xed,0xc8,0x70,0xba,0x9d,0x19,0x40,0x1a,0x85,0x3f,0x83,
+  0x20,0x70,0xc9,0x6e,0xc5,0xb0,0xe7,0xb0,0x2,0x18,0x30,0x60,0x0,0xdb,0xfe,0x3d,
+  0xad,0xcf,0xcf,0xf6,0x5,0x68,0xc,0xc0,0xc9,0xd,0xb0,0x1c,0xf,0xbb,0x3e,0xe8,
+  0x77,0x20,0x9f,0x43,0x5e,0x3c,0x8f,0xf7,0xc9,0xa1,0x46,0x85,0x37,0x1b,0x36,0x6e,
+  0x80,0x9a,0xda,0x1a,0x4f,0x5b,0x6f,0x25,0x80,0x74,0x7d,0xf4,0x37,0x15,0xe5,0x15,
+  0x30,0x74,0xe8,0x50,0x18,0x32,0x78,0x8,0x37,0x24,0x51,0xe7,0xa7,0xfa,0x4,0x91,
+  0x11,0x7,0x2e,0xbd,0xf7,0x7b,0xf5,0xa5,0xa7,0x1f,0xfc,0xf6,0x3e,0xe8,0xec,0x42,
+  0x3d,0x37,0x3c,0xc7,0xd5,0x51,0x8a,0x6,0xd0,0x35,0xd0,0xf5,0xd0,0x75,0xbe,0xfd,
+  0xf6,0xdb,0x9c,0x1b,0xf0,0xb7,0x45,0xcd,0x30,0x7b,0x8d,0x89,0x0,0x50,0xc,0x91,
+  0xbc,0x22,0x16,0x7e,0xc0,0xad,0x15,0x8e,0x43,0xd2,0x88,0x89,0x44,0x2e,0x4b,0x46,
+  0x38,0x64,0xde,0xbf,0xad,0xfc,0x0,0x19,0xb7,0x10,0xc8,0xe6,0xb2,0x60,0xb1,0x66,
+  0x0,0x3,0x40,0x46,0x9,0xbf,0x60,0x1,0x85,0x76,0x23,0x74,0x6c,0x7c,0x5f,0x64,
+  0x74,0xe2,0x67,0x95,0x96,0x14,0xc1,0xc3,0xb7,0xfd,0x90,0x57,0x13,0x72,0xfc,0x0,
+  0xfa,0xda,0x7e,0x66,0xb0,0xe0,0x3b,0xf4,0xdf,0x4d,0x22,0x5a,0x8d,0x0,0x30,0xb2,
+  0xaf,0x65,0xcb,0x3f,0xb6,0x1b,0x0,0xf8,0xcb,0x13,0x7f,0x99,0x81,0x82,0xbc,0x17,
+  0xa,0x32,0x6d,0xcf,0x44,0x8d,0x95,0xef,0x5f,0x23,0x50,0x35,0xc1,0xc,0xa4,0xff,
+  0x1,0x4e,0xc0,0xfb,0x1f,0x7d,0x12,0x9e,0x7e,0x71,0xb6,0xf8,0x9a,0xb4,0x82,0xcd,
+  0xa8,0x43,0xa0,0x3e,0x51,0x28,0x1c,0x7f,0x64,0xff,0x73,0xa1,0x49,0x4c,0x8,0x7d,
+  0x58,0x84,0xfb,0xc8,0xf6,0xb7,0xb5,0xb2,0x5f,0x4b,0x85,0xfe,0xd4,0x52,0xe0,0xc4,
+  0x12,0x38,0xc3,0xce,0x14,0x75,0xe7,0x6c,0x43,0xb6,0x43,0x34,0xd3,0xce,0xda,0x3f,
+  0x8d,0xb6,0xff,0x88,0x7c,0x13,0xbe,0xbf,0x77,0x29,0xe4,0xa1,0xf6,0xdf,0x63,0x8f,
+  0x3d,0x3c,0x55,0x7e,0xdd,0x1d,0x59,0x79,0xf4,0x1a,0x8,0x64,0x9b,0x2,0x2e,0xcd,
+  0x26,0x27,0x63,0x51,0xa1,0xe8,0xa7,0xb0,0x66,0xcd,0x1a,0xf8,0xe2,0xcb,0x2f,0x38,
+  0xcd,0x96,0x4,0xd8,0x1,0xa,0x5b,0xb0,0x5,0x1b,0x6c,0x47,0xe,0xfd,0x20,0x42,
+  0xbf,0x1f,0x81,0xd7,0xc4,0x9,0x13,0x61,0xec,0x98,0xb1,0xfc,0x79,0x5c,0xa4,0x84,
+  0xf,0x3d,0x3b,0xd0,0xd6,0x7d,0x0,0x1e,0xbf,0x81,0x66,0xfb,0xab,0x93,0x6,0x4c,
+  0x37,0x7,0x6,0xc,0xd7,0x99,0x49,0x6b,0x47,0x28,0x16,0xb0,0x60,0xc1,0x2,0x58,
+  0xb2,0x64,0x9,0xac,0x6d,0x4e,0xc3,0x5d,0x1f,0xb5,0x42,0x2a,0x5c,0x80,0xb2,0x5f,
+  0x2c,0x32,0x3,0xf3,0xa,0x21,0x15,0x8a,0x8b,0x74,0x61,0x32,0xe3,0x54,0x62,0x90,
+  0xb2,0xfd,0x55,0x47,0xa0,0xb4,0x5c,0x3f,0x50,0x37,0x5,0xd2,0x32,0xc,0xc8,0x26,
+  0x40,0x8a,0xeb,0x2,0xec,0x14,0xde,0x47,0x34,0xe7,0x32,0x9b,0xde,0x83,0x90,0xd9,
+  0xec,0x5c,0xe3,0x4f,0xaf,0xb9,0x8,0xe,0xdc,0x73,0x3a,0xfb,0x1,0x9c,0xf0,0x5f,
+  0xc6,0x84,0xac,0xfa,0xff,0x0,0x16,0xe0,0x5b,0x14,0xf4,0x29,0x7c,0xdf,0x5c,0x3c,
+  0xf6,0x31,0xfe,0xdd,0xc7,0xe7,0x9d,0x73,0xde,0x56,0x5f,0xfd,0xb7,0xab,0xd1,0x27,
+  0x0,0xf0,0xbb,0xdf,0xff,0x6e,0x37,0x9c,0x60,0x33,0x50,0x8b,0xcf,0xc0,0x2d,0xb,
+  0xbd,0x47,0x7b,0x6b,0xb,0x76,0x4,0x69,0x7f,0xdd,0xdb,0xad,0x67,0x2,0xea,0xcf,
+  0x49,0x38,0xae,0xb9,0xf9,0x2e,0x58,0xf0,0xc5,0x57,0xd2,0x43,0x16,0x87,0xf8,0xb0,
+  0x43,0xa0,0xc3,0x8a,0x72,0x95,0x19,0x31,0x0,0xaa,0xfe,0xb3,0xb8,0xfb,0x8c,0x72,
+  0x0,0xe2,0x6b,0xb1,0x98,0x16,0xfa,0x8b,0x6a,0x9d,0x81,0x14,0x13,0x8,0x9,0xfb,
+  0xdf,0x16,0xb9,0xe5,0x22,0xe5,0xb7,0xd,0x42,0x1c,0xff,0x47,0xed,0x8f,0xf6,0xff,
+  0xe9,0xe3,0x23,0x70,0xd8,0xa8,0x2,0xb6,0x67,0xf,0x38,0xe0,0x80,0xac,0x55,0x78,
+  0xba,0x3b,0xfc,0x2c,0xc0,0xc9,0x10,0xd4,0x7d,0x2,0x32,0x4b,0x90,0x6e,0x25,0x35,
+  0x52,0xa1,0xba,0x7a,0x6a,0xca,0xf9,0xf1,0xa7,0x1f,0xb3,0xe0,0xf3,0xe7,0x88,0x4a,
+  0xc2,0x7a,0xdc,0xbe,0x82,0xbb,0xb3,0xf1,0xc9,0x2,0xfc,0xcc,0x8e,0x2b,0x2f,0xbb,
+  0x92,0xb8,0x2e,0xdc,0xf7,0xc0,0x7d,0xa3,0xf1,0x79,0x5,0x1e,0x1f,0x8d,0x93,0x75,
+  0x26,0xbe,0xf7,0x64,0xdc,0x1f,0x41,0x13,0x57,0x75,0x22,0xde,0x7d,0xb7,0xdd,0x61,
+  0xec,0xd8,0xb1,0x1c,0xa6,0x63,0x6,0x61,0x4a,0x6,0x21,0x6d,0x7e,0xc7,0x44,0x0,
+  0x17,0xb8,0xbc,0xca,0x5f,0x7,0x18,0x25,0xf6,0xca,0x1f,0xe1,0xf6,0x36,0xa4,0x63,
+  0xc4,0x2,0xa8,0x14,0x9c,0xee,0x35,0x15,0xd4,0xbc,0xf1,0xc6,0x1b,0x7c,0xde,0x3f,
+  0x2e,0x68,0x83,0xb9,0x35,0xa4,0xfc,0x4b,0x20,0x52,0x50,0x4,0x66,0xb4,0x8,0xd2,
+  0xe1,0x3c,0x99,0xc9,0x19,0x17,0xdd,0x9b,0x65,0xef,0x40,0x37,0x1a,0x60,0x3a,0xfd,
+  0x1,0xc,0x59,0x1f,0x20,0xe2,0xff,0x69,0xd9,0xaf,0x41,0x26,0x4,0xa5,0x44,0xed,
+  0x6,0xf5,0x6d,0x30,0x9a,0x16,0x81,0x91,0x58,0xeb,0x98,0x25,0xa7,0x1c,0x75,0x30,
+  0x5c,0x7a,0xf6,0x37,0xe5,0x52,0xe6,0xde,0x12,0x61,0x4f,0xe2,0x8f,0x6,0x6,0xc4,
+  0xb0,0xf4,0x30,0xa1,0x67,0x21,0x52,0xf7,0xef,0x16,0x11,0x18,0xe0,0x7b,0xe7,0x12,
+  0x20,0xd0,0xfe,0xe5,0xb3,0x2e,0x4f,0x6d,0x4b,0x59,0xdc,0xea,0x0,0xf0,0xab,0xbb,
+  0x7f,0x35,0x89,0x84,0x3d,0x1a,0x89,0xee,0x85,0x42,0x4c,0xda,0x7d,0x6,0xa,0x68,
+  0xcc,0xd3,0xe2,0x4b,0x86,0xb0,0xc,0xf0,0x2d,0xdd,0xad,0x75,0xf6,0xf1,0x68,0x7f,
+  0x2d,0xf7,0xdf,0x1f,0x6,0x54,0x7f,0x5f,0x87,0xb4,0xf7,0xfc,0x6b,0x7e,0xa,0x6d,
+  0x1d,0x22,0xfc,0x17,0x29,0x18,0x2,0xe9,0xa2,0x5d,0x45,0x9d,0x39,0x39,0x8f,0x62,
+  0x31,0x99,0x51,0x26,0xb5,0x7d,0x58,0x6a,0x7f,0xee,0x8,0xe4,0xb6,0xfe,0x72,0x56,
+  0x4,0x72,0x3a,0x4,0x83,0x0,0x0,0x49,0xff,0x29,0x8b,0xcc,0x4e,0xb4,0xb0,0xf7,
+  0x9f,0x0,0xa0,0x2c,0x9c,0x86,0xeb,0x67,0xe4,0x43,0x79,0x5e,0x8,0x76,0xdd,0x75,
+  0x57,0xce,0xf7,0xdf,0xdc,0xa1,0x3b,0xdf,0xfc,0xd,0x26,0xd5,0x83,0xa2,0x3,0x74,
+  0x13,0xa9,0xc3,0x72,0x4,0xc1,0x6a,0xde,0x67,0xf3,0xd8,0x76,0xd6,0x8a,0x77,0x9e,
+  0xc3,0x89,0xfb,0xd0,0xa5,0xdf,0xbb,0x74,0x76,0x4f,0xce,0xfd,0xc0,0x83,0xf,0x4c,
+  0xc5,0xbf,0x9b,0x85,0xbb,0x17,0x50,0x7,0x6d,0xca,0x76,0x1c,0x3d,0x72,0x34,0xec,
+  0xb5,0xd7,0x5e,0x6c,0x5a,0xd0,0xea,0x35,0xd4,0x5c,0x45,0x5e,0xa9,0xa7,0x6,0x40,
+  0x5c,0xb3,0xf3,0x25,0x84,0xa8,0x7b,0x66,0x9a,0x5b,0xcf,0x0,0x8e,0xdf,0x2,0x64,
+  0xb9,0xb3,0x0,0x2,0xa,0xfb,0xe5,0xc9,0x88,0xc0,0xfb,0xef,0xbf,0xcf,0x6c,0x66,
+  0x41,0x4d,0xa,0x1e,0xfa,0x3c,0xd,0x61,0xd4,0xfc,0xb1,0x82,0x62,0x48,0x45,0xa,
+  0x4,0x13,0xe0,0x68,0x80,0xa8,0xf,0xe0,0x53,0x12,0x70,0xa9,0x4c,0x40,0x59,0x1,
+  0xe8,0x64,0x0,0x3a,0xf9,0x0,0x1a,0x3,0xa0,0xe8,0x80,0x34,0x1,0x28,0x84,0x5b,
+  0x90,0xde,0x8,0x89,0xfa,0x79,0x20,0x5b,0x8f,0xc0,0xc4,0xb1,0xa3,0xe0,0xde,0x9f,
+  0x5e,0x2b,0xb2,0x2,0x7d,0xd9,0x7e,0xfe,0xd5,0x7d,0x82,0xda,0x80,0xf9,0xfb,0x8,
+  0xfa,0x17,0x22,0xd5,0xdf,0x87,0x60,0x30,0xf,0x9f,0x13,0x28,0x7c,0x8c,0xc7,0xe6,
+  0x5e,0x7f,0xdd,0xf5,0x5b,0x75,0x7d,0x80,0x5e,0x5,0x80,0x1f,0xdf,0xfc,0xe3,0xc1,
+  0x28,0x84,0x33,0xa3,0xd1,0xe8,0xbe,0x28,0xa8,0x7b,0xa1,0xd0,0x92,0x96,0xcf,0x67,
+  0xf,0xb4,0x56,0xab,0xaf,0x3c,0xf5,0x2a,0x6c,0xa5,0x77,0xf3,0xcd,0xb9,0x40,0xa8,
+  0x26,0xdc,0x7a,0x6b,0x6f,0x47,0xfb,0xcb,0x63,0xca,0xc,0xf8,0xe0,0xd3,0xcf,0xe1,
+  0x87,0x77,0xdc,0xef,0x7c,0xcd,0x62,0xb4,0xff,0x9b,0x60,0x18,0xa,0xb6,0x2c,0x2b,
+  0x25,0x1f,0x0,0xd9,0xff,0x31,0xe1,0xf0,0x63,0xda,0x1f,0x8b,0x39,0xd4,0x5f,0x79,
+  0xff,0x9d,0xc6,0x20,0x12,0x8,0x58,0x63,0x19,0x72,0xa5,0x5a,0xe9,0x3d,0x26,0xcf,
+  0x3f,0x47,0x0,0x90,0x9,0xec,0x5b,0x65,0xc2,0x39,0xbb,0xe4,0x73,0x38,0xeb,0xd0,
+  0x43,0xf,0x65,0xad,0xbc,0xb9,0x23,0x2b,0x22,0xe0,0x50,0x4e,0x91,0x20,0x94,0xe6,
+  0xe6,0xa0,0x16,0x53,0x66,0x2a,0x3e,0x21,0x41,0xd9,0x54,0xbd,0x49,0x9,0xe1,0x7b,
+  0x78,0xad,0x57,0x5f,0x74,0xc1,0x45,0x73,0x37,0xfb,0x2,0x40,0x34,0x69,0xc1,0xb3,
+  0xdf,0x8c,0x77,0xe6,0x4c,0x7a,0x4e,0xdf,0x67,0xe6,0xfe,0x33,0xb9,0x9e,0xa1,0xb1,
+  0x91,0x7b,0xd9,0x73,0x3e,0x84,0x7e,0xad,0xe2,0xe2,0xb3,0x75,0xbe,0xd8,0x31,0x34,
+  0x30,0x10,0x51,0xb,0x90,0x21,0x4c,0xb1,0x54,0xbb,0x68,0x70,0x4a,0xf5,0x1f,0x4,
+  0x6a,0x34,0xd6,0xae,0x5d,0xb,0xef,0xbe,0xfb,0x2e,0xb4,0xa7,0x2d,0xb8,0x77,0x7e,
+  0xa,0xd6,0x26,0xa2,0x8,0x2,0x68,0xff,0xc7,0x8a,0xd8,0xf,0xe0,0x0,0x80,0x63,
+  0x6,0xd8,0x32,0x19,0x48,0x2d,0x16,0x6a,0xb9,0xb5,0x0,0x69,0xd9,0x15,0xc8,0x49,
+  0x5,0x56,0xc,0x40,0xd5,0x70,0x74,0x40,0x81,0xd1,0xc,0x89,0x4d,0x1f,0xb2,0x1f,
+  0x80,0xbe,0x45,0x49,0x51,0x21,0x3c,0x74,0xcb,0xf5,0x50,0x55,0x51,0xe6,0xcd,0xf8,
+  0xd3,0xb2,0x1,0xfd,0xc2,0x1c,0xc4,0x2,0xf4,0x45,0x47,0x14,0x28,0x78,0xf6,0x7d,
+  0x95,0x87,0xc4,0x36,0xf0,0xf3,0x4c,0xbc,0xb7,0x4,0x6,0x4,0xa,0xef,0xe0,0xd3,
+  0x77,0x6e,0xb9,0xf9,0x96,0x5e,0x2b,0x2b,0xde,0x22,0x0,0xb8,0xee,0x7f,0xae,0x1b,
+  0x87,0x2,0x38,0x13,0x85,0xee,0x50,0xbc,0x61,0x33,0x71,0x7f,0x34,0x69,0x21,0xbd,
+  0x9f,0x9f,0x7f,0xed,0x3e,0x71,0x93,0xa5,0xf6,0x37,0xe4,0xb1,0x90,0x4f,0xb3,0x7,
+  0xe4,0xf4,0xe7,0x4,0x83,0x0,0x33,0x80,0x8e,0xff,0xe9,0x99,0x17,0xe1,0xcf,0x7f,
+  0x7f,0xc9,0xf9,0x9a,0xe5,0x23,0xf6,0x87,0xba,0x54,0x11,0xf7,0x98,0xa3,0xaa,0x32,
+  0x95,0x4,0x64,0x2b,0xed,0x1f,0xd1,0x18,0x80,0x2c,0xfb,0xd5,0xb5,0xbf,0x6a,0x10,
+  0x62,0xf0,0x72,0xbb,0x96,0x9c,0x44,0x9,0x16,0x7a,0x5b,0x86,0xff,0x42,0x38,0x81,
+  0xce,0xdf,0xd9,0x80,0xe9,0x83,0xa2,0x1c,0xf3,0xdf,0x77,0xdf,0x7d,0x7b,0xe5,0x26,
+  0xf9,0xcd,0x0,0xd7,0x14,0xb0,0xd8,0x71,0x97,0x40,0x96,0xf3,0xee,0x7b,0xef,0x72,
+  0xf5,0x19,0xbe,0xcf,0x24,0xc1,0xff,0xce,0xf9,0xdf,0xb9,0x7f,0xcb,0xcf,0xec,0x8e,
+  0x87,0x1f,0x79,0xf8,0x28,0xdc,0x3c,0x8d,0x57,0x52,0x44,0xe1,0xba,0xfd,0xf7,0xdb,
+  0x1f,0x6,0xd,0x1c,0x24,0x9a,0x5d,0x90,0x33,0xcd,0xc9,0x1e,0xf4,0x31,0x0,0x70,
+  0x35,0xbd,0x4e,0xfb,0x3d,0x1a,0x5f,0x4f,0x69,0x96,0x4a,0x80,0xee,0x3d,0xd5,0x4b,
+  0xd0,0xbd,0x26,0xdf,0xc3,0xec,0xd9,0xb3,0xd9,0x1c,0xf8,0xc7,0xb2,0x14,0xbc,0xbe,
+  0x29,0xc2,0x35,0x1,0x90,0x57,0x2c,0x6a,0x3,0x38,0x1c,0x28,0xfd,0x0,0xb2,0x4c,
+  0x18,0x64,0x33,0x50,0xd5,0x15,0x98,0x1a,0x87,0xa,0x67,0xa0,0xf0,0x1,0x88,0xb4,
+  0xe0,0xb4,0xcb,0x0,0x92,0xb2,0x79,0xb,0x2,0x7a,0x8c,0xb2,0x2,0xeb,0x10,0x0,
+  0xcc,0x16,0x79,0xfd,0x6,0xdc,0x72,0xdd,0xc5,0xb0,0xe7,0xb4,0x49,0x81,0x82,0xaf,
+  0x17,0x0,0xf9,0x3b,0x0,0xeb,0x2b,0xb,0x67,0x2d,0xc,0xe2,0x33,0x25,0x3c,0xa9,
+  0xd4,0xf2,0xf3,0xb8,0xc6,0x4c,0x55,0x87,0x52,0x47,0x68,0x1,0xc,0xab,0x93,0xe9,
+  0xe4,0x7b,0x38,0xe7,0xdf,0xc2,0xcf,0x78,0xfd,0xb6,0x9f,0xdf,0xb6,0xd9,0xf9,0x5,
+  0x5b,0x4,0x0,0xdf,0xbf,0xe1,0xfb,0xab,0xf2,0x62,0x79,0x23,0xa8,0x36,0x9e,0x4b,
+  0x74,0xa5,0x26,0xd6,0x85,0x5c,0x81,0x80,0x3f,0x7e,0xef,0xf1,0xe0,0xfb,0x5b,0x7c,
+  0xe9,0xce,0x3f,0xbf,0x93,0xcf,0x57,0xc,0xe4,0x5f,0x58,0x94,0x63,0xed,0xf8,0xad,
+  0x6e,0xbe,0xfb,0xf7,0xf0,0xce,0x87,0xb2,0xf9,0x4a,0x28,0x6,0x85,0x43,0xf,0x80,
+  0x96,0x8c,0xf4,0xfc,0x47,0xf3,0xb4,0x8,0x80,0x58,0xfb,0x4f,0xa4,0xfd,0xc6,0x18,
+  0x4,0x94,0xf3,0x4f,0x1,0x80,0xb3,0x34,0x78,0x58,0xf4,0xfa,0xb7,0x6d,0x99,0x72,
+  0xea,0x64,0xff,0x21,0x0,0x74,0xb4,0xc0,0x80,0x48,0x2,0xae,0x99,0x16,0x86,0x92,
+  0x58,0x88,0x3d,0xff,0xd4,0xe6,0xab,0x37,0x46,0xa0,0x2f,0x80,0xaa,0xe9,0xf0,0x9a,
+  0xc9,0x36,0x9e,0xf3,0x9f,0x39,0xd0,0xd2,0xdc,0x42,0xfa,0xb7,0x9,0xdf,0x73,0xc6,
+  0xf9,0xe7,0x9e,0xbf,0x55,0x56,0x93,0xfd,0xc3,0x1f,0xff,0x30,0xe,0x37,0x2f,0xe3,
+  0x89,0xc6,0xd1,0x4a,0xcf,0xe4,0xdf,0xa0,0x66,0x2d,0xf5,0xf5,0xd,0x3c,0x31,0xfd,
+  0x93,0x49,0x84,0xfb,0xc,0xcf,0x4c,0xd3,0xdb,0x97,0x93,0xe4,0x87,0xe4,0x5c,0xe1,
+  0xbd,0x90,0x0,0x2,0xd5,0xdb,0x30,0x86,0x2c,0x2a,0x4e,0xac,0xc,0xc7,0x87,0x1f,
+  0x7e,0xc8,0xce,0xc0,0x25,0x8d,0x16,0x3c,0xb8,0x8,0x7f,0x83,0x38,0x6a,0x7e,0x7,
+  0x0,0xa,0x65,0x4d,0x87,0xf4,0x3,0x58,0xa2,0x61,0xa8,0x9e,0x15,0x48,0x3d,0x3,
+  0xb8,0x4c,0x58,0xd5,0x5,0xa4,0x52,0x12,0x8,0x64,0x6f,0x0,0x2,0x82,0x94,0xec,
+  0xde,0x44,0x11,0x9d,0xa6,0x85,0x10,0x4a,0x6f,0x72,0xbe,0xcb,0xf7,0xbe,0x7d,0x12,
+  0x9c,0x7c,0xe4,0x41,0x59,0xfe,0x18,0xbf,0x1f,0x20,0x88,0xd,0x64,0x39,0x3,0xfd,
+  0x69,0xc3,0x7a,0x26,0x61,0x46,0xeb,0x44,0xac,0xad,0x4b,0xa0,0x12,0xbf,0x14,0x38,
+  0xa4,0x92,0x29,0xee,0x49,0x81,0xe0,0xd8,0x74,0xeb,0xcf,0x6e,0x2d,0xdb,0xdc,0x7b,
+  0xba,0x45,0x0,0xf0,0x83,0x1b,0x7e,0xb0,0xa,0xb5,0xc1,0x8,0x25,0xd0,0xc4,0xbe,
+  0x48,0xab,0x2b,0xa1,0xd6,0xfb,0xf0,0xeb,0x49,0x29,0xfe,0x46,0x9f,0x9d,0x2d,0xd,
+  0x1e,0xa4,0xf1,0x3b,0x73,0x2,0xd2,0xf1,0x14,0x22,0xff,0xd5,0x3f,0xbb,0xb,0x96,
+  0xae,0x58,0xc3,0x13,0xca,0xa,0xe5,0x43,0xa4,0x6a,0x5f,0x8e,0xff,0x3,0xb,0xbe,
+  0xa8,0x2b,0x27,0xfa,0xcf,0x2d,0xbe,0xa4,0xfd,0xcf,0xf4,0x5f,0x51,0x7f,0x55,0x8,
+  0x14,0xd6,0xed,0xff,0x90,0xcc,0x5f,0x11,0xf9,0xe4,0xe4,0x35,0x66,0x0,0x48,0xb4,
+  0x30,0x3,0x98,0x5e,0x96,0x82,0x73,0x27,0x84,0x21,0x3f,0x2f,0xf,0x8e,0x3c,0xf2,
+  0xc8,0xac,0x8a,0xbf,0xcd,0x1d,0x41,0xbe,0x0,0x95,0x54,0x44,0x9a,0xbf,0xb6,0xae,
+  0x96,0xc4,0xa8,0x9,0xa7,0xc6,0xde,0x67,0x9f,0x79,0xf6,0x56,0xcd,0x36,0x7b,0xf4,
+  0xcf,0x8f,0x56,0xe0,0xe6,0x4d,0x7c,0x4c,0x25,0xf6,0x71,0xc8,0x41,0x87,0x30,0x5d,
+  0xaf,0xab,0xaf,0x77,0xa,0x94,0xbc,0x33,0x4c,0xb9,0xf6,0x14,0x18,0x4,0x68,0x7c,
+  0x6d,0x3d,0x3,0xbd,0x89,0x9,0x7d,0x47,0x95,0x3a,0x4d,0x66,0x0,0x85,0x4,0x5b,
+  0x52,0x4,0x0,0x6,0xac,0x4f,0xa3,0xc0,0xe7,0x49,0x10,0x60,0x9f,0x8e,0x74,0x4,
+  0xd2,0xbd,0x64,0x47,0xa0,0x6,0x0,0x96,0x2a,0xd,0x56,0x4d,0x42,0x64,0x1d,0x40,
+  0x52,0x9a,0x2,0x19,0xb9,0x58,0x4b,0x4a,0x44,0x2,0x28,0x9a,0x13,0xed,0x58,0x5,
+  0xd0,0xbe,0xcc,0x61,0x32,0x47,0x1e,0xb0,0x37,0x5c,0xfd,0xdd,0xd3,0x79,0x3f,0x17,
+  0xb,0x70,0x5a,0x85,0xd9,0x5e,0x16,0x90,0xab,0x7b,0x70,0x2e,0x1f,0x82,0xc3,0x16,
+  0x32,0xa6,0x27,0xc3,0x50,0xcf,0xc2,0x4c,0xe3,0xf7,0x20,0x33,0x93,0x0,0xe0,0x17,
+  0x3f,0xff,0x45,0xdf,0x0,0xc0,0xb5,0x3f,0xb8,0x76,0x15,0xa,0xe3,0x88,0x68,0x58,
+  0xd4,0xeb,0xab,0xa5,0xb9,0x54,0xb7,0x5a,0x4f,0xc8,0x2e,0x1c,0x9c,0xd5,0xe7,0x8f,
+  0xe5,0xfb,0xcd,0x80,0xac,0x35,0x2,0xfc,0xbe,0x80,0x0,0x20,0xa8,0xa9,0x6b,0x80,
+  0x4b,0xfe,0xf7,0xe,0x68,0x6d,0x6b,0xe7,0xeb,0xc,0x17,0xc,0x82,0x54,0xfe,0x64,
+  0xce,0x1d,0x27,0xcd,0xaf,0x92,0x80,0xb8,0xdb,0x2c,0x57,0x2,0x2a,0xe1,0x8f,0x7a,
+  0x6d,0x7f,0x76,0x4,0x86,0x79,0xe5,0x5f,0x11,0x29,0x90,0xb9,0xf2,0x1c,0x5f,0x4e,
+  0x38,0x11,0x0,0x5,0x0,0xa7,0x8e,0x48,0xc3,0xfe,0x83,0x43,0x1c,0x47,0x27,0xfb,
+  0xbf,0xb7,0x86,0x3f,0x13,0x8f,0xbf,0x13,0x7e,0xf7,0x45,0x5f,0x2c,0x82,0x65,0xcb,
+  0x97,0x31,0xed,0xc7,0x79,0x71,0xf4,0xb7,0xcf,0xf8,0x76,0x8f,0x1c,0x7d,0x9b,0x3b,
+  0x1e,0x7b,0xfc,0xb1,0x71,0x28,0xa2,0xef,0xe2,0x6e,0x15,0xad,0x5d,0xb0,0xdf,0xbe,
+  0xfb,0x71,0x64,0xa0,0xb9,0xa5,0xc5,0x3,0x0,0x86,0x11,0x72,0x66,0x99,0xa3,0xf9,
+  0xc1,0x4d,0x54,0x52,0x40,0xa0,0xd3,0x7e,0xe5,0x7,0x52,0x20,0x40,0x4c,0x83,0xee,
+  0x31,0xe5,0x2,0xbc,0xfc,0xf2,0xcb,0xdc,0x52,0xfc,0xc9,0x65,0x0,0x73,0x1b,0xe3,
+  0x42,0xf8,0x65,0x4e,0x80,0xc1,0x6d,0xc4,0xa9,0x53,0x90,0xe8,0x19,0xc8,0x59,0x81,
+  0xa6,0x66,0x6,0x64,0xdc,0x7,0x3b,0x8,0x53,0xc2,0xf6,0xb7,0xd5,0x96,0x0,0x20,
+  0xed,0x36,0x72,0xc9,0xcf,0x54,0x43,0x8a,0xea,0x2,0x40,0x80,0xda,0x2e,0x63,0x47,
+  0xc1,0x9d,0x37,0x5e,0xe6,0x74,0x31,0xf2,0xd0,0x7d,0x2d,0x15,0xd8,0xef,0xf8,0xf3,
+  0xb3,0x0,0xcf,0xca,0x41,0x3a,0x88,0x98,0x56,0x56,0x6,0x21,0x3b,0x79,0x33,0xee,
+  0xe7,0xfa,0xcd,0x8,0xf2,0xab,0xe1,0x39,0x9a,0x6e,0xbf,0xf5,0xf6,0xbe,0x1,0x80,
+  0xab,0xae,0xbd,0x8a,0x1,0x80,0x6e,0x92,0x2e,0xe8,0xfe,0x7a,0x74,0x25,0xac,0xfe,
+  0x95,0x7e,0x72,0x85,0xf5,0xb2,0x18,0x41,0xae,0x68,0x80,0x16,0x9,0x50,0xcc,0x83,
+  0xfe,0x7e,0xe9,0x8a,0xb5,0x70,0xc5,0x4f,0xee,0x94,0xe1,0x3a,0x1b,0xa,0x2a,0x26,
+  0x40,0x8b,0x31,0x4c,0x2,0x40,0xbe,0xd0,0x16,0xdc,0x62,0xca,0x15,0x7e,0x70,0xe8,
+  0x7f,0xd4,0x4d,0x8,0xd2,0xbd,0xff,0x2a,0x3,0x90,0x10,0xd8,0x4c,0xbb,0xe,0x40,
+  0xa4,0xff,0x14,0x1,0x88,0x67,0xda,0xe1,0xe2,0xf1,0x49,0x18,0x59,0x64,0xc0,0xee,
+  0xbb,0xef,0xce,0xb9,0xff,0xbd,0x39,0x74,0x10,0xa0,0xef,0x4c,0x5d,0x66,0xdf,0x9f,
+  0xfb,0xbe,0xf2,0xbe,0x5f,0x7d,0xda,0x37,0x4f,0xbb,0xa7,0x57,0x4f,0xd8,0xc5,0xf8,
+  0xeb,0xdf,0xfe,0x8a,0x7c,0x18,0xfe,0x8d,0x62,0x1a,0x9b,0x32,0x79,0xa,0x9b,0x3b,
+  0xb5,0xd4,0xff,0x8e,0x17,0x2e,0x51,0xd3,0xca,0x6b,0xeb,0xeb,0xda,0xde,0x15,0xf4,
+  0x0,0x0,0xf0,0xb1,0x0,0xc5,0x76,0x5e,0x7f,0xfd,0x75,0x8e,0x6,0xbc,0xb7,0xc9,
+  0x86,0xbf,0xaf,0xcb,0xf3,0x2,0x0,0xb1,0x0,0x15,0x9,0x30,0xe4,0x2a,0x42,0xa6,
+  0xe9,0x7a,0xff,0x95,0x4f,0x20,0xed,0xfa,0x1,0x84,0xf3,0x4f,0x76,0x6,0xa2,0xe2,
+  0x20,0x19,0xa,0xe4,0x48,0x80,0xd5,0x8,0x89,0xba,0x79,0x10,0x92,0x8e,0xc0,0xca,
+  0xf2,0x32,0x78,0xf8,0xd6,0x1f,0xf0,0x32,0xe7,0xba,0x60,0xfb,0x5,0xbf,0x33,0x33,
+  0x20,0x2b,0x95,0xd8,0x72,0xeb,0x8,0xf4,0x30,0xa2,0xe,0x6,0xb9,0x18,0x6,0x47,
+  0x79,0xc,0xce,0x11,0x69,0xfa,0xd5,0xed,0xbf,0xea,0x1b,0x0,0xb8,0xe2,0x9a,0x2b,
+  0x56,0xe1,0x64,0x64,0x0,0x60,0xc7,0x9f,0x14,0x4a,0xee,0x55,0xaf,0x9,0xbe,0xb2,
+  0xdb,0x1d,0xa1,0xd7,0x59,0x80,0xcf,0xce,0xef,0xd2,0x4,0xf0,0x31,0x81,0x2c,0xf3,
+  0x2,0x27,0xd1,0x7f,0x3e,0xfa,0xc,0x6e,0x79,0xe0,0x51,0x19,0xa4,0x6,0x28,0x19,
+  0x3c,0xd,0xea,0xd3,0x95,0x2,0x0,0x28,0x85,0x94,0xfa,0xd1,0x45,0xb,0x1c,0xfb,
+  0x5f,0x8,0x7f,0x4c,0x32,0x0,0x91,0x8,0x24,0xfa,0x0,0x44,0xbc,0x8b,0x82,0x18,
+  0x9a,0x3,0x90,0x1a,0x4b,0xaa,0xea,0xbf,0x44,0x33,0xc,0x89,0x26,0x60,0xd6,0xb8,
+  0x24,0xe4,0x85,0x6d,0x38,0xe2,0x88,0x23,0x98,0x5,0xf4,0xe6,0xd0,0x1b,0x72,0xd2,
+  0xf8,0xf0,0xa3,0xf,0xa1,0xa1,0xb1,0x81,0x84,0xeb,0xa5,0x93,0x4f,0xea,0x9b,0x8e,
+  0x33,0x4f,0xff,0xfd,0xe9,0xdb,0xf0,0xfc,0x37,0xb0,0x53,0x70,0xff,0xfd,0x39,0x21,
+  0x89,0x9c,0x82,0xaa,0x30,0xc9,0xad,0x39,0x8,0x39,0x40,0xa0,0xb4,0xbb,0x70,0xe,
+  0x67,0x3b,0xfe,0xbc,0x0,0x0,0xb2,0xfb,0xb1,0x0,0x0,0x2a,0x10,0xfa,0xe4,0x93,
+  0x4f,0x60,0x2d,0x12,0xbb,0x87,0x96,0xe4,0x43,0x86,0x93,0x81,0x8a,0xbd,0x0,0x40,
+  0x60,0x6d,0x88,0x84,0x20,0xb6,0xfb,0x65,0x77,0x20,0x5b,0x2d,0x14,0x2a,0x93,0x81,
+  0x84,0x13,0x50,0x6f,0xd,0x96,0x12,0xc,0x20,0x29,0x18,0x40,0xcc,0x6e,0x5,0xb3,
+  0xfe,0x33,0x30,0xa8,0x4b,0x90,0x2d,0x16,0xe,0xb9,0xfb,0xa6,0x2b,0x60,0xe8,0xa0,
+  0x1,0xde,0xfe,0x7f,0xd2,0x66,0xf7,0xe7,0x0,0x28,0x4d,0xed,0xcf,0x1b,0x8,0xda,
+  0x57,0x0,0x10,0x4,0x6,0x3a,0x8,0x70,0xee,0x85,0x25,0x12,0xc3,0x8,0x68,0xe9,
+  0x77,0xc1,0xcf,0xe8,0x63,0x0,0x30,0x10,0x0,0x62,0x62,0x75,0x5f,0x16,0xce,0xb0,
+  0x91,0xd5,0xab,0x3e,0x88,0xae,0x6f,0xae,0x19,0xe0,0xf,0x5,0x86,0x23,0x3e,0xa7,
+  0x21,0xfe,0x7b,0xee,0x5f,0x6f,0xc2,0x23,0x4f,0x3d,0xef,0x34,0x79,0x2c,0x1d,0xba,
+  0x27,0xd4,0x25,0x8a,0x58,0xe8,0x99,0x1,0xe4,0x49,0x6,0x10,0x89,0x39,0xf1,0x7f,
+  0x2,0x5,0xa7,0xe7,0x9f,0x8c,0x2,0xb8,0x0,0x20,0x57,0x4,0x66,0x47,0xb6,0x2d,
+  0x7a,0xca,0xa5,0x85,0xbd,0x28,0x0,0xa0,0x5,0x26,0xe5,0xb7,0xc1,0xb9,0x63,0x52,
+  0x6c,0xff,0x9f,0x70,0xc2,0x9,0xbd,0x66,0xff,0x3,0xb8,0xa5,0xba,0xaa,0xb5,0x36,
+  0xd9,0xfc,0xd4,0x39,0x7,0x7,0x65,0x0,0x4d,0x3c,0xfe,0xb8,0xe3,0x97,0xf6,0xda,
+  0xc9,0x7a,0x30,0x9e,0xfb,0xc7,0x73,0xd4,0xca,0xe7,0x4b,0x7c,0x8c,0xa0,0x24,0xa1,
+  0x31,0xa3,0xc7,0xb0,0x2f,0xc0,0x24,0x9a,0xad,0xf7,0x23,0xc,0x49,0x67,0x9f,0xdf,
+  0xd6,0xf7,0x0,0x80,0x77,0x7d,0x43,0xd7,0x51,0x8,0x7c,0xff,0x69,0x90,0xf6,0x27,
+  0x3f,0x40,0x75,0x4b,0x12,0x1e,0x5e,0x51,0x0,0x75,0x56,0x81,0x0,0x0,0x7f,0x28,
+  0x30,0xe4,0xae,0x20,0xe4,0x74,0x7,0x92,0xa9,0xc1,0xc,0x2,0xa9,0xb4,0xdb,0x10,
+  0x24,0x29,0xa3,0x0,0xec,0x13,0x90,0x91,0x80,0x44,0x3b,0x84,0x4d,0x34,0xed,0x1a,
+  0xe7,0x23,0x0,0xb4,0x32,0x98,0x50,0x49,0xf0,0xcf,0xaf,0xb9,0x0,0xa6,0x4d,0x18,
+  0x9b,0xd5,0x3,0x40,0x79,0xfb,0x15,0x1b,0xd0,0xbd,0xff,0x3a,0x18,0xf8,0x1b,0x87,
+  0x3a,0x59,0x83,0x9a,0x13,0xd0,0x9,0x1d,0xe6,0x60,0x1,0x2a,0x9f,0x20,0x99,0x4a,
+  0xe2,0x34,0x8d,0x32,0x0,0xdc,0x75,0xc7,0x5d,0x7d,0x4,0x0,0x57,0xb,0x6,0x40,
+  0x2b,0xf8,0x30,0x0,0xf8,0xcc,0x80,0x40,0xc7,0x5d,0x40,0x46,0x5f,0xd0,0xbe,0x3f,
+  0x1a,0x10,0xe4,0xed,0xf7,0x24,0x2,0xc9,0xd7,0x69,0xfc,0xee,0x89,0xe7,0xe0,0x85,
+  0xd7,0xde,0x71,0xbe,0x61,0xd1,0xe0,0x7d,0xa1,0x31,0x55,0x20,0x56,0x9d,0xe5,0xce,
+  0x32,0x62,0xcb,0x2b,0xd1,0xaa,0x6c,0x3f,0xce,0x0,0x94,0x59,0x81,0x51,0x4d,0xeb,
+  0x2b,0x13,0x40,0x46,0x17,0x78,0x7d,0x7a,0x7,0x0,0x44,0xe,0x0,0xf9,0x0,0xe,
+  0x2b,0x6f,0x81,0x23,0x86,0x66,0x80,0x3a,0x18,0x1f,0x75,0xd4,0x51,0x9b,0x9d,0xfd,
+  0xe7,0x1f,0xfe,0x6,0x1d,0xb4,0x4f,0xe9,0xb1,0xf5,0xd,0xdc,0x64,0xf6,0xd1,0x63,
+  0x8e,0x3e,0xe6,0x3b,0xbd,0x72,0xa2,0xcd,0x1c,0xcf,0xbf,0xf0,0x3c,0x25,0xb,0x3d,
+  0x48,0xab,0x3b,0x53,0x92,0x10,0x55,0xef,0xb5,0xb6,0xb6,0xe1,0xfd,0x10,0x1a,0x1d,
+  0x94,0xd0,0x7b,0xa8,0xbf,0xeb,0xe9,0xf7,0xec,0xe7,0x58,0xd4,0x44,0xd5,0x51,0x10,
+  0xbb,0x78,0xeb,0xad,0xb7,0xa0,0xba,0xb6,0xe,0xfe,0xb2,0x3a,0x1f,0xbe,0x68,0x43,
+  0xad,0x9f,0x4f,0x91,0x0,0x9,0x0,0x4e,0x28,0x30,0xec,0x8b,0x4,0xa4,0x35,0x73,
+  0x40,0xe6,0x2,0x70,0x5b,0x70,0x59,0x18,0x94,0x52,0xdd,0x9c,0x92,0x4e,0x4b,0x37,
+  0x23,0x4d,0x0,0xb0,0x8,0xc2,0x16,0xad,0x19,0x20,0xc2,0x97,0xd7,0x7d,0xf7,0x5b,
+  0x70,0xd0,0x5e,0xbb,0x3a,0x89,0x3c,0x8e,0xa3,0x2f,0xe3,0xb3,0xff,0x35,0xda,0xaf,
+  0x83,0x41,0xae,0x88,0x80,0xc7,0x64,0xc8,0xb8,0x85,0x46,0x41,0x26,0x80,0xa,0xd,
+  0x26,0x92,0x9,0xf6,0x8f,0x90,0x9,0x70,0xd7,0x2f,0xfb,0x8,0x0,0x2e,0xbf,0xea,
+  0x72,0x7,0x0,0x8,0x8d,0x74,0xc1,0x54,0x66,0x80,0x6e,0xc7,0x79,0x4,0x3d,0x87,
+  0x19,0xa0,0x9b,0x3,0x7e,0xf,0xbf,0xa7,0x1c,0x38,0x1c,0xc0,0xa,0x68,0x5d,0x3e,
+  0xfc,0xf7,0xcb,0xdf,0x3d,0xe,0xef,0xa0,0x19,0xa0,0x5c,0xb8,0xf1,0x41,0xfb,0x41,
+  0x5b,0x46,0x39,0x0,0xa5,0xc7,0x58,0xf,0x3,0x4a,0x13,0x0,0xb2,0x18,0x80,0xee,
+  0x3,0x90,0xd5,0x66,0x6c,0x2,0xa8,0x56,0x52,0x32,0x4,0x88,0x0,0x70,0xea,0xa0,
+  0x26,0x98,0x5e,0x9e,0xe1,0x56,0xdf,0x87,0x1c,0x72,0x48,0xaf,0x9,0x98,0xbf,0x33,
+  0xf,0x39,0xc3,0x28,0xdb,0x4f,0x7a,0x84,0xf7,0x38,0xf2,0xf0,0x23,0xb7,0x6a,0xa6,
+  0x58,0x57,0xe3,0xe5,0x97,0x5f,0x26,0x16,0x50,0x8d,0x2a,0xbe,0x68,0x97,0x9,0xbb,
+  0x70,0xfa,0x33,0x9,0x2a,0xe8,0x9a,0x5d,0xa3,0xf9,0x42,0xc0,0x83,0x85,0x5e,0x67,
+  0x1,0x6a,0xe8,0x60,0x40,0x82,0xf6,0xe6,0x9b,0x6f,0xc2,0xca,0x95,0x2b,0xe1,0x9f,
+  0xeb,0xe3,0xf0,0x41,0x73,0x89,0xc8,0x5,0xc8,0xb,0x0,0x0,0x55,0x13,0x20,0x6b,
+  0x1,0x6c,0xcb,0x75,0x2,0x86,0x14,0xfd,0x4f,0xab,0x70,0x60,0x52,0xd6,0x74,0x24,
+  0xb9,0x39,0x8,0xa4,0x5a,0x45,0x38,0xb0,0x75,0x9,0x84,0x32,0xd5,0xce,0x35,0x5c,
+  0x78,0xda,0x31,0x70,0xdc,0x21,0x22,0xb7,0xa3,0xb3,0x48,0x80,0x53,0x20,0x64,0xfa,
+  0x7c,0x0,0x39,0xd6,0x11,0xf4,0x6b,0x7c,0xff,0x67,0xa9,0xf4,0x6f,0xbd,0x13,0x11,
+  0x85,0x1,0xa3,0xf1,0x28,0x3b,0x1,0xfb,0x14,0x0,0xf0,0xa6,0x7a,0x7c,0x0,0x7e,
+  0x33,0xa0,0xb3,0xe4,0x9d,0x2e,0xcd,0x0,0x7f,0x12,0x50,0x80,0x33,0x50,0x3f,0xf,
+  0xbd,0x97,0x90,0xf5,0xc7,0xf7,0x3c,0x2,0xf3,0x16,0x7d,0xe5,0x4c,0x9c,0x50,0xc5,
+  0x3e,0x80,0xd6,0x39,0xdb,0x89,0x2a,0x69,0x44,0x4f,0x4,0xe2,0x8,0x0,0x31,0x0,
+  0xa7,0x1,0x48,0xd4,0xe9,0xf,0x68,0x44,0xa2,0xae,0x19,0xc0,0x26,0x85,0xe9,0xac,
+  0xf9,0xa7,0x0,0x80,0x4c,0x80,0xb3,0x87,0x34,0xc0,0xc4,0x12,0x93,0x1d,0x80,0x7b,
+  0xee,0xb9,0x67,0xaf,0x8,0x97,0xbf,0x33,0xf,0x7d,0xc7,0x8d,0x9b,0x36,0xf2,0x42,
+  0x1a,0x38,0x16,0x1d,0x7a,0xc8,0xa1,0x93,0x7b,0xe5,0x44,0x5b,0x38,0x66,0xcf,0x9e,
+  0xfd,0x47,0x9c,0x49,0xe7,0x53,0x44,0x60,0xdc,0xd8,0x71,0x9c,0x90,0xc4,0xab,0x7,
+  0x29,0xed,0x2e,0xb7,0x4e,0x87,0xe2,0x20,0x87,0xa0,0xe1,0xa6,0x1,0xab,0xfb,0x6,
+  0x1,0xfb,0x94,0xed,0x48,0xe6,0xcf,0xab,0x9b,0x62,0xf0,0x66,0x13,0xce,0xfb,0xbc,
+  0x12,0x91,0xb,0x10,0x97,0xc9,0x40,0xb2,0xa9,0xab,0x53,0x13,0xa0,0x27,0x3,0x65,
+  0x84,0x9,0xe0,0x24,0x1,0xb1,0xe3,0x2f,0xed,0x2,0x80,0xd3,0x1d,0x88,0x22,0x3b,
+  0x6d,0x10,0xee,0x58,0x5,0xa1,0xd4,0x7a,0x69,0x49,0xda,0xf0,0xed,0xe3,0xe,0x85,
+  0xd3,0x8e,0x3a,0x88,0xbf,0x87,0x4e,0xfb,0xb3,0x2a,0x3,0xb5,0xb2,0x61,0xcf,0x31,
+  0x9f,0xf7,0xdf,0xe3,0xf8,0xd3,0x43,0x80,0xda,0xe7,0x7a,0xd6,0x87,0x90,0x35,0x5,
+  0xe4,0x73,0xa0,0xc,0x4c,0x4a,0xba,0x23,0x0,0xf8,0xf5,0x9d,0xbf,0xee,0x1b,0x0,
+  0xb8,0xec,0xca,0xcb,0x18,0x0,0xc8,0x9,0xc4,0x2b,0xd5,0x86,0xa4,0x30,0x46,0xb2,
+  0x63,0xfb,0x9e,0x5a,0xfe,0xce,0xcc,0x80,0x4e,0x4a,0x7c,0x73,0xf9,0x0,0xf4,0x63,
+  0xf4,0x23,0xdd,0x70,0xe7,0x43,0xb0,0x78,0xf9,0x6a,0xa7,0xee,0xdc,0x2a,0xdd,0x1b,
+  0xcc,0x50,0x3e,0x6b,0xff,0x10,0x2d,0x32,0x11,0xcf,0x73,0xd7,0xa0,0x97,0xe1,0x3f,
+  0x3b,0x16,0xd7,0x56,0xfe,0xd1,0x23,0x0,0x7e,0x13,0xc0,0x74,0x19,0x80,0x34,0x1,
+  0xa,0xcc,0x16,0x38,0x67,0x50,0x2d,0xc,0xcb,0x37,0x39,0x39,0x66,0xf2,0xe4,0xee,
+  0xcb,0x65,0xd0,0x8a,0x3d,0xb9,0xfa,0xf1,0xd1,0x77,0xa4,0xb0,0x1f,0x6b,0x58,0x80,
+  0x5f,0x1f,0x78,0xc0,0x81,0xd7,0x6d,0xc9,0xfd,0xeb,0xad,0xf1,0xc6,0x9b,0x6f,0x50,
+  0x9a,0xf0,0xe3,0x64,0x6,0xec,0xb2,0xcb,0x2e,0xbc,0xee,0x21,0xa5,0x29,0x87,0xd5,
+  0xda,0x4,0x86,0x1e,0xe2,0x93,0x5a,0x3e,0xa4,0x6a,0x3f,0xba,0x5e,0xc8,0x54,0x7f,
+  0x4e,0x8e,0xc0,0xf7,0xde,0x7b,0xf,0x3e,0x6e,0x8c,0xc1,0x3f,0x6b,0x2b,0x3b,0x61,
+  0x0,0x86,0xf4,0x1,0xc8,0x2e,0xc1,0xa6,0x9b,0x14,0xc4,0x0,0x90,0xd2,0x8a,0x82,
+  0x52,0xb2,0x9f,0xa3,0xf4,0x3,0xb0,0x6f,0x87,0x72,0x1,0x92,0x28,0xfc,0xc9,0xd5,
+  0xc2,0xec,0xc3,0x73,0x1f,0x77,0xc8,0x3e,0x70,0xfe,0xc9,0x47,0xf2,0xdc,0xf4,0x87,
+  0xf0,0x68,0x5f,0xb7,0xf7,0x3d,0xe9,0xc2,0x1,0xc9,0x3f,0x41,0xfd,0x3,0x75,0x30,
+  0x70,0x7c,0x1,0xda,0xbe,0xfe,0x19,0x4,0x0,0xc4,0xbc,0xc9,0x4,0xb8,0xfb,0xce,
+  0xbb,0xfb,0x6,0x0,0x2e,0xbd,0xe2,0x52,0x91,0x7,0x80,0x2,0x42,0x82,0xe8,0x37,
+  0x3,0xfc,0xa5,0xbc,0x59,0x42,0x1f,0xc0,0x8,0xb2,0x7c,0x0,0x91,0x70,0x96,0x33,
+  0xd0,0x9,0xfd,0x5,0x24,0x2,0xd1,0x8d,0xb8,0xe6,0x96,0xfb,0x60,0xd5,0xba,0x8d,
+  0x4e,0xa5,0x59,0xa6,0x78,0x2f,0xb0,0xc2,0xf9,0x92,0x1,0xe4,0x8b,0xae,0xb2,0xb1,
+  0x7c,0x27,0x7,0xc0,0x90,0x26,0x80,0xdb,0xb,0x20,0xe2,0x69,0x12,0x22,0x2a,0x2,
+  0xa3,0x20,0x5c,0xcb,0x96,0xb3,0xee,0x9f,0x2,0x80,0x72,0x68,0x85,0x73,0x6,0x6e,
+  0x82,0x8a,0xa8,0xc9,0x9,0x40,0xe4,0x10,0xdb,0x9c,0x61,0xab,0x76,0xdf,0x32,0xa3,
+  0xd6,0xe9,0x97,0xa3,0xc5,0xfe,0xa9,0xbc,0x97,0xec,0x6c,0x1c,0xa7,0xec,0xbf,0xdf,
+  0xfe,0xcf,0x6d,0xc9,0xfd,0xeb,0xad,0x31,0xe7,0x9d,0x39,0x55,0x78,0xdd,0xd5,0x24,
+  0xd0,0x13,0x76,0x9e,0xc0,0xf7,0x82,0x26,0xa8,0x32,0xe3,0x82,0xc2,0x7b,0x3a,0x13,
+  0x10,0x33,0xd1,0xab,0xfd,0x83,0x16,0x15,0xa5,0x41,0x2b,0xb,0xbf,0xfa,0xea,0xab,
+  0xb0,0xb8,0x35,0x6,0x4f,0xd6,0x54,0x81,0x9d,0x97,0xc3,0x7,0x40,0x9f,0xc6,0x26,
+  0x80,0xeb,0x4,0x74,0x4a,0x83,0xf5,0x92,0xe0,0x54,0x52,0xeb,0xa,0x44,0x8d,0x5d,
+  0xa8,0xc0,0x4b,0xa4,0x77,0x47,0x93,0x9b,0x38,0x19,0x8,0x24,0x88,0x1d,0x8c,0xf6,
+  0xff,0xa5,0xdf,0x3e,0x5e,0x0,0x80,0xae,0xf5,0x3,0x8a,0x81,0x82,0xc0,0x20,0x57,
+  0x26,0xa0,0xff,0xef,0xb3,0xd7,0x85,0x70,0xe9,0x3f,0x7f,0x3e,0xfe,0xa3,0xc,0x50,
+  0x92,0x37,0x3c,0xd6,0xf4,0x9b,0x5f,0xfd,0xa6,0x6f,0x0,0x60,0xd6,0x15,0xb3,0x56,
+  0x85,0x8d,0xf0,0x8,0xb2,0x45,0x94,0x40,0x6,0xf5,0xa3,0xb,0xcc,0xe7,0xf,0x58,
+  0xf2,0xdb,0x6f,0x1a,0x38,0xc2,0xed,0x73,0x6,0xea,0x7d,0xef,0x3c,0xb9,0x1,0x92,
+  0x1,0x5c,0x7d,0xcb,0xbd,0xb0,0x76,0x63,0x8d,0x73,0x9d,0xe9,0xa2,0x3d,0xc5,0xda,
+  0x72,0xb4,0xb2,0xc,0xd5,0x1,0x44,0x24,0x0,0xb0,0xf0,0xc7,0x65,0x16,0xa0,0xeb,
+  0x3,0xb0,0x95,0x23,0x30,0x14,0x71,0x1d,0x82,0xaa,0x9d,0x97,0x6d,0x79,0x19,0x0,
+  0x4e,0x94,0xc1,0xa1,0x56,0x38,0x7b,0xc0,0x3a,0x28,0x8,0x59,0x70,0xd2,0x49,0x27,
+  0x6d,0x76,0xfd,0x3f,0x6f,0x3,0x16,0xd6,0x54,0x5b,0xfa,0x9e,0xb,0x17,0x2e,0x54,
+  0x1d,0x7a,0x26,0xee,0xb3,0xcf,0x3e,0xdb,0x4d,0x8f,0x39,0xd4,0xca,0x75,0x78,0xed,
+  0x15,0xa3,0x46,0x8e,0xe2,0xfa,0x4,0xca,0xdf,0xf7,0x7a,0xfb,0xc5,0x4a,0x46,0x34,
+  0x72,0x39,0xfb,0xd4,0x7e,0x67,0xeb,0x18,0x92,0xfd,0xff,0xe2,0x8b,0x2f,0x72,0x41,
+  0xd0,0x63,0x35,0x43,0x21,0x13,0x54,0x10,0x24,0x9d,0xc1,0xdc,0x12,0xcc,0x7,0x0,
+  0xb6,0xe3,0x3,0x10,0x69,0xc0,0x1c,0x11,0x20,0xe7,0x9f,0xac,0xec,0x34,0x92,0x62,
+  0x39,0x37,0x3b,0xd5,0xa,0xb1,0x14,0xce,0xa1,0xf6,0xe5,0x12,0x0,0x6c,0xd8,0x7f,
+  0xf7,0xc9,0x70,0xf9,0xd9,0x27,0xca,0x72,0xf3,0x0,0x81,0xb7,0xdc,0xe5,0xc2,0xfc,
+  0x75,0x0,0x7e,0xe7,0x5f,0x50,0x1b,0xf1,0x20,0xef,0xbf,0xd3,0x7d,0x28,0x63,0x7a,
+  0x3f,0x1f,0xcf,0x47,0xf3,0x81,0xa2,0x0,0x7d,0xb,0x0,0x10,0x1e,0x11,0x8e,0x49,
+  0xed,0xaf,0x56,0xab,0xd,0x75,0xae,0xb1,0x73,0xad,0xde,0x13,0xe4,0xc,0xf4,0x34,
+  0xf9,0x50,0x9f,0xa9,0x2d,0x8f,0xed,0x8f,0x4,0xd0,0xf,0x75,0xd5,0xcf,0xef,0x85,
+  0xd,0x35,0x75,0xce,0x37,0x4c,0x15,0xec,0x41,0xf5,0xc0,0x48,0x15,0xf3,0x64,0xde,
+  0xb8,0x4c,0x8,0x8a,0xc8,0xe2,0x1f,0xd6,0xfe,0xde,0x3c,0x0,0x4f,0x7,0x60,0xb5,
+  0x5e,0x80,0x21,0x68,0xa5,0x27,0x11,0x8,0x19,0xc0,0xf0,0x70,0xb,0x9c,0x5d,0xb9,
+  0x6,0xf0,0x76,0xc0,0x19,0x67,0x9c,0xc1,0x91,0x80,0xee,0x8e,0xae,0x16,0xd6,0x74,
+  0xfa,0xe7,0x4b,0xc7,0x2a,0xf5,0xcd,0x97,0xef,0x8b,0xef,0xb1,0xc7,0x1e,0xdb,0xb4,
+  0x76,0xbc,0xb3,0xf1,0xc1,0xdc,0xf,0x3e,0xc2,0xfb,0x39,0x83,0x3a,0x9,0x51,0x15,
+  0x1f,0x69,0x28,0x7f,0x6a,0x6f,0x67,0x82,0x1f,0xf4,0x3c,0x68,0xac,0x5f,0xbf,0x1e,
+  0x9e,0x79,0xe6,0x19,0xa8,0x49,0x45,0xe1,0xd1,0xba,0x9d,0x20,0x15,0x2d,0xca,0xce,
+  0x3,0x50,0xc,0xc0,0x92,0xc,0x40,0x2e,0x16,0x22,0xc2,0x80,0x22,0x7,0x40,0x24,
+  0x5,0xc9,0xc,0x40,0x19,0x9,0xb0,0xb9,0x22,0x50,0x2d,0xec,0xd2,0x6,0xb1,0x74,
+  0x2d,0xd8,0xc8,0x0,0xc4,0xba,0x8f,0x36,0xec,0xb3,0xeb,0x44,0xb8,0x2,0x1,0x80,
+  0xc2,0xde,0xba,0xa0,0x3a,0xa1,0x3f,0x33,0x80,0xd6,0x5b,0x56,0x70,0x1,0x90,0xdf,
+  0x7,0x10,0xe0,0xb,0x8,0xa2,0xff,0x4e,0x53,0x52,0x7c,0x9d,0xd8,0x31,0x99,0x0,
+  0xf7,0xdc,0x75,0x4f,0xdf,0x0,0xc0,0x25,0x97,0x5d,0xb2,0xa,0x5,0x52,0x14,0x3,
+  0xc9,0x44,0x1f,0xb5,0xd,0x4a,0xe1,0xd,0x14,0xfa,0x1c,0x45,0x42,0x7e,0xa1,0xf7,
+  0x6b,0xfa,0x5c,0x79,0x6,0xf4,0xc3,0x5c,0x71,0xf3,0x3d,0x50,0x5d,0x27,0x96,0x7c,
+  0xa6,0xcf,0x49,0xe4,0x4f,0xc7,0x89,0x91,0xcf,0x1d,0x64,0xd4,0x5a,0x73,0xc0,0x6d,
+  0xa5,0xa3,0xa2,0x3f,0x0,0x6d,0xe3,0xca,0x1c,0xf0,0x1,0x40,0x24,0x20,0xc,0x98,
+  0x11,0xf9,0xe3,0x1c,0x32,0x62,0x0,0x68,0x86,0x73,0x2a,0xd6,0x80,0x61,0x9b,0xf0,
+  0xed,0x6f,0x7f,0xbb,0xdb,0x0,0x10,0x24,0xfc,0x41,0x3d,0xf7,0xa9,0xe4,0x97,0x16,
+  0xfc,0xa0,0x9c,0xfb,0xaf,0x96,0x7c,0x45,0x13,0xa0,0x63,0xfa,0xf4,0xe9,0x5,0x5b,
+  0x72,0xef,0x7a,0x7b,0x7c,0xf2,0xc9,0x27,0x6f,0xe2,0xe6,0x20,0x72,0x4,0x52,0x7b,
+  0x6f,0x9a,0xb8,0x7e,0x0,0xe0,0xfb,0x91,0xc3,0xc3,0xdf,0xdd,0x41,0xad,0xcd,0xfe,
+  0xf6,0xb7,0xbf,0x41,0x5d,0x1a,0x1,0xa0,0x7e,0x24,0x24,0xa3,0xc5,0xdc,0x1f,0xd0,
+  0x93,0x9,0xe8,0x30,0x0,0xd7,0x4,0xb0,0x65,0x18,0xd0,0x5,0x0,0xc5,0x2,0x64,
+  0x18,0x90,0x0,0x80,0xf2,0x0,0xb4,0x95,0x9d,0x62,0x19,0x2,0x80,0xe5,0x22,0x1,
+  0x14,0xef,0xcc,0x8c,0x49,0xe3,0xe1,0xea,0x73,0x4f,0x82,0x58,0x3c,0x16,0x4c,0xdb,
+  0x75,0x9b,0xdf,0x1f,0x9,0xe8,0xc4,0x11,0x18,0xe4,0x3,0x70,0xfb,0x3d,0x48,0x60,
+  0xd1,0xd7,0x85,0x90,0x7d,0x5,0xc8,0xd9,0x4e,0x4e,0xc0,0x7b,0x7e,0xdd,0x57,0x0,
+  0x70,0xe9,0x25,0x22,0xa,0x80,0x88,0xa8,0x2f,0x50,0xe9,0x68,0xfb,0xb0,0xe1,0x11,
+  0x5e,0xdd,0xc6,0xf7,0xd0,0xfa,0x1c,0xe,0x40,0x8f,0x1f,0x41,0xb3,0xf5,0xf5,0xca,
+  0x43,0x8f,0x43,0x10,0xb7,0x34,0xf1,0xae,0xf8,0xd9,0x7d,0x50,0xdb,0x20,0x0,0x80,
+  0x7b,0xcb,0xe5,0xed,0x26,0x0,0x20,0x5e,0x28,0x4b,0x81,0x29,0x17,0x40,0xb4,0x94,
+  0xe6,0xae,0xc0,0x31,0xbd,0x13,0x50,0x4c,0xb3,0xfb,0x73,0x1,0x80,0xcc,0x4,0xe4,
+  0x62,0xa0,0x36,0x18,0x1e,0x6a,0x86,0xb3,0xcb,0x57,0x31,0x0,0x9c,0x79,0xe6,0x99,
+  0x9d,0x3,0x80,0xd3,0x10,0x37,0x78,0x95,0x1d,0xa7,0xad,0xb6,0xd6,0x57,0x8f,0xfa,
+  0xec,0x91,0x43,0x8d,0x8a,0x3f,0x96,0x2f,0x5f,0x4e,0xef,0x6d,0x9d,0x36,0x6d,0x5a,
+  0xf1,0x96,0xdc,0xbb,0xde,0x1e,0x9f,0x7d,0xf6,0xd9,0x6b,0xb8,0x39,0x94,0xfa,0x4,
+  0xd0,0x4a,0x3f,0xd4,0xaf,0x20,0xe7,0xa,0xc5,0x2a,0x3d,0x18,0x7a,0xbe,0x60,0x29,
+  0x31,0x80,0xa7,0x9e,0x7a,0xa,0xea,0x33,0x51,0xf8,0x73,0xd3,0x58,0x48,0x44,0x2,
+  0x6a,0x1,0x2,0x0,0x40,0x67,0x0,0x6a,0x81,0x10,0xae,0x4,0x94,0x39,0x0,0xbc,
+  0x4d,0x8a,0x34,0x60,0xd1,0x17,0x0,0x4d,0x80,0x4c,0x3,0x40,0xc7,0x72,0xf1,0x71,
+  0x78,0x4f,0x76,0xdf,0x65,0x2c,0x3,0x0,0x39,0xbd,0x1d,0xed,0x2f,0x69,0xb9,0x47,
+  0xf0,0x75,0xa1,0xf6,0x35,0xc,0xf5,0xd8,0xfe,0x39,0x52,0x87,0xfd,0x7e,0x0,0x87,
+  0x6d,0xf8,0xea,0xb,0x98,0x1,0x98,0x56,0xd3,0xbd,0x77,0xdf,0xdb,0x37,0x0,0xf0,
+  0xbd,0x59,0xdf,0x13,0x4e,0xc0,0xa8,0x70,0x2,0xea,0xda,0xdf,0x93,0xef,0x1f,0xe0,
+  0x3,0x8,0x72,0x6,0xfa,0x81,0x20,0xa8,0xd2,0xcf,0x9f,0x18,0xe4,0x3f,0xf,0x1,
+  0xc0,0xd5,0xb7,0x3e,0x0,0xd5,0xb5,0x8d,0x4e,0x1d,0x7a,0xb2,0x60,0x37,0x49,0xfb,
+  0x15,0x3,0x10,0xb9,0x0,0x22,0xf6,0x1f,0x77,0x6a,0x1,0xb8,0x12,0xd0,0xe9,0x5,
+  0xa0,0xa5,0x2,0xab,0x96,0x61,0x86,0x21,0x13,0x81,0xd2,0x2e,0x3,0xc0,0xc9,0x32,
+  0xdc,0x68,0x82,0x33,0x4b,0x96,0x31,0x0,0x9c,0x7d,0xf6,0xd9,0x81,0x0,0xe0,0x8,
+  0xb8,0xd6,0xb,0xd3,0xa3,0xed,0x3,0x16,0xdd,0x50,0x2b,0xeb,0xd0,0x96,0x1b,0x7d,
+  0xa2,0x9,0x43,0x36,0x30,0xbd,0x36,0x65,0xca,0x94,0xed,0xa6,0x9f,0x23,0x8d,0x5,
+  0xb,0x16,0x7c,0x80,0x9b,0xbd,0x8,0x0,0xa8,0x9b,0x8f,0x1f,0x0,0xc4,0x57,0x37,
+  0xdc,0xb2,0xe0,0x80,0xc8,0x47,0x77,0x4d,0x80,0xbf,0xfe,0xf5,0xaf,0x8,0x0,0x31,
+  0x78,0xac,0x65,0x3c,0x33,0x0,0xee,0xd,0x20,0x1b,0xbc,0xb0,0xb3,0x56,0x15,0x21,
+  0x99,0x9a,0x9,0x40,0xb6,0x73,0xc6,0x2d,0x9,0x6,0x9f,0x13,0xd0,0xe2,0x45,0x5d,
+  0x13,0x62,0x45,0x67,0xd9,0xe1,0x39,0x96,0x41,0x33,0x32,0xb1,0x82,0x93,0x9a,0x68,
+  0xcc,0x98,0x34,0xe,0xae,0x38,0xf3,0x78,0x6,0x62,0xbf,0xf6,0xd7,0xa9,0xb9,0xbf,
+  0xf0,0xc7,0xdf,0x2f,0xc0,0x69,0xc,0xe2,0xb,0x23,0xfa,0xab,0x1,0x69,0x2e,0x3b,
+  0x4e,0x40,0xcb,0xad,0x2c,0x54,0xa1,0x40,0x19,0xf6,0xee,0x5b,0x0,0x40,0x2d,0xcf,
+  0x0,0xa0,0x52,0x81,0xf5,0x1e,0xf4,0xb9,0xf2,0x0,0xba,0x7c,0x18,0xa1,0xc0,0x30,
+  0xa0,0x3f,0xe7,0x5f,0x31,0xd,0xc7,0x1f,0x80,0xc7,0x28,0x47,0xfa,0xfb,0x77,0xfc,
+  0xe,0x36,0xd5,0xd4,0x39,0xf5,0xe8,0x89,0x7c,0x4,0x0,0x6a,0x1c,0x19,0x93,0xce,
+  0x22,0x4f,0x43,0x90,0xb8,0x68,0x0,0xa2,0xc2,0x80,0x41,0x3e,0x0,0x5,0x4,0x21,
+  0x29,0xbd,0x26,0x95,0x94,0xaa,0xc5,0x40,0xda,0x61,0x28,0x2,0xc0,0xe9,0x85,0x8b,
+  0x21,0xa,0x16,0x33,0x0,0x7f,0xb,0xf0,0x5c,0x61,0x3d,0xb5,0xef,0x59,0x70,0x43,
+  0x81,0x80,0x6a,0xf6,0x29,0x27,0x6,0x31,0x28,0x6a,0x94,0x49,0x8b,0x65,0xc8,0x68,
+  0xc1,0xf0,0x49,0xbb,0x4c,0x5a,0xb7,0x25,0xf7,0xaf,0x37,0xc7,0xc2,0x85,0xb,0xd7,
+  0xe2,0x66,0x18,0x99,0x0,0xe4,0x4,0xa4,0x89,0xaf,0xb7,0x29,0xf7,0x4c,0x3a,0xdf,
+  0x7a,0x4,0x3d,0x61,0x1,0x54,0x16,0x4c,0x0,0x50,0x93,0x89,0xc3,0x5f,0x3b,0x76,
+  0x81,0x54,0xa4,0x48,0xe6,0x76,0x68,0xfd,0x0,0x14,0x0,0xf8,0x52,0x81,0xf5,0x28,
+  0x80,0x8,0x1,0xa2,0xd0,0x26,0x93,0x6c,0x6,0x58,0x29,0xb1,0x52,0x30,0x3,0x40,
+  0xa2,0x9d,0x9d,0x80,0x51,0x64,0x0,0xa1,0xe4,0x4a,0x49,0x28,0x6c,0xd8,0x73,0xca,
+  0xce,0x70,0xc9,0xb7,0x8e,0xe6,0x96,0x68,0x41,0x95,0x7b,0x39,0x93,0x81,0x7c,0xa1,
+  0x3f,0x4f,0xe7,0x9f,0x8c,0xb7,0xe,0x40,0x8f,0x20,0xa8,0xae,0x40,0x7e,0x96,0xc0,
+  0xe5,0xc0,0x66,0xda,0x49,0x5,0xbe,0xef,0xee,0xfb,0xfa,0x6,0x0,0x2e,0xbe,0xe4,
+  0x62,0x66,0x0,0x34,0x39,0x39,0x11,0x28,0xe2,0xa,0xa4,0xa2,0xe9,0x81,0xf1,0xfc,
+  0x80,0x8,0x40,0x2e,0x16,0xa0,0xb7,0x12,0x53,0x11,0x1,0xc7,0x17,0x10,0x71,0xab,
+  0x0,0x1d,0x0,0x40,0x54,0xbf,0xf1,0xae,0x47,0x60,0x5d,0x75,0x9d,0x53,0x9f,0x9e,
+  0x44,0x13,0x80,0xd3,0x7e,0x49,0x53,0x90,0xbd,0x18,0xd5,0xc2,0x80,0x8a,0x1,0xc4,
+  0x62,0x72,0x91,0x50,0x7d,0x2d,0x80,0xb0,0x53,0x16,0x2c,0x18,0x80,0xa8,0x6,0x14,
+  0x0,0xa0,0x8a,0x48,0xda,0xa0,0xa,0x5a,0xe0,0xb4,0xbc,0x45,0x50,0x60,0x64,0xe0,
+  0xb4,0xd3,0x4e,0xe3,0xca,0xb8,0xba,0xba,0x3a,0xd6,0xf0,0x61,0xdd,0x9,0xea,0x2b,
+  0x64,0xa,0x5c,0x5c,0x33,0x6b,0x35,0x5d,0x31,0x89,0xe8,0x3b,0x53,0x3b,0x2e,0xd2,
+  0x80,0x34,0x19,0xf0,0xce,0x1d,0x36,0x71,0xc2,0xc4,0xd7,0x7b,0x55,0x8a,0x37,0x73,
+  0x2c,0xfa,0x62,0x11,0x4a,0x21,0xb4,0x90,0xc0,0x53,0x97,0x20,0x8a,0x4f,0xf3,0x6f,
+  0xf,0x46,0xa0,0xcd,0xef,0x1f,0xb9,0x7a,0x1f,0xea,0xc2,0x45,0xdf,0x9f,0xea,0x2b,
+  0x96,0x2e,0x5d,0xa,0x7f,0xff,0xfb,0xdf,0x61,0x5d,0xa6,0x0,0x9e,0x49,0x4e,0x6,
+  0x33,0x5a,0x98,0x1d,0x2,0xc,0x89,0x5,0x43,0xdd,0x4c,0x40,0x91,0xa,0x6c,0x4b,
+  0x36,0xa0,0x16,0xa,0x11,0xb5,0x0,0xa2,0xa,0x90,0x19,0x40,0x52,0xb6,0x5,0x93,
+  0x2b,0x3c,0x45,0x33,0x8d,0x10,0xca,0xac,0xc1,0x79,0x25,0xae,0x6f,0x9f,0x69,0x3b,
+  0xc3,0x45,0xa7,0x1e,0xe9,0x35,0x1,0xf4,0x9a,0x7f,0x7d,0xcd,0x0,0xbd,0xc9,0x87,
+  0xd9,0x49,0x1e,0x40,0x50,0x11,0x91,0x2c,0x3,0xf6,0x44,0x5,0x7c,0xe1,0x44,0x7a,
+  0x9d,0x14,0x2f,0x1,0xc0,0xfd,0xbf,0xb9,0xbf,0x6f,0x0,0xe0,0xa2,0x4b,0x2e,0x5a,
+  0x85,0x37,0xd5,0xad,0x5,0xd0,0x1,0x40,0xef,0xd4,0xab,0x9,0x6d,0x50,0xd8,0x2f,
+  0x10,0x10,0x72,0xc4,0xfe,0xfd,0xce,0x41,0x3f,0xb0,0x10,0x0,0xfc,0xe8,0xde,0x3f,
+  0xc1,0xea,0x8d,0x35,0x72,0x12,0xda,0x90,0xca,0x9b,0x6,0x56,0x28,0x4f,0x56,0x2,
+  0x8a,0x5c,0x0,0xb1,0xb6,0x5c,0x5c,0x6a,0xe,0x15,0x6,0x24,0x7f,0x80,0xbb,0x3e,
+  0xa0,0xa7,0x12,0x30,0x22,0xd6,0x3,0xe4,0x89,0x65,0xe9,0xc9,0x40,0xed,0x50,0x6a,
+  0xb7,0xc2,0x37,0xa3,0xb,0xa1,0x3c,0x9c,0x84,0xe3,0x8f,0x3f,0x9e,0x93,0x61,0x36,
+  0x6e,0xda,0x84,0xf3,0x2b,0x25,0x7b,0x53,0x98,0x72,0x82,0xf3,0xff,0x41,0x2f,0x93,
+  0x75,0x42,0x64,0x21,0xd5,0x44,0x25,0x24,0x9b,0xd1,0x7a,0x85,0x27,0x8a,0xe7,0xa7,
+  0x34,0xdb,0xda,0xda,0x5a,0x4e,0xb4,0xc1,0x71,0xd3,0x84,0x9,0x13,0x6e,0xdd,0xda,
+  0xc2,0xdd,0x9d,0xb1,0x78,0xf1,0xe2,0xc3,0x71,0xf3,0x6f,0xba,0x17,0x64,0xfe,0xa8,
+  0x4c,0x39,0xa7,0x89,0x85,0xd6,0xea,0xca,0x93,0x16,0x6b,0x29,0xa6,0x63,0x39,0xab,
+  0x10,0x39,0xcb,0x9e,0xcb,0xd9,0xa9,0x40,0x84,0x1a,0x83,0x50,0x74,0x81,0xb2,0x0,
+  0x5f,0x7a,0xe9,0x25,0x58,0x96,0x29,0x83,0x17,0xd3,0xbb,0x68,0x4b,0x84,0x69,0x21,
+  0x40,0x2,0x6a,0xcb,0x92,0xb5,0x0,0x2a,0x11,0x48,0x2d,0x1b,0xae,0xad,0xb,0x40,
+  0xaf,0x25,0x45,0x23,0x10,0x1,0x0,0xc2,0xa4,0xa3,0x2c,0x40,0xf2,0x1,0xc4,0xcd,
+  0x6,0x8,0x67,0xd6,0xf2,0x9c,0xa3,0xd2,0x82,0x3,0xa7,0xef,0x2,0xe7,0x9d,0x78,
+  0xa8,0x30,0x1,0xb4,0xec,0xbc,0x40,0x6,0x90,0xc3,0x4,0xd0,0xb5,0x7f,0x50,0x13,
+  0x11,0x8f,0x49,0xa1,0xc5,0xfe,0xfd,0x91,0x84,0x4c,0x2a,0xe3,0xa4,0x2,0xdf,0x7f,
+  0x4f,0x5f,0x3,0x0,0x99,0x0,0x11,0xcd,0x4,0x50,0xd4,0x5c,0xa,0x25,0x75,0xa,
+  0xd2,0xe3,0xf9,0xfe,0xe5,0xbe,0xbb,0x32,0x1,0x3a,0x6b,0xff,0xe5,0x77,0x4,0x12,
+  0x0,0xfc,0xe2,0xf7,0x4f,0xc2,0x92,0x55,0xeb,0xc5,0xf2,0x4e,0x78,0x9d,0x89,0xd8,
+  0x64,0x4,0x80,0xb8,0x4,0x0,0x31,0x61,0x6c,0xd9,0x1c,0x44,0xe4,0x0,0xc4,0x9d,
+  0x54,0x60,0xbd,0x1e,0xc0,0x1b,0x6,0x54,0xb9,0x0,0x1a,0x0,0x48,0x3f,0x40,0x5e,
+  0xa6,0xd,0x4e,0x8a,0x2c,0x80,0xa1,0x91,0x76,0x38,0xec,0xb0,0xff,0xdf,0xde,0x7b,
+  0x0,0xda,0x51,0x5d,0xe7,0xc2,0x6b,0xe6,0xf4,0xdb,0xd4,0x1b,0x12,0x92,0x10,0x12,
+  0xcd,0x20,0x8a,0x30,0x4,0x90,0x40,0x14,0x21,0x30,0x32,0x18,0xc,0x36,0x81,0x60,
+  0xe3,0x60,0xf2,0x8c,0xe3,0xfc,0x89,0xe3,0x3f,0x79,0x38,0xf1,0x73,0x6c,0xff,0x76,
+  0xc8,0x4b,0x71,0xfc,0x5e,0x6c,0xdc,0x1b,0xb6,0x31,0xa1,0x83,0x45,0x13,0xc5,0x6,
+  0x44,0xef,0x8,0x90,0x0,0x81,0x50,0xef,0x57,0xba,0xba,0xe5,0xf4,0x99,0x7f,0xaf,
+  0xb5,0xcb,0xac,0xd9,0x67,0xcf,0xb9,0x57,0x42,0xd2,0xbd,0x46,0xda,0x62,0x38,0xe7,
+  0xce,0x99,0x3e,0x7b,0x7d,0xab,0xaf,0x75,0x26,0xf5,0x2,0x40,0x9,0x0,0x9,0xd5,
+  0x74,0x94,0xb1,0x3a,0xed,0xd4,0x2d,0xb7,0x90,0x26,0xe,0x39,0x42,0x5d,0xca,0x9b,
+  0x5e,0x11,0x6e,0x83,0xe2,0xff,0x8c,0x83,0xa7,0x53,0x2e,0x0,0x56,0xe4,0x15,0x3f,
+  0x2f,0x3e,0xe4,0x90,0x43,0xe6,0xc,0x36,0xf1,0xe3,0x78,0xfb,0xed,0xb7,0xaf,0x13,
+  0x1f,0xd7,0x22,0x91,0x62,0x1b,0x34,0xc,0x57,0x46,0xa0,0x22,0x1d,0x35,0x34,0x49,
+  0x99,0x26,0x4d,0x18,0x40,0xc7,0x7a,0xc8,0x94,0x60,0xf9,0x3e,0xa3,0x14,0x61,0xdf,
+  0x6f,0xcc,0x17,0xc0,0xfb,0xc7,0x5,0xa3,0x0,0x31,0x1f,0xe0,0xd5,0xca,0x68,0x78,
+  0x24,0x3c,0xcc,0x0,0x7a,0xe4,0x1,0xf0,0x19,0x0,0x44,0x2a,0x40,0xac,0x49,0x88,
+  0xe,0x5,0xc6,0xef,0x25,0x19,0x1,0x18,0x54,0x78,0xc,0x40,0x9f,0x2,0x80,0x4e,
+  0x48,0x7,0x1b,0x40,0x1b,0x6d,0xe6,0x9f,0x7c,0x2c,0x5c,0x3c,0xef,0x64,0xf2,0x2,
+  0xd8,0x61,0xbe,0x4e,0x1b,0x0,0x17,0xed,0x19,0xe1,0xf3,0xa,0x41,0xd,0x85,0x44,
+  0xf8,0xa7,0xc5,0xfd,0x79,0x43,0xd2,0x9a,0x50,0x5f,0x48,0xd2,0x12,0x0,0xf0,0xbd,
+  0xff,0xfb,0xbd,0xc1,0x1,0x80,0xab,0xfe,0xe2,0x2a,0x4a,0x6,0x42,0xe2,0x47,0x10,
+  0xd0,0x22,0xbb,0xc9,0xfd,0xf7,0x18,0x97,0x67,0x9c,0xda,0x5,0x4,0x49,0x52,0x0,
+  0xef,0x0,0x64,0xf6,0x49,0xa7,0xe2,0xc1,0x40,0x2c,0x66,0x0,0x1,0xe0,0xdb,0xbf,
+  0xb8,0x3,0x5e,0x5f,0xbe,0xd2,0x5c,0x67,0x25,0x7b,0x38,0xd4,0x20,0x2b,0x27,0x4b,
+  0xbe,0x5,0xfc,0xc,0x36,0x97,0xcc,0x49,0xbb,0x40,0x46,0x55,0x6,0xd6,0xb1,0x0,
+  0x3a,0xf,0x20,0xed,0x28,0x8,0x92,0xd2,0xed,0xa7,0x1a,0xd,0x81,0x1f,0x4d,0xbd,
+  0xe,0x7,0xa7,0xb7,0x51,0xf,0x40,0xac,0x6,0x84,0xf1,0xf0,0xd8,0xdf,0xe,0x87,
+  0x6e,0xa5,0x25,0x5f,0x7c,0xbc,0xd6,0x9b,0xe9,0xb6,0x13,0xe8,0x16,0x5c,0xf8,0xd2,
+  0x75,0x5b,0x6d,0x30,0x99,0x67,0x78,0x7f,0x87,0x1e,0x72,0x8,0x71,0x1f,0x4,0x17,
+  0x90,0xa9,0xc0,0xd3,0xa6,0x4f,0x9f,0xbe,0xdb,0x2a,0xc4,0xee,0x22,0xf1,0x23,0x2a,
+  0xbe,0x2b,0x96,0xc9,0xd8,0x3f,0x0,0xc5,0x74,0x8c,0x56,0xec,0x16,0xf7,0x4e,0x73,
+  0xc2,0xe4,0x0,0xc8,0xd6,0xe5,0x9e,0xc7,0xdf,0xaf,0x2a,0x7,0xef,0xb1,0x5c,0x1,
+  0x2b,0x74,0x98,0x32,0x1,0xc5,0x67,0x9b,0x38,0x2e,0x2,0xcc,0x3,0xf,0x3c,0x40,
+  0x9d,0x83,0x9f,0xaa,0x4d,0x86,0xe7,0x60,0x9a,0xdb,0x0,0x48,0xf1,0x1a,0x41,0x2c,
+  0x19,0x48,0xd6,0x5,0xac,0x45,0x75,0x1,0x2b,0xf2,0xfd,0x51,0x59,0x30,0x65,0xcb,
+  0x1,0x55,0xb,0x20,0xd4,0x71,0x0,0xc1,0x66,0xc8,0x84,0x5b,0x8c,0xdd,0xf6,0x82,
+  0xd3,0x4f,0x80,0x5,0xa7,0x1e,0x4f,0xf7,0x65,0x1b,0xeb,0xec,0x7c,0x80,0x66,0x2a,
+  0x80,0x26,0x78,0x57,0x33,0x91,0x98,0x17,0x40,0xd5,0x13,0x68,0x88,0x23,0xc0,0x7a,
+  0x0,0xe2,0xfa,0x73,0xf9,0x1c,0xc5,0x1,0x5c,0xff,0x7f,0xaf,0x1f,0x1c,0x0,0xf8,
+  0xf3,0xbf,0xf8,0x73,0xaa,0x7,0xc0,0x2b,0x1,0x1b,0xb1,0x9c,0x8b,0xe8,0xba,0x32,
+  0x30,0xd3,0x81,0x7,0x2a,0x5,0x24,0x65,0x6,0xba,0x42,0x8e,0x35,0x0,0xfc,0xe8,
+  0xe6,0xfb,0xe1,0xb9,0xd7,0xde,0xa2,0x70,0x70,0xa2,0xd7,0xfc,0x21,0x50,0xac,0xe7,
+  0x64,0x41,0x10,0x8c,0x5,0x20,0x2f,0x40,0x81,0xfa,0x2,0x2,0x1,0x40,0x4e,0x79,
+  0x0,0x74,0x45,0xe0,0x78,0x53,0x90,0xa8,0x37,0x60,0xe4,0x9,0x88,0xec,0x0,0xb2,
+  0x32,0xf0,0x99,0xde,0x52,0x38,0x32,0xbd,0x9,0x84,0x58,0xe,0x1f,0xff,0xf8,0xc7,
+  0xa9,0x74,0xd5,0x76,0x1,0x2,0xa8,0x3e,0xea,0xe8,0x2d,0x22,0x7e,0x9a,0x20,0x92,
+  0xc0,0xeb,0x46,0xdf,0xf,0x2c,0x31,0x59,0x89,0xcd,0xc0,0x1a,0x6e,0x88,0xdf,0xe,
+  0x38,0x60,0x22,0x4c,0x9a,0x38,0x91,0xb8,0x2b,0xde,0xa7,0x18,0xdf,0x12,0x0,0xf0,
+  0x95,0xc1,0x4,0x0,0xa1,0x93,0x9f,0x27,0x3e,0x16,0xe2,0xfb,0x44,0x3,0x20,0xe6,
+  0xa9,0x2f,0x5b,0x26,0x3,0x14,0x4d,0x65,0x68,0xcd,0xd1,0xcd,0xa7,0xe6,0xfe,0x51,
+  0xd5,0xe8,0xf8,0x67,0xc4,0xfd,0x35,0xc3,0xc0,0xd8,0x2,0x24,0x8c,0x3b,0xee,0xb8,
+  0x83,0xec,0x0,0x8f,0x7a,0x87,0xc3,0x92,0x70,0x92,0xa5,0xff,0xa7,0x19,0x0,0xd4,
+  0x55,0x73,0x50,0x65,0x0,0xd4,0x89,0x41,0x5c,0x2,0x30,0xd9,0x7f,0x65,0x53,0xa,
+  0xc,0x2a,0x91,0x17,0x20,0x5d,0xdf,0x4,0x59,0x5f,0xba,0x93,0x11,0x8d,0x2f,0x9d,
+  0x7f,0xa,0x9c,0x75,0xd2,0x31,0x26,0x17,0xc0,0x19,0xf3,0xef,0x50,0x1,0xb8,0x9e,
+  0x1f,0xab,0xf,0x18,0xba,0x5d,0x80,0xfc,0x78,0x2e,0xfb,0x2,0xce,0x19,0x7c,0xce,
+  0x98,0x7b,0x81,0xa1,0xc0,0xdf,0xff,0xaf,0xef,0xf,0xe,0x0,0x7c,0xe6,0xea,0xcf,
+  0x10,0x0,0x68,0x1b,0x0,0xb7,0xd2,0x9b,0xc0,0x20,0x3f,0x1d,0xd5,0xfb,0xdf,0x59,
+  0x29,0x60,0x20,0x2a,0x80,0xde,0x57,0xd9,0x1f,0x50,0x34,0xfa,0xef,0xfb,0x1f,0x83,
+  0x87,0x9f,0x79,0xd5,0xf8,0xdb,0xbd,0xfc,0xc,0xe8,0xae,0xc8,0x8e,0x40,0x9e,0xd6,
+  0x19,0x55,0x21,0x49,0xd0,0xa1,0xc0,0x59,0x59,0x1f,0xd0,0x53,0xd,0x42,0x1b,0xd2,
+  0x81,0x95,0x41,0x30,0xc4,0x7b,0x51,0x5d,0x68,0x79,0x48,0xf0,0x2c,0x58,0x1,0xa7,
+  0xf8,0xef,0x90,0x7,0xe0,0x8a,0x2b,0xae,0xa0,0xf3,0x76,0x62,0x71,0xc,0x53,0xc8,
+  0x21,0xd2,0x7b,0xa3,0xfa,0xf0,0x11,0xc1,0xeb,0xbf,0xa9,0x99,0x66,0xa0,0x9a,0x73,
+  0xea,0x5c,0x0,0x55,0x5,0x18,0xbb,0xfe,0x1c,0x71,0xf8,0x11,0xa4,0x5a,0xa0,0x84,
+  0x21,0x6,0xfe,0x6f,0x8a,0x0,0x81,0xae,0x41,0x4,0x0,0x72,0xff,0xa1,0x78,0x8e,
+  0x12,0xc0,0xda,0xb5,0x6b,0x61,0xed,0xba,0x75,0x90,0xc5,0xd8,0xa,0x2f,0x22,0xfc,
+  0xa8,0xdb,0x53,0x2a,0xc6,0xed,0xb5,0x74,0x90,0x24,0x1,0x10,0xf0,0x8b,0xe7,0x3e,
+  0xac,0x63,0x18,0x6c,0xdc,0xb8,0x11,0xee,0xba,0xeb,0x2e,0x58,0xb7,0x69,0xb,0x3c,
+  0x90,0x9a,0x5,0xef,0xc1,0xe8,0xb8,0xfe,0x4f,0x85,0x69,0x53,0x2a,0x65,0x43,0x88,
+  0xfb,0x44,0xf4,0xca,0xb,0x10,0xd4,0xa2,0x6,0x21,0xa6,0x31,0x8,0x8a,0xfd,0x42,
+  0xfc,0x47,0x10,0xa8,0xca,0x0,0x20,0x4a,0x6,0x2a,0xcb,0x74,0xe0,0x4c,0x7d,0x3d,
+  0xe4,0x53,0xbd,0x8a,0x91,0x84,0x70,0x95,0xd0,0xff,0x31,0x1a,0x90,0x22,0x4e,0xeb,
+  0x71,0x2f,0x40,0xac,0x28,0x88,0x65,0xec,0xb3,0x55,0x0,0xd3,0x3c,0xc4,0x6e,0x32,
+  0x52,0x6f,0x34,0x2c,0xea,0x4f,0x9e,0x37,0x80,0xbf,0x6b,0x0,0x40,0x23,0xe0,0xa0,
+  0x1,0xc0,0x95,0x57,0x5d,0xb9,0x52,0x10,0xa1,0xf1,0x2,0x70,0xfd,0x5f,0x4b,0x1,
+  0xc6,0x3,0xe0,0xf0,0xfb,0xf,0x44,0xa,0x88,0x35,0x14,0xe1,0x19,0x80,0xea,0x78,
+  0x4,0x30,0xa9,0x8,0x20,0xf0,0x1,0x3d,0xf4,0xd4,0xcb,0x70,0xcb,0xa2,0x27,0x24,
+  0xf1,0x60,0x5b,0x9b,0xd6,0x69,0xb0,0xb5,0x57,0x1,0x40,0xbe,0x20,0xed,0x0,0x28,
+  0x5,0xe4,0x14,0x0,0x10,0x8,0x68,0x2f,0x40,0x3a,0x56,0x19,0x88,0x26,0x94,0xea,
+  0x1d,0x28,0xcb,0x82,0x2b,0x4f,0x0,0x1,0x80,0x52,0x3,0xc4,0xe4,0x39,0x28,0xdc,
+  0x4,0x1f,0x9,0x5e,0x14,0x2f,0x25,0x7,0x57,0x5d,0x75,0x15,0xc,0x1f,0x3e,0x9c,
+  0x44,0x75,0xec,0xa5,0x17,0x32,0xd1,0x4d,0x2e,0xca,0xba,0x1f,0x4,0x91,0x64,0x10,
+  0x6b,0xb6,0x29,0xc5,0x7f,0x52,0x9,0x20,0xde,0x62,0x7b,0xea,0xe4,0xa9,0xd4,0xb3,
+  0xf,0xa5,0x0,0xd5,0xe0,0xf3,0xbb,0x2,0x0,0xfe,0x6a,0x90,0x88,0x9f,0xb2,0x0,
+  0xf1,0x3d,0xa2,0xff,0x1f,0x7,0x8a,0xff,0xd8,0x31,0x28,0x16,0xcf,0x11,0x93,0x2,
+  0x92,0xf5,0x7d,0xe,0x0,0xdc,0x6,0x90,0x13,0xa2,0x7f,0x47,0x7b,0x3b,0xe5,0x41,
+  0x20,0x0,0x74,0x56,0x7c,0xb8,0x2b,0x7d,0x12,0xec,0x48,0xb5,0x5b,0x1,0x40,0x4a,
+  0xff,0x57,0x86,0x5a,0x5e,0x4,0x24,0xac,0xeb,0x82,0xa0,0x35,0x4a,0x1,0xd6,0x5d,
+  0x81,0x64,0xf8,0xaf,0x6c,0xe,0x2a,0xc5,0x7f,0x4c,0xef,0xee,0x25,0x35,0x20,0x7,
+  0x1b,0x84,0x4,0x50,0x24,0xd0,0xc7,0x76,0xeb,0xff,0xcf,0x27,0xe7,0xc3,0xe1,0x7,
+  0x4f,0xa6,0xfb,0x4c,0x4a,0x4,0xb2,0x83,0x7f,0x6c,0xf7,0x1d,0xef,0x12,0xe4,0xc,
+  0x2,0x52,0x62,0x3f,0x6f,0x33,0x6e,0xdb,0x0,0x70,0x2e,0xa0,0x4,0xa8,0x55,0x80,
+  0x1f,0x7c,0xf7,0x7,0x83,0x3,0x0,0x9f,0xbe,0xea,0xd3,0xb2,0x20,0x88,0xca,0x6,
+  0xa4,0x74,0x60,0x95,0xa,0xac,0x39,0xb2,0x89,0xdc,0x53,0xfa,0x5e,0x3,0x0,0x24,
+  0xa9,0x3,0xfd,0x18,0x2,0xb5,0x4a,0xc0,0xf3,0x2,0x70,0xc1,0x7,0xf6,0xf2,0xd2,
+  0x77,0xe1,0x7,0xb7,0x2e,0x52,0x77,0x18,0xa,0x9,0x71,0x12,0x6c,0xed,0xcb,0x9b,
+  0x70,0x60,0x19,0x14,0x84,0x6d,0xa5,0x74,0x85,0xe0,0x2c,0x36,0xa7,0x57,0x5e,0x1,
+  0x95,0x10,0xd4,0x10,0xd,0xa8,0xc0,0x40,0x1b,0x2,0x43,0x16,0xf,0x20,0x44,0xc9,
+  0x91,0x41,0x17,0x7c,0xac,0xf6,0x94,0xd0,0x1b,0x4b,0x94,0xf,0x70,0xd8,0x61,0x87,
+  0x19,0x3b,0x40,0xa0,0x51,0x9f,0xc4,0xfe,0x90,0xb8,0x53,0xdc,0x2,0xae,0x88,0x5d,
+  0xfb,0xfe,0x4d,0x5c,0x0,0x18,0xeb,0xb8,0xb6,0x5,0xb4,0x14,0x5a,0xe0,0x70,0x71,
+  0x6c,0x9c,0x0,0xb2,0xfe,0x9e,0x27,0xe,0x19,0x9e,0x7c,0xf0,0xc1,0x7,0xbf,0xaf,
+  0xe,0x40,0x3b,0x3b,0xde,0x79,0xe7,0x9d,0x89,0xe2,0xe3,0x79,0xb1,0x8c,0x47,0xee,
+  0x8f,0x22,0x3a,0x72,0xfe,0xb5,0xeb,0xd6,0x1a,0xdd,0x3f,0x2e,0xf6,0x47,0x22,0x3d,
+  0x4f,0xd,0xd6,0xb6,0x0,0xae,0x6,0xd8,0x6,0x40,0x74,0x7f,0x62,0x6c,0xc1,0xa2,
+  0x45,0x8b,0x60,0xf1,0xe2,0xc5,0x82,0x2c,0x87,0xc3,0xc2,0xec,0xc9,0x10,0x64,0x12,
+  0xc4,0x7f,0xe3,0x2,0xb4,0x62,0x0,0x74,0x69,0x70,0xa3,0x2,0x68,0xcb,0x7f,0xc9,
+  0xd4,0x2,0xd4,0xfa,0xbf,0x5f,0xeb,0x23,0x0,0xc8,0xa4,0x2a,0xf4,0x4e,0x5a,0xf2,
+  0x59,0xb8,0xf6,0xd3,0xe7,0xc3,0x84,0xb1,0xa3,0x8d,0xba,0x66,0x2c,0xf5,0x61,0xdd,
+  0xf8,0xeb,0x93,0x5a,0x86,0x99,0x8e,0x40,0x9,0xdc,0xdf,0x15,0x54,0xc4,0xe3,0x0,
+  0x6c,0x80,0xc1,0xf3,0x62,0x8,0x3e,0x1a,0x1,0x7f,0xf0,0xbd,0xc1,0x2,0x80,0x3f,
+  0xff,0xb4,0x29,0x8,0x12,0xcb,0x3,0xe0,0xe1,0xc0,0xcc,0x7f,0xef,0xe2,0xf2,0xcd,
+  0x88,0xdf,0xee,0x4,0xcc,0xd,0x8b,0x6,0x4c,0x2c,0x5b,0x3,0x7a,0x1c,0x56,0xac,
+  0x5a,0xf,0xff,0xf6,0x8b,0xbb,0x55,0xd7,0x59,0x31,0x89,0xd2,0xa3,0x60,0x1b,0x76,
+  0x5,0xc6,0x2c,0x40,0x95,0x38,0x42,0x35,0x1,0x31,0x3b,0x90,0xf4,0xfe,0x2,0xe5,
+  0x2,0x78,0x59,0x15,0x7,0xa0,0xb9,0xbf,0x11,0xfd,0x59,0x5c,0x0,0xcb,0xa,0xe4,
+  0xde,0x80,0x74,0xad,0x8,0xe7,0x56,0x9f,0x86,0x89,0x61,0x27,0xcc,0x9e,0x3d,0x1b,
+  0xce,0x3a,0xeb,0x2c,0xb2,0xd8,0xa3,0x1a,0x10,0x18,0x2b,0x6f,0x9d,0x5,0xf7,0x68,
+  0x29,0x80,0x73,0xfd,0x90,0xfd,0x1d,0xaa,0x16,0xe4,0xc,0x8,0x40,0xaa,0x3,0xa8,
+  0x66,0x4c,0x9a,0x38,0x89,0x0,0x40,0xa5,0x6,0xa3,0x21,0xf0,0xf8,0x69,0xd3,0xa6,
+  0x6d,0xde,0xa5,0x17,0xb9,0x93,0xe3,0xdd,0x77,0xdf,0xc5,0x2a,0x40,0x8f,0x8b,0x85,
+  0x9a,0xba,0xa2,0xe5,0x1f,0xd5,0x92,0x37,0x29,0x4f,0x21,0x30,0xa0,0xae,0x8b,0x81,
+  0x46,0x84,0x1d,0xa9,0x0,0x9e,0x25,0x11,0x44,0xd5,0x81,0x6d,0x40,0xf0,0x85,0xf8,
+  0xdf,0x41,0xc7,0xbc,0xe1,0x86,0x1b,0x10,0x78,0xe0,0x55,0xff,0x20,0x78,0x3a,0x7b,
+  0x94,0x8a,0xff,0xcf,0x46,0xe2,0xbf,0x6d,0x0,0x8c,0x35,0x9,0xad,0xa9,0xd8,0xff,
+  0x1a,0x8b,0x1,0x28,0x45,0xc4,0x8f,0x2a,0x40,0xa9,0x57,0x75,0x7a,0x12,0xe2,0x3f,
+  0xf4,0x9,0x30,0xdf,0x20,0xce,0x2b,0x5d,0xb8,0x23,0x3b,0x5a,0xe1,0x2b,0x57,0x5d,
+  0x8,0xad,0xad,0x2d,0xee,0x8,0x40,0x56,0x0,0xd4,0x78,0x3,0x98,0x4,0xd0,0xd4,
+  0xd,0xe8,0xc8,0x1d,0x68,0x48,0x5,0xb6,0x40,0x46,0x33,0x54,0x31,0x39,0x6,0xf,
+  0x0,0xae,0xf8,0xcc,0x15,0x2b,0xc5,0xd,0x91,0xd,0x80,0x4a,0x83,0x33,0x29,0x80,
+  0x7b,0x2,0x88,0x48,0x3d,0xb7,0xa8,0x9f,0x4,0xc,0x86,0x53,0x38,0x8c,0x7f,0xc6,
+  0xea,0xcf,0x55,0x81,0x54,0x54,0x82,0x6c,0xe3,0xe6,0x4e,0xf8,0xf6,0xaf,0x17,0x42,
+  0x77,0xb1,0x4c,0x37,0x18,0x84,0x6d,0xb0,0xbd,0x32,0x4c,0xea,0x8a,0xb9,0x36,0x5,
+  0x0,0x2d,0x14,0xb,0xe0,0x63,0x31,0x50,0x2a,0x11,0x96,0x55,0x51,0x81,0x92,0xf8,
+  0x3,0xa5,0xe,0x78,0xd4,0x17,0x50,0xb5,0xe,0x4f,0xa9,0x20,0x13,0x8a,0x7,0x50,
+  0x0,0x40,0x9c,0x45,0x1a,0x91,0x4e,0xa9,0xbd,0x6,0x47,0xd5,0xdf,0xa5,0x40,0xa0,
+  0x4f,0x7d,0xea,0x53,0xf4,0x92,0xb1,0x80,0x67,0x45,0xb5,0xd4,0xd6,0xde,0x0,0x7c,
+  0xa1,0x26,0xc8,0x27,0x88,0x44,0x7e,0xd,0x4,0x81,0xf6,0x89,0xb3,0x16,0xdb,0xa1,
+  0x92,0x3a,0xc8,0xa6,0x21,0xce,0x8f,0x2e,0x41,0xb4,0xb8,0x63,0x79,0x70,0xa,0xc,
+  0x2,0x40,0x9,0x60,0xae,0x0,0x81,0xe2,0x5e,0x0,0x80,0x9b,0xc4,0xc7,0x27,0xf1,
+  0x59,0xa3,0xaa,0x83,0xc4,0xf9,0xf6,0xf2,0xe5,0x42,0xda,0xe9,0x36,0xf1,0x1e,0xba,
+  0xf1,0x7,0x17,0xff,0xa3,0x77,0x9d,0xe0,0xf2,0xf3,0x99,0xa4,0xa0,0xb6,0x47,0x69,
+  0x2,0x6d,0xb,0x8,0xa4,0x3f,0xfe,0xf1,0x8f,0xc9,0xb8,0xfa,0x58,0xe1,0x4,0x78,
+  0xd3,0x9b,0xa4,0x9a,0xbc,0x58,0xe2,0x3f,0xe,0x2d,0xfe,0xdb,0x2a,0x0,0xaa,0x26,
+  0x2a,0xc,0x98,0xbc,0x0,0x95,0xa2,0xe9,0xa,0x2c,0x3d,0x0,0xbd,0xa6,0xd5,0x5b,
+  0xe,0x8a,0x90,0xf5,0x36,0xaa,0x44,0x20,0x80,0x19,0x7,0x8e,0x85,0xcf,0x5f,0x72,
+  0x36,0x79,0x22,0x88,0x48,0x2d,0x82,0xe4,0x21,0xbb,0x31,0x55,0xc0,0x51,0x16,0x5c,
+  0xab,0x0,0x4d,0x23,0x9,0x2d,0xf,0x40,0x2c,0xae,0xa0,0x26,0x3,0x85,0x30,0x7,
+  0x47,0x4c,0xf0,0xae,0x1f,0x7f,0xff,0xc7,0x83,0x3,0x0,0x97,0x5e,0x7e,0xe9,0x4a,
+  0xc1,0x81,0x26,0xe3,0x4,0xc0,0x17,0x85,0x40,0x80,0x51,0x52,0x54,0x23,0x30,0x23,
+  0x17,0xbb,0x68,0x7,0x2f,0xf7,0xe5,0x54,0x1,0x98,0xe8,0x6f,0x57,0x10,0xb2,0xb3,
+  0x8,0x1b,0xbc,0x1,0x6a,0x7d,0x6f,0x6f,0x1f,0x7c,0xf7,0xe6,0x7,0x60,0xf5,0xc6,
+  0x4e,0x55,0x94,0x21,0x3,0xdd,0xb5,0xd1,0x10,0x78,0x39,0x32,0x1a,0x51,0x4a,0x70,
+  0xb6,0x35,0xea,0x11,0x98,0x95,0x21,0xc1,0xd2,0x10,0xa8,0x33,0x2,0x59,0x4e,0x80,
+  0x96,0x2,0x52,0xaa,0x3d,0x78,0x4a,0xf5,0xa1,0x8f,0x79,0x3,0xca,0x70,0x50,0xb8,
+  0x1,0xe6,0x95,0x9e,0x82,0xbc,0x90,0x26,0xd0,0xe,0x30,0x6e,0xdc,0x38,0x9a,0xb8,
+  0x48,0x18,0x81,0xb1,0x0,0xb3,0xfe,0x6f,0xa1,0x25,0xf2,0xab,0xb6,0x4f,0x51,0x6e,
+  0x40,0xa4,0xa,0xf0,0x2,0x21,0xb8,0x3f,0x76,0xce,0x3d,0xe4,0x90,0x43,0x28,0x56,
+  0x0,0x25,0x1,0x25,0x21,0x20,0x8,0x5c,0x24,0x40,0x60,0x8f,0x84,0x8,0x2b,0xce,
+  0x7f,0x83,0x58,0x2e,0xc6,0xbf,0x51,0xec,0x47,0x82,0x78,0x6f,0xe5,0x4a,0xb2,0x49,
+  0xa0,0x37,0xc8,0x37,0x7e,0x7e,0x2f,0x66,0x4,0x6c,0x34,0x8,0x5a,0xc4,0x6e,0x35,
+  0x6,0xd1,0xdf,0x11,0xe4,0x50,0xc5,0x78,0xe9,0xa5,0x97,0xe0,0x96,0x5b,0x6e,0x81,
+  0x3e,0xaf,0x0,0xf7,0xb5,0x9f,0x1,0x5d,0x7e,0x7,0x4b,0xff,0x65,0xe2,0x3f,0x45,
+  0x6a,0x6a,0xe9,0x4c,0x37,0x8,0xad,0xa9,0x6e,0x40,0x11,0x0,0xc8,0x1c,0x80,0x12,
+  0x4,0x2a,0x3,0x90,0xa2,0x1,0x8b,0x3d,0x32,0x13,0x90,0xf4,0xff,0x1e,0x28,0x64,
+  0xa9,0xec,0x3a,0xbd,0xa7,0x93,0x67,0xce,0x80,0x4f,0xcc,0x3b,0xc9,0xb8,0x0,0x39,
+  0x91,0x3a,0xb9,0x78,0xd0,0x18,0xff,0x9f,0xc4,0xfd,0x8d,0xca,0x50,0x8b,0xbe,0xdb,
+  0xba,0x3f,0xba,0xfd,0x50,0xed,0x43,0x66,0x82,0x86,0x6e,0x34,0x2,0xe2,0xb3,0xcf,
+  0xe5,0x72,0x5d,0xbf,0xfc,0xd9,0x2f,0x7,0x7,0x0,0x3e,0x71,0xd9,0x27,0xae,0x2c,
+  0x97,0xca,0xe7,0x88,0x87,0x34,0x5b,0x10,0xe0,0x44,0x22,0x4a,0x15,0x7,0x80,0xf,
+  0x8a,0xc0,0x20,0x27,0xa5,0x3,0x2,0x85,0x54,0xc6,0x69,0x7,0x70,0xaa,0x5,0xc6,
+  0x85,0xd4,0xd8,0x2,0xdc,0x2e,0x12,0xca,0x89,0x9f,0x9a,0x49,0x96,0x2b,0xf0,0xab,
+  0xfb,0x16,0xc3,0xab,0x6f,0xaf,0x92,0xf3,0x21,0x14,0xa0,0x50,0x1d,0x5,0xe5,0x7a,
+  0x46,0x72,0x7f,0xf4,0x1d,0x1b,0x29,0x40,0x2,0x0,0x18,0x29,0x20,0x6b,0xc2,0x7f,
+  0x43,0xea,0x19,0xc8,0xca,0x82,0xc7,0xc,0x81,0xa,0x0,0x58,0x76,0x60,0x5b,0xd0,
+  0x3,0xb,0x7a,0x1e,0x86,0xb6,0xb0,0xf,0x16,0x2c,0x58,0x40,0xfd,0x1,0x51,0xd,
+  0xd8,0x2c,0xa4,0x0,0x39,0x51,0xb4,0xa,0xa0,0xb8,0xbe,0x22,0x66,0x9d,0x1,0x18,
+  0xa5,0x1,0x33,0x8e,0x1f,0x84,0x2c,0x7b,0xd0,0x33,0xeb,0x51,0x9a,0x40,0xc2,0x38,
+  0x74,0xc6,0x21,0x34,0x59,0x54,0x63,0x50,0xbc,0x2a,0x8c,0x5c,0xb9,0x40,0x80,0xc0,
+  0x6e,0xb5,0x9,0x8,0xe2,0x47,0xeb,0xd7,0xed,0x62,0x99,0x85,0x7f,0xa3,0x5e,0x8e,
+  0xc4,0x89,0xb9,0x9,0x1b,0x37,0x6d,0x52,0xd9,0x9e,0xba,0xf5,0x17,0x3,0x0,0x88,
+  0x7c,0xfd,0xb1,0x1e,0x0,0xcc,0xfa,0xef,0xb9,0xc,0x80,0xa,0x4,0x90,0xfb,0xe3,
+  0x5c,0xc2,0xc,0xc0,0x97,0x5f,0x7e,0x19,0x56,0xa7,0xc6,0xc3,0xc3,0xad,0x73,0xc4,
+  0x7b,0xca,0xab,0xe0,0x9f,0x74,0x94,0xff,0x6f,0x5c,0xb4,0x21,0x15,0x1,0xf5,0x4c,
+  0x45,0x60,0x15,0x4,0x54,0x55,0x6a,0x40,0x4d,0x76,0x4,0xc2,0xc0,0x9f,0x80,0x5c,
+  0x7f,0x25,0xc9,0xfd,0x55,0x31,0x50,0x74,0x5,0xe6,0xbd,0x2e,0x68,0xc9,0xf5,0xa8,
+  0x56,0xf0,0x21,0x5c,0x78,0xda,0x71,0x70,0xda,0xf1,0x47,0xd2,0x75,0xba,0xdc,0x7d,
+  0xae,0x22,0xa1,0x31,0x3f,0x3f,0xb,0x6,0xb3,0x75,0x7f,0xee,0x49,0xc0,0xed,0x30,
+  0x9f,0xa5,0x52,0xaa,0x50,0xc7,0x67,0x24,0xfc,0x8a,0xb8,0xde,0x6a,0xb9,0x1a,0x8f,
+  0xe,0xc,0xea,0x1b,0xa,0x85,0xc2,0xe2,0x96,0x42,0xcb,0x23,0xbf,0xfc,0xf9,0x2f,
+  0xbf,0x3f,0x28,0x0,0xc0,0xc7,0x65,0x57,0x5c,0x36,0x59,0xdc,0xdc,0x6c,0xf1,0xe8,
+  0x67,0x8b,0x3f,0x67,0x8b,0x17,0x79,0x14,0xb7,0x5,0x20,0x77,0x40,0x63,0x21,0x1,
+  0x82,0x10,0xdb,0xd0,0x80,0x41,0x6a,0x83,0x55,0x42,0xdc,0xe5,0x16,0x8c,0xd5,0xa,
+  0x70,0x74,0x11,0xd2,0x39,0x1,0xda,0x1b,0x80,0xf,0xfd,0xc1,0x67,0x5e,0x85,0x45,
+  0xcf,0xbe,0x61,0xb2,0xef,0x6a,0xc1,0x68,0xe8,0xec,0xf5,0x54,0xe4,0x98,0xaa,0xe,
+  0xa4,0x9b,0x4a,0x2a,0x5f,0x72,0xa8,0x3d,0x1,0x59,0xd9,0x30,0x24,0xc8,0x70,0x57,
+  0xa0,0xb6,0x9,0xf8,0x96,0x1a,0x10,0xa8,0x4c,0x33,0x29,0x5,0xcc,0x2e,0x3e,0x3,
+  0x87,0xd6,0x56,0xc2,0x8c,0x19,0x33,0x98,0x1a,0xb0,0x95,0x44,0x57,0xbc,0x90,0x7a,
+  0xc0,0xad,0xfd,0x3c,0x9,0x48,0xe9,0xfd,0xdc,0x0,0x18,0x48,0xcb,0xbf,0x4e,0x12,
+  0x92,0xa0,0xc3,0x24,0x1,0x31,0x59,0x90,0x8,0xa7,0x1f,0x7c,0x30,0xed,0xa3,0x8b,
+  0x71,0x8a,0x81,0x6a,0xc0,0x37,0xc4,0xf2,0x6d,0x1,0x4,0xef,0xbb,0x68,0x88,0x20,
+  0xfe,0x2b,0xc4,0xc7,0x7f,0x88,0x65,0xc,0xbe,0x1f,0xc,0xc9,0x45,0xa3,0x1c,0x16,
+  0x27,0xdd,0xb4,0x65,0x33,0x59,0xc8,0xa3,0xdc,0x7f,0xdd,0xf2,0xab,0xf1,0x7b,0x92,
+  0xb8,0xef,0x6c,0x14,0x82,0xd6,0x7f,0x21,0xe5,0x20,0x0,0xe0,0x7d,0x7d,0xef,0x7b,
+  0xdf,0xa3,0xee,0xc0,0xcf,0xb4,0x9e,0x0,0x4b,0xb3,0xd3,0x55,0xf0,0x8f,0x65,0xfc,
+  0xa3,0x87,0x12,0x18,0xdd,0x9f,0x24,0x80,0xba,0x4a,0x3,0x56,0xc6,0x3f,0xb9,0x5e,
+  0xf9,0xff,0xcb,0x65,0xd3,0xde,0x4d,0xfa,0xff,0x7b,0x8,0x10,0x30,0x28,0xa8,0x2d,
+  0xb3,0xd,0xf2,0x99,0x8a,0x9,0x47,0xfe,0xf3,0x8f,0xce,0x81,0x23,0x67,0x4c,0xa5,
+  0x53,0xb8,0x2c,0xf7,0x2e,0x17,0x20,0xdf,0xc6,0x95,0xe7,0xa0,0x63,0xfe,0x91,0xb3,
+  0xd3,0x22,0x88,0x1d,0x6d,0x3a,0xc4,0xe5,0xc5,0xb1,0x74,0x36,0xa0,0x2,0x8f,0x37,
+  0xc4,0x75,0x3c,0xb,0x3e,0x3c,0x22,0x9e,0xf5,0xe2,0x9b,0x6f,0xbc,0x79,0xc5,0xee,
+  0xa0,0xdb,0x3d,0x96,0x52,0x7a,0xf5,0xe7,0xae,0xce,0x8a,0x7,0x31,0x4b,0x20,0xd6,
+  0x2c,0x71,0x96,0x13,0xc4,0xc5,0xe3,0xe7,0x11,0xbc,0x48,0x28,0xd5,0x11,0x54,0xaa,
+  0x2,0xea,0x33,0xb8,0x68,0x8f,0x2,0xaf,0x15,0xa0,0x9b,0x7f,0xb8,0xfa,0x0,0x70,
+  0xaf,0x80,0x36,0x6,0x22,0x7d,0xbc,0xfe,0xee,0x2a,0xf8,0xc5,0x3d,0x4f,0x9a,0x10,
+  0xd4,0x5a,0xbd,0x1d,0x36,0x77,0xa3,0x2e,0xaf,0xab,0x3,0xb7,0x52,0x54,0xa0,0xcc,
+  0x9,0xc8,0xab,0xf4,0x60,0x1d,0xb,0x20,0x13,0x82,0x30,0x2f,0x40,0x56,0x99,0xf5,
+  0x59,0x8a,0x30,0xd7,0x37,0x43,0x66,0xb,0x90,0x81,0x25,0x7,0xd7,0xd7,0xc0,0xa9,
+  0xdd,0x8f,0xb,0xe9,0x27,0x3,0x57,0x5f,0x7d,0x35,0x4c,0x9c,0x38,0x11,0xba,0xbb,
+  0xbb,0xa9,0x61,0x86,0xe,0x2,0xa,0x42,0xe9,0x5,0x20,0x52,0xe,0x24,0x55,0x1b,
+  0x1b,0x0,0x58,0x92,0x80,0x5e,0xa7,0x88,0x9f,0x22,0x8b,0x22,0x13,0x1,0x71,0x15,
+  0x8c,0xf,0xc0,0xa6,0x1c,0x78,0xef,0x48,0x24,0x38,0x81,0xd4,0xc0,0x49,0xf2,0x2f,
+  0x62,0xf9,0xd5,0xae,0xd8,0x6,0x4,0xe1,0xa3,0xa8,0xff,0xb7,0x62,0xa1,0x5a,0xd8,
+  0xc8,0xe5,0x91,0xf8,0xf1,0xf3,0xbd,0x95,0xef,0x91,0x7a,0x23,0x25,0x35,0xd6,0xe7,
+  0xcf,0x0,0x1,0x2f,0xfd,0xc5,0xfb,0x0,0x38,0xd4,0x2,0x47,0xf9,0x70,0x7c,0xc7,
+  0xda,0xfa,0xff,0xcc,0x33,0xcf,0x50,0x2,0x50,0xd1,0x2f,0xc0,0xc3,0xa3,0xce,0x85,
+  0x4e,0xaf,0x23,0xe2,0xfe,0xdc,0xf8,0x17,0x86,0x2c,0x2,0x90,0x7b,0x0,0x4,0xf7,
+  0x47,0x55,0xad,0x12,0x37,0x0,0x86,0x25,0x95,0xff,0x4f,0x85,0x40,0x7b,0x4d,0x21,
+  0x90,0x54,0x50,0x84,0x76,0x21,0xfe,0x67,0xd3,0xb2,0xfe,0x5e,0x5b,0x4b,0x1e,0xbe,
+  0x70,0xf1,0x99,0x30,0x66,0xf4,0xc8,0x6,0x83,0x9f,0xab,0xf4,0x37,0x37,0x6,0xc6,
+  0x8c,0x84,0x62,0x3b,0x4d,0xec,0x42,0x72,0x96,0x1c,0x5e,0x7c,0xaf,0x57,0xeb,0x94,
+  0xdd,0xc7,0xba,0x4,0x61,0xa3,0x97,0x67,0xc5,0xa9,0x5f,0x10,0xcf,0xe2,0x5,0xf1,
+  0x5c,0x9e,0xbd,0xe1,0xe7,0x37,0xec,0x11,0xdb,0xce,0x5e,0xcd,0x29,0xff,0xc2,0xdf,
+  0x7c,0xa1,0x20,0xf4,0x9c,0x13,0xc4,0xd,0x22,0x18,0xcc,0x12,0xf,0xf7,0x4,0xf1,
+  0xfa,0xa7,0x73,0x6b,0x3e,0xfa,0x36,0x51,0xb4,0xc5,0x17,0xaf,0xc3,0x8b,0x6d,0x57,
+  0x60,0x83,0x61,0xd0,0x51,0x81,0x68,0xd3,0x96,0x4e,0xf8,0xc1,0x9d,0x8f,0x41,0x5f,
+  0x49,0x26,0xe4,0x54,0x6a,0x59,0xd8,0xdc,0x95,0x8d,0x1,0x0,0x65,0x4,0x92,0x3a,
+  0x90,0x57,0xb5,0x1,0xf3,0xe4,0xe,0x34,0xed,0xc2,0x75,0x4c,0x0,0xfe,0xad,0x33,
+  0x3,0x8d,0x14,0xe0,0x47,0x22,0x27,0x93,0x2,0xa,0xf5,0x22,0xcc,0xef,0xba,0x1f,
+  0x86,0xd7,0xbb,0x60,0xee,0xdc,0xb9,0xd4,0x24,0x4,0x5f,0xf2,0xa6,0xcd,0x9b,0x65,
+  0x12,0xf,0x8a,0x85,0x26,0xf9,0x85,0x8b,0xfb,0x91,0x11,0x90,0x68,0x5b,0xad,0xe7,
+  0x6e,0x40,0x50,0x44,0xaf,0x6b,0x7,0xa9,0xf8,0x14,0x9a,0x5c,0x2d,0xf9,0x2,0x1c,
+  0x78,0xe0,0x81,0x24,0x11,0xa0,0xda,0x81,0x12,0x47,0x94,0x5b,0x40,0x12,0x1,0x36,
+  0xe,0xbd,0x55,0x2c,0xf7,0x8,0x30,0xe8,0x4c,0x20,0x78,0xd4,0xf1,0x31,0xb1,0xe7,
+  0x42,0xb1,0x60,0x84,0xdf,0x18,0x9a,0x24,0xe2,0x3e,0xf1,0x7d,0xe0,0xb1,0x2b,0xe2,
+  0x5e,0x56,0xae,0x5a,0x49,0xed,0xc8,0x53,0x29,0xce,0xf5,0xe3,0x7a,0xbf,0xd,0x0,
+  0x9a,0xb8,0x81,0x19,0x2,0xe3,0x0,0x10,0x3f,0xe,0x82,0xcc,0xf0,0x61,0xc3,0xe9,
+  0xfe,0x7f,0xf6,0xb3,0x9f,0x51,0x6b,0xf0,0x77,0x33,0x53,0x60,0x71,0xc7,0x1c,0xc9,
+  0xfd,0x53,0xaa,0xad,0x1b,0x1d,0x53,0x1b,0xff,0x28,0x82,0x4a,0x8a,0xff,0xa6,0x1c,
+  0x78,0x95,0x82,0x81,0x74,0x5b,0x30,0x4,0x6a,0xea,0x5,0x40,0x1,0x3f,0x25,0xc3,
+  0xfd,0x65,0xe,0x40,0x2f,0xb9,0x2,0xf3,0xa9,0x12,0x1,0x0,0xd6,0x1,0xc0,0xe7,
+  0x3b,0x75,0xc2,0x28,0x21,0x1,0x9c,0x4a,0xf3,0xd2,0x16,0xf9,0xed,0xca,0xbf,0x6,
+  0x8,0x98,0x3a,0x80,0x9c,0x1c,0x9,0x1e,0xdf,0x9,0x36,0xf4,0xe0,0x99,0x7e,0xe2,
+  0xfe,0x56,0x89,0x85,0x88,0x5d,0x70,0xf7,0x17,0xc4,0x5c,0x7f,0xf6,0x7,0xd7,0xff,
+  0x60,0xaf,0x5,0x76,0xd,0x7a,0x51,0x89,0x2f,0xfd,0xfd,0x97,0x86,0x21,0x20,0x88,
+  0x87,0x71,0x82,0x78,0x75,0xb3,0xb0,0xf2,0x52,0x36,0x97,0x3d,0x8,0xad,0xcb,0x18,
+  0xe9,0xc4,0x33,0xb,0x1b,0x2,0x83,0xec,0x6c,0x40,0x66,0xc,0xc4,0x6e,0xb5,0xbf,
+  0x5a,0xf4,0xc,0xbc,0xb7,0x61,0x1b,0xcd,0x11,0x94,0xfe,0xb6,0x74,0x15,0xa0,0x16,
+  0xa6,0x55,0x24,0x60,0xab,0xa,0xb,0x56,0x99,0x81,0x2a,0x2a,0x50,0x1a,0x4,0x55,
+  0x7d,0x40,0x65,0x8,0xc,0x75,0x71,0x10,0x5d,0x24,0x54,0xbb,0x3,0x35,0xd7,0xe1,
+  0x52,0x80,0x0,0x81,0x63,0x4b,0xaf,0xc2,0xd1,0xbd,0xaf,0x90,0x7b,0xec,0x9a,0x6b,
+  0xae,0x21,0xae,0xb9,0xbd,0x6b,0xbb,0xe0,0x98,0xdb,0x22,0xcb,0x3f,0x44,0xd6,0xff,
+  0x88,0xb6,0xa3,0x2a,0x40,0xdc,0xb,0x40,0xdf,0x4c,0x9,0x1,0x56,0x3d,0xc8,0xac,
+  0x57,0x55,0x83,0xc4,0xb3,0x19,0x3f,0x76,0x1c,0x85,0xe4,0xe2,0x4,0x43,0x20,0x40,
+  0xd0,0x51,0x5e,0x2,0x7b,0x60,0xbc,0x6e,0x8f,0xfa,0x8e,0x4a,0xf4,0x31,0xd,0x93,
+  0x43,0x65,0xe1,0x69,0x30,0xde,0xbc,0x65,0xb,0x6c,0xd8,0xb0,0x5e,0x15,0xfc,0x4c,
+  0x31,0x2,0x8f,0xba,0xf7,0x68,0x57,0x9f,0x2e,0xc6,0x12,0x7,0x5,0x2b,0x2c,0x18,
+  0x3c,0xa7,0xf1,0x8f,0xba,0x39,0xb5,0xb6,0x11,0xc1,0x61,0x5,0x24,0xb4,0xfe,0x57,
+  0x6a,0x1,0x3c,0x31,0x7a,0x1e,0xbc,0x97,0x3a,0xc0,0xcd,0xfd,0x71,0x10,0xf7,0xf,
+  0x54,0xe6,0x5f,0x4d,0xa5,0x0,0x2b,0xf1,0x5f,0xb7,0x7,0xab,0xb0,0xd8,0x7f,0xd4,
+  0xfd,0x4b,0x7d,0xa6,0x6,0x60,0xa8,0xc4,0xff,0xd6,0x4c,0x1f,0xb4,0x17,0xfa,0x40,
+  0xb6,0x63,0xb,0x61,0xce,0xd1,0xd3,0xe1,0xdc,0x93,0x8f,0x21,0x3b,0x16,0x37,0xce,
+  0xd9,0x85,0x3a,0xec,0xb0,0x5f,0xed,0xca,0x43,0xb1,0x1e,0x25,0xb3,0xbe,0xde,0xbe,
+  0xb5,0xe2,0xde,0xb0,0x91,0xb,0x11,0xba,0x98,0xdb,0x2f,0xfc,0xe7,0xbf,0xff,0xe7,
+  0x5e,0x71,0xdd,0x26,0x8d,0x41,0x7,0x0,0xd7,0xf8,0xe2,0x97,0xbe,0xb8,0x5e,0x88,
+  0x7f,0xe3,0x3b,0x86,0x75,0x34,0x58,0xf8,0x4d,0x3e,0xbd,0x8e,0x30,0xb4,0x7a,0x8,
+  0x6a,0x7b,0x40,0x59,0x88,0xe3,0xf,0x3e,0xfb,0x6,0x3c,0xfd,0x86,0xcc,0x95,0x41,
+  0x3a,0xd9,0xd1,0x9d,0x87,0xed,0x7d,0x9e,0xcc,0x9,0xa0,0xb0,0xe0,0x16,0xaa,0xf,
+  0x40,0x81,0x41,0xba,0x57,0x40,0x36,0x67,0xe2,0x1,0x64,0x87,0x20,0x15,0x1d,0xc8,
+  0xdb,0x84,0xa7,0xb5,0x3b,0xd0,0x63,0xb2,0x78,0x24,0x5,0x8c,0xc,0x77,0xc0,0xbc,
+  0x2d,0xb,0x21,0x17,0x94,0xa8,0x4a,0xf0,0xc9,0x27,0x9f,0x4c,0x44,0x83,0x52,0x40,
+  0x59,0xa6,0xf2,0xca,0xc9,0xa2,0xa9,0x9f,0x95,0x1,0x8f,0xaa,0x4,0x45,0x9c,0x1e,
+  0x58,0xb5,0x70,0xf9,0x33,0xaf,0x20,0xac,0xd7,0x7a,0x2a,0x99,0x28,0x14,0x2a,0x41,
+  0x2b,0xe8,0xda,0x7c,0xb8,0x2d,0x9e,0x1b,0x27,0x21,0x72,0x1e,0x15,0x3d,0x98,0x38,
+  0x74,0x6b,0x77,0x54,0xc7,0x50,0x7,0xc7,0xbf,0x11,0xbc,0x36,0x6e,0xdc,0x24,0x38,
+  0x58,0x8f,0xb2,0xb5,0x29,0x82,0x55,0xe7,0xf5,0x59,0x4a,0x73,0x64,0x4,0x8c,0xeb,
+  0xf3,0xbc,0x17,0x60,0x3c,0x36,0x80,0xb9,0xb,0x75,0xe8,0xaf,0x20,0x6e,0xd4,0xfd,
+  0xf1,0xdc,0x58,0xfc,0xe3,0x85,0x17,0x5e,0x80,0x8d,0x99,0x71,0xf0,0xfb,0x91,0xf3,
+  0xa1,0x96,0xca,0x33,0xcb,0x3f,0xe3,0xfe,0xd2,0xda,0xab,0x92,0x7e,0xd0,0xd0,0x17,
+  0x77,0x3,0x7a,0xb5,0x8a,0x9,0x1,0xc6,0xa8,0x3f,0xec,0xff,0x47,0xa5,0xdd,0x55,
+  0x1,0x10,0x6d,0xfd,0xc7,0xdf,0x86,0x17,0x7a,0xa0,0xb5,0x50,0x37,0xc6,0xda,0x4b,
+  0xcf,0xfa,0x30,0x1c,0x75,0xc8,0x54,0x69,0x5f,0x42,0xa2,0xe,0xa3,0x52,0x5d,0x76,
+  0x28,0x70,0xcc,0xfa,0xaf,0xc0,0xa0,0xaf,0xa7,0xf,0x3a,0xb7,0x77,0x62,0x10,0xd7,
+  0x61,0xd7,0x7d,0xeb,0xba,0x21,0x53,0xc9,0x59,0xbe,0xbd,0x21,0x38,0x84,0x54,0x70,
+  0x7b,0x2e,0x9b,0xbb,0x10,0x1,0xc0,0x64,0x19,0xa6,0x12,0xec,0x0,0x1e,0xeb,0x44,
+  0xa4,0xfe,0xd6,0x75,0xdb,0x97,0xae,0x58,0x3,0xb7,0xfe,0x61,0x89,0x9a,0x28,0x20,
+  0xa4,0x82,0x34,0x6c,0xd8,0x16,0x32,0x35,0xa0,0x45,0xa9,0x0,0xba,0x48,0xa8,0x2a,
+  0x13,0xa6,0xdd,0x81,0x68,0x8,0xcc,0x32,0x57,0x60,0x2a,0xc3,0x7a,0x6,0xa6,0x98,
+  0x1a,0x10,0xc6,0x3d,0x2,0xf5,0xa,0x9c,0xd8,0xfd,0x14,0x1c,0x5a,0x7c,0x93,0xba,
+  0x4,0x7f,0xee,0x73,0x9f,0x23,0x4e,0x8a,0xc9,0x41,0x9d,0x9d,0x5b,0x2d,0x3,0x20,
+  0xab,0x10,0x14,0xea,0x84,0x78,0x6,0x0,0xa,0x24,0x78,0x2d,0x1,0x3,0xd,0x11,
+  0xed,0x9b,0x3f,0xa4,0x1a,0x2c,0x45,0x7f,0x99,0x43,0xdf,0x66,0xb8,0x29,0x3e,0x3f,
+  0xee,0x6f,0xe6,0xc3,0xee,0xe3,0x80,0xe2,0x2a,0x72,0xad,0x2e,0xb1,0xa0,0xd8,0x8a,
+  0x1,0x3e,0xbe,0x9f,0x32,0xc6,0x76,0xc5,0xbf,0xe9,0x19,0xf8,0xc,0x14,0x38,0x18,
+  0x98,0x82,0x20,0x4c,0x3d,0x68,0xe8,0x11,0xe0,0x47,0xea,0x82,0xcd,0xfd,0xb1,0xfa,
+  0xcf,0xf5,0xd7,0x5f,0x4f,0xe0,0xf5,0xec,0xa8,0xd3,0xe1,0xed,0xdc,0xc1,0xca,0xef,
+  0xef,0xe2,0xfe,0x2a,0xfc,0x97,0x25,0xfd,0x48,0x57,0xa0,0x4a,0x1,0x46,0xce,0x8f,
+  0x76,0x0,0xc,0x9c,0xa2,0x6a,0xce,0xc5,0x58,0x5,0x60,0x6a,0xf2,0x2a,0x88,0x3f,
+  0x15,0x96,0x60,0x64,0x5b,0x2f,0xe4,0xb3,0x40,0x0,0xdd,0x5a,0xc8,0xc0,0x55,0xe7,
+  0x9d,0x2,0x63,0x47,0x8f,0x8a,0x89,0xf7,0x31,0x10,0x8,0x23,0x43,0x5f,0x2c,0xb,
+  0x30,0x90,0x69,0xbb,0x18,0xd,0x2a,0x96,0xcd,0xff,0xf9,0x1f,0xff,0x39,0xf0,0x72,
+  0xd1,0x7b,0x69,0xc,0x49,0x0,0xf8,0x87,0xff,0xf5,0xf,0x7f,0x27,0x1e,0xde,0xbf,
+  0xb6,0xb7,0xb5,0x93,0x4d,0xc0,0xce,0x23,0x70,0xc6,0x3,0x38,0xba,0x9,0x77,0x6e,
+  0xeb,0x82,0x1b,0x16,0xbd,0x0,0x3d,0x45,0x69,0x7,0x28,0xa,0xe6,0xbb,0x6e,0x33,
+  0xb6,0x7a,0xcd,0x29,0xae,0x5f,0xa0,0xc0,0x20,0x9d,0x18,0xe4,0x53,0xa5,0xa0,0xac,
+  0xea,0x14,0x2c,0x8d,0x81,0x60,0xd2,0x83,0xe3,0xf5,0x1,0x42,0xb2,0x49,0xd8,0x2e,
+  0xc1,0x50,0x4a,0x1,0x82,0xcb,0x8c,0x86,0xed,0x70,0xc6,0xc6,0xbb,0x20,0x1b,0x94,
+  0xe1,0xa2,0x8b,0x2e,0x22,0x29,0x0,0x6d,0x1,0x9b,0xb7,0x6c,0x16,0xa2,0xb9,0x94,
+  0x2,0xb8,0xd1,0x4f,0xba,0xf8,0x68,0xad,0x94,0x0,0x40,0xd3,0x75,0x23,0xd1,0x9b,
+  0xde,0x21,0xfc,0xf,0xe0,0xfb,0x80,0x8a,0x31,0x90,0x7f,0x48,0x8b,0x7a,0x56,0x60,
+  0x9a,0x34,0xb4,0xa6,0xd4,0x35,0x6b,0xe0,0xd1,0x92,0x8,0x4e,0x58,0x6d,0x9c,0xc2,
+  0x1c,0x86,0xba,0xaa,0xeb,0x47,0x13,0xc5,0xaa,0xeb,0xa7,0x5d,0x7c,0x52,0x6c,0x8f,
+  0xa2,0xfa,0x4c,0xfd,0x7f,0x46,0xe4,0x71,0xc3,0xa0,0x6d,0xf,0x88,0x7b,0x2,0x28,
+  0xf1,0x47,0x70,0x7f,0xdc,0xe7,0xa6,0x9b,0x6e,0x82,0x67,0x9f,0x7d,0x16,0xb6,0x66,
+  0x46,0xc3,0xef,0xc7,0x9c,0xf,0x95,0x14,0xab,0xfa,0xcb,0xb9,0x7f,0xa8,0x43,0xb3,
+  0xeb,0xf1,0xb0,0x5f,0x5d,0x9,0xb8,0xaa,0x63,0x35,0x6a,0xb2,0xf8,0x47,0x59,0xc7,
+  0xfd,0xb,0x31,0x5f,0x3,0x0,0x46,0x1,0xd6,0x8a,0xd0,0x9a,0xae,0xc2,0xc8,0x8e,
+  0xa2,0x78,0x46,0x1e,0x3d,0x97,0x83,0x84,0xfe,0xff,0x49,0x21,0x1,0x60,0x8,0x36,
+  0x4f,0xcc,0xb1,0xb9,0xbc,0xcb,0xea,0xaf,0xf5,0x7f,0xb4,0x97,0x88,0x7d,0xef,0xf8,
+  0xd7,0xeb,0xfe,0xf5,0xa2,0xc1,0xa6,0x2d,0x7b,0xc,0x49,0x0,0xf8,0xea,0xd7,0xbf,
+  0x7a,0x92,0x98,0x88,0x4f,0xb6,0xb4,0xb6,0x18,0x3b,0x80,0xab,0x82,0xb0,0x5d,0x20,
+  0x94,0xdb,0x5,0x70,0x41,0x1d,0xf8,0x9e,0xa7,0x96,0xc2,0x9b,0x6b,0xb7,0x2a,0xee,
+  0x17,0xc0,0xfa,0x4d,0x21,0xf4,0x56,0x7c,0x29,0x5,0xe8,0x72,0xd2,0x68,0x10,0xa4,
+  0x2a,0xc1,0x2,0x4,0x94,0x2a,0x10,0x66,0x25,0xf1,0x1b,0x8f,0x0,0xaa,0x0,0x76,
+  0x95,0xe0,0x4,0x29,0x40,0xab,0x2,0x1f,0xde,0xf1,0xc,0x1c,0xda,0xfb,0x1a,0x89,
+  0xe3,0x9f,0xff,0xfc,0xe7,0xc9,0x16,0x80,0x9c,0x15,0xe3,0x2,0x82,0x7a,0x9d,0xe9,
+  0xf5,0x72,0xf0,0xa6,0x20,0x72,0x85,0x22,0x7a,0xc3,0xe1,0x3d,0xb3,0xa5,0x36,0x1a,
+  0xea,0x73,0x6b,0xf2,0x8f,0x35,0x13,0xe1,0x5,0x48,0x83,0x28,0xbb,0xd0,0x1c,0xda,
+  0xd3,0x5e,0x88,0xc8,0xfe,0x20,0x67,0x5,0x3,0x9d,0x18,0xfe,0x78,0x46,0xb7,0xa7,
+  0xff,0x6b,0xbd,0x1d,0x22,0xb7,0x9e,0x26,0x7e,0x63,0xd9,0x57,0xbf,0x47,0x80,0x10,
+  0xf,0xd,0x36,0x8b,0x2,0x13,0x4,0x7d,0x94,0x5c,0x50,0xf7,0xff,0xe1,0xf,0x7f,
+  0x48,0xea,0xcb,0x73,0x63,0xe7,0xc3,0xf2,0xdc,0x41,0x8a,0xf8,0x55,0x65,0x26,0x2d,
+  0x8a,0xe0,0xc0,0xeb,0xe,0x1b,0x23,0xff,0xbc,0x5a,0x4,0x0,0x64,0x17,0x40,0xe3,
+  0x5f,0x45,0x1b,0xff,0x24,0x0,0x60,0xe9,0x2f,0x59,0x6,0xac,0x8f,0x92,0xba,0x46,
+  0xb4,0x54,0x60,0x44,0xbb,0xc,0xb5,0x45,0x97,0xed,0xdc,0x63,0xa7,0xc3,0xc9,0x33,
+  0xf,0x21,0x37,0xb6,0x29,0xd0,0xc1,0x83,0x7f,0x78,0xda,0xaf,0xc9,0xfc,0x8c,0xac,
+  0xfe,0x78,0xfd,0xf8,0xce,0xc5,0x3d,0xff,0xfd,0x3f,0x7f,0xf3,0x9f,0xff,0x6d,0xb0,
+  0x69,0xcb,0x1e,0x43,0x12,0x0,0xbe,0xf6,0xff,0x7d,0xad,0x20,0x1e,0xda,0x56,0x31,
+  0x11,0xa,0x68,0x79,0x76,0x75,0x15,0xe2,0xf6,0x0,0x5e,0x74,0x84,0x4b,0x5,0x94,
+  0x18,0xf4,0xe6,0x2a,0x78,0xf8,0xd5,0x95,0x26,0x48,0x6c,0x7b,0x57,0x0,0xeb,0xb6,
+  0xd4,0xa8,0x80,0x84,0x24,0x7e,0x26,0x5,0x8,0xc2,0xf7,0xb3,0x79,0xaa,0xf,0x40,
+  0x6a,0x80,0xaa,0x10,0xe4,0xa9,0x56,0x61,0x26,0x45,0xd8,0x67,0x75,0x2,0x7d,0xdf,
+  0x21,0x5,0x48,0xe3,0xd3,0x70,0xe8,0x81,0xb9,0xeb,0xef,0x84,0x96,0xda,0xe,0xca,
+  0xd,0xf8,0xc8,0x47,0x3e,0x42,0x93,0x4,0xdd,0x67,0xdd,0x42,0x9f,0xc6,0x49,0x2f,
+  0xe3,0xba,0xe3,0x9c,0xdd,0x50,0xad,0xc7,0x6c,0xc,0xe0,0x29,0x97,0x26,0xab,0x23,
+  0x28,0x23,0x84,0x98,0x10,0x10,0xc6,0x0,0xc0,0x2a,0x45,0x1a,0x33,0x24,0x9a,0x6f,
+  0x76,0x81,0x52,0xfd,0x19,0x32,0x90,0xb1,0x66,0x8b,0x91,0x5,0x2c,0x23,0xa0,0x1d,
+  0xde,0xcb,0x7f,0xb3,0x9,0xbd,0xa1,0x59,0x8,0x48,0xbf,0x3f,0x82,0x24,0xbe,0xb7,
+  0x9f,0xfe,0xf4,0xa7,0xb0,0x74,0xe9,0x52,0x58,0x9f,0x3f,0x10,0x9e,0x18,0x7b,0x2e,
+  0xd4,0xfc,0x4,0xc3,0x9f,0x8c,0xa6,0x8a,0x0,0x0,0x9b,0x7d,0x6,0x2a,0xf0,0x47,
+  0xd7,0x3,0xac,0xc9,0x1c,0x0,0x6a,0xfe,0x81,0x5d,0x7f,0x49,0xa,0xe8,0x53,0xf9,
+  0xff,0x32,0xfa,0xf,0x23,0x2,0xfd,0xa0,0x2,0xe3,0x47,0x56,0x4,0xb7,0xf7,0xc9,
+  0xf8,0x97,0x11,0xf3,0xe8,0xd2,0xd3,0x8f,0x85,0x3,0x27,0x8e,0x15,0x98,0xe8,0x91,
+  0xd8,0xef,0xf2,0x0,0xd8,0x12,0x1,0x37,0x6,0x96,0x84,0xb4,0xd7,0x23,0xde,0xb5,
+  0x98,0xcb,0x27,0x7f,0xf3,0xeb,0xdf,0x7c,0x6a,0xb0,0x69,0xcb,0x1e,0x43,0x12,0x0,
+  0x70,0xfc,0xdd,0xff,0xfc,0xbb,0xc7,0x33,0xd9,0xcc,0x6c,0xd4,0x5,0x51,0x6c,0xd5,
+  0x9d,0x80,0x5d,0xf9,0x4,0x76,0x4a,0xb0,0xc9,0x19,0x10,0xfb,0x6c,0xde,0xba,0xd,
+  0x6e,0x7d,0x62,0x19,0x14,0xc9,0x28,0xe4,0x9,0xc2,0xab,0xc2,0xaa,0x75,0x62,0x22,
+  0xa4,0x64,0x12,0x90,0x71,0x9,0xaa,0xf4,0x60,0x4f,0x15,0xa,0xa1,0x48,0xb3,0x6c,
+  0x26,0x4a,0x11,0x4e,0x5b,0x2d,0xc3,0xd5,0x12,0xa6,0xe5,0xa4,0x57,0xe1,0x7a,0x60,
+  0x32,0x5,0x49,0xa,0xa8,0xc2,0x91,0xe5,0xa5,0x30,0x73,0xf3,0xa3,0x34,0xb9,0xff,
+  0xf2,0x2f,0xff,0x92,0xda,0x86,0x21,0x57,0xc0,0xe0,0xa0,0x2a,0xd6,0xa6,0x63,0x1c,
+  0x96,0xda,0x62,0x31,0xc3,0x9e,0x16,0xb7,0x35,0x6,0x18,0xfe,0x1f,0x46,0xd1,0x81,
+  0xb2,0x70,0x58,0x14,0x33,0xa0,0x9,0x3d,0x6,0xa,0x31,0x9b,0x41,0xcc,0x70,0xa0,
+  0xe2,0x11,0xa2,0xe3,0xca,0x4d,0x58,0x6e,0x82,0xba,0x1e,0x79,0x6d,0x6a,0x4f,0xaa,
+  0x89,0x0,0xc6,0xb6,0xc2,0xab,0xfe,0xf0,0xf4,0x5f,0x3b,0xc4,0x97,0x4b,0x1,0x6,
+  0xc,0x4c,0x14,0xa0,0x4c,0xfa,0x41,0x15,0x0,0x3b,0x0,0xa3,0xf1,0xaf,0xee,0xa5,
+  0xe0,0xe9,0x3,0x2f,0x86,0x35,0xfe,0x18,0xb7,0xe8,0x8f,0xc3,0xe8,0xfe,0x41,0x3c,
+  0xf1,0x47,0x80,0x81,0xaf,0x23,0x1,0x55,0x27,0xe0,0xb0,0x2c,0x6b,0x37,0x50,0x4,
+  0xa0,0x72,0xf9,0x49,0xe3,0x5f,0x1f,0xad,0x6f,0xcf,0xd6,0x60,0xcc,0xc8,0x40,0xcc,
+  0x33,0x8f,0xa2,0x36,0x27,0x8d,0x19,0xe,0x17,0x9e,0x7a,0x34,0x55,0x23,0x6a,0x68,
+  0xdc,0xc1,0x8a,0x82,0xf2,0xd4,0x5f,0x1d,0xf0,0xa3,0x7d,0xfe,0x28,0x85,0x8a,0xa5,
+  0xd8,0xd1,0xd1,0x31,0xfc,0x6b,0xff,0xeb,0x6b,0x43,0xa6,0x93,0x93,0x1e,0x43,0x16,
+  0x0,0xae,0xfd,0xc7,0x6b,0xaf,0x15,0xf,0xf6,0xba,0xb6,0xf6,0x36,0x69,0x8d,0x66,
+  0x7a,0x7e,0xac,0x29,0x48,0x42,0xb4,0xa0,0xfe,0xbb,0xd8,0x57,0x84,0x87,0x5e,0x5e,
+  0x1,0xef,0x6e,0xd8,0x41,0x13,0xb5,0x2a,0x5e,0xe2,0xaa,0xd5,0x7d,0xd0,0x2d,0xa4,
+  0x40,0x69,0xc,0x94,0x2e,0x41,0xd9,0x35,0x58,0x36,0xd,0xf1,0x94,0x37,0x0,0x78,
+  0xc7,0xe0,0x34,0x33,0x0,0x6a,0x2f,0x0,0xae,0xa7,0x76,0xe8,0xbe,0xa5,0x8f,0x6a,
+  0x55,0xa0,0xe,0xa9,0x7a,0x19,0x4e,0xdd,0x74,0xf,0x8c,0x2b,0xaf,0xa5,0xd8,0x7d,
+  0xc,0xe,0xc2,0x49,0x8e,0x5c,0x61,0xfb,0xf6,0x2e,0x23,0x9a,0xcb,0x9e,0x78,0x51,
+  0x38,0x3b,0xbd,0x1c,0x5,0x8,0xb6,0xfd,0x8f,0x3e,0x94,0x5a,0x10,0xc5,0x9,0x40,
+  0xdc,0x76,0xa0,0x39,0x7e,0x4c,0x12,0xb0,0x62,0xa,0xcc,0xea,0xb8,0xd1,0xd1,0x55,
+  0xaa,0xdc,0xec,0xcf,0xd4,0x80,0x8,0x3,0x58,0x92,0xf,0x3,0x2,0xd,0xc,0xc0,
+  0x74,0x7e,0x2f,0x1,0x4,0x50,0xd2,0x43,0x77,0xe3,0xa6,0x4d,0x9b,0x28,0xea,0xf,
+  0x93,0x9c,0xde,0x1e,0x71,0x1c,0xbc,0x34,0xec,0x64,0x15,0xee,0xeb,0x10,0xfd,0x71,
+  0x68,0xd7,0x5f,0x50,0x8b,0x45,0xff,0x99,0x62,0xa0,0x42,0x15,0x23,0x1b,0x80,0xa9,
+  0xfc,0xc3,0x43,0x7f,0x7b,0x4d,0xd,0x40,0xc,0xe2,0x1a,0x33,0x2c,0x80,0xd1,0x23,
+  0x7c,0x65,0x48,0xd,0xe1,0x94,0xf,0x4d,0x86,0x13,0x8e,0x9c,0xa6,0x9b,0x70,0x36,
+  0x18,0xfd,0x6c,0x7f,0xbf,0x9d,0xf6,0x8b,0x0,0x80,0x41,0x60,0x62,0x9b,0x7b,0xfe,
+  0xfd,0x5f,0xff,0x7d,0xc1,0x60,0xd3,0x94,0x6b,0xc,0x59,0x0,0xf8,0xc7,0xaf,0xfe,
+  0xe3,0xac,0xbe,0xbe,0xbe,0xe7,0x31,0x1a,0xc,0x75,0x42,0x2a,0x39,0x66,0xf5,0x16,
+  0xe4,0x89,0x45,0xb6,0x1d,0xc0,0xa8,0x1,0xe2,0xc5,0x2d,0x5d,0xb1,0x1,0xfe,0xf0,
+  0xc6,0x7a,0xe5,0xb5,0xf3,0x60,0xcb,0xe6,0x3e,0x58,0xbd,0xa1,0x2c,0xeb,0xc8,0x65,
+  0x34,0xd7,0x6f,0x53,0x81,0x41,0x79,0xe9,0x22,0xa4,0xa,0xc1,0xaa,0x50,0x8,0xba,
+  0x2,0x33,0x3c,0x26,0x20,0x15,0xe5,0x5,0x20,0x20,0x78,0xf8,0xb7,0xe7,0x4,0x1,
+  0x14,0x47,0xc7,0xd5,0xb7,0xc2,0xec,0xb5,0xb7,0x41,0xba,0x56,0x82,0xf3,0xcf,0x3f,
+  0x9f,0xa,0x87,0xe2,0x44,0x41,0x2b,0x7b,0x6f,0x5f,0x5f,0x24,0xff,0xb3,0xd7,0xc2,
+  0xb4,0x7d,0xf3,0xbb,0xe1,0xec,0x5c,0xf7,0xb7,0x44,0x7e,0xcf,0xa8,0xee,0x91,0x3d,
+  0x81,0x83,0x3,0x47,0x92,0xc8,0xf9,0x10,0xc5,0x19,0x53,0xa6,0x9a,0x91,0x28,0x2,
+  0xe6,0xa1,0x88,0xb6,0xd5,0x9a,0x49,0xd4,0xcd,0x37,0xd2,0xff,0x79,0xa5,0x1f,0x1d,
+  0xf,0x20,0xd3,0xb4,0x23,0x5b,0x0,0x77,0xd,0xe2,0xc0,0x82,0x1f,0xed,0xe2,0x3d,
+  0x23,0xd1,0x60,0xca,0xef,0x8b,0x2f,0xbe,0x8,0x5d,0xd9,0xd1,0xf0,0x84,0xe0,0xfe,
+  0x98,0xfc,0x63,0x2a,0xfd,0x72,0xd1,0x1f,0x7,0xb7,0xfc,0x2b,0xfd,0x5f,0x17,0xff,
+  0x24,0xb1,0x5f,0x55,0x0,0x6,0xd5,0x1,0xc8,0xe8,0xfe,0x55,0xcb,0xf5,0x57,0x2d,
+  0x41,0x26,0xac,0xc2,0xe4,0x9,0x3e,0x14,0x72,0x29,0xa8,0x89,0xe3,0xe5,0x32,0x29,
+  0xb8,0xe8,0x94,0x23,0xe0,0x80,0xb1,0x63,0x4,0xd8,0x86,0x71,0x91,0xdf,0x4a,0xf5,
+  0x25,0xa2,0x57,0x29,0xbb,0x3c,0x4f,0x0,0x63,0x30,0x7a,0x64,0x6d,0xc4,0xcf,0xff,
+  0xef,0x7f,0xfe,0xdf,0xbb,0x1c,0xaf,0xbf,0x27,0xc7,0x90,0x5,0x80,0xaf,0x7e,0xfd,
+  0xab,0xa9,0x9e,0xee,0x9e,0x77,0x5,0xf7,0x9f,0x8c,0xc6,0x40,0x53,0x75,0xd8,0x4a,
+  0x18,0x8a,0xb5,0x13,0xe7,0xb9,0x1,0x4c,0xd,0xd8,0x26,0x38,0xed,0xbd,0x2f,0xad,
+  0x86,0x9e,0x12,0xfa,0xc0,0x43,0xc1,0x7d,0xab,0xb0,0xfc,0xdd,0x2e,0xa8,0x86,0x29,
+  0x59,0x24,0x24,0xab,0x9a,0x86,0x66,0x55,0x5c,0x80,0x2e,0x14,0x42,0xb9,0x1,0x79,
+  0xd5,0x2c,0x24,0xad,0xda,0x89,0xa7,0xa3,0x2,0xa1,0x26,0x4b,0xd0,0x67,0x93,0x14,
+  0x2c,0x55,0xa0,0x4e,0x5,0x40,0xe,0xed,0x7b,0x3,0x8e,0xdd,0xf4,0x30,0xb9,0x35,
+  0x51,0xa,0x40,0x69,0x0,0x2d,0xc4,0xe8,0x66,0xc3,0xf2,0xe1,0xd1,0x9b,0xe0,0x1e,
+  0x7f,0x66,0x88,0x33,0x7c,0x5b,0x13,0x6f,0x24,0xfe,0xe3,0xa4,0x34,0xd2,0x42,0x94,
+  0x3a,0x68,0x8,0x3e,0x2e,0xfa,0xc7,0x7,0x57,0xf1,0x4d,0x60,0x12,0x48,0x42,0xe7,
+  0x55,0x8a,0xa0,0xe1,0xd8,0xa1,0x69,0xe9,0x6d,0x8a,0x7b,0x30,0x8b,0xbf,0x7c,0x1f,
+  0x71,0xc3,0xa0,0xf6,0x3e,0xe0,0xd0,0xdb,0xe9,0xf0,0x62,0xfc,0xfb,0xe1,0x87,0x1f,
+  0xa6,0x9a,0x7f,0x75,0x3f,0xb,0xcf,0x4c,0xfe,0x38,0xac,0xcb,0x8c,0x67,0x2e,0x3f,
+  0x4b,0xf4,0xc7,0xa1,0x73,0xfe,0xeb,0x4a,0xfc,0x37,0x52,0x80,0xd6,0xff,0x2b,0x11,
+  0x0,0x94,0x75,0x33,0xd7,0x5e,0xe9,0xfe,0x43,0xce,0x5f,0xed,0x93,0x71,0x0,0x58,
+  0xd0,0xa5,0x2d,0x84,0x49,0xe3,0x65,0x62,0x11,0x1a,0x8b,0xa7,0x8d,0x1b,0x6,0x67,
+  0xcd,0x9a,0x1,0x85,0x96,0x42,0xbc,0xe9,0xa7,0xa3,0x91,0xa7,0x5d,0xe9,0x47,0x7,
+  0x0,0xa1,0xf4,0xd9,0xdb,0xd7,0xb,0x62,0xfe,0x4e,0xf9,0xe7,0x6f,0xfc,0xf3,0xa0,
+  0x16,0x6f,0x4d,0x1a,0x43,0x16,0x0,0x70,0x8,0x35,0xe0,0x7a,0x41,0xe4,0xd7,0x68,
+  0x9,0xc0,0xce,0x12,0xb4,0x8d,0x82,0xa6,0x4e,0x20,0x4b,0xc,0xc2,0xf5,0xe8,0xda,
+  0x7a,0x7e,0xf9,0x7a,0x58,0xba,0xb6,0x47,0x45,0xef,0x86,0xf0,0xde,0xca,0x6d,0xb0,
+  0xb1,0xb3,0xaa,0x1a,0x82,0xb6,0x30,0x8f,0x40,0xc1,0x18,0x4,0x3d,0x6d,0xc,0x24,
+  0xc2,0x97,0xf5,0x2,0x63,0x9,0x42,0x5a,0x2,0xd0,0x19,0x69,0x29,0x6e,0x9c,0x8a,
+  0x83,0x0,0xea,0xa5,0xc7,0x6f,0x79,0x8,0xa6,0xf5,0x2c,0x85,0xf1,0xe3,0xc7,0x53,
+  0x6c,0x0,0xd6,0xf9,0x47,0x7b,0x40,0x77,0x4f,0x37,0x4d,0x3a,0x4e,0xa4,0x5a,0x6,
+  0x30,0x64,0xae,0x6b,0x1,0x78,0x8d,0x96,0x7e,0xae,0x6,0xe8,0x10,0x63,0xbd,0xaf,
+  0xfa,0x62,0x49,0x1,0x7a,0x58,0x7f,0xe9,0xcc,0x43,0xdd,0x93,0x50,0x15,0x2f,0x89,
+  0xc2,0x94,0x43,0x9d,0x9a,0x4,0xda,0x38,0x61,0x62,0x2,0x62,0xb1,0xfc,0x3e,0x85,
+  0xd1,0xca,0x9e,0x10,0x2c,0x5,0x58,0x7b,0x6,0x0,0x4c,0x41,0xb,0xf4,0xf9,0x53,
+  0xd3,0xd3,0xb7,0xde,0x22,0xab,0x3f,0xfa,0xfc,0xdf,0x18,0x37,0x17,0xde,0x68,0x3f,
+  0x96,0x19,0xfd,0x64,0x96,0x61,0x8c,0xfb,0xb3,0xaa,0x3f,0x46,0xec,0x57,0xc6,0xbf,
+  0x50,0x7,0xfe,0x54,0xb4,0xfe,0x2f,0x2d,0xff,0x9e,0x10,0xf5,0x23,0xe3,0x5f,0xaf,
+  0x4,0x4,0x4,0x3,0xa1,0xa6,0x4d,0x9b,0x94,0x83,0x11,0x1d,0x19,0x59,0x9f,0x51,
+  0x1c,0x7a,0xee,0x51,0x7,0xc2,0xa1,0x53,0x27,0x18,0x29,0x32,0xc9,0xd8,0x67,0xab,
+  0x2,0xc6,0xff,0x2f,0xae,0x1,0xdf,0xad,0x50,0x3,0x96,0x8,0xee,0x3f,0x73,0xb0,
+  0x69,0x29,0x69,0xc,0x69,0x0,0xf8,0xda,0x37,0xbf,0xf6,0x75,0x31,0x71,0xbe,0xea,
+  0x4a,0x1b,0x8e,0x35,0x17,0xb5,0x42,0x81,0x63,0xe9,0xc1,0x7e,0x8a,0x26,0xee,0x9a,
+  0x8d,0x5b,0xe0,0xd1,0x65,0x5b,0xa0,0x1a,0xc8,0x9b,0xee,0xec,0x2c,0xc2,0xb2,0xe5,
+  0x5b,0x65,0x9c,0xbf,0xa,0xc,0x2,0x95,0x25,0x88,0x6,0x41,0x19,0x1a,0x9c,0x57,
+  0x69,0xc2,0x39,0x55,0x21,0x28,0xdb,0x18,0x13,0xa0,0xb,0x86,0x70,0x8f,0x80,0x13,
+  0x4,0x6a,0x90,0xb,0x2a,0x30,0x67,0xed,0xad,0x30,0xa2,0xbc,0x11,0x8e,0x38,0xe2,
+  0x8,0xb8,0xf2,0xca,0x2b,0x49,0xbd,0x41,0x51,0x11,0x43,0x97,0x75,0x4a,0x30,0x56,
+  0x35,0x42,0xab,0x73,0x3,0xb9,0x6a,0xdb,0x0,0x80,0x25,0xfa,0x47,0xdc,0x59,0x13,
+  0x71,0xcc,0xa3,0xc8,0x9,0x3f,0xb4,0x8f,0x69,0x29,0x6,0x2c,0x36,0x20,0xd4,0x55,
+  0x8a,0x75,0x8e,0x82,0x31,0xc,0xc6,0xe5,0x11,0x1d,0xf2,0xb,0x9e,0x56,0x3,0xf8,
+  0xbb,0x4a,0xc9,0xa,0xc0,0x56,0x34,0x20,0x2,0x5,0x1a,0x78,0xd1,0xbe,0x83,0xc5,
+  0x3e,0x31,0xe0,0x7,0x6b,0xa,0xac,0xea,0x38,0x2,0x9e,0x1f,0x3b,0x3f,0x2,0x55,
+  0x17,0xf1,0x7,0xca,0xc6,0xa2,0x22,0xff,0xe4,0x52,0x57,0x79,0xff,0x75,0x15,0xf6,
+  0x5b,0x95,0xd,0x40,0xca,0xba,0xee,0x9f,0xe2,0xf6,0x65,0xc6,0xfd,0x55,0x3b,0xb0,
+  0x61,0xe2,0xd5,0x4f,0x9f,0xda,0x6a,0x2,0xc8,0x86,0x15,0xb2,0x30,0xff,0xb8,0x83,
+  0x60,0xf8,0xb0,0x61,0xf1,0xf6,0x5e,0xf5,0x78,0xfe,0xbe,0x2b,0xcb,0x8f,0xa7,0x2,
+  0xab,0xcf,0x7,0xc5,0xe7,0xb9,0xdf,0xf8,0xa7,0x6f,0x38,0xe3,0xb1,0x7,0x7b,0xc,
+  0x59,0x0,0xf8,0xea,0x37,0xbe,0xfa,0xd5,0x74,0x2a,0xfd,0x75,0x3d,0x99,0x39,0x8,
+  0xc4,0x4a,0x8d,0xf3,0xbe,0x3,0x3c,0x5d,0x98,0xb9,0x4,0x71,0x3d,0x1a,0xdd,0x9e,
+  0x7e,0x7b,0xb,0xac,0xeb,0xaa,0xd0,0x5c,0xaa,0x8b,0xc9,0xb3,0x6c,0xe9,0x6,0xe8,
+  0xec,0xae,0x49,0xee,0x4e,0x7a,0xbf,0xec,0x1f,0x28,0xbd,0x1,0x2d,0xaa,0x58,0xa8,
+  0xca,0x14,0x54,0xf9,0x1,0xb2,0x5e,0x40,0x4a,0x79,0x0,0xa4,0x31,0xd0,0xc4,0x7,
+  0xf0,0x54,0x61,0x3d,0xb4,0x3d,0x0,0x87,0x0,0x81,0xd1,0xc1,0x76,0x38,0x71,0xd5,
+  0xad,0x50,0xa8,0xee,0x80,0x53,0x4e,0x39,0x85,0x5a,0x89,0xe1,0xb5,0x22,0x8,0x94,
+  0xb0,0x42,0x2d,0x6,0xdf,0xa8,0xbc,0x7a,0x63,0xc1,0xe7,0xb9,0x2,0xd,0x16,0x7e,
+  0x88,0xd9,0x2,0xe4,0x9f,0x9,0x12,0x80,0x1d,0x41,0x18,0xed,0x21,0xff,0xcf,0x3d,
+  0x2,0x60,0x75,0xf4,0xd1,0xb5,0x9,0x78,0xea,0xb2,0xba,0x12,0xcf,0xf8,0xf9,0xc1,
+  0x18,0x1,0x53,0xdc,0x53,0x43,0xc0,0x1c,0x25,0x9,0xe1,0x7b,0x41,0x83,0x1f,0x12,
+  0x3f,0xda,0x41,0x7e,0xf4,0xa3,0x1f,0x91,0xdf,0x7f,0x73,0xcb,0x64,0x78,0x61,0xd2,
+  0xc7,0xa0,0xe8,0xe7,0x93,0x89,0x9f,0x2e,0x21,0x60,0x51,0x7f,0xf5,0x8,0x0,0x94,
+  0x7,0xc0,0xd3,0x56,0x7f,0xd2,0xfd,0x4b,0x52,0xe4,0x2f,0x15,0x95,0x1,0x50,0x26,
+  0xfe,0x0,0x1,0x40,0x89,0x8c,0x84,0xd3,0x26,0xb7,0xc0,0xb8,0xd1,0x2d,0xa6,0x40,
+  0xcb,0xcc,0x3,0x47,0xc2,0xcc,0x83,0xf,0x20,0xef,0x53,0x62,0xee,0xbf,0x23,0x9f,
+  0x3f,0x56,0xf3,0x2f,0x8,0xa2,0x54,0xf4,0x5a,0xed,0xe,0xb1,0xfe,0xf2,0x6f,0x7d,
+  0xe3,0x5b,0x7b,0xbc,0x5a,0xd3,0xce,0x8e,0x21,0x7,0x0,0x5f,0xfe,0xca,0x97,0x5,
+  0x3d,0xa4,0x7e,0x28,0x1e,0xfe,0x55,0xca,0xc1,0x45,0xf,0xd4,0x59,0x3c,0x84,0xf7,
+  0x11,0xb4,0x3b,0x11,0x5b,0xde,0x0,0x7c,0x71,0x2b,0xd6,0x6f,0x81,0xe7,0x56,0xf6,
+  0x18,0xff,0xf9,0xa6,0x8d,0x3b,0x60,0xe9,0xf2,0x2d,0x62,0xb2,0x65,0x94,0xae,0x5f,
+  0x88,0x42,0x84,0xc9,0x30,0x58,0x88,0xa,0x86,0x64,0x72,0xa6,0x7d,0x18,0x19,0x4,
+  0x55,0x62,0x10,0x79,0x0,0xb4,0x3a,0x90,0x52,0xf6,0x1,0xdb,0x58,0x65,0x81,0xc0,
+  0xf8,0xea,0x26,0x38,0x61,0xf5,0x6d,0x90,0xa9,0xf5,0x51,0xb6,0xe0,0x79,0xe7,0x9d,
+  0x47,0xf7,0x46,0x31,0xfb,0x42,0x5d,0xc1,0x6c,0x41,0xcf,0x36,0xf2,0x71,0x22,0xe5,
+  0x86,0x3e,0xd0,0x82,0x46,0x23,0x97,0x8f,0x81,0x82,0x65,0x17,0x48,0x1a,0xba,0x6,
+  0xa1,0xed,0xd,0x8,0x94,0xb7,0x42,0x27,0x32,0x79,0x5a,0x1a,0xf0,0xb8,0x31,0xd0,
+  0xce,0xf7,0x4f,0x51,0x44,0x9d,0x2e,0x8,0x92,0x52,0x89,0x5d,0xc8,0xf9,0x51,0xec,
+  0xa7,0x84,0xad,0x5f,0xfd,0x8a,0xa,0x7d,0x6c,0xcf,0x8f,0x87,0xe7,0xa7,0x5e,0x2,
+  0x3d,0x5e,0x4b,0x32,0xf1,0xd3,0xf3,0xb,0xa2,0x45,0x19,0xfc,0xc8,0xf0,0x17,0xc8,
+  0x82,0x1f,0x1e,0x5,0xfc,0x60,0x34,0x66,0x59,0x95,0x6c,0x2f,0x29,0xe2,0x2f,0x9a,
+  0x9c,0x7f,0xc,0xf8,0x91,0xdc,0xbf,0xc,0x6d,0xb9,0x10,0x3e,0x74,0xc8,0x48,0xf1,
+  0x5a,0x53,0x74,0x8f,0x85,0x8c,0xf,0xa7,0x1d,0x7e,0x0,0x8c,0x19,0x3d,0x42,0x55,
+  0x93,0x6a,0x14,0xff,0x63,0x7a,0xbf,0x45,0xf4,0x3c,0x2d,0xd8,0x44,0x4d,0x8a,0x87,
+  0x54,0xa9,0x55,0x16,0xd7,0x6b,0xf5,0xb,0xae,0xfb,0xe6,0x75,0x9d,0x30,0x84,0xc6,
+  0x90,0x2,0x80,0xbf,0xff,0x87,0xbf,0x2f,0x88,0x9,0x72,0x8b,0x20,0xfe,0xf3,0xb4,
+  0xae,0xab,0xf5,0x5e,0x1e,0x52,0x1a,0xcb,0xb,0xb0,0x4a,0x89,0x25,0x4a,0x2,0xe2,
+  0x3b,0x72,0x9b,0xa7,0xdf,0xed,0x82,0xce,0x62,0x9d,0x68,0x0,0xcb,0x57,0x2f,0x79,
+  0x6d,0xd,0x74,0xf5,0x8a,0xbf,0x53,0x59,0x25,0x1,0xb4,0xa8,0xd0,0xe0,0x82,0x72,
+  0x11,0x32,0xb7,0x20,0x65,0xb,0x6a,0x97,0xa0,0xee,0x16,0x64,0xd9,0x3,0xb4,0x2d,
+  0x40,0xf7,0xa8,0xd7,0x23,0x6,0x2,0x75,0x98,0x54,0x5e,0xd,0xc7,0xaf,0xbe,0x3,
+  0x7c,0xa1,0x7f,0xce,0x9f,0x3f,0x9f,0x40,0x0,0xaf,0x15,0x75,0x47,0x8c,0xbd,0xf,
+  0xea,0x2a,0x2d,0x58,0xed,0xcb,0xbd,0x1,0xdc,0x22,0x2f,0xb7,0x61,0x2a,0x40,0xc8,
+  0xce,0xc7,0xf6,0xd7,0xdb,0x35,0xa1,0xfd,0x86,0x63,0x6a,0x91,0x9f,0x77,0x29,0xd6,
+  0x6a,0x8a,0x51,0x57,0x62,0xb3,0x28,0xb2,0xee,0xeb,0xb6,0x5f,0x29,0xf6,0x4e,0xb2,
+  0x82,0xe3,0x63,0xed,0x2,0xfc,0x1b,0xdd,0x63,0xbf,0xf9,0xcd,0x6f,0xe0,0x95,0x57,
+  0x5e,0x81,0x9e,0xec,0x48,0x78,0xee,0xa0,0x4b,0xa1,0xcb,0x6f,0x6f,0x4e,0xfc,0x26,
+  0xdf,0x3f,0xb0,0x44,0xff,0x28,0xff,0xdf,0x63,0x25,0xbf,0x74,0xb9,0xaf,0xb0,0xac,
+  0x89,0x1f,0x3d,0x0,0xd2,0x8,0x88,0x96,0x7f,0x94,0x10,0xe,0x99,0xda,0x1,0x13,
+  0xc7,0xb7,0x93,0xa5,0x1f,0xef,0x75,0xda,0xe8,0x56,0x98,0x39,0x6d,0xac,0x6e,0xba,
+  0xe1,0xe6,0xf8,0x56,0x4b,0x2f,0x17,0xf1,0x6b,0x3b,0xa,0x6f,0x90,0x5a,0xae,0x94,
+  0xdf,0xa8,0x55,0x6b,0xe7,0xfe,0xdb,0xbf,0xfc,0xdb,0x90,0x31,0x8,0xe,0x19,0x0,
+  0xf8,0xd2,0xff,0xfc,0xd2,0xc8,0x4c,0x3a,0x73,0x9f,0x20,0xfe,0x13,0xf0,0xef,0x40,
+  0xe9,0x9c,0x36,0xf1,0x37,0x3,0x1,0xbb,0xd,0x59,0x2c,0x6b,0x50,0xfc,0x8d,0xc4,
+  0xb5,0x62,0x7d,0x27,0xbc,0xb2,0xbe,0xc,0xda,0x9f,0xbd,0x61,0xfd,0x36,0x58,0xb2,
+  0x6c,0x23,0x15,0x96,0x94,0x65,0xc1,0x25,0xe1,0xa3,0x51,0x30,0xcc,0xb4,0x44,0x9d,
+  0x67,0x28,0x4b,0x50,0xaa,0x2,0x21,0x2b,0x1d,0x8e,0x6,0x41,0xfa,0xf4,0xa5,0x24,
+  0x10,0x52,0xb0,0x92,0x76,0xb,0xa6,0xe2,0x4f,0xd8,0x2,0x81,0xa9,0xe5,0xf7,0xe0,
+  0xe8,0xd5,0x77,0x83,0x5f,0x2b,0x51,0xf9,0xb0,0x4f,0x7c,0xe2,0x13,0xb2,0xe8,0x24,
+  0xc6,0xe4,0x53,0xed,0xb7,0x6a,0xc4,0xc5,0x75,0xb8,0x20,0x68,0x63,0x5f,0x10,0x53,
+  0xd,0x6c,0x35,0x1,0xcc,0x96,0xd1,0xa9,0xf9,0x17,0xee,0x67,0x88,0x6f,0x29,0xc3,
+  0x86,0xf9,0xb1,0xb4,0x61,0xb1,0xa1,0xa9,0x67,0xfc,0xc0,0x31,0x17,0x9f,0x71,0xd1,
+  0x62,0xbd,0x48,0xf1,0x7c,0xd0,0x9a,0x8e,0xf1,0xf4,0xf8,0xdb,0xfa,0xf5,0xeb,0x89,
+  0xf8,0xb1,0xc3,0x4f,0x4f,0x6e,0x14,0xbc,0x34,0xed,0x12,0xe8,0xf4,0x47,0x24,0x1b,
+  0xfc,0xf4,0xf1,0x8d,0xcf,0xbf,0x1e,0xc5,0xfa,0xab,0xae,0xbf,0x5e,0xbd,0x16,0xb5,
+  0xfc,0xaa,0x96,0x95,0xaf,0x5f,0x56,0xfc,0x45,0xa2,0xc7,0x4f,0x8f,0x74,0xff,0x22,
+  0x2d,0x58,0xc2,0xad,0x3d,0xef,0xc3,0xb1,0x47,0x8e,0x17,0xd2,0x48,0x8a,0xc2,0x7e,
+  0x33,0xe2,0x9d,0x9d,0x34,0x6d,0x4,0x8c,0x1b,0x33,0x12,0x78,0x4f,0xc7,0x98,0xc1,
+  0xcf,0xb1,0xce,0x6,0x0,0xae,0x3a,0x69,0x43,0xad,0x36,0xea,0x56,0x2b,0xd5,0xd,
+  0xa5,0x4a,0xe9,0xec,0xef,0xfc,0xfb,0x77,0x96,0xc,0x36,0xcd,0xf1,0xf7,0x3f,0xa8,
+  0xe3,0x8b,0xff,0xef,0x17,0xf,0xca,0x64,0x33,0x8b,0xb2,0x19,0xac,0xf5,0x14,0x11,
+  0x3f,0xb0,0xb8,0x71,0xfe,0xe9,0xac,0x29,0x68,0xa9,0x3,0x76,0x2b,0x6e,0x2d,0x9,
+  0x60,0x79,0xa9,0x17,0x56,0xf7,0xc2,0xf6,0x52,0x40,0xdb,0xd6,0xc4,0x64,0x7e,0xe1,
+  0xf9,0x77,0x60,0x5b,0x77,0x55,0x4a,0x1,0x59,0xd5,0x33,0x50,0x77,0x10,0xca,0x68,
+  0xb7,0x60,0x41,0x6,0x6,0xe5,0xb4,0x5b,0x30,0xc3,0xda,0x86,0xa5,0x4c,0x70,0x10,
+  0x1,0x0,0x46,0xd,0xfa,0x52,0xa,0xf0,0x3c,0xaf,0x11,0x4,0xb4,0x61,0x50,0xdc,
+  0xe7,0xa4,0xea,0x5a,0x38,0xfa,0xbd,0x3b,0x20,0x5b,0xeb,0xa5,0x5e,0x2,0xd8,0x53,
+  0x0,0x3b,0xec,0xe2,0xd0,0x45,0x20,0x75,0x19,0x68,0xb9,0x7b,0x18,0xe7,0xea,0x96,
+  0x9d,0x80,0xd6,0x59,0x80,0xc0,0x7e,0x88,0xab,0x0,0x3c,0xce,0xdf,0x8b,0xaf,0xe,
+  0x75,0x88,0xb1,0x56,0x1,0x58,0xfb,0x32,0x23,0x11,0x98,0x70,0x61,0x5d,0x78,0x24,
+  0x9e,0xd6,0x8b,0xcf,0x1b,0x1,0xd,0x63,0x39,0xa8,0x82,0xad,0x18,0xcb,0x96,0x2d,
+  0x83,0x5f,0xff,0xfa,0xd7,0xb0,0x79,0xf3,0x66,0xd8,0x5e,0x98,0x0,0xaf,0x4e,0xbb,
+  0x18,0xb6,0x7b,0xed,0xcd,0x89,0x5f,0x4b,0x1b,0xda,0xe5,0x57,0xaf,0x31,0xc2,0xd7,
+  0xf1,0xff,0xd2,0xef,0x1f,0x52,0xc3,0xf,0xd6,0xe8,0x83,0x2c,0xfe,0xc5,0x28,0xde,
+  0xbf,0x22,0x89,0x1f,0xcb,0x82,0x1d,0x75,0xc8,0x18,0x98,0x78,0xc0,0x30,0x40,0x61,
+  0x1d,0xef,0x67,0xf2,0xf0,0xc,0x7c,0x68,0xf2,0x28,0xc8,0x17,0xf2,0x6e,0x2b,0xbf,
+  0x23,0xf6,0x3f,0x49,0xff,0xf,0x19,0x60,0x6a,0x49,0x4a,0xcf,0x85,0x5a,0xa5,0xd6,
+  0x53,0x2c,0x17,0x17,0x7c,0xf7,0x3b,0xdf,0x7d,0x74,0xb0,0x69,0x6f,0xd0,0x1,0xe0,
+  0xaf,0xff,0xf6,0xaf,0xb1,0x0,0xc8,0x42,0xc1,0xfd,0xc7,0x6b,0x3d,0xb3,0x19,0xf1,
+  0x27,0x81,0x80,0x53,0x22,0x48,0x35,0x56,0xd,0x46,0x29,0x60,0xe5,0xc6,0x6d,0xf0,
+  0xfa,0x66,0x39,0x69,0x51,0x44,0xdd,0x20,0xa4,0x82,0xe7,0x5f,0x59,0x2d,0x7d,0xce,
+  0x54,0x69,0x36,0xaf,0x6a,0x6,0x5a,0x52,0x40,0xce,0x32,0x8,0x1a,0x35,0x40,0xe6,
+  0x5,0x84,0x2a,0x41,0xc8,0xd3,0xa0,0xe0,0xf9,0xf1,0x5c,0x1,0x3d,0x2c,0x10,0x98,
+  0x50,0xdf,0xc,0x47,0xad,0xb8,0x1d,0x5a,0x2a,0xdb,0x28,0x71,0x8,0xb3,0x7,0x8f,
+  0x39,0x46,0xd6,0xe7,0xc0,0x67,0x42,0x35,0xe2,0x1c,0x79,0xfc,0x5c,0xc,0x6f,0xd0,
+  0xff,0x5d,0x20,0x60,0x83,0x44,0xb3,0x61,0x82,0x89,0xc2,0x48,0xd,0x88,0x71,0xba,
+  0x78,0xb4,0xa0,0x9,0x25,0x54,0x1,0x3f,0x28,0xee,0xb7,0xab,0x92,0x5e,0xba,0x90,
+  0xe6,0x43,0xf,0x3d,0x44,0xad,0xbd,0x31,0x3c,0x76,0x4b,0xfb,0x41,0xb0,0x64,0xea,
+  0x45,0x58,0x7b,0x57,0xf9,0x12,0x93,0x38,0x3f,0x38,0xf4,0xfe,0x9a,0x6c,0xfd,0xa5,
+  0x24,0x0,0xe2,0xfc,0x68,0xc,0xac,0x96,0xd,0xf7,0x97,0x7e,0xff,0x5e,0x95,0xf4,
+  0x53,0x24,0xa3,0x1f,0x95,0xfe,0xaa,0x95,0xc8,0x40,0x38,0x7a,0x78,0x16,0x66,0x1d,
+  0x7d,0xa0,0xc0,0x70,0x59,0xf4,0x3,0x5f,0xe3,0xac,0x3,0x5a,0x61,0xf4,0xe8,0xe1,
+  0x4a,0xd8,0x8,0x1a,0x3c,0x0,0xae,0x4a,0xbf,0xfd,0x11,0xbf,0x71,0xa9,0xd6,0x83,
+  0x48,0x25,0x10,0xff,0xc4,0xfb,0xac,0x14,0x4b,0xc5,0xcf,0x7c,0xff,0xbb,0xdf,0xbf,
+  0x71,0x30,0xe9,0x6f,0x50,0x1,0xe0,0xb,0x7f,0xf3,0x85,0x73,0x4,0x67,0xb8,0x45,
+  0x10,0x7f,0x1b,0x9f,0x4c,0x3c,0x61,0xa4,0x19,0x8,0xb8,0x62,0x2,0x78,0x20,0x4a,
+  0x83,0x61,0x50,0x81,0x0,0xda,0x2,0x5e,0xdb,0x50,0x86,0xce,0x12,0xd0,0x64,0x45,
+  0x43,0xd6,0x8b,0x2f,0xbc,0xd,0xeb,0x36,0xf7,0xc9,0x1a,0xf3,0x19,0x29,0xee,0x93,
+  0x67,0x20,0xcb,0xeb,0x6,0x16,0x8c,0x2a,0x40,0x65,0xc4,0x33,0xb2,0x66,0x60,0x98,
+  0xd6,0xee,0xc0,0x94,0xec,0x23,0xe0,0xeb,0xfa,0x1,0x29,0x6,0x4,0xe,0xae,0x66,
+  0x8,0x27,0x84,0x51,0x61,0x17,0x1c,0xf1,0xde,0x5d,0x30,0xb2,0x6f,0xd,0xc5,0x3c,
+  0x60,0xf2,0xd0,0xbc,0x79,0xf3,0x28,0x44,0x16,0x87,0x2e,0x1e,0xe9,0xaa,0xee,0x13,
+  0xc4,0xa3,0x79,0xa2,0xaf,0xec,0x6f,0xe,0xac,0xfd,0xd1,0x7e,0x74,0x28,0xbb,0x60,
+  0x29,0x23,0xc,0xd6,0xdc,0x44,0xd7,0x2f,0xc4,0x91,0x16,0xcf,0x0,0x7d,0xfb,0xad,
+  0x6d,0xad,0x64,0xf0,0xc3,0xb1,0x61,0xc3,0x6,0xb8,0xfb,0xee,0xbb,0xe1,0xb9,0xe7,
+  0x9e,0xa3,0x77,0xb0,0x76,0xd4,0x31,0xb0,0x74,0xc2,0x3c,0xe8,0xf3,0x72,0x6a,0x16,
+  0x2a,0x80,0x4c,0x22,0xfe,0x7a,0x14,0x5a,0x8d,0x84,0xee,0x5,0xac,0xda,0x8f,0xaa,
+  0xf8,0x43,0xd5,0x98,0x74,0xb4,0x9f,0xaa,0xf3,0x2f,0x83,0x7c,0x8a,0x26,0xfc,0x97,
+  0x22,0x0,0x5,0xe7,0xc7,0xfd,0x4f,0x38,0x6e,0xa,0x8c,0x1d,0xdd,0xa6,0x88,0x15,
+  0xe0,0xc0,0x61,0x3e,0x4c,0x1f,0xdf,0x1e,0xd3,0xfd,0x8d,0x88,0xef,0x48,0xfd,0x4d,
+  0xd2,0xff,0x75,0x56,0xa5,0x69,0x7,0xcf,0xd4,0x5,0xdd,0xd7,0xf,0xdf,0x1,0xc6,
+  0xaa,0xe0,0x3b,0xed,0x2b,0xf6,0x7d,0xe9,0xc7,0x3f,0xf8,0xf1,0xb7,0x7,0x8b,0x6,
+  0x7,0xd,0x0,0x3e,0xf7,0x97,0x9f,0xbb,0x52,0x88,0x87,0x3f,0x14,0x93,0x3d,0xab,
+  0x45,0x4c,0xa3,0xf3,0x27,0x75,0x8d,0x75,0xfc,0xd6,0xb4,0xd3,0x30,0x37,0xc,0x32,
+  0x9b,0x0,0x1a,0x70,0xd6,0x6f,0xde,0xe,0x4b,0xb7,0xa5,0x24,0xdc,0x78,0x18,0x17,
+  0xd0,0xd,0x4f,0x3d,0xb3,0x9c,0x4a,0x88,0x53,0x6c,0x40,0x56,0x79,0x5,0x54,0xda,
+  0x70,0x98,0xc1,0x26,0x22,0x5,0xd9,0x3c,0x84,0x3a,0xa,0xe5,0x64,0xca,0xb0,0x2e,
+  0x1d,0x9e,0xd2,0x9e,0x1,0x4,0x0,0x55,0x3d,0x28,0x9d,0x8a,0x67,0xc,0xba,0x44,
+  0x5b,0xfa,0x94,0xd2,0x48,0xb,0x54,0xe0,0x88,0x8d,0xbf,0x87,0x89,0x9b,0x9f,0xa7,
+  0x89,0x32,0x75,0xea,0x54,0xb8,0xe0,0x82,0xb,0x28,0x66,0x40,0x6e,0x1e,0x9a,0xaa,
+  0x3e,0x9,0x65,0xbe,0x1a,0xb3,0x0,0x6d,0xf7,0x60,0x2c,0x46,0xa1,0xff,0xc1,0x55,
+  0x8c,0xd8,0x64,0xa7,0xef,0x92,0x0,0x70,0xa2,0xe3,0xb3,0x45,0xd1,0x19,0xab,0x11,
+  0x69,0x71,0x1f,0xaf,0x13,0x13,0x7b,0x90,0xeb,0xa3,0x8f,0xbf,0x9e,0xca,0xc1,0xaa,
+  0xc9,0xf3,0xe0,0xf5,0xf6,0x63,0xfa,0xd1,0xf7,0xd9,0xb5,0x53,0x98,0xad,0x6a,0xf4,
+  0xa9,0xbb,0xfc,0x52,0xe4,0x9f,0x2,0x0,0x65,0xf8,0x43,0xab,0x3f,0x8a,0xff,0x1e,
+  0x89,0xfd,0x5a,0xe4,0x57,0xed,0xbe,0x54,0x3,0x57,0x12,0xfd,0xeb,0x15,0x98,0x7a,
+  0x40,0x7,0x1c,0x77,0xcc,0x54,0x95,0x48,0x18,0x42,0x3e,0x15,0xc0,0x11,0x63,0x32,
+  0x30,0x6a,0xc4,0xf0,0xc6,0xd2,0xdd,0x9a,0xf3,0xeb,0xee,0x3c,0x75,0x87,0xe5,0x9f,
+  0x11,0xbb,0xeb,0x93,0x37,0xa,0xc5,0xef,0x5a,0xba,0xd2,0xd9,0xa0,0x42,0x12,0xf8,
+  0x3f,0x3f,0xfb,0xd1,0xcf,0xfe,0x66,0x30,0xe8,0x70,0x50,0x0,0xe0,0xb3,0x9f,0xfb,
+  0xec,0xb5,0x2d,0x85,0x96,0xeb,0x30,0x64,0x57,0xa3,0xa3,0xf,0xb2,0xad,0x57,0xac,
+  0x8d,0x54,0x82,0xe8,0xcf,0xd5,0x3,0x1e,0xf2,0x1b,0x6b,0x3f,0xae,0xea,0xd1,0x27,
+  0x19,0x6,0x31,0x46,0xfb,0x9d,0x2d,0x15,0xd8,0x58,0x92,0x86,0x3a,0x94,0x4,0x96,
+  0xbe,0xf1,0x1e,0x2c,0x7b,0x77,0x8b,0x24,0x5e,0xb2,0x7,0x60,0xed,0x79,0x55,0x2f,
+  0x30,0xab,0x55,0x1,0x99,0x2f,0xe0,0x93,0xad,0x20,0x2b,0xb8,0x7e,0x4e,0x1,0x40,
+  0x86,0x32,0x3,0x75,0x7c,0x80,0xe7,0x73,0xf,0x81,0xaf,0xf2,0x5,0x7c,0xf7,0x64,
+  0xb7,0xa4,0x81,0x43,0x8b,0xcb,0x60,0xca,0xca,0x7,0x20,0x57,0xed,0xa6,0xeb,0xc5,
+  0x78,0x1,0x94,0x8,0x30,0x82,0x50,0x6e,0xae,0x80,0x80,0x8c,0x52,0x75,0x63,0x28,
+  0xe4,0x51,0x82,0xd1,0xa1,0xdd,0x2a,0x42,0x6c,0x1b,0x6b,0x42,0x84,0xd6,0x76,0xb6,
+  0x5b,0xd0,0x18,0x2,0x95,0x7b,0x36,0x27,0x8,0x1e,0x75,0x7d,0x4d,0xf8,0x38,0x30,
+  0xb2,0xef,0xfe,0xfb,0xef,0x87,0x57,0x5f,0x7d,0x95,0xae,0xab,0xab,0x30,0x1e,0x56,
+  0x4e,0x5b,0x0,0xab,0x52,0x13,0xfa,0x17,0xf9,0xf5,0xf9,0x99,0xd8,0x4f,0x1,0x3e,
+  0x81,0xf6,0xf9,0xcb,0x75,0x44,0xf8,0x35,0x19,0xf2,0x2b,0xc3,0x7d,0x55,0x83,0xf,
+  0x1d,0xf0,0x53,0xed,0x53,0xe1,0xbe,0x25,0x43,0xfc,0x2d,0x2,0xb3,0x4f,0x9d,0x73,
+  0xb8,0x50,0x4f,0xf2,0x32,0x96,0x48,0x1c,0x7f,0x4a,0x5b,0xd,0x26,0x8f,0x6e,0xa7,
+  0x9a,0x7f,0x26,0xe7,0xbf,0x5e,0x8f,0x71,0x70,0x97,0xee,0x6f,0x9e,0x45,0xbd,0x9,
+  0x8,0x58,0xaa,0x4,0x2,0x9,0xb6,0x8b,0x97,0xcf,0xda,0x33,0x91,0x97,0x42,0x2d,
+  0xba,0x55,0xa8,0x7a,0x97,0xff,0xf6,0xd7,0xbf,0xdd,0xab,0x19,0x83,0x7b,0x15,0x0,
+  0xae,0xf8,0xcc,0x15,0x29,0xc1,0xf1,0xbf,0x23,0x88,0xff,0xb,0xba,0x91,0xa7,0xe6,
+  0x57,0x9a,0x68,0x63,0x4,0xaf,0xcb,0x4a,0x39,0x40,0xc0,0x78,0x7,0x58,0x17,0xda,
+  0x58,0x4f,0x41,0x2b,0x58,0x28,0xe6,0x22,0x54,0x3a,0xf9,0xa6,0xad,0x9d,0xf0,0x56,
+  0x57,0x6,0xaa,0xa1,0xdc,0xa7,0x5c,0xaa,0xc2,0x13,0x4f,0xbc,0x6,0xdb,0x7a,0x4,
+  0x57,0xf1,0x55,0xf8,0x6f,0x46,0x67,0xc,0xa2,0x44,0xd0,0xaa,0xc0,0x40,0x2e,0x7e,
+  0x5a,0xf6,0x12,0x0,0x4a,0x16,0xd2,0x6e,0xc0,0xb4,0x8a,0xc,0xf4,0x95,0xf8,0x9f,
+  0x6a,0xc,0x12,0x4a,0x4,0x1,0x30,0xd2,0xc0,0x28,0xe8,0x86,0x83,0x57,0x3f,0x8,
+  0xe3,0xb6,0xbd,0x4e,0x93,0x8,0x8b,0xa4,0xce,0x99,0x33,0x87,0x16,0x2c,0x36,0xaa,
+  0x87,0xae,0x3a,0xa3,0xf5,0xd3,0xb0,0x1f,0xce,0x1e,0xda,0x84,0x6d,0x9f,0xdf,0x8e,
+  0x5f,0x60,0xfb,0x70,0xb7,0x2c,0xaf,0x1d,0x98,0x4a,0x45,0x2e,0xcf,0xd5,0xab,0x57,
+  0x93,0xae,0x8f,0xa5,0xbc,0x51,0x65,0x9,0x4,0x90,0xae,0x3f,0xe0,0x14,0x78,0x73,
+  0xf4,0x49,0x50,0x82,0x6c,0xff,0x84,0x8f,0x23,0x8,0xa3,0x60,0x1f,0x32,0xf2,0xd5,
+  0x55,0x8d,0x5,0xf9,0x9d,0x80,0x20,0x10,0xdc,0x5e,0x95,0xf9,0x46,0xcb,0xbf,0x14,
+  0xf3,0x8b,0x71,0xee,0x5f,0x51,0x2a,0x80,0x6e,0xe3,0x2e,0x8,0xef,0xc3,0x47,0x4f,
+  0x81,0x83,0xf,0x9e,0x20,0xf1,0x45,0x2c,0xed,0xa9,0x2a,0x1c,0x2c,0xd4,0x7e,0x2c,
+  0x3f,0x97,0x58,0xdd,0x37,0x8,0x9c,0x7a,0xbf,0x6e,0xd2,0x89,0x92,0x41,0x3,0xf1,
+  0x2b,0xc9,0xa8,0xc1,0x6e,0x60,0x45,0x15,0x6a,0xa9,0x96,0x40,0xa0,0x54,0x7c,0x54,
+  0x80,0xc0,0x5,0xb7,0xfc,0xf6,0x96,0xf,0x5e,0x55,0xe0,0x4b,0xff,0xec,0xd2,0x6c,
+  0x36,0x93,0xfd,0x79,0x4b,0x4b,0xcb,0x65,0x78,0xc3,0x41,0xc0,0x2c,0xfd,0x56,0x72,
+  0x4f,0xcc,0x0,0xa8,0x8,0xdb,0x36,0xa,0x46,0x45,0x27,0x7d,0x8a,0xfb,0xb7,0xd,
+  0x83,0xd,0xb6,0x0,0xab,0xa9,0x8,0x7e,0xc7,0xe,0x42,0xab,0xb7,0x76,0xc3,0x9a,
+  0x52,0x8b,0x89,0x69,0xdf,0xb0,0x7e,0x2b,0x3c,0xf6,0xd4,0x9b,0x44,0xb8,0x5e,0x4a,
+  0x6,0xfe,0x60,0x91,0x10,0x48,0x15,0x28,0x51,0x48,0xf6,0xa3,0xcf,0xab,0x9c,0x1,
+  0xf1,0x9b,0xee,0x2e,0xac,0x22,0x4,0xb5,0x77,0x40,0x1a,0x4,0x7d,0x25,0x9,0xa4,
+  0xe3,0x15,0x84,0x92,0x40,0x0,0x7,0x97,0x6,0xc4,0x98,0x51,0x7e,0x7,0x26,0xbc,
+  0xf7,0x10,0x74,0x94,0x36,0xd2,0x33,0x43,0xe2,0x47,0x97,0xe1,0x49,0x27,0x9d,0x44,
+  0xf5,0x6,0xa3,0xdd,0xa2,0x2a,0xb4,0x7c,0x92,0xee,0xcc,0x70,0x6d,0xcf,0x33,0xf,
+  0x75,0x85,0x66,0x9d,0x98,0xa5,0x3d,0x13,0x78,0x4e,0x6c,0xda,0xf9,0xf8,0xe3,0x8f,
+  0x53,0x1,0x4f,0x8c,0x6a,0xc4,0xe7,0xbc,0x75,0xd8,0xc,0x58,0x33,0x65,0x1e,0xe5,
+  0xf3,0xcb,0xd9,0xd6,0x1f,0xd7,0x7,0x45,0xf8,0xca,0xe2,0xaf,0x8,0x5f,0x3,0x1,
+  0x5a,0xea,0xb5,0xbb,0xf,0xb4,0xc5,0xbf,0x5a,0x51,0x5d,0x7e,0x4b,0x2,0x13,0x8a,
+  0x51,0xa5,0x1f,0x12,0xf9,0x4b,0xd2,0xe5,0x87,0xea,0x81,0xd8,0x6f,0xd2,0xb8,0x76,
+  0x98,0x33,0x7b,0xa6,0x4a,0x9c,0x12,0x52,0xa7,0x38,0xd7,0x94,0x7c,0x2f,0x8c,0x19,
+  0x35,0xcc,0xc4,0xfc,0xc7,0x6a,0x26,0x86,0xe0,0xc,0xfc,0xe1,0x62,0x3f,0x4f,0x2,
+  0xd2,0x0,0xdc,0xf0,0x5b,0x10,0xe7,0xfe,0x5a,0x62,0xd0,0x86,0x5d,0x2d,0x9,0xa0,
+  0x14,0x2c,0x40,0xe0,0x65,0x1,0x2,0x67,0xdf,0x76,0xf3,0x6d,0x7b,0xa5,0x5a,0xf0,
+  0x5e,0x1,0x80,0x8b,0x3f,0x79,0x71,0x16,0x8d,0x7d,0x82,0xf8,0xcf,0xd7,0x68,0xa7,
+  0x73,0xe0,0xf1,0xa6,0x75,0xe2,0xe,0x27,0x78,0x8f,0x97,0x8d,0x76,0xad,0xf3,0xe2,
+  0x6e,0x40,0x97,0x61,0xd0,0x0,0x80,0x9d,0x2e,0xcc,0x82,0x85,0xd0,0x2d,0xb8,0x62,
+  0x87,0xf,0x3b,0x6a,0x19,0x93,0xba,0xfa,0xf2,0xcb,0x6f,0xc3,0xb2,0xe5,0x9b,0x14,
+  0xf1,0xaa,0xb6,0xe1,0xa6,0x76,0x40,0x41,0x55,0xe,0x2a,0x90,0x5d,0x0,0x5d,0x83,
+  0x3e,0x1,0x40,0x4e,0x15,0xc,0x49,0x1b,0xef,0x40,0xac,0x6e,0xa0,0x2f,0x5d,0x85,
+  0xa1,0xca,0x92,0x33,0xcd,0x45,0x92,0xde,0x0,0x3,0x82,0x82,0x57,0x83,0x83,0xb6,
+  0xbf,0x2,0xa3,0xd7,0x3f,0x3,0xed,0xa5,0xcd,0x34,0xa1,0xd0,0x38,0x38,0x73,0xe6,
+  0x4c,0x98,0x35,0x6b,0x16,0xb9,0xf,0x31,0xba,0x2e,0xda,0xb5,0xb1,0xb,0x8d,0x9e,
+  0x94,0x3,0x9e,0x18,0x5e,0xfc,0x39,0xf3,0x82,0xa1,0x7a,0x60,0xce,0xfe,0x92,0x25,
+  0x4b,0xc8,0xb8,0x87,0x22,0xbf,0x2c,0x17,0xee,0x43,0x67,0xfb,0x54,0xd8,0x3c,0x69,
+  0x36,0xac,0xc8,0x1f,0x4c,0x2e,0x36,0x4d,0xf8,0xbc,0xa8,0x88,0xe3,0x86,0x25,0xe1,
+  0x53,0x0,0x94,0xd4,0xf1,0x8d,0xa1,0x8f,0x38,0x6d,0x20,0x4b,0x7c,0x5,0x55,0xd5,
+  0xde,0x5b,0x56,0xf9,0x45,0xdd,0xdf,0x53,0x49,0x3d,0xe4,0xe6,0xd3,0xbd,0xfe,0x4,
+  0xe1,0x7,0xb5,0xa2,0xdc,0x46,0x88,0xff,0x2d,0x39,0x1f,0xe6,0x9f,0x35,0xb,0x3a,
+  0xda,0xb,0x52,0xf7,0x47,0xc3,0xab,0xdf,0x3,0x7,0x74,0x64,0xc8,0x76,0x61,0x44,
+  0x7e,0x8b,0xdb,0xdb,0x3a,0xbf,0x96,0x5a,0x8d,0x78,0x6f,0x5a,0xbc,0x3b,0x8c,0x7f,
+  0x41,0xdc,0x0,0xc8,0xd,0x89,0x74,0x1c,0xd,0x8,0xd8,0x51,0x59,0xab,0xb2,0xe2,
+  0x5f,0xa9,0x5c,0x7a,0xa3,0x5c,0x2e,0x9f,0x79,0xe7,0x6d,0x77,0x6e,0xd8,0xd3,0xb4,
+  0xb9,0xc7,0x1,0xe0,0x63,0x1f,0xff,0x58,0x21,0x93,0xc9,0xdc,0x2e,0x26,0xec,0x39,
+  0xb2,0xce,0x7a,0x60,0xce,0x6a,0x87,0xed,0x72,0x11,0x7e,0x67,0x40,0xc0,0xac,0xb7,
+  0x41,0x80,0x15,0xf,0x49,0xa9,0x8a,0xb6,0xb6,0x6b,0x10,0x5f,0xd6,0xa6,0xce,0x6d,
+  0xb0,0xb2,0xd4,0x2a,0x44,0x39,0xb9,0x5f,0xb9,0x5c,0x85,0x47,0x1f,0x7d,0x19,0xb6,
+  0x76,0x95,0x65,0x9c,0x7f,0x4a,0xd7,0x4,0x90,0x9e,0x1,0xa9,0x2,0x14,0x54,0x79,
+  0x71,0x6c,0x26,0x92,0x8b,0x5a,0x55,0xa9,0xda,0x1,0x48,0xec,0x81,0x4a,0x68,0x31,
+  0x89,0x42,0x29,0x55,0x4e,0x4c,0xdb,0x2,0x52,0x8e,0x1c,0x77,0xf5,0x52,0x52,0xbe,
+  0x67,0xfc,0xf0,0x75,0xc5,0xcd,0xdb,0xbc,0xa,0x4c,0xec,0x5a,0xa,0x63,0xd6,0x3f,
+  0xd,0xed,0xbd,0xeb,0x8c,0x38,0x8e,0x92,0x0,0x1a,0xa,0xf,0x3f,0xfc,0x70,0x98,
+  0x36,0x6d,0x1a,0x15,0xd5,0x8c,0x91,0x96,0xe5,0xc2,0xe3,0x21,0xbe,0x31,0x82,0x67,
+  0x1e,0x15,0xfd,0x9d,0xf,0xdc,0x17,0xfd,0xf7,0x18,0xb7,0xff,0xda,0x6b,0xaf,0x91,
+  0x4f,0x1f,0xcb,0x9b,0xa9,0x97,0x29,0x8,0x7f,0x9a,0x20,0xfc,0x53,0x60,0x4d,0xe1,
+  0x20,0xa3,0x56,0xe9,0x4a,0x40,0xa6,0xe0,0x88,0x6b,0x18,0x7d,0x3f,0xca,0xef,0xf,
+  0xeb,0xb2,0xc3,0x8f,0xa7,0xab,0xfd,0x50,0x83,0xf,0x5d,0xec,0x43,0xf6,0xf6,0x43,
+  0xd1,0x1e,0x8d,0x7e,0xc4,0xf9,0x2b,0xca,0xd0,0xa7,0x89,0x9f,0xe2,0xfc,0x4b,0xa4,
+  0xf7,0xa3,0xbd,0xe0,0xb4,0xd9,0x1f,0x12,0xcf,0x46,0x48,0x4c,0xa1,0x2c,0x9f,0x9e,
+  0x17,0xa,0xc9,0x1,0xd9,0x3e,0xa1,0x5a,0xd,0x73,0x17,0xf6,0xe0,0xfa,0x3e,0xff,
+  0xee,0xb0,0xee,0x27,0x11,0x7f,0x52,0xe6,0xa0,0xe,0x28,0xe2,0x39,0x6,0xb8,0xad,
+  0x4e,0x8f,0xc6,0xe7,0x2e,0x24,0x1,0x2c,0x1f,0x7e,0xf6,0xad,0x37,0xdd,0xba,0x47,
+  0xa3,0x6,0xf7,0x28,0x0,0x2c,0xb8,0x60,0x41,0x9b,0x20,0xfe,0xbb,0xa,0x2d,0x85,
+  0x33,0xd0,0xed,0x81,0xba,0x92,0x16,0x77,0x5c,0xd,0x3d,0xb8,0x35,0xdf,0x36,0x2,
+  0x6a,0x55,0x21,0x51,0x12,0x70,0x78,0x7,0x70,0xd8,0xa1,0xc1,0x46,0x5,0xf0,0x23,
+  0x70,0xc0,0x14,0xd4,0x75,0xdb,0x8a,0xb0,0xa9,0xde,0x61,0x52,0x55,0x37,0x6f,0xe9,
+  0x82,0xdf,0x3f,0xfa,0x2a,0x54,0xea,0xa0,0x2c,0xfa,0x99,0xa8,0x80,0x48,0x26,0x4a,
+  0x19,0xf6,0xc9,0x1b,0x50,0xa0,0xf8,0x1,0x5f,0x95,0x13,0xa7,0x5e,0x2,0x99,0x48,
+  0x15,0x30,0xf6,0x0,0x5f,0x2d,0x46,0x1d,0xf0,0xa2,0x58,0x1,0x5,0x2,0xb8,0x2a,
+  0x97,0x8a,0x8a,0xef,0xa9,0xe2,0xdb,0x32,0x1e,0x80,0xb8,0x87,0x94,0x8,0x26,0x16,
+  0xdf,0x83,0x61,0xeb,0x9f,0x87,0x61,0x3b,0x56,0x52,0x10,0x91,0x36,0xc8,0x8d,0x1a,
+  0x35,0xa,0xa6,0x4c,0x99,0x42,0x1e,0x4,0xec,0x14,0x84,0x41,0x45,0xb8,0x8e,0x1b,
+  0xe8,0x6,0x3a,0x30,0x56,0x7f,0xeb,0xd6,0xad,0xe4,0xc6,0xc3,0x3e,0x80,0x2b,0x56,
+  0xac,0xa0,0x52,0xdd,0x28,0x35,0x81,0x7a,0x4e,0x7d,0xb9,0x11,0xb0,0x63,0xf8,0x74,
+  0xd8,0x3a,0x7e,0x16,0xac,0xcb,0x4c,0x80,0x3a,0xc8,0x5c,0x80,0x5c,0x5a,0x4c,0x66,
+  0x4,0x58,0x50,0x2a,0xbd,0xf8,0x87,0xae,0xfa,0x9a,0x2d,0x85,0x4,0x51,0x64,0x64,
+  0x14,0xe5,0x87,0xe2,0xb7,0xfc,0x3b,0x54,0x69,0xbe,0x3e,0xba,0xfa,0xb0,0xe3,0xf,
+  0x11,0x7e,0x8d,0x2c,0xfb,0x64,0xf0,0x23,0xb1,0xbf,0x44,0x7f,0x83,0x72,0xfb,0x61,
+  0x7a,0x2f,0xd5,0xfe,0xaf,0xcb,0x62,0xa0,0x47,0x1e,0x36,0x49,0xa8,0x4d,0x47,0x52,
+  0xfe,0x2,0x26,0x10,0xfa,0x61,0x15,0xc6,0x84,0x5b,0x60,0xf4,0x8,0x59,0x87,0x20,
+  0xe6,0xde,0x6b,0xd2,0xbc,0x33,0xa6,0xfb,0x33,0x95,0x20,0xa6,0x2,0x40,0x18,0xd3,
+  0xf5,0xb9,0x1a,0xc1,0x8b,0x8a,0xba,0xb2,0xb,0x75,0xd2,0x1b,0x82,0x0,0x1e,0x37,
+  0x93,0xcd,0xac,0x12,0xeb,0xe7,0xde,0xf8,0xcb,0x1b,0x57,0xfc,0x51,0x2,0xc0,0x47,
+  0xce,0xff,0xc8,0x31,0x99,0x74,0xe6,0x79,0x71,0x43,0x29,0x4d,0xb4,0x3c,0x46,0xdf,
+  0xd4,0xf4,0x53,0xb9,0xfe,0xdc,0x7d,0x97,0xd4,0x31,0x66,0xa0,0x20,0x90,0xf2,0x23,
+  0x29,0xc0,0x10,0x7f,0x2,0x10,0xe0,0x82,0xb1,0xe9,0x6b,0x7a,0x7d,0xe8,0x81,0x16,
+  0x33,0xb9,0xdf,0x5a,0xb6,0x12,0x9e,0x79,0xf1,0x5d,0xc9,0xc5,0xd,0x8,0xe8,0xe,
+  0x42,0x2d,0xe4,0x21,0x90,0xe5,0xc4,0x65,0x5c,0x80,0x2c,0x2c,0x92,0x8f,0xc2,0x84,
+  0x55,0x1f,0x81,0x90,0xb7,0x15,0xd7,0x0,0xc0,0x73,0x6,0x64,0x1a,0x1d,0x9d,0x33,
+  0x93,0xf6,0x65,0x14,0x31,0x5d,0xbb,0x96,0x6,0xc4,0x61,0x7c,0xc9,0x45,0xb1,0x43,
+  0x4e,0xa9,0x26,0x88,0x49,0x75,0x15,0x1e,0x13,0xee,0x80,0xd1,0xdd,0xef,0x40,0xc7,
+  0x86,0x97,0xa0,0xad,0x6f,0x23,0x64,0xea,0x45,0xc3,0xdd,0xb1,0xd0,0xc6,0xe8,0xd1,
+  0xa3,0x69,0x41,0x10,0x40,0x43,0x22,0x4a,0x7,0xba,0xfc,0x16,0xe7,0xf0,0xe4,0x93,
+  0x16,0x4,0x8f,0x15,0x6c,0x91,0xc0,0x51,0xbc,0x47,0x6e,0x8f,0x0,0x80,0xb,0x6,
+  0xef,0x98,0x98,0xf6,0xec,0x30,0xe8,0x6e,0x9d,0x0,0x5d,0x7,0x1c,0xf,0x9b,0x5b,
+  0xa6,0x40,0x57,0x98,0xa7,0x7b,0xc8,0x88,0xe3,0xb5,0x64,0x7d,0xc8,0xa7,0xe5,0x76,
+  0x35,0xca,0xd8,0x95,0xf9,0xf5,0x7a,0x29,0xd7,0x2,0x22,0x42,0x63,0x85,0xd3,0xad,
+  0xd5,0x42,0xd6,0xd3,0x2f,0x50,0xfa,0x7e,0xd,0x89,0xaa,0xa,0xbe,0xaa,0xf0,0x13,
+  0xd6,0xa4,0xe8,0xef,0xa9,0x2c,0x3f,0x1d,0xe0,0x13,0x56,0x64,0xad,0x7f,0x22,0xfe,
+  0x5a,0x51,0x66,0x1,0xa2,0xe1,0x4f,0x10,0xff,0x84,0xb1,0x1d,0x70,0xee,0x39,0x27,
+  0x53,0xb8,0x6f,0xa8,0xdc,0x6e,0xc3,0xaa,0x9b,0x61,0x4c,0x9b,0x4f,0xdd,0xab,0x89,
+  0x90,0xc3,0xe6,0x59,0x7e,0xae,0xe0,0x9e,0xfe,0x88,0x3f,0xc9,0x9d,0x18,0xd4,0xe2,
+  0x3d,0x5,0x34,0x10,0xe8,0xc4,0x23,0x1d,0x32,0x8c,0x1e,0x32,0x15,0x91,0xf8,0xf9,
+  0x1b,0x6f,0xb8,0x71,0x8f,0x55,0x13,0xda,0xe3,0x2a,0xc0,0xbc,0x73,0xe7,0x5d,0x9f,
+  0xf6,0xd3,0xd7,0xa0,0x8b,0x85,0xfa,0xc7,0xab,0xc6,0xa0,0xbc,0x93,0x8f,0xab,0x1d,
+  0x78,0xb3,0xb6,0x51,0x3b,0x23,0x9,0xd8,0x86,0xc1,0x86,0x18,0x1,0x26,0x71,0x6c,
+  0xed,0xdc,0xe,0xeb,0x6b,0x1d,0x50,0x85,0x8c,0xa9,0x60,0xf3,0xf4,0x53,0x4b,0x60,
+  0xe9,0xf2,0xd,0xc,0x4,0xb2,0xb1,0x52,0x62,0x54,0x33,0x20,0xa3,0x7a,0xa,0x90,
+  0x34,0x80,0xf6,0x1,0xd5,0x59,0x48,0xab,0x3,0x3e,0xaa,0x3,0xba,0xa3,0x90,0xa,
+  0x11,0xd6,0x76,0x1,0xe3,0x2d,0xf0,0x49,0xec,0xcf,0xa6,0x65,0x1e,0x1,0x6a,0x83,
+  0x69,0x5f,0x15,0xdc,0xf4,0x64,0x6a,0x1,0x16,0xab,0xd4,0xe0,0x50,0xaa,0x6,0xb0,
+  0xa3,0x5c,0x27,0x30,0x40,0xd6,0x21,0xce,0x0,0x63,0xa0,0x1b,0x86,0x15,0x37,0x40,
+  0xcb,0xf6,0x15,0x50,0xd8,0xf6,0x2e,0x64,0x2a,0x3d,0x24,0x1d,0xf8,0x61,0x14,0x33,
+  0xc0,0xfa,0x5,0x26,0xe,0xe,0xc,0x58,0x9d,0xa7,0x9a,0x69,0x85,0x52,0xb6,0x3,
+  0x4a,0xa3,0xf,0x81,0xbe,0xf6,0x3,0x61,0x6b,0x7e,0x3c,0x74,0x86,0xda,0xe6,0xe0,
+  0x41,0x9b,0x20,0xfa,0x8e,0x7c,0xa,0xa,0x8a,0xf0,0xcb,0xa8,0xdb,0xd6,0x23,0xe2,
+  0xc7,0xcf,0x9a,0x2a,0x98,0x8c,0xea,0x4c,0x51,0xfc,0xe1,0x5,0x61,0x24,0xfa,0xeb,
+  0x62,0x1e,0x81,0x2a,0xf2,0xa1,0x7c,0xff,0xc0,0x62,0xfc,0xc1,0xf8,0xfa,0x51,0xe7,
+  0x2f,0x4b,0x57,0x1f,0x72,0x7d,0xb5,0x90,0xd,0xa0,0x2e,0xeb,0xfe,0x51,0x3,0x10,
+  0xb1,0xb4,0xe5,0xd3,0xf0,0xd1,0xf3,0x4f,0x83,0x11,0xc3,0x5b,0x15,0xb1,0xa,0xe9,
+  0xaa,0xba,0x5d,0xe8,0xfe,0xdd,0xd0,0xde,0xd1,0xee,0x2c,0xe3,0x4d,0xf7,0x5c,0x6f,
+  0xc,0xf6,0x89,0xe9,0xfe,0x2c,0xa8,0xc7,0x26,0x7e,0x97,0xe5,0x9f,0xbe,0x6b,0x3,
+  0xad,0x32,0xfe,0x71,0xf,0x83,0x51,0x3,0x94,0x4a,0x86,0xcd,0x44,0xa8,0x10,0xae,
+  0xef,0xbd,0x2c,0x3e,0x8f,0xbf,0xe9,0xd7,0x37,0xed,0xb1,0x5a,0x2,0x7b,0x1e,0x0,
+  0xce,0x99,0x37,0xb2,0x54,0x2a,0xbd,0x9d,0xcd,0x65,0x47,0x62,0x90,0x8,0xb6,0x5,
+  0xc7,0x2a,0xbe,0x76,0x80,0xe,0x2f,0xf1,0xad,0x55,0x84,0x81,0x80,0x80,0xd3,0x3b,
+  0xe0,0x30,0x12,0xba,0x42,0x87,0x8d,0x94,0xa0,0xa4,0x2,0x7c,0x31,0x5b,0xb6,0xf7,
+  0xc2,0x16,0x7f,0x14,0x91,0x14,0x9e,0x1f,0x8b,0x88,0x3e,0xf2,0xd0,0xb3,0xb0,0x76,
+  0xd3,0x8e,0x6,0x10,0xf0,0x14,0xf1,0x83,0x22,0x7e,0x13,0x32,0x9c,0xe1,0xe9,0xc3,
+  0x69,0x16,0x2a,0x8c,0x20,0xa0,0x3d,0x3,0x4a,0xff,0x37,0x92,0x80,0x2f,0x36,0x4d,
+  0x89,0x17,0x9f,0x26,0xa2,0xc7,0x10,0x55,0x52,0x65,0x3c,0xc9,0xfd,0x71,0x93,0x8c,
+  0x2f,0x1,0x0,0x93,0x56,0x32,0x6a,0x1d,0x2,0x40,0x57,0x29,0x80,0x1e,0x1,0x8,
+  0x3d,0xe5,0xba,0x6c,0x6,0x22,0xae,0x3e,0xe3,0x5,0xd0,0x1a,0x96,0xa0,0xad,0xda,
+  0x5,0xb9,0x8a,0x58,0x4a,0xdb,0x20,0x5b,0xea,0x84,0x74,0x69,0x3b,0x71,0xd2,0x6c,
+  0xad,0x4f,0x0,0x43,0x4d,0xfa,0xf7,0xc5,0x79,0x90,0xd0,0x6b,0x29,0x79,0x4f,0xd5,
+  0xc2,0x8,0x28,0xe7,0x47,0x42,0x25,0x37,0x1c,0x4a,0x62,0xe9,0x4e,0x75,0x40,0xd1,
+  0x13,0xbf,0x87,0xd2,0x98,0x87,0xd7,0x83,0x4,0x3f,0x32,0xef,0xc3,0x30,0xf1,0x89,
+  0x74,0x8f,0x38,0x54,0x14,0xd7,0x40,0xc4,0xaf,0x38,0x3f,0x82,0x40,0x15,0x7b,0xe7,
+  0x11,0x97,0x8d,0x8c,0x93,0xc5,0x72,0x3d,0x9e,0xd9,0x47,0xc4,0x1f,0x48,0xae,0xaf,
+  0xdc,0x7d,0x1e,0xa5,0xf7,0x56,0x2d,0xce,0x2f,0xc3,0x7c,0x49,0xbf,0xaf,0xca,0x8c,
+  0x3e,0xd0,0xba,0x7e,0x55,0xfa,0xfa,0xc9,0x3e,0x20,0x40,0x23,0xed,0x87,0xb0,0xe0,
+  0xbc,0xd9,0x30,0xe9,0xc0,0x71,0x74,0x6c,0x7c,0x2e,0xa9,0x6a,0x2f,0xc,0xab,0xac,
+  0x87,0x11,0x68,0x23,0xf1,0x18,0xa1,0x37,0x11,0xfb,0xe9,0x9a,0x99,0xae,0xef,0x22,
+  0x7e,0xdb,0xed,0xe7,0xf2,0x1e,0x98,0x56,0xe2,0xdc,0x53,0x63,0xc7,0x15,0x88,0x7f,
+  0xd8,0x29,0x18,0x8d,0xa9,0x28,0x15,0xe7,0x72,0xb9,0x39,0x77,0xde,0x76,0xe7,0xe2,
+  0x3d,0x49,0x9f,0x7b,0xc5,0xb,0x30,0xf7,0xac,0xb9,0x7f,0x2d,0x6e,0xf6,0x3b,0x68,
+  0xa9,0x46,0xb1,0x46,0x37,0xee,0x88,0x25,0xea,0x58,0xb1,0xfc,0xbb,0xc,0x2,0x96,
+  0x74,0xc0,0xd,0x82,0x5c,0xfc,0x77,0x56,0x14,0xf2,0x52,0x50,0x12,0x13,0x6a,0xd3,
+  0x8e,0x32,0xec,0x48,0x8d,0x55,0xe1,0xbb,0x1e,0x74,0xf7,0xf4,0xc2,0x83,0xf,0x3e,
+  0xb,0xdb,0xc4,0xfa,0x46,0x49,0x20,0x17,0x5,0xb,0x65,0xf2,0x51,0xdc,0x40,0x46,
+  0x6,0x9,0xf9,0x19,0x55,0x45,0x88,0x3a,0xc,0xab,0xf2,0xe2,0xda,0x2e,0xe0,0x33,
+  0x10,0xf0,0x3d,0xca,0x9a,0xcb,0xe5,0x53,0xa6,0x98,0x46,0xa,0x9,0x3d,0x2d,0x73,
+  0xea,0x33,0x7a,0x11,0x9b,0x66,0xb1,0x15,0x9a,0xb8,0xfe,0x7c,0x46,0x2c,0xbe,0xd4,
+  0xb7,0xa9,0x9e,0x80,0xa0,0xb2,0xed,0xa5,0x3a,0x6c,0xee,0x93,0x92,0x41,0xaf,0x2,
+  0x85,0x3a,0x53,0xbb,0xd1,0xe,0x2f,0x25,0x8a,0x10,0xb8,0x89,0x8f,0x8a,0xeb,0x80,
+  0x36,0xd6,0x79,0x4a,0x1f,0x5,0x3a,0x76,0x47,0x4e,0x88,0xa3,0x2,0xb8,0x86,0xe5,
+  0x7c,0x18,0x59,0x48,0x89,0xbf,0x5,0x58,0xf9,0x52,0xc4,0x47,0x6e,0xde,0x57,0xd,
+  0xe9,0xdc,0x48,0xfc,0x15,0xb5,0x54,0xc9,0x90,0x1f,0x2a,0xbb,0x5,0x50,0xc0,0x52,
+  0x3d,0x90,0xf5,0x4,0xfa,0xca,0x35,0x25,0xf2,0xeb,0xc2,0x1e,0x56,0xac,0xbf,0xca,
+  0xf3,0x37,0x1d,0x7d,0xd0,0x90,0xa7,0x9b,0x7a,0x88,0xf7,0xe3,0x9,0x62,0xf,0xaa,
+  0xb2,0x9a,0xf,0x19,0xff,0x6a,0xb2,0xb0,0x87,0xe6,0xfc,0x78,0xcc,0x79,0x67,0x7c,
+  0x18,0xe,0x3f,0x72,0x5a,0x94,0xa2,0x80,0x9d,0x9b,0xbb,0xdf,0x85,0xd1,0xc3,0x22,
+  0xbd,0x1f,0xff,0x71,0xb7,0x69,0xac,0xac,0x37,0x8b,0xab,0xe0,0x4,0xea,0x34,0xfc,
+  0x25,0x10,0x7f,0x4c,0xff,0x67,0x69,0xc4,0x3c,0xb6,0xc0,0x76,0x2f,0xa2,0x6b,0x5a,
+  0xe9,0xff,0x37,0xde,0x7b,0xf7,0xbd,0x97,0xef,0x69,0xda,0xdc,0x2b,0x0,0x70,0xf6,
+  0xb9,0x67,0x67,0x85,0xe,0xf9,0xba,0x40,0xb5,0xe9,0x58,0xe0,0x13,0x2b,0xc1,0x68,
+  0xc2,0xe7,0xb5,0xfe,0x5d,0xc6,0xc0,0x86,0x60,0x20,0x7,0x8,0xd8,0xbf,0x9b,0xf2,
+  0xe1,0x8c,0xf0,0x41,0x55,0xa2,0x71,0x26,0xf,0x59,0x86,0x42,0x8c,0x12,0xdc,0x5a,
+  0x4a,0x41,0x4f,0x66,0xa4,0x2a,0x64,0xe1,0xc1,0xa6,0xcd,0xdb,0xe1,0xc1,0x45,0xcf,
+  0x42,0x4f,0xb1,0x66,0x81,0x40,0x56,0xb9,0x8,0x73,0x32,0x73,0x10,0xff,0x16,0x0,
+  0xe0,0xa7,0x65,0x45,0x61,0x92,0xc,0xc8,0x45,0x98,0xa6,0x6d,0x29,0x4f,0x40,0x50,
+  0xf,0x49,0x3,0x9e,0xb4,0xb,0x84,0x74,0x4d,0x29,0xa1,0xa7,0x62,0x55,0xda,0xc,
+  0x25,0x28,0xe1,0xb5,0x60,0x63,0x8a,0x94,0x20,0xbc,0xb4,0x87,0xd2,0x1,0x12,0xba,
+  0x2f,0x54,0x4,0x8f,0x8c,0x84,0x8,0x2,0x5,0xfc,0x3b,0x85,0x46,0x43,0xa9,0x77,
+  0xeb,0x25,0xed,0x4b,0xb5,0x1,0xe9,0xb,0x89,0x12,0x39,0x73,0x57,0x45,0x4c,0x2e,
+  0x1,0xa,0x28,0x29,0x48,0x6f,0x5b,0x3c,0x64,0x98,0x40,0xc5,0x97,0xc7,0x2e,0x8,
+  0x60,0x69,0x13,0xd7,0x82,0x84,0x8e,0x7f,0x67,0x52,0x91,0x15,0xbf,0xa4,0x6c,0x10,
+  0x3d,0xe2,0x78,0x7d,0xe2,0x13,0xbf,0x97,0x6b,0x92,0xe8,0x11,0xc,0x24,0x8,0x48,
+  0x5b,0x45,0x95,0x6a,0xe3,0x85,0x24,0x45,0x5,0x81,0xf4,0x66,0x4,0x82,0xc3,0x19,
+  0x0,0x50,0x44,0x4f,0xe9,0xc7,0x26,0xb9,0xa7,0x26,0x5b,0x79,0xd7,0x6a,0x2a,0x80,
+  0x47,0x26,0xf8,0x84,0xda,0xd0,0x57,0x8d,0x7c,0xfb,0x52,0xa,0xa8,0xa8,0x28,0xbf,
+  0xaa,0x4,0xe,0xa1,0xee,0x9c,0xf2,0x27,0x47,0xc2,0x89,0x27,0x1d,0x23,0x9,0xd8,
+  0xc3,0x53,0xd4,0x20,0xb7,0xed,0x1d,0x18,0xd1,0x92,0x22,0xd1,0xda,0xe6,0xf8,0x76,
+  0x3d,0xff,0x18,0xa1,0x7,0x51,0x31,0x14,0xa7,0xee,0x6f,0xd9,0x1,0x9c,0xc6,0x44,
+  0xe6,0xfa,0xa3,0x73,0xd4,0x2c,0x69,0x43,0x85,0xc1,0x53,0x2d,0x88,0x52,0x9,0xaf,
+  0xb1,0x47,0xd0,0xc9,0x61,0xb7,0xdf,0x7c,0xfb,0xda,0xf,0x4,0x0,0xe0,0x38,0xfd,
+  0xac,0xd3,0xcf,0x13,0x37,0xbe,0x10,0x25,0x0,0x5c,0x74,0x30,0x9,0xb7,0x3,0x68,
+  0x17,0x8,0x4f,0xf1,0x6d,0x6,0x2,0xdc,0x45,0xe8,0x2,0x81,0xa8,0x5e,0x7d,0xb4,
+  0xf,0x7,0x1,0x6e,0x6f,0x30,0xe0,0xa3,0x8e,0xd7,0xb5,0xbd,0x4b,0xe8,0xb9,0x6d,
+  0x50,0xce,0xe,0x57,0xf1,0xa,0x1e,0xac,0x5b,0xb7,0x5,0x1e,0x7e,0xe4,0x39,0xe8,
+  0x15,0x5c,0xd6,0x80,0x40,0x4a,0x35,0xf,0x49,0x49,0x15,0x20,0x54,0x52,0x0,0x65,
+  0x15,0x2a,0xe2,0x7,0x15,0x36,0x4c,0xdb,0x21,0xb7,0xd7,0x41,0x43,0xda,0x25,0xa8,
+  0xe2,0x2,0xf0,0xbc,0x2d,0xf9,0xc,0xd9,0x1,0x90,0xf0,0x89,0xfb,0xa7,0xe4,0x27,
+  0x11,0x22,0x72,0x7c,0x71,0x9d,0x8,0x2,0xd2,0xd8,0x26,0x9,0x34,0x97,0x92,0xf6,
+  0x82,0x96,0x8c,0x4f,0x84,0xac,0xff,0xc6,0xdf,0x49,0x62,0xf0,0x3d,0xa3,0x36,0x78,
+  0xca,0x9e,0xe0,0x31,0xf,0x3,0x4d,0x4,0xf5,0xa5,0x52,0x97,0xe2,0x7a,0x5d,0x89,
+  0xed,0x55,0xf1,0xbf,0x3e,0x45,0xf4,0xf8,0x1b,0x11,0x3c,0x12,0xb9,0x2,0x93,0xa2,
+  0xe0,0xfe,0x25,0x5,0x32,0x4,0x4,0x81,0xfc,0xad,0x8c,0xa2,0x6c,0x2d,0x20,0x29,
+  0x80,0x0,0x0,0xc5,0x66,0x41,0x4,0x15,0xdc,0xe,0x2b,0xf6,0xa8,0xb2,0xe9,0x1e,
+  0xcb,0xef,0x97,0xf1,0xfe,0x5a,0xdf,0xaf,0xc8,0x2e,0xbf,0x65,0x2d,0xf2,0x97,0x24,
+  0x10,0x10,0xd1,0x97,0x5,0x48,0x68,0xb1,0xbf,0xaa,0x5c,0x7d,0xd2,0x73,0x70,0xe2,
+  0xf1,0x87,0xc2,0x9c,0xd3,0x4e,0x20,0x7b,0x42,0xa0,0x2a,0x25,0xa7,0x3b,0x57,0x40,
+  0xbb,0x5f,0xc2,0xea,0xbc,0x8d,0xb5,0xfb,0x98,0xdb,0xce,0x19,0xdf,0xcf,0x8,0x34,
+  0x26,0x15,0x58,0x81,0x3f,0x49,0x62,0x3f,0x77,0xfb,0x39,0xf5,0x7f,0xbd,0xaf,0xd8,
+  0x6,0xb,0xc1,0x60,0xf5,0x20,0x41,0x1f,0xdf,0x5a,0x78,0xd7,0xc2,0xaf,0xec,0xd,
+  0xba,0xdc,0xab,0xa1,0xc0,0xa7,0xce,0x3d,0x75,0xa1,0x98,0xe4,0xe7,0x15,0x5a,0xb,
+  0x64,0x81,0x25,0x82,0x4f,0xc5,0x3d,0x1,0x5c,0xa,0xe0,0xea,0x0,0x27,0x72,0x57,
+  0x9c,0x40,0x6c,0x9d,0x92,0x20,0xb4,0x6a,0x10,0x33,0xe,0x3a,0xea,0xa,0xba,0xc,
+  0x84,0xb8,0xef,0xf6,0xed,0xdb,0x61,0x7b,0x7a,0x14,0xd4,0x32,0x1d,0xb2,0xff,0x9d,
+  0xd8,0x77,0xf5,0x9a,0xd,0xf0,0xd0,0x43,0xcf,0x43,0x51,0x70,0x40,0x9,0x2,0x29,
+  0xc9,0xf5,0x55,0xac,0x0,0x65,0xa,0xa6,0xf2,0x51,0x5d,0x81,0x8c,0x22,0x7e,0x5d,
+  0x51,0xc8,0x74,0x18,0xce,0x46,0x29,0xc4,0xbe,0xe,0x1a,0x12,0x4,0x2c,0x28,0xb6,
+  0xad,0x20,0xb,0x8c,0x20,0x10,0x20,0xf1,0xa3,0x5,0x3b,0x8b,0xc4,0x8e,0x4b,0xc6,
+  0xa7,0x9a,0xf5,0x79,0x24,0x74,0xf1,0xbd,0x35,0xa3,0xb9,0xbf,0x6f,0x8,0x3f,0xa3,
+  0x24,0x84,0xb4,0xb1,0x1b,0x78,0x24,0x29,0xf8,0xba,0x6e,0x9f,0x7a,0xeb,0xda,0xb3,
+  0xa0,0xf3,0xff,0x71,0xd4,0xd5,0xdf,0x81,0x2,0x0,0x2d,0xd2,0x23,0xd1,0x97,0x15,
+  0xc7,0x47,0x22,0x47,0xc2,0x2f,0x2a,0x60,0xe8,0x53,0xc4,0x5f,0x26,0x9,0x20,0x90,
+  0x44,0x8e,0x12,0x80,0x5a,0x6a,0x35,0xc,0x57,0xe,0x48,0xd,0x28,0xd5,0xa4,0x1b,
+  0x2c,0x54,0x3e,0xff,0x88,0xeb,0xeb,0xa2,0x9e,0x55,0x29,0xce,0x93,0xbe,0x5f,0x16,
+  0x12,0x83,0xe6,0xfa,0x4a,0xc7,0xaf,0x94,0x4c,0x3e,0xbf,0xd4,0xf7,0x35,0xe7,0xf,
+  0x60,0xd6,0x31,0x33,0x60,0xde,0xd9,0xb3,0x65,0x92,0x12,0xf8,0x4,0x32,0x5e,0xd7,
+  0x2a,0x68,0xa9,0x6e,0x97,0x2d,0xc7,0x18,0x77,0xe6,0x86,0x37,0x6d,0x9c,0xd3,0xc6,
+  0x3a,0x17,0xb7,0x77,0x89,0xff,0xb6,0x1d,0xc0,0xa5,0xd7,0x9b,0xea,0x41,0x68,0xb,
+  0x61,0xcd,0x45,0xed,0x98,0xc,0xe2,0xfe,0x7d,0x25,0x24,0xfe,0xb5,0xad,0xed,0xad,
+  0x87,0xdd,0x76,0xd3,0x6d,0x3d,0x1f,0x38,0x0,0x38,0x63,0xde,0x19,0xd3,0x85,0x8e,
+  0xf3,0x7a,0xae,0x90,0xcb,0x62,0x75,0x18,0x6a,0xfd,0xcd,0x4b,0x77,0x39,0x7c,0xf6,
+  0x31,0x62,0x76,0x80,0x0,0xd7,0xff,0x63,0xed,0xa7,0x1d,0x99,0x84,0x5a,0x2a,0xa0,
+  0x18,0x1,0xa5,0x12,0xc4,0xe2,0x5,0x18,0x0,0x50,0x68,0xa8,0xe0,0x28,0xdb,0xb6,
+  0xef,0x80,0x9e,0xec,0x58,0xa8,0x67,0xda,0x14,0x40,0x79,0xf0,0xde,0xca,0xd,0xf0,
+  0xe0,0x43,0xcf,0x41,0x9,0x41,0x80,0xce,0xa1,0x2a,0x4,0x93,0xce,0x9f,0xa3,0x38,
+  0x0,0x6d,0x1f,0x90,0xe2,0xbf,0x36,0x18,0x2a,0x30,0x48,0x47,0x8d,0x47,0xc9,0x4d,
+  0xc8,0x13,0x87,0xc4,0xf9,0x5b,0xf3,0x69,0xa1,0xdf,0xfb,0x24,0x19,0x91,0x61,0x30,
+  0x2d,0x1,0x0,0x81,0x0,0x6b,0xd6,0xe1,0xdf,0xf8,0x3b,0x4a,0x1,0x8,0xa,0x1a,
+  0x0,0x24,0x48,0x78,0x4,0xe,0x69,0x65,0x2f,0xc0,0xcf,0xb4,0x27,0xd,0x86,0xbe,
+  0x32,0x28,0x6a,0xf7,0xa2,0xcf,0x22,0xf3,0x3c,0x90,0x86,0x3b,0xed,0x9d,0x43,0xa2,
+  0xaf,0x85,0xd2,0x77,0x8f,0x44,0x8d,0x52,0x3b,0x1a,0xf4,0x70,0x3d,0xda,0x16,0x8,
+  0x8,0x6a,0x92,0xd0,0xfb,0x14,0xc1,0xa3,0x67,0x42,0xae,0x43,0x9,0xa0,0x46,0xdc,
+  0xbf,0x26,0xe,0x50,0x55,0xdc,0xb6,0x52,0xc1,0x6d,0x58,0x46,0x1f,0x45,0xf7,0xc9,
+  0x7a,0xfe,0xc4,0xc5,0x95,0xce,0x8f,0x56,0xfe,0x50,0x85,0xf8,0x46,0x62,0x7f,0x45,
+  0x1a,0xfb,0x30,0x9d,0x57,0x89,0xfc,0xa1,0xee,0x5,0x20,0x8,0xee,0x78,0x41,0xfc,
+  0x67,0x9f,0x7d,0xaa,0x24,0x5e,0x4f,0xa6,0xf8,0x42,0xd7,0x1a,0xc8,0x15,0x37,0x42,
+  0x47,0x47,0x47,0xcc,0x78,0xd7,0x10,0xeb,0xf,0x5a,0x42,0x89,0xc4,0x7a,0x17,0xb7,
+  0x4f,0xd2,0xfd,0x1b,0x2,0x7f,0x78,0x95,0x60,0xdd,0x36,0xcc,0xf2,0xfd,0x6b,0x7b,
+  0x81,0xde,0x17,0x7b,0x8,0x52,0xb0,0x57,0x47,0xdb,0xe5,0xbf,0xbb,0xfd,0x77,0x7b,
+  0xad,0x46,0xc0,0x5e,0xcf,0x6,0x9c,0x33,0x77,0xce,0x75,0xe2,0xac,0xd7,0x92,0x41,
+  0x30,0xa7,0xc,0x82,0x69,0x2b,0x26,0x0,0x89,0x34,0xdd,0x18,0xd2,0xdb,0x2f,0x8,
+  0x78,0x8d,0xeb,0xb9,0x9b,0x4f,0x5b,0xfd,0x9b,0x85,0xf,0xdb,0x65,0xc6,0xf1,0xc5,
+  0x6d,0xeb,0xda,0x1,0x7d,0x85,0x9,0x10,0x8,0x10,0x40,0x0,0x40,0xbb,0xc0,0xaa,
+  0xd5,0x1b,0xe0,0xfe,0x7,0x9e,0x96,0x16,0x6d,0x4f,0x15,0x2,0xf1,0x14,0x61,0x63,
+  0xc1,0x90,0x94,0xb4,0xd,0x84,0x5a,0xd,0x20,0xb,0xbb,0x52,0x3,0x30,0x6e,0x40,
+  0x1,0x80,0xa7,0x24,0x81,0xa8,0xa0,0x8,0x4a,0x45,0x69,0x72,0x61,0x21,0xc1,0xa3,
+  0xee,0x8f,0x9f,0x39,0x4,0x1,0x8c,0xc5,0x47,0x3b,0x1,0x4a,0x0,0xd9,0x34,0x1,
+  0x0,0xda,0x9,0x72,0x5a,0x2,0x50,0x0,0xa0,0xd7,0xa5,0xfd,0xc8,0x5b,0x90,0x4d,
+  0x49,0x49,0x80,0xbc,0x8e,0xaa,0x32,0x4d,0x4a,0x1,0x81,0x8e,0xcd,0xe1,0x2e,0x3b,
+  0xfc,0xac,0x28,0x8b,0xbe,0xd4,0xf1,0x25,0x61,0xa3,0x71,0xaf,0x44,0x0,0x10,0x44,
+  0x9f,0x62,0x29,0xa,0xb1,0xbe,0x24,0xa4,0x82,0x72,0x45,0x8a,0xfe,0xc4,0xf9,0xc5,
+  0x24,0xc7,0x4f,0xea,0x92,0x8b,0xdb,0x62,0xb9,0x2e,0x15,0xe1,0x87,0xea,0x80,0x4f,
+  0xdc,0x5f,0x12,0xb2,0xd4,0xf7,0x2b,0x4a,0xcc,0x97,0x45,0x3b,0x64,0xf1,0xe,0x55,
+  0xe4,0xa3,0xa6,0x17,0x9,0x12,0x18,0x1f,0xa0,0xd,0x88,0x7f,0x72,0xc2,0x87,0x4,
+  0xe7,0x9f,0x43,0x12,0x6,0xde,0x10,0x86,0xf9,0xd6,0xb7,0xaf,0x81,0x6c,0xf7,0x3a,
+  0x68,0x1f,0xd6,0x1e,0xab,0x63,0xe0,0x4c,0xe7,0x75,0x88,0xfc,0x9c,0xf8,0x75,0x31,
+  0xf,0x9d,0xbf,0x92,0x44,0xfc,0x76,0xe6,0x9f,0x56,0x7,0x88,0xf3,0x73,0x5b,0x80,
+  0x6,0x17,0xea,0xc2,0x14,0x60,0x85,0x20,0x2,0x0,0xa1,0xa2,0x2c,0xbe,0xff,0x9e,
+  0xfb,0xe7,0xec,0x4d,0x7a,0xdc,0xeb,0x0,0x70,0xe6,0xfc,0x33,0x87,0x15,0x8b,0xc5,
+  0x77,0x85,0xa,0x30,0x12,0x55,0x81,0x6c,0x5a,0x66,0x93,0xf9,0xe9,0xa8,0xe5,0x77,
+  0x2c,0xad,0x57,0x17,0x99,0x64,0xdf,0x63,0x84,0x9f,0x4,0x8,0x4d,0x2,0x8a,0x74,
+  0x4a,0x31,0xd9,0x3,0x98,0x1a,0x60,0x87,0xb,0xeb,0xf3,0xa2,0x78,0xb6,0xbd,0xab,
+  0x7,0xca,0x6d,0x13,0x1,0x72,0xed,0x92,0x7b,0x8a,0xf5,0xab,0xd7,0x6c,0x82,0x7,
+  0x1e,0x78,0x12,0x76,0xf4,0x56,0x8c,0x35,0x5f,0xaa,0x4,0x39,0x65,0xf5,0xd7,0x49,
+  0x42,0xf9,0xc8,0x6,0x80,0x6a,0x81,0xf9,0xae,0x16,0xa5,0x16,0x78,0xa,0x0,0xd0,
+  0x28,0x88,0x31,0x13,0xad,0x85,0xac,0x2,0x81,0x14,0x35,0xda,0x90,0x1c,0x3e,0x45,
+  0xc1,0x42,0x2d,0x42,0xa6,0x47,0x15,0x20,0x83,0x79,0xf8,0x19,0x29,0x11,0xa0,0x6d,
+  0x20,0x9d,0x52,0x76,0x80,0xb4,0x27,0x1,0xc3,0x8f,0xd4,0x82,0x14,0xeb,0xc9,0x67,
+  0xc,0x85,0xc4,0xed,0x22,0xb5,0xa0,0xaa,0x88,0x5e,0x37,0x6,0xa9,0xd4,0xa5,0x3a,
+  0xa0,0x5d,0x7c,0xa4,0x12,0x68,0x2e,0x2f,0xc0,0x91,0xd6,0x57,0xe4,0x67,0x45,0xfc,
+  0x4d,0x52,0x40,0xa5,0x46,0x36,0x84,0x2a,0x72,0x3f,0xda,0xbe,0x46,0x0,0xe1,0xe9,
+  0xe4,0x1e,0x55,0xd2,0x2b,0xa0,0x86,0x1e,0x2a,0x68,0x7,0xb9,0x7f,0xa5,0xa4,0x9a,
+  0x79,0xaa,0xc,0xbe,0x9a,0xf2,0xfb,0xeb,0xef,0x81,0x74,0x9,0x4a,0x91,0x1f,0x73,
+  0x4,0x42,0x38,0x6d,0xce,0x71,0x70,0xda,0xdc,0x93,0xc8,0xd0,0xa7,0x55,0x99,0xda,
+  0xb6,0x35,0x90,0xda,0xb1,0xa,0x3a,0xda,0x3b,0xe8,0x9e,0xc8,0xbd,0x56,0x6f,0x34,
+  0xbc,0x71,0x91,0x3f,0xc9,0xb5,0xd7,0x20,0xf6,0x43,0x24,0xfe,0x73,0xeb,0x3d,0xdf,
+  0x56,0xbb,0xfa,0xb4,0x68,0xef,0xca,0x2a,0xe4,0xe0,0x81,0xa2,0xbf,0x98,0x54,0xf5,
+  0x61,0xc3,0x87,0x1d,0x7f,0xd7,0x6d,0x77,0xbd,0xfc,0x81,0x6,0x0,0x1c,0xa7,0x9e,
+  0x71,0xea,0x35,0x41,0x2d,0xb8,0x3e,0xdf,0x92,0xa7,0x88,0x34,0xdb,0x2d,0x68,0xc7,
+  0x6,0xe8,0xc0,0x94,0x5d,0x1,0x1,0x1d,0x7d,0xd8,0x20,0x15,0x58,0x80,0x60,0xa4,
+  0x1,0x3f,0x6e,0xc,0xd4,0x8b,0x6c,0xe3,0xd5,0xb,0xd5,0x76,0x1,0x2,0xf9,0xe,
+  0xe2,0xfa,0x29,0xb1,0xfd,0xa6,0x2d,0x9d,0x70,0xff,0x7d,0x8b,0x61,0x53,0x67,0xaf,
+  0x7c,0x9c,0xc6,0x43,0xa0,0x72,0x8,0x52,0x19,0xe3,0x32,0x24,0x55,0x40,0xd9,0xb,
+  0x40,0x49,0x3,0xb4,0x1e,0xbb,0xd,0xa5,0x32,0x91,0xab,0x50,0x25,0x11,0x61,0xcc,
+  0x44,0x9b,0x2,0x1,0x2a,0xb1,0x4d,0x92,0x80,0xe4,0xfa,0x28,0x9,0x20,0x77,0xcf,
+  0xa,0xa0,0xc8,0x2a,0x62,0xcf,0x67,0xa5,0xaa,0xa0,0x41,0x80,0xb6,0x4b,0x49,0x3b,
+  0x0,0x6,0x11,0x91,0x64,0xe5,0xc9,0x3c,0x3,0x3d,0x78,0xa1,0x22,0x72,0xd3,0x61,
+  0xb9,0x2a,0x22,0x10,0x8f,0xac,0xf6,0x8,0xe,0xe4,0xcb,0xaf,0x4b,0x2f,0x2,0x12,
+  0x38,0x1a,0xf5,0x90,0xeb,0xa3,0xa1,0x8f,0x74,0xfd,0xaa,0xc,0x53,0x46,0x0,0xd0,
+  0xdc,0x5f,0x1b,0xbe,0x4a,0xa5,0xaa,0xe0,0xfc,0x3c,0x9f,0xbf,0x2a,0x5b,0x99,0xd5,
+  0x25,0xd7,0x47,0xe2,0x26,0x8e,0x5e,0x95,0xa2,0x7d,0x50,0x2d,0x1b,0x1b,0x0,0xa9,
+  0x5,0x66,0x1b,0xd5,0xf6,0x3b,0x90,0x2a,0x4,0xde,0xcf,0xb9,0xe7,0xce,0x81,0xe3,
+  0x3f,0x3c,0x53,0x55,0x2c,0x96,0x81,0x45,0x95,0xad,0xef,0x81,0xdf,0xb5,0x9a,0x74,
+  0x7e,0x9d,0x75,0x1a,0xe3,0xfa,0x36,0xd7,0xe6,0x31,0xfe,0x61,0x54,0xba,0xcb,0x26,
+  0x72,0x9b,0xf8,0x1b,0xea,0x2,0xd8,0x85,0x43,0x79,0x1f,0x81,0x7a,0x63,0x8c,0x81,
+  0x6,0xe,0x4c,0x99,0x46,0xee,0xdf,0xde,0xd1,0xfe,0xa3,0xfb,0x16,0xde,0xf7,0x3f,
+  0xf6,0x36,0x2d,0xe,0xa,0x0,0x9c,0x35,0xff,0xac,0x54,0x5f,0xb1,0xef,0xf9,0x4c,
+  0x2a,0x73,0xc,0x49,0x1,0xb9,0xac,0xd4,0xc7,0x7d,0x26,0x9,0x68,0xfd,0xdc,0x8b,
+  0x92,0x86,0x62,0x20,0xc0,0x8,0x9e,0x3,0x82,0xed,0x21,0xe0,0x15,0x6a,0xcd,0x7a,
+  0x6e,0xf,0x20,0x1f,0x7c,0x4,0xa,0xb6,0x31,0x50,0xe7,0xb,0xe0,0x6f,0xf8,0x22,
+  0x77,0xec,0xe8,0x81,0x6a,0xdb,0x1,0xe0,0xb5,0x8e,0xa6,0xc7,0x97,0x16,0xc4,0xd7,
+  0xd3,0x5d,0x14,0x92,0xc0,0x13,0xb0,0xfc,0xbd,0x8d,0x2a,0xac,0x57,0x46,0xf6,0x45,
+  0x44,0x9d,0x31,0x86,0x42,0xcd,0xf5,0xa5,0x8d,0x40,0x79,0xf,0x32,0xcc,0x26,0x90,
+  0xca,0x98,0xc0,0x21,0x8f,0xd4,0xa3,0xc,0xb4,0x8,0x10,0xc8,0x65,0x53,0x24,0x75,
+  0x50,0x6d,0xfd,0x8c,0x54,0x7,0x32,0x19,0xe5,0x2a,0x4c,0x49,0xbb,0x40,0x8e,0x5c,
+  0x85,0x12,0x4,0x52,0x8a,0xe8,0x91,0xeb,0xa7,0x15,0x10,0x78,0xc0,0xbb,0xf2,0x46,
+  0xe1,0xc6,0x34,0x11,0x94,0xe8,0x4c,0xb6,0x39,0xd2,0x65,0xe5,0x77,0x4,0x3,0x94,
+  0x8,0x90,0xa8,0x2b,0x4a,0xdc,0xaf,0xd7,0x3,0xe5,0xe6,0xb,0xe9,0x7b,0x19,0xc5,
+  0xfb,0x6a,0x9d,0x9a,0xad,0x48,0x83,0x1f,0x8a,0xfe,0x35,0x28,0xb,0xf5,0x8,0xab,
+  0x1b,0xeb,0x60,0x9f,0x40,0x15,0xee,0x94,0x62,0x7f,0x95,0xfc,0xfb,0x61,0xb5,0xaa,
+  0x8,0xbc,0x6c,0x5c,0x7a,0xa0,0x8,0x5f,0x87,0xf3,0x4a,0xff,0x7e,0xdd,0xe8,0xfb,
+  0xed,0x2d,0x59,0xf8,0xd8,0x85,0xf3,0xe0,0xd0,0xc3,0xa6,0x53,0xd2,0x50,0x9d,0x2e,
+  0x5e,0x5c,0xc7,0xc6,0xb7,0xc0,0xdb,0xb1,0x96,0xa2,0xfc,0x70,0x34,0x6d,0xde,0xa1,
+  0x8d,0x7a,0xcc,0x12,0x1f,0xfb,0xce,0x40,0x82,0x5b,0xfa,0x6d,0xa0,0x20,0x7f,0x3f,
+  0xa9,0x4c,0x96,0x7,0xc0,0x6a,0x26,0xca,0x53,0x83,0x8d,0xe1,0x4f,0x80,0x20,0xf6,
+  0xf,0x14,0xf3,0xab,0x67,0xc4,0x88,0x11,0x87,0xdd,0x71,0xeb,0x1d,0x7b,0xdc,0xed,
+  0x37,0x24,0x0,0x0,0xc7,0x69,0x67,0x9e,0x36,0x5b,0xa0,0xdf,0xe3,0x68,0x7,0x40,
+  0xb7,0x20,0x19,0x4,0xb5,0x75,0x3e,0x15,0x71,0x62,0x5b,0xd,0xc0,0x61,0xc,0x84,
+  0xe,0x10,0x68,0x66,0x17,0xd0,0x22,0xbe,0x9d,0x68,0x14,0x8b,0x1e,0x64,0xf5,0x5,
+  0x78,0x7d,0x2,0x2d,0x89,0x48,0x10,0xe8,0x86,0x5a,0xeb,0x4,0xf0,0xda,0xc7,0xa9,
+  0xba,0xf7,0x69,0x81,0xe4,0x75,0x78,0xf4,0xf,0x4f,0xc3,0xb3,0x2f,0xbe,0xa5,0x6a,
+  0xdc,0x79,0x92,0x88,0x7d,0xd5,0xda,0x9a,0x44,0x7c,0x99,0x2c,0x4,0xbe,0x6,0x3,
+  0x71,0xcf,0xaa,0xaa,0x10,0x12,0xbd,0xaf,0x8c,0x83,0x54,0x76,0x1c,0x7f,0x27,0x7b,
+  0x80,0xf4,0x12,0x14,0x4,0x8,0xe4,0x31,0x3c,0x34,0xa5,0xf2,0x5,0xc4,0xf1,0x32,
+  0xe4,0x2a,0x4c,0x4b,0x62,0x4f,0x33,0x30,0xd0,0xdb,0x28,0xf,0x0,0xa9,0x1,0x64,
+  0x58,0x8d,0x88,0x1f,0x7f,0x43,0x91,0x19,0xd5,0x3,0x1d,0x95,0x1b,0xaa,0xa4,0x1d,
+  0x8a,0xdc,0xab,0x87,0xca,0x15,0xa8,0x6c,0x2,0x75,0xc9,0xf9,0x49,0x1a,0xa8,0x49,
+  0x6e,0x5f,0x53,0x1,0x3e,0x14,0xf8,0x53,0x15,0x62,0xbf,0x2,0x7,0xcc,0xa6,0x2c,
+  0x89,0xa5,0x5e,0x8b,0x8,0x37,0x54,0xc5,0x3c,0x3d,0xa5,0xef,0x4b,0x11,0xbf,0xaa,
+  0x2c,0xfa,0x15,0x52,0x5,0x82,0x5a,0x45,0x5,0xf4,0x70,0xc2,0xaf,0x99,0x48,0x41,
+  0x5c,0xe,0x9c,0x38,0xa,0x2e,0xba,0x78,0x1,0x8c,0x1b,0x37,0x4a,0x95,0x26,0x97,
+  0xc4,0x58,0x5c,0xfb,0x6,0x78,0xbd,0x1b,0x88,0xf3,0xdb,0xc4,0x1f,0x73,0xf5,0x69,
+  0xe3,0x9b,0xad,0xfb,0x33,0xbd,0xdf,0x10,0xb6,0xa5,0xef,0xf3,0x70,0x5f,0x4e,0xfc,
+  0x98,0xd2,0xab,0x41,0x81,0x47,0xfd,0xc5,0x72,0x0,0x82,0xc6,0x8,0x42,0x6a,0x4,
+  0x53,0x2e,0x63,0x7e,0xc6,0x97,0xef,0xfd,0xdd,0xbd,0xff,0x32,0x18,0x74,0x38,0xa8,
+  0x45,0x41,0x67,0x9f,0x3a,0xfb,0x37,0xe2,0xa,0x2e,0xc3,0x9a,0xf1,0x18,0xa0,0xa1,
+  0x5b,0x80,0xf3,0x30,0x61,0x57,0x9,0xf0,0x58,0xda,0xaa,0x2e,0xa6,0x60,0x3,0x82,
+  0x43,0x25,0x30,0x91,0x85,0x96,0x97,0xc0,0x96,0x12,0xb8,0x8a,0x60,0xdb,0x9,0x28,
+  0x85,0x58,0xbc,0x44,0x4c,0x98,0xa9,0x15,0xc6,0x42,0x66,0xf4,0x14,0xd5,0x15,0x57,
+  0xba,0xf1,0x5e,0x7e,0xe9,0xd,0x78,0xf8,0x91,0x67,0xa1,0xf,0x3b,0x11,0x7b,0x5e,
+  0x64,0x20,0xd4,0x9e,0x2,0x3f,0xa3,0xaa,0x6,0x2b,0xdd,0x3f,0x93,0x35,0xaa,0x2,
+  0xda,0xc,0xc8,0x38,0x48,0xeb,0x95,0xf4,0x60,0x9a,0x8d,0x64,0xc8,0x45,0x88,0xd5,
+  0x76,0x73,0x59,0x7c,0x3e,0x19,0xd3,0x78,0xc3,0x4b,0xc9,0xfa,0xfb,0x69,0x15,0x39,
+  0x28,0x81,0xc0,0x93,0x0,0x40,0xb6,0xd,0x90,0xd1,0x85,0x2c,0xc9,0x48,0x3,0x80,
+  0xe9,0xb,0xc0,0xdc,0x81,0x3a,0x50,0x48,0xab,0x0,0x64,0x27,0xa8,0xcb,0x89,0x8b,
+  0x20,0x80,0xc1,0x3d,0xf8,0x1b,0x5a,0xf8,0x3,0x1d,0xe7,0x4e,0x45,0x4b,0xd1,0xd8,
+  0x57,0x25,0xb1,0x3f,0xa8,0xcb,0xd4,0x5d,0x12,0xdb,0xeb,0x35,0x63,0xec,0x23,0x2,
+  0xa7,0x4f,0xc9,0xe9,0x43,0x25,0xde,0x7b,0x75,0xed,0xcf,0x57,0xc5,0x3e,0xc8,0xc8,
+  0xa7,0x9,0xbf,0x4e,0x9c,0xff,0xc3,0xb3,0xe,0x87,0xf3,0xce,0x3f,0x1b,0xf2,0xf9,
+  0xac,0x11,0xf9,0xeb,0xb5,0x12,0x74,0xaf,0x78,0x5,0xb2,0xb5,0x6e,0xf2,0xf3,0x6b,
+  0xee,0x6a,0xf7,0xe8,0xb3,0xd,0x7d,0x76,0x5,0x5f,0xbb,0xf4,0xb9,0x2d,0xf2,0x73,
+  0x23,0x20,0x2f,0xc,0xea,0xea,0xb,0xe8,0x4,0x2,0xee,0xf6,0x53,0xcf,0xc,0x93,
+  0xaf,0x72,0xb9,0xdc,0xf2,0xe1,0x23,0x86,0x7f,0xe8,0xf6,0x9b,0x6f,0xdf,0xab,0xa5,
+  0xc0,0x86,0x4,0x0,0xcc,0x3d,0x73,0xee,0x44,0x81,0x80,0x98,0x27,0x50,0x40,0xb7,
+  0x20,0x1a,0xbe,0x78,0xf5,0x5e,0xde,0xda,0xcb,0x49,0xfc,0x16,0xc7,0x77,0xda,0x5,
+  0x5c,0x41,0x43,0xe,0x63,0x21,0xb7,0xd,0x34,0xf4,0x1c,0xb0,0x82,0x92,0xb4,0x4d,
+  0xa2,0xa7,0xbb,0x7,0x2a,0xa9,0x56,0xc8,0x8e,0x3b,0x84,0xb8,0xb7,0xaf,0x74,0xf7,
+  0xd,0xeb,0xb7,0xc0,0xbd,0xf7,0x3c,0xc,0xab,0xd7,0x75,0xc6,0xa4,0x1,0x59,0x65,
+  0x88,0x3,0x81,0xe0,0xf6,0x1a,0x10,0x50,0x35,0xf0,0x99,0x8b,0xd0,0xcf,0x46,0x19,
+  0x85,0xa6,0xeb,0x90,0xdc,0x37,0x87,0x7a,0x7f,0xe,0x25,0x80,0xc,0x1,0xf,0x2a,
+  0xf6,0xc6,0x78,0x8a,0x44,0x9f,0x96,0xbd,0xf9,0x48,0x3a,0xf1,0x3c,0xd5,0x97,0x4f,
+  0x1b,0x3a,0xc1,0x64,0xf5,0xc9,0xf,0xd5,0x62,0x3c,0xa0,0x1e,0x56,0xa6,0x32,0x98,
+  0x9c,0xc0,0x32,0x79,0x7,0x27,0x6c,0x55,0xbb,0xd0,0xea,0xaa,0x18,0x68,0x20,0x8b,
+  0x74,0xe0,0xef,0xd5,0x4a,0x95,0xc,0x81,0xc8,0xf9,0xeb,0x48,0xf8,0x9a,0xe3,0x93,
+  0x95,0x5f,0xa6,0xef,0xca,0xf0,0x5e,0x15,0xaa,0xab,0xc3,0x76,0xf1,0x33,0x50,0xa0,
+  0x80,0x85,0x3e,0xea,0xb2,0xba,0x6f,0x58,0xd7,0x91,0x82,0x92,0xf0,0x5b,0xf3,0x19,
+  0x58,0xb0,0xe0,0x74,0x38,0xf1,0x4f,0x66,0xd1,0xb9,0xeb,0x20,0xdd,0x7c,0xb5,0xde,
+  0x2e,0xe8,0x7e,0xef,0x45,0xc8,0x7b,0x35,0x92,0x22,0x79,0x34,0x1f,0x89,0xec,0x81,
+  0xba,0xf,0xdb,0xc2,0x6f,0xe9,0xfa,0x51,0xdb,0x33,0xb7,0x2a,0xd0,0xd0,0x22,0x8d,
+  0x11,0x3e,0xf7,0x26,0xa0,0x9d,0xc8,0x48,0x2,0x8,0x8a,0x61,0x3c,0xe5,0x97,0x7b,
+  0xe,0x90,0xf3,0xe3,0xf6,0x23,0x86,0x8f,0x58,0xb0,0xf0,0xae,0x85,0xf7,0xc,0x16,
+  0xd,0xe,0x7a,0x5f,0x80,0x53,0x4e,0x3d,0xe5,0x3a,0xf1,0x60,0xae,0xa5,0x8,0x41,
+  0x74,0xb,0xa6,0x53,0xb1,0xc6,0x9e,0x76,0x51,0x4f,0x57,0x97,0xa0,0xfe,0x16,0x97,
+  0x4a,0xc0,0x1,0x42,0xdb,0x3,0x92,0x22,0x8,0x93,0x40,0x0,0xff,0xee,0x2b,0xf6,
+  0x41,0x9f,0x98,0xd3,0xf9,0xf1,0x87,0x41,0xaa,0x65,0x18,0x73,0x1f,0x6,0xf0,0xc8,
+  0x23,0x8b,0xe1,0xc9,0x67,0x5e,0x23,0x91,0x59,0x16,0xfe,0xd0,0x71,0xff,0xa,0x8,
+  0xe8,0xbb,0xce,0x11,0xc8,0xca,0x92,0xe4,0x69,0x15,0x5d,0xe8,0xab,0xf6,0x63,0xca,
+  0x30,0x48,0xdf,0x55,0x79,0x31,0x94,0x26,0xb0,0x23,0x11,0x4a,0x4c,0x99,0x6c,0x9a,
+  0x54,0x90,0x94,0x92,0x2,0x74,0x4f,0x3e,0xba,0xee,0x34,0xdd,0x9,0xe8,0x6e,0xbd,
+  0x98,0x60,0x44,0x5c,0x1f,0x9f,0x41,0x18,0xd5,0x1f,0x40,0xda,0xf7,0x89,0x3,0xca,
+  0x92,0xa0,0x81,0x22,0xc,0x50,0x2a,0x0,0x12,0x7b,0xcd,0x94,0xe6,0x96,0x7a,0x3f,
+  0xb9,0xda,0xb0,0x5,0x76,0x19,0x9b,0x97,0x54,0x25,0x28,0x68,0x3d,0x9d,0xc,0x7c,
+  0x92,0xeb,0x47,0x44,0xad,0xac,0xf7,0xf5,0x8a,0xb1,0xe4,0x13,0xd7,0xf,0xd4,0x7a,
+  0x2,0x95,0xaa,0xc9,0x6,0x4,0x15,0x29,0x78,0xd8,0x8c,0x49,0x70,0xd1,0x25,0xe7,
+  0xc3,0xd8,0xb1,0xa3,0x48,0xdd,0xd0,0x9d,0x8a,0x7b,0xb7,0xac,0x81,0x9e,0x55,0xaf,
+  0x40,0x5b,0x3e,0x67,0x9a,0x78,0x92,0x11,0x8e,0xbb,0xd8,0x2c,0x63,0x5f,0x4c,0xfc,
+  0x57,0x0,0x41,0xdb,0x24,0xf8,0xf7,0x4d,0x49,0x74,0x4b,0xfc,0xe7,0x91,0x83,0x38,
+  0x78,0xb0,0x8f,0xc9,0xf7,0xf,0x65,0xc5,0x1f,0x3b,0xaf,0x40,0x7b,0x6,0x90,0xfb,
+  0xb7,0xb6,0xb6,0xde,0xf3,0xd0,0x3,0xf,0x2d,0x18,0x4c,0xfa,0x1b,0x74,0x0,0x38,
+  0xed,0x8c,0xd3,0xda,0x4a,0xa5,0xd2,0x32,0xf1,0x12,0x27,0xa2,0x2a,0x80,0xb6,0x0,
+  0x4e,0xfc,0xda,0x26,0x10,0xcb,0xf1,0xb7,0x8,0x93,0x26,0xb2,0x6,0x3,0x26,0xfa,
+  0xf3,0x17,0x8a,0xc4,0x6a,0x24,0xc,0x56,0x79,0xc8,0x8e,0x20,0xb4,0xbf,0x6b,0x23,
+  0xa1,0x6d,0x1f,0xe0,0x20,0x80,0x96,0xdc,0x6e,0xf1,0x42,0x33,0x63,0x66,0x40,0x61,
+  0xe4,0x44,0x92,0x2,0xb4,0xc1,0x6e,0xc5,0x8a,0xd5,0x70,0xdf,0xc2,0x87,0x61,0x15,
+  0x4a,0x3,0xba,0x3c,0x96,0xa7,0x8b,0x83,0xf8,0x11,0x10,0x10,0xd1,0xa7,0x65,0x8e,
+  0x0,0x11,0xb9,0x2,0x3,0x3f,0x13,0x79,0x15,0xb4,0x1a,0xa1,0x41,0x40,0xa5,0x12,
+  0xa7,0xd2,0xa,0x4,0xd2,0x12,0x8,0xa8,0x5,0xb7,0x2f,0x1b,0x72,0x6a,0x10,0xa0,
+  0x10,0xe0,0x94,0x94,0x46,0x24,0xe3,0x57,0x92,0x1,0x4e,0x60,0xd5,0x8a,0xdc,0x33,
+  0xd1,0x80,0x32,0x77,0x37,0x54,0x86,0x40,0xa9,0xf,0x2b,0x4b,0x7b,0x20,0x8d,0x7c,
+  0xc8,0xe9,0xab,0x15,0x99,0xaf,0x1f,0x2a,0xbf,0xbe,0xac,0xe0,0x53,0x21,0x8b,0x3f,
+  0x11,0x34,0x12,0xba,0x21,0xf0,0x6a,0x24,0x9,0x10,0x87,0xd7,0xeb,0x55,0x8d,0xff,
+  0x30,0xd2,0xf3,0xf1,0x5c,0x6d,0x2d,0x39,0x98,0x3f,0xff,0x54,0x72,0xf1,0x81,0xef,
+  0x19,0x4b,0x3f,0x82,0x4e,0xd7,0xaa,0xd7,0xa0,0xb4,0xe9,0x1d,0xe8,0xe8,0x68,0x8f,
+  0xbd,0x67,0xbb,0x3e,0xbf,0xe6,0xbe,0x2e,0x37,0x9f,0xf6,0xc1,0x6b,0xae,0xaf,0x2d,
+  0xfe,0xf5,0x5a,0x54,0x64,0x95,0xcf,0x7,0x2e,0xfe,0x73,0x49,0x80,0xc7,0xf5,0x9b,
+  0x44,0x1f,0x1d,0xb,0xc0,0x22,0xc,0xb9,0x4,0xa1,0x6a,0x2b,0xd4,0x85,0xe8,0x7f,
+  0xec,0xef,0xee,0xf8,0xdd,0xa0,0xb6,0x8,0x1b,0x74,0x0,0xc0,0x21,0xa4,0x80,0xcb,
+  0xc4,0x43,0xff,0xd,0xf5,0x8b,0x17,0x88,0xce,0xeb,0x5,0x70,0x7b,0x80,0x1d,0xb8,
+  0x63,0x1b,0x7,0x4d,0x43,0xd1,0x20,0xaa,0x9f,0xaf,0x23,0xbd,0xa8,0x39,0xa5,0xe0,
+  0x14,0xd4,0x99,0x36,0x9b,0x31,0x46,0x46,0xae,0x3a,0xf0,0x92,0xe3,0xe6,0xbb,0xca,
+  0x12,0x34,0x25,0xc7,0xc0,0x37,0x80,0x64,0x40,0xc1,0x97,0xe7,0x45,0x95,0x0,0x5a,
+  0x47,0x43,0xdb,0xa4,0x23,0x84,0x5a,0x5f,0x20,0xdf,0x7d,0xca,0x4f,0x13,0x40,0x3c,
+  0xf6,0x87,0xa7,0xe1,0xf1,0xc5,0xcf,0x43,0x6f,0xb1,0xa,0xea,0x24,0xaa,0x77,0xa0,
+  0xce,0xc,0x4c,0x53,0x42,0x50,0x68,0xca,0x88,0x65,0x54,0x9f,0x41,0xad,0x32,0xa4,
+  0x8d,0xe4,0xe0,0x79,0x32,0xab,0x90,0x0,0xc4,0xc7,0xed,0x64,0x8a,0xb1,0x2f,0xb6,
+  0x49,0x65,0x94,0x17,0x25,0x23,0x6b,0x1a,0xf8,0x54,0x5d,0x48,0x82,0x81,0xf4,0x0,
+  0xa8,0x1c,0x40,0x6d,0xfe,0xe7,0x86,0x0,0x5d,0xff,0x5f,0xb5,0x1,0xf7,0x3c,0xa5,
+  0xaf,0x52,0x61,0x8e,0x9a,0x74,0xef,0xa9,0x9,0x4f,0x86,0xbd,0x40,0xe6,0xeb,0x87,
+  0x41,0xe4,0xdf,0xf,0x75,0xf9,0x2e,0x95,0x95,0x47,0xf1,0xfc,0x1,0xb3,0x5,0x98,
+  0x4f,0x5,0x1a,0xaa,0xf2,0xf,0xe6,0x22,0xea,0xea,0x40,0xc7,0x1e,0x3d,0x3,0x2e,
+  0xbc,0x68,0x1,0x8c,0x11,0x5c,0x5f,0x5a,0xec,0x25,0xd7,0x2e,0xef,0xd8,0xa,0x5b,
+  0xdf,0x7e,0x1e,0x52,0xb5,0x5e,0x7a,0x8f,0x2e,0xae,0xdc,0x4c,0xdc,0xb7,0x45,0x7c,
+  0x9b,0xbb,0xa3,0x2a,0x83,0x12,0x1d,0x8a,0xe7,0x54,0xb1,0x57,0x31,0x13,0x5d,0x1,
+  0x59,0x33,0x99,0x98,0x67,0x21,0xc9,0xf0,0x67,0x11,0xbf,0xfe,0x8e,0x73,0x1,0x8f,
+  0xdf,0xde,0xd1,0xfe,0xfd,0x45,0xf7,0x2e,0xfa,0xfc,0x60,0xd3,0xde,0x90,0x0,0x0,
+  0x1c,0x27,0x9e,0x7c,0xe2,0xe3,0xe2,0x41,0xcf,0xc6,0xb8,0x80,0x6c,0x3e,0x4b,0x44,
+  0xa7,0xb9,0xbf,0xce,0xee,0xd3,0x3a,0xae,0x9d,0xeb,0x8f,0x43,0x8b,0x56,0x24,0x7e,
+  0x45,0xb5,0xf2,0xeb,0xe2,0xf7,0xfb,0xc5,0xcb,0xbb,0x55,0x6c,0x5b,0x14,0xbf,0xdf,
+  0x80,0xd5,0x49,0xb1,0x22,0xe,0xba,0x1e,0x8d,0x58,0x6f,0x45,0x10,0xc6,0x8c,0x84,
+  0x56,0xbc,0x0,0xa9,0x13,0x3e,0xc4,0xa4,0x0,0x2e,0x95,0xa0,0x4f,0xb7,0x54,0xf7,
+  0xa0,0xed,0xc0,0x23,0xa1,0x65,0xc4,0x78,0x29,0x92,0x53,0x4a,0x6f,0x1a,0x36,0x6e,
+  0xd8,0x2,0xf,0xdc,0xfb,0x10,0xbc,0xf2,0xfa,0x72,0xd2,0xa5,0x23,0x89,0x80,0xa9,
+  0x6,0xec,0x53,0x37,0x1a,0xd,0x35,0xf1,0xfb,0x69,0x95,0x38,0x24,0x81,0xc1,0x34,
+  0x20,0xd1,0x5,0x46,0x3c,0x9f,0xc0,0x0,0x48,0xca,0x49,0xa9,0x4,0x23,0xd5,0xa2,
+  0xdb,0x97,0xdc,0x5f,0x7e,0x28,0xbb,0x4,0x9d,0x5a,0xd9,0x3,0xc2,0xa8,0xe3,0x2f,
+  0xe7,0x56,0x35,0x2a,0xcb,0x55,0x93,0x46,0x42,0x55,0xad,0x7,0x65,0x67,0xaf,0x2e,
+  0x41,0xc1,0x10,0x3f,0x11,0x73,0xd4,0xb3,0x4f,0xfb,0xeb,0x49,0x2,0xd0,0x86,0xbc,
+  0x80,0x11,0x3e,0x13,0xf3,0xe5,0x31,0x1,0xa6,0x1c,0x38,0x6,0x16,0x7c,0x74,0x3e,
+  0x1c,0x73,0xec,0x51,0x8a,0x90,0xea,0xa6,0x25,0xf9,0xb6,0xd5,0x4b,0x5,0xe7,0x5f,
+  0x2,0xad,0xe2,0xbd,0x21,0x80,0x37,0x88,0xfa,0x9a,0xf0,0x75,0x68,0xaf,0xc5,0xb1,
+  0x63,0xa9,0xbd,0xac,0x5f,0x1f,0x27,0x4c,0xac,0x86,0x54,0x2c,0x15,0x91,0x1,0x7d,
+  0x4b,0xbc,0xcb,0xa7,0x2a,0xd5,0xca,0x27,0x83,0x5a,0x70,0x7e,0xe8,0x85,0xc3,0xb4,
+  0x8a,0xa8,0x55,0x54,0x5e,0x11,0xd9,0x2e,0xf7,0x6d,0xe7,0x1c,0xe8,0xc6,0x2a,0x38,
+  0x37,0xf1,0xf8,0x62,0xa,0x76,0x76,0xc,0xef,0x98,0x71,0xf7,0x6d,0x77,0xf,0x7a,
+  0xab,0xf0,0x21,0x3,0x0,0xa7,0x9c,0x76,0xca,0x31,0x2,0x81,0x9f,0xcf,0xe5,0x72,
+  0x29,0x6c,0x32,0xc1,0xdd,0x82,0xf4,0xc0,0x53,0x91,0x48,0x8e,0xb1,0x2,0x9a,0x53,
+  0xf1,0x7a,0x6b,0x2a,0xc1,0xb5,0x22,0xb6,0x23,0xa2,0x17,0x44,0x7e,0xf7,0xaf,0x7f,
+  0xf1,0x6b,0x53,0x63,0xfd,0x8a,0x4f,0x5f,0x71,0x71,0xb9,0x52,0xbe,0x49,0xac,0x4f,
+  0x61,0xfb,0x2a,0x4c,0x4b,0xb6,0xd,0x81,0x86,0x98,0xad,0x4c,0x43,0x57,0xf4,0xa0,
+  0x9d,0x60,0xa4,0x8f,0x83,0xa2,0x20,0xa6,0x14,0x67,0x46,0x4c,0x82,0xe1,0x53,0x8e,
+  0x84,0x4c,0xbe,0x55,0xe5,0xf8,0xcb,0x7b,0x59,0xb6,0xec,0x6d,0x58,0x74,0xef,0x23,
+  0xf0,0xe6,0xbb,0x6b,0x95,0xd1,0xcd,0x63,0xf1,0x3,0x5e,0x24,0x15,0x28,0x9,0xc1,
+  0x94,0x10,0xf3,0x14,0x30,0xf8,0x7e,0x1c,0x2c,0x3c,0xb5,0x4e,0x11,0xbd,0xe7,0xb1,
+  0xbe,0x84,0x4,0x60,0xfa,0x7e,0x7c,0x25,0xfa,0x6b,0x69,0x80,0xcd,0x80,0xd0,0x33,
+  0x96,0xf5,0x30,0xac,0x2b,0x69,0x3c,0x94,0x1c,0xda,0xa8,0x4,0x81,0xfc,0x5b,0x7d,
+  0x7a,0xda,0x18,0x18,0x68,0xa3,0x5d,0x2d,0x2a,0xf0,0xc1,0xb6,0xd3,0x25,0xbe,0x40,
+  0x73,0x7c,0x5d,0xc,0x44,0x55,0x3e,0x1e,0x3b,0xba,0x3,0xce,0x9e,0x3f,0x57,0xcc,
+  0x81,0x93,0x20,0x97,0xce,0xc8,0x64,0x21,0x4f,0xba,0x18,0x8b,0x3b,0xb6,0xc0,0xa6,
+  0xb7,0x9e,0x87,0x7a,0xcf,0x66,0xea,0x3a,0xa4,0xa5,0x2d,0x3b,0x99,0xc6,0x70,0x5c,
+  0x46,0xec,0x5c,0xe7,0x8f,0x19,0xfc,0x58,0xcb,0x33,0x9c,0x37,0x55,0xa1,0xaa,0xf4,
+  0xf5,0xf6,0x11,0x71,0x8a,0xf7,0xfb,0xed,0xdf,0xfe,0xfa,0xb7,0x5f,0xd2,0x73,0xe6,
+  0xf2,0x4f,0x5f,0x9e,0x12,0x1c,0xfb,0x1c,0xc1,0x3c,0x2e,0x16,0xdb,0x9e,0x2f,0x8e,
+  0x31,0x12,0xf7,0xd5,0xf9,0x2a,0xbc,0x4a,0xb2,0x21,0x7e,0x4,0xa4,0x5a,0xa4,0x72,
+  0xe8,0xe,0x40,0x98,0xea,0x8b,0xeb,0x3a,0x86,0x75,0x7c,0xfe,0xbe,0xdf,0xdd,0xb7,
+  0xc7,0xca,0x7c,0xed,0xcc,0x18,0x32,0x0,0x80,0x43,0x48,0x1,0x3f,0x17,0xf,0xeb,
+  0x4a,0x8c,0x10,0x24,0xb7,0x60,0x2a,0x9e,0x2d,0x48,0x7a,0x6a,0xe0,0x19,0x14,0x47,
+  0xff,0xab,0xd2,0xfa,0x8b,0x62,0x9b,0x7,0x5,0x71,0xdd,0x28,0x88,0xfb,0xfe,0xff,
+  0xfe,0xcd,0x7f,0x27,0x36,0x56,0xb8,0xfc,0x53,0x97,0x5f,0x25,0xd0,0xfe,0x27,0xa8,
+  0x6a,0x90,0x24,0x80,0xd1,0x78,0x16,0xc7,0xe7,0xbd,0xa,0x9a,0x25,0x1a,0x35,0x78,
+  0x23,0xac,0x62,0x24,0xa8,0xeb,0x95,0xc5,0x4c,0x1e,0x3e,0xf9,0x28,0xe8,0x98,0x30,
+  0x8d,0x0,0x40,0xab,0x36,0x78,0x92,0x97,0x5f,0x5a,0x2,0xf,0x3f,0xf8,0x28,0x2c,
+  0x5f,0xb1,0x2e,0x6a,0xc4,0xa3,0xab,0x4,0x1b,0xa3,0xa1,0xaa,0x20,0xa4,0x43,0x8d,
+  0x3d,0x9f,0x11,0x3b,0x27,0x74,0x5f,0x25,0x26,0x45,0x40,0xa0,0x6e,0x4,0xa2,0x5a,
+  0xfc,0x71,0xf1,0x9f,0xee,0x55,0x9,0x22,0xa6,0x42,0xb0,0x29,0x47,0xe,0x32,0x5d,
+  0xd7,0x70,0xb0,0xba,0x91,0xe,0x34,0x21,0xcb,0xdf,0x2,0x93,0x8a,0x6b,0x4a,0x7a,
+  0xab,0x62,0x1f,0xa1,0x6,0x8f,0xa0,0x6e,0x1a,0xa1,0x9a,0x4f,0xb1,0xe7,0x98,0x91,
+  0x1d,0x70,0xc6,0x19,0xa7,0xc0,0xe9,0xf3,0xe6,0xa,0x91,0x3e,0x1f,0x59,0xd4,0x29,
+  0x89,0xa8,0x4,0x5b,0xde,0x7d,0x15,0x3a,0x57,0x2e,0x81,0x16,0x34,0xf4,0xe5,0xb2,
+  0xd,0x1c,0x9f,0xeb,0xf5,0x5c,0xbc,0xe7,0xae,0x3c,0x8a,0x14,0x8,0xc3,0x6,0x23,
+  0x9f,0xde,0x96,0x38,0x7f,0x5f,0x2f,0x94,0x8b,0x65,0x7c,0x6f,0xbf,0xb8,0xe9,0x37,
+  0x37,0x7d,0x26,0x69,0xee,0x7c,0xe2,0xd2,0x4f,0xa4,0x4a,0x95,0xd2,0xbc,0x5a,0xb5,
+  0x76,0xb1,0xb8,0xd6,0xf3,0xc5,0xb1,0xc6,0x68,0xfb,0x52,0x54,0x1,0x19,0xc,0xc1,
+  0x1b,0x49,0x3,0xa4,0x74,0x5a,0x29,0x55,0xa0,0xd0,0x5a,0x78,0xb9,0xbd,0xbd,0xfd,
+  0xf8,0x3b,0x6f,0xbd,0x73,0x8f,0x95,0xf9,0xda,0x99,0x31,0xa4,0x0,0x60,0xf6,0x69,
+  0xb3,0xd1,0x2d,0xb8,0x4c,0x70,0xff,0x36,0xa,0x11,0x56,0x49,0x42,0x5c,0x57,0xd3,
+  0xe9,0x6b,0xe2,0xa1,0x17,0x5,0x31,0xdd,0x2f,0xb6,0xb9,0x51,0x10,0xf1,0xfd,0xb7,
+  0xdf,0x72,0xfb,0x80,0xd3,0x27,0xff,0xf4,0xcf,0xfe,0xf4,0xef,0xc4,0xb,0xfc,0x57,
+  0x9c,0x54,0x4,0x2,0x18,0x60,0xc3,0x42,0x86,0x63,0xee,0xc3,0x4,0xb5,0x80,0xdb,
+  0x8,0x62,0x76,0x1,0x60,0x35,0xc,0xd0,0x78,0x24,0x38,0x41,0x4f,0x6f,0xf,0xf8,
+  0xad,0xa3,0x60,0xcc,0xf4,0xe3,0xa0,0x75,0xe4,0x38,0xe3,0xe6,0xf4,0xd4,0xbd,0xbd,
+  0xbe,0x64,0x19,0x3c,0xbc,0xe8,0xf7,0xb0,0xf4,0xad,0x95,0xd2,0xda,0xe,0xac,0x81,
+  0x46,0x8c,0xc0,0x95,0x3e,0xef,0xfb,0xf1,0xf5,0x1c,0x0,0x10,0x20,0xc,0x80,0x78,
+  0x46,0xdc,0x97,0xb4,0xae,0x6c,0xf,0xd2,0x15,0x60,0x4d,0x3,0x45,0xf8,0x38,0x34,
+  0x8,0x4,0xf1,0x96,0x65,0x46,0x64,0x7,0x5d,0xbe,0x5b,0x13,0xb3,0x22,0x7e,0xe2,
+  0xac,0xa,0x34,0x8c,0x78,0x1f,0xc4,0x8f,0x21,0xbe,0x1f,0x78,0xc0,0x68,0x38,0xfd,
+  0xf4,0xd9,0x70,0xea,0xdc,0xd9,0xd0,0xd2,0xd6,0x42,0x92,0x6,0xc5,0xf2,0x2b,0x2,
+  0xdd,0xba,0xea,0x4d,0xd8,0xf8,0xe6,0xf3,0x42,0xcd,0x28,0x12,0xd7,0xa7,0x4,0x1f,
+  0x3b,0x49,0xc7,0xd6,0xe3,0xc3,0x46,0xab,0xbf,0xab,0xa9,0x29,0x17,0xfd,0xb1,0xf6,
+  0x1e,0x8a,0xfd,0xc8,0x99,0xc5,0x3b,0xbd,0x55,0x10,0xe6,0xa5,0x3f,0xf9,0xe1,0x4f,
+  0x6,0x4c,0x98,0xf3,0xcf,0x9b,0x7f,0x4e,0xad,0x52,0xbb,0x50,0xcc,0xa5,0xb,0xeb,
+  0x61,0x7d,0xc,0xf5,0xb6,0xd4,0x46,0x68,0x65,0xb4,0x96,0x8f,0x33,0xa4,0x73,0x20,
+  0x13,0x6b,0x6b,0x6b,0x9b,0x7b,0xef,0xef,0xee,0x7d,0x74,0xb0,0x69,0x8d,0xbf,0xf9,
+  0x21,0x35,0x84,0x14,0x70,0xad,0x78,0x59,0xd7,0x91,0x8f,0x1b,0xeb,0xe7,0x85,0x1e,
+  0xef,0x23,0xd0,0x23,0xb8,0xfc,0xfd,0xe9,0x4c,0xfa,0x46,0x41,0xb4,0xf7,0x2f,0xbc,
+  0x73,0x61,0x71,0x57,0xcf,0x23,0x40,0xe0,0x5a,0xf1,0xe2,0xae,0x43,0x55,0x3,0x41,
+  0xc0,0x65,0x18,0xe4,0xa2,0xbf,0xad,0xa,0x68,0xc2,0xd7,0x2f,0x3b,0x16,0x4c,0xc4,
+  0xa5,0x4,0x25,0x11,0x8,0xd5,0x3,0x8a,0x7d,0x25,0x68,0x19,0x3b,0x15,0xc6,0x1e,
+  0x7c,0x34,0x14,0x3a,0x46,0xab,0x49,0x12,0x19,0x39,0xdf,0x7e,0x7b,0x5,0x3c,0xf6,
+  0xfb,0xc7,0xe0,0xa5,0x97,0x96,0xc2,0xf6,0xee,0xbe,0xe8,0xf5,0x68,0xee,0x4d,0xb8,
+  0xe0,0x9b,0x2a,0xc2,0x6,0x10,0x62,0x52,0x83,0xda,0x46,0x1a,0x2a,0xa4,0x97,0x9f,
+  0xe,0xa3,0x7f,0x53,0xfd,0x6,0xec,0x57,0x1f,0xf2,0x2f,0xc,0x8,0xc,0xe1,0x6a,
+  0x82,0x6,0xf5,0x5d,0x11,0x7b,0x5d,0x7e,0x9a,0x8e,0x3e,0x10,0x71,0x78,0x4e,0xf4,
+  0x59,0x31,0xf9,0xf,0x3f,0x6c,0x2a,0x9c,0x29,0xb8,0xfd,0x71,0xc7,0x1d,0x25,0xd4,
+  0xaf,0x3c,0x79,0x1b,0xea,0x9a,0x80,0x5,0x81,0x6e,0xdf,0xf0,0x1e,0xac,0x5f,0xf6,
+  0x1c,0x94,0xbb,0x36,0x12,0xe1,0x53,0xef,0x48,0x26,0xe6,0x73,0xae,0x6e,0x87,0xe9,
+  0xda,0xfe,0x7c,0x4e,0xf8,0x2e,0x77,0x1e,0x72,0x7e,0xc,0xc3,0x45,0xc2,0x14,0x3,
+  0x89,0xff,0xf2,0x9f,0xfe,0xe8,0xa7,0xbb,0x1c,0x8c,0x73,0xda,0x99,0xa7,0xa1,0x64,
+  0x40,0x60,0x20,0xce,0x31,0x5e,0x83,0x1,0x32,0x6,0x3c,0x1f,0x12,0x7f,0xbe,0x90,
+  0xbf,0xe7,0xa1,0xfb,0x7,0xd7,0xed,0x67,0x8f,0x21,0x7,0x0,0x42,0xa,0xc8,0x8a,
+  0x97,0xf2,0xba,0x20,0xa2,0xe9,0xea,0x1,0xae,0x10,0xaa,0xc0,0xdd,0xa9,0x4c,0xea,
+  0x7e,0xc1,0xe9,0x1f,0x79,0xf0,0xfe,0x7,0x77,0x5b,0xc4,0xd4,0xa5,0x97,0x5f,0xfa,
+  0x5,0xa1,0xaf,0xff,0x17,0x4a,0x0,0xd4,0xd5,0xd6,0x32,0xc,0x26,0x1,0xc1,0x40,
+  0xc,0x87,0xdc,0x60,0x68,0x62,0x11,0xc4,0x40,0xb,0x70,0x49,0x4c,0xbe,0x8e,0x71,
+  0x7,0xc3,0xb8,0x19,0xc7,0x40,0x4b,0xc7,0x28,0xa5,0x4a,0xa4,0x14,0x33,0x4f,0x41,
+  0xe7,0xd6,0x6d,0xf0,0xc2,0xf3,0x2f,0xc1,0xd3,0x4f,0x3e,0xb,0xef,0xae,0x58,0x2f,
+  0xd3,0x68,0xf9,0xeb,0xe2,0xed,0xb4,0xd,0xf1,0xdb,0x0,0xa0,0x1c,0x7e,0x1e,0x97,
+  0x26,0x2c,0xae,0x1f,0xf3,0x0,0xe0,0x8,0xa3,0xf,0xd5,0xa3,0x50,0x13,0xb0,0xac,
+  0x35,0x6a,0x11,0xb6,0x91,0x14,0x6c,0x82,0x97,0x7,0xc1,0xf3,0x1f,0x78,0xc0,0x28,
+  0x38,0xfe,0xf8,0xa3,0xe1,0xd4,0xd3,0xe7,0xc0,0x41,0x53,0x27,0x99,0xb8,0x82,0x3a,
+  0x1d,0x4e,0xf6,0x39,0xe8,0xda,0xb0,0xa,0xd6,0x2e,0x7d,0x16,0xfa,0xb6,0xae,0xa1,
+  0xe4,0x30,0x4,0xe5,0x24,0xa2,0x77,0xf9,0xee,0xed,0x28,0xbe,0x98,0x81,0x4f,0x3,
+  0x1,0xfb,0x9d,0x38,0x3f,0x8a,0xfd,0xa5,0x32,0xbe,0x9b,0x5f,0x8,0xe2,0xff,0xac,
+  0x20,0xfe,0xdd,0x26,0x92,0x9f,0x72,0xea,0x29,0x27,0xd5,0x6b,0xf5,0x73,0xea,0x41,
+  0xfd,0x3c,0x71,0xce,0x59,0x8,0xf0,0x2d,0xad,0x2d,0x95,0x96,0x96,0x96,0xf,0xdd,
+  0x73,0xd7,0x3d,0xcb,0x77,0xd7,0x79,0x76,0xc7,0x18,0x72,0x0,0x80,0x43,0x48,0x1,
+  0xa7,0x9,0x24,0x3d,0x41,0x4c,0x84,0x3b,0x9e,0x5a,0xfc,0xd4,0x1e,0x7d,0x60,0x7f,
+  0x7a,0xf9,0x9f,0x5e,0x59,0xad,0x91,0x4d,0x80,0xc,0x83,0x18,0x2b,0x10,0x33,0x4,
+  0x32,0x20,0x48,0xb4,0x11,0xec,0x4,0x18,0xe0,0x27,0x4e,0x5a,0x94,0x8,0x30,0x9e,
+  0xbe,0x7d,0xdc,0x54,0x18,0x37,0xed,0x68,0xe8,0x18,0x7b,0x40,0x3c,0x2f,0x1,0x8f,
+  0x27,0x26,0xee,0x7b,0xef,0xad,0x81,0x17,0x5,0x18,0xbc,0xf4,0xe2,0xab,0x94,0x7e,
+  0xdc,0xd3,0x57,0x66,0x6f,0x8d,0x49,0x8,0x9c,0xd0,0x95,0x85,0x1f,0xb4,0xf4,0x44,
+  0x62,0x3f,0x97,0x26,0x6,0x30,0x34,0x31,0x7b,0x5a,0xed,0xa,0xe3,0xc0,0xe0,0x20,
+  0x78,0xfc,0xf,0x73,0x10,0x26,0x8c,0x1b,0x9,0x33,0x67,0x1e,0x26,0xde,0xe3,0x9,
+  0x70,0xd8,0xa1,0x33,0x64,0x7d,0x7b,0x55,0x69,0x44,0x12,0xaf,0x4c,0x84,0xd9,0xba,
+  0xfa,0x1d,0x58,0xff,0xd6,0x4b,0xd0,0xb3,0x79,0xb5,0x24,0xfc,0x5c,0x26,0xd6,0x86,
+  0xbc,0xa1,0xf4,0x16,0x8f,0xd8,0xb,0x18,0x51,0x5b,0xbe,0x76,0xee,0xf2,0xb3,0x63,
+  0xfb,0x75,0x8,0x2e,0xba,0xfb,0xc4,0xf3,0xfe,0xee,0xcd,0xbf,0xbd,0xf9,0xaf,0xf6,
+  0xe4,0xfc,0x3a,0x69,0xce,0x49,0xe3,0xf3,0xf9,0xfc,0x39,0x42,0xa2,0x4d,0x2d,0xba,
+  0x6f,0xd1,0x4f,0xf7,0xe4,0xb9,0x76,0x65,0xc,0x49,0x0,0xd8,0xdb,0xe3,0xd2,0x3f,
+  0xbb,0xf4,0x62,0x31,0x39,0x7e,0x23,0xf4,0xb3,0x2c,0x4a,0x1,0x3a,0xbf,0xc0,0x5,
+  0x4,0xce,0xbf,0x13,0x80,0xc0,0x10,0xbd,0xe,0x56,0xb2,0x54,0x4,0x9c,0x90,0x58,
+  0x5,0xb6,0x24,0xa4,0x82,0xd6,0xd1,0x93,0x60,0xec,0x41,0x47,0xc0,0xc8,0x3,0xe,
+  0x86,0x4c,0x3e,0x2f,0x4b,0x83,0x93,0xb1,0x2e,0x25,0xed,0x78,0x62,0x22,0xaf,0x5d,
+  0xb3,0x1,0x96,0xbe,0xb1,0xc,0x5e,0x79,0x79,0x89,0x90,0xc,0x56,0xc3,0xd6,0x6d,
+  0x3b,0xc4,0xbe,0x8a,0x71,0xd9,0xa0,0x40,0x5f,0x19,0x18,0xec,0xf4,0xab,0x66,0xd2,
+  0x0,0x58,0x84,0xce,0x3e,0x50,0x85,0x19,0x39,0xbc,0x5,0x26,0x1e,0x30,0xe,0x8e,
+  0x9b,0x75,0x14,0x1c,0x71,0xe4,0x11,0x30,0xe3,0xe0,0xa9,0x82,0x98,0xb3,0xca,0xf2,
+  0xce,0x72,0xc,0xb0,0xae,0x40,0xcf,0x36,0xd8,0xb4,0xea,0x6d,0xd8,0xf0,0xce,0x12,
+  0x21,0xea,0x6f,0x31,0x89,0x60,0x38,0x1a,0xb8,0xbd,0x26,0x60,0x6b,0x9d,0x2d,0xea,
+  0xf3,0x78,0x7d,0xd7,0xdf,0x5c,0x8d,0x40,0xd1,0xbf,0xaf,0xa7,0xf,0x1,0xe8,0x5b,
+  0x82,0xf8,0xf7,0x4a,0xdd,0xbd,0xa1,0x3c,0xf6,0x3,0x80,0x18,0x9f,0xfd,0xdc,0x67,
+  0xc7,0x8,0x42,0x5c,0x8f,0x2e,0x48,0x5d,0x89,0x48,0x8b,0xfe,0x9c,0xc8,0x93,0x80,
+  0xc0,0x63,0xb1,0xf6,0x5c,0x5d,0x70,0xa5,0x29,0xdb,0x61,0xc9,0x7a,0x5b,0xca,0xc,
+  0x43,0x4b,0x74,0x36,0xf,0x23,0x27,0x4e,0x87,0xb1,0x93,0xf,0x85,0x91,0x13,0xa6,
+  0xca,0xf0,0x5e,0xf,0x54,0x31,0x8f,0x28,0x9d,0xb7,0x2c,0x74,0xd7,0xd5,0x6b,0xd6,
+  0xc3,0x3b,0xcb,0x57,0xc0,0xf2,0xb7,0xdf,0xa1,0x88,0xc3,0x4d,0x5b,0xb6,0x9,0xd1,
+  0xb6,0x4,0xc5,0x92,0xa,0x36,0xe2,0x63,0x57,0xde,0xb4,0xd5,0xc5,0xb,0x53,0x92,
+  0x5b,0xb,0x39,0xe8,0xe8,0x68,0x25,0x71,0xfe,0xb0,0x43,0xa7,0xc3,0x94,0x83,0xa6,
+  0xc0,0x8c,0xe9,0x7,0x51,0x54,0x1e,0x19,0xeb,0x14,0xd1,0xeb,0x98,0x2,0x94,0x17,
+  0xaa,0xe5,0x12,0x6c,0x59,0xfb,0x2e,0xac,0x7f,0xe7,0x75,0xd8,0xb6,0x6e,0x85,0xb8,
+  0xf7,0x0,0xd0,0xd5,0xab,0x5b,0x60,0xd9,0xc9,0x38,0x36,0x91,0x73,0x6e,0xcf,0x9b,
+  0x73,0x38,0x75,0x7c,0xe,0x4,0x8e,0x90,0x5e,0x74,0xd3,0x91,0x41,0x2e,0x95,0x5e,
+  0xf0,0xf3,0x9f,0xfc,0x7c,0xd0,0x62,0xf0,0x87,0xca,0xd8,0xf,0x0,0x40,0x0,0x70,
+  0x8d,0x20,0xaa,0xeb,0x6d,0xc2,0xe7,0x7f,0xc7,0xd2,0x8e,0x2d,0xc2,0xe7,0x44,0x8f,
+  0x23,0x49,0x2a,0x30,0xdd,0x90,0xfd,0x84,0xfd,0x41,0xf5,0x0,0x14,0x60,0x80,0x93,
+  0x34,0xdf,0x36,0x52,0xa8,0x7,0x47,0x8,0x30,0x38,0x4,0x86,0x8f,0x39,0xc0,0x48,
+  0xf3,0xe4,0xcb,0xa7,0xfd,0x8d,0x5d,0x8f,0x2,0x8b,0xd0,0xed,0xb8,0x55,0x80,0xc0,
+  0xea,0x35,0x6b,0x60,0xd3,0xc6,0xad,0xb0,0xad,0x73,0x1b,0x6c,0xd9,0xb2,0x15,0xb6,
+  0x77,0x75,0x43,0xe7,0xb6,0x2e,0xd8,0xd1,0xdd,0x47,0x69,0xbb,0x54,0xa0,0x93,0x8a,
+  0x57,0x84,0xa6,0xc1,0xa8,0xaf,0xc,0x92,0x58,0x7c,0xa4,0x45,0x70,0xe5,0x91,0x23,
+  0xda,0x61,0xec,0xe8,0x91,0x30,0x72,0xe4,0x70,0x18,0x31,0x4a,0x7e,0x4e,0x99,0x3c,
+  0x9,0x26,0x4c,0x18,0xb,0x18,0xb2,0x9d,0x53,0xbd,0x6,0x3,0xd6,0xf4,0x33,0x50,
+  0xc4,0x2b,0xdd,0x5e,0x75,0xe8,0x14,0xba,0xfd,0x3a,0x41,0xf4,0x9b,0x56,0x2d,0x83,
+  0x7a,0xa9,0x8,0x3a,0xbe,0x43,0x3f,0x27,0xde,0x55,0xc7,0xd6,0xe5,0x5d,0x40,0xe0,
+  0xd2,0xf9,0x69,0xd8,0x40,0x60,0xe9,0xfd,0x21,0xbb,0x2e,0x96,0xd8,0xf3,0xab,0x9f,
+  0xfc,0xe0,0x27,0x9f,0x1a,0xec,0xb9,0x37,0xd8,0x63,0x3f,0x0,0x88,0x71,0xf5,0x35,
+  0x57,0xff,0x41,0x10,0xe0,0x69,0xba,0x6d,0x56,0x12,0x10,0xf0,0x60,0x21,0x17,0xe1,
+  0xc7,0x88,0xde,0xae,0x4f,0x8,0xd0,0xe0,0x51,0x88,0x6d,0xa7,0x3,0x8f,0x20,0x3a,
+  0x7,0x1a,0xab,0x2a,0xd5,0xa,0xb9,0x6,0xb,0xc3,0x46,0xc1,0xa8,0x9,0x7,0xc1,
+  0xd8,0x3,0xa7,0xc3,0xb0,0x51,0x63,0x21,0xd7,0xd2,0x26,0xa5,0x1,0x3a,0x8e,0xb4,
+  0xe6,0xf9,0x9e,0x4e,0xf0,0xf1,0x8c,0xe4,0x2f,0x63,0xfd,0x43,0xb2,0x78,0x6f,0xde,
+  0xd2,0x29,0xf4,0xdf,0xa2,0x0,0x8a,0x32,0x94,0x85,0xea,0xd1,0x27,0x0,0x3,0x13,
+  0x79,0xd0,0xe3,0x52,0x28,0xc8,0xa4,0x9a,0xf6,0xf6,0x36,0x68,0x6b,0x6b,0x81,0x31,
+  0x82,0xe8,0xd1,0x37,0x2f,0x8b,0x6c,0x2,0x73,0xc,0x44,0xfd,0x4,0x2,0x6d,0x27,
+  0x54,0x7f,0xf7,0xee,0xd8,0xe,0xdb,0xb7,0xac,0x83,0xd,0xef,0xbd,0x49,0xc4,0x5f,
+  0xee,0xde,0x4e,0xde,0x15,0x3c,0x2e,0xb9,0x73,0x81,0x11,0xa6,0x2a,0x44,0xc8,0x83,
+  0x74,0x92,0x80,0xc0,0xe6,0xee,0x4e,0x43,0x9f,0xba,0xb6,0xfe,0x8,0x5f,0xbf,0x27,
+  0x71,0x8c,0xce,0x7a,0xbd,0x3e,0xe9,0xe7,0x3f,0xfe,0xf9,0x2e,0x7b,0x92,0x3e,0x8,
+  0x63,0x9f,0x7,0x80,0xcf,0x5c,0xfd,0x99,0xf1,0xa9,0x54,0x6a,0x8d,0x98,0x14,0x29,
+  0x57,0xbb,0xec,0x81,0x0,0x1,0xe,0xdb,0x73,0x60,0x7,0x87,0xc4,0xca,0x98,0x3b,
+  0x8,0xdf,0x5e,0x4f,0xc7,0xf4,0x23,0x6b,0x3e,0x1a,0xaf,0x8,0x10,0x84,0x74,0x90,
+  0x2d,0xb4,0xb,0x40,0x18,0x1,0x23,0xc6,0x4e,0x84,0x31,0x7,0x1c,0x4,0x6d,0x23,
+  0x46,0x41,0x2e,0x8f,0xae,0xcc,0xac,0xa9,0xf4,0x43,0xe7,0x64,0xf7,0xa9,0x25,0x85,
+  0xd8,0xf0,0xb4,0xb1,0x30,0x8a,0x4,0xf0,0x42,0x2f,0x26,0xf9,0x87,0xda,0x3,0x40,
+  0x1b,0x44,0xe9,0xc2,0xe5,0x72,0x11,0xca,0x7d,0x7d,0xb0,0x6d,0xf3,0x7a,0x21,0xde,
+  0xaf,0x80,0xae,0xad,0x1b,0xa1,0x57,0xe8,0xf4,0x58,0xd4,0x3,0xb9,0x7c,0x86,0xea,
+  0x1a,0xc8,0x13,0x6a,0x2,0xd6,0xc4,0x89,0x23,0x89,0xd3,0x37,0x10,0xbc,0xae,0xc6,
+  0x3,0xd0,0x60,0xd8,0xe3,0xee,0x3e,0xd,0x4b,0xf6,0x3a,0xbb,0x15,0xba,0x96,0x78,
+  0x54,0xf4,0xe0,0x5,0xbf,0xf8,0xc9,0x2f,0xee,0x1e,0xec,0x39,0x38,0x98,0x63,0x3f,
+  0x0,0x5c,0xfd,0x99,0x2f,0x8,0x0,0xf8,0x2f,0x9b,0x43,0x44,0x39,0xf3,0x6e,0x20,
+  0x30,0xc5,0x48,0x68,0xa3,0x46,0x7d,0x3f,0x49,0x52,0x68,0x48,0x57,0x66,0xe2,0x7f,
+  0xac,0x98,0x9,0x53,0x3d,0xf4,0x6f,0x38,0xf0,0xf8,0xa6,0xde,0x3c,0x15,0xe1,0xa8,
+  0x52,0xa4,0x60,0xbe,0x6d,0x18,0xb4,0xe,0x1b,0x9,0x6d,0x42,0x52,0x68,0x17,0x4b,
+  0xdb,0xf0,0x11,0xd0,0xda,0x3e,0x1c,0xb2,0xf9,0x2,0x55,0x19,0x4e,0xab,0x90,0xea,
+  0xd0,0xf3,0xa2,0x97,0xae,0x1,0x0,0x22,0x63,0x3f,0x2,0x80,0x8e,0xb2,0xc3,0xa2,
+  0x1e,0xb5,0x3a,0xfa,0xcb,0x7b,0xa0,0xb7,0x7b,0x1b,0xf4,0x6e,0xef,0x84,0x6e,0xb1,
+  0xf4,0x74,0x6d,0x85,0xbe,0xae,0x6d,0x50,0xec,0xed,0xa2,0x43,0x20,0x87,0xd7,0x79,
+  0x1b,0x66,0x4,0x16,0x1,0x32,0x2e,0x6f,0x88,0xd8,0xc1,0xe9,0xb5,0xbe,0x4f,0x87,
+  0xd0,0xdc,0x9d,0xad,0x73,0x11,0xbe,0x71,0xff,0xc9,0xd,0x12,0x9,0x5f,0xef,0x47,
+  0xcf,0x5b,0xe6,0x9,0xdc,0xf8,0xcb,0x9f,0xfe,0x72,0x8f,0xb7,0xdf,0x1a,0xca,0x63,
+  0x9f,0x7,0x80,0x2b,0x3f,0x7b,0xe5,0xe3,0x62,0x42,0xcc,0xc6,0xef,0x1c,0x0,0xf4,
+  0x67,0x7f,0x40,0x90,0x4,0xe,0xb4,0x8f,0x65,0x2b,0xc0,0x61,0x24,0x3,0xc5,0xa2,
+  0x63,0x75,0xb,0x20,0x32,0x10,0x6a,0xf9,0xdd,0x48,0x1b,0x10,0x3f,0x86,0x91,0xef,
+  0xd5,0x88,0x55,0x9e,0x55,0x9,0x51,0x39,0x8c,0x6d,0xc8,0xcb,0xce,0xb8,0xb9,0x7c,
+  0x8b,0x90,0x1c,0xb0,0xfe,0xa2,0xf8,0xcc,0x9,0x5d,0x1c,0x1b,0xb3,0x64,0xb2,0xb4,
+  0xe0,0xa8,0xa1,0xaa,0x21,0x96,0x2a,0xba,0x27,0xcb,0x25,0xa8,0xa,0xe,0x5f,0x29,
+  0xe1,0xd2,0x7,0xe5,0x52,0x2f,0xdd,0x13,0x7e,0x37,0x59,0x71,0x2a,0xd2,0x8d,0x47,
+  0x67,0x1a,0x31,0xde,0xd2,0xc5,0xd,0x11,0x2a,0x6b,0xbe,0x91,0x4,0xf8,0x67,0x10,
+  0x27,0x70,0x79,0x53,0xa,0x4,0x6c,0x82,0xb6,0x89,0x5c,0xa9,0x13,0x49,0x84,0xcf,
+  0x1,0x82,0xb2,0xfc,0x3c,0x23,0x99,0xf4,0x54,0x6b,0xd5,0xb1,0xbf,0xbd,0xe1,0xb7,
+  0xfb,0xac,0x1a,0xb0,0x4f,0x3,0xc0,0xe5,0x9f,0xbe,0x7c,0xb2,0x98,0xd0,0xef,0x8a,
+  0xc9,0x9c,0xd2,0x93,0xc8,0x26,0x7a,0xd7,0xba,0x18,0xd1,0xd3,0xca,0xb8,0xa7,0xc0,
+  0x36,0x6,0xea,0xed,0x1a,0xc,0x85,0xd6,0x7a,0xa7,0xb1,0x91,0x4b,0x1,0x8c,0x63,
+  0x73,0x60,0x90,0x97,0x10,0x6d,0xa7,0x87,0xac,0xf5,0xe3,0xb0,0xb2,0x43,0x94,0x48,
+  0x65,0xae,0x21,0xe5,0xc7,0x41,0x8a,0xc7,0x35,0xa8,0xe3,0xd0,0x7e,0xdc,0xf0,0x6,
+  0x8c,0xeb,0x86,0x8d,0xdc,0x5d,0x6f,0x6f,0x13,0x26,0x7,0x6,0xfb,0x77,0x9d,0xe4,
+  0xa5,0x8f,0x6d,0x5b,0xf3,0x5d,0xeb,0x6c,0x62,0x8f,0x6d,0xc3,0xd6,0x71,0x77,0xa0,
+  0x76,0xc3,0xa,0x9,0xea,0xa2,0x9b,0x7e,0x7d,0xd3,0x1d,0x83,0x3d,0x17,0x7,0x6b,
+  0xec,0xeb,0x0,0xf0,0xd7,0xe9,0x54,0xfa,0x3b,0x3a,0x19,0x26,0x54,0xd1,0x6b,0x9c,
+  0xc8,0xe9,0x21,0x35,0x1,0x2,0xf3,0x1d,0xe2,0x9c,0xde,0x76,0x1b,0x36,0x78,0x10,
+  0xac,0xf5,0x38,0x8c,0xfa,0x0,0x10,0x23,0x7a,0x7b,0x5f,0x3d,0x8c,0x24,0x40,0x1b,
+  0x42,0x4c,0xa,0x1,0xb3,0xda,0x8b,0xff,0x3e,0x80,0xc1,0xb9,0xba,0xfe,0x9b,0xdb,
+  0x47,0x38,0x57,0xc7,0xc1,0xb9,0x37,0x7d,0x5a,0x44,0x27,0xbf,0x30,0x31,0x9e,0x11,
+  0xbd,0x53,0x55,0xb0,0x41,0xc2,0x32,0xe2,0xc5,0x5c,0x7b,0x61,0x1c,0x98,0x5c,0x84,
+  0xcf,0x13,0x81,0xb4,0x1,0x52,0x3f,0xa3,0x5a,0xbd,0x76,0xe3,0xcd,0xbf,0xb9,0x79,
+  0x9f,0x55,0x3,0xf6,0x69,0x0,0xb8,0xec,0x53,0x97,0x3d,0x2e,0x38,0xdf,0x6c,0x3d,
+  0xd1,0xb8,0x1,0xce,0x5,0x4,0xb4,0xbe,0x1f,0x70,0x70,0x11,0xbd,0x39,0x9e,0xef,
+  0xde,0x96,0xab,0x4,0x38,0x6c,0xee,0xae,0x55,0xa,0x2e,0x25,0xd8,0xc7,0xd4,0x7f,
+  0xdb,0xd7,0xc4,0xc7,0x40,0x1,0x0,0x47,0xc8,0x10,0x80,0x73,0x7d,0x2d,0xe2,0x9b,
+  0xdf,0x2c,0xce,0x6c,0x8b,0xfc,0x7c,0x7b,0xae,0xa7,0x73,0xd0,0xb0,0x9,0x96,0x5b,
+  0xf2,0x63,0xc7,0x75,0x49,0x12,0xec,0x1a,0x9d,0x12,0x80,0x4e,0xc,0xd2,0xf1,0x3,
+  0xca,0x90,0xa8,0x87,0x90,0x82,0x8a,0x42,0xa,0x18,0x75,0xe7,0xad,0x77,0xee,0x93,
+  0x6a,0xc0,0x3e,0xb,0x0,0x17,0x5f,0x7a,0xf1,0xc4,0x4c,0x26,0xb3,0x52,0x10,0x5b,
+  0x8a,0x38,0x13,0xd3,0xb3,0x63,0xae,0xbd,0x1,0x2,0x1,0x5f,0xa7,0xbf,0x73,0xe,
+  0x6d,0x73,0x7a,0xbe,0x9e,0xd6,0x71,0x95,0x80,0xe9,0xf8,0xd,0x4,0xef,0xe2,0xf2,
+  0xbe,0x75,0xd,0x4c,0xd,0xe1,0xeb,0x77,0x66,0xc4,0x38,0x3e,0xad,0x60,0x62,0xbe,
+  0xb5,0x8e,0x6f,0xcf,0xb9,0xbc,0xf9,0x64,0x36,0x82,0x6,0xd1,0x9e,0xff,0xce,0xf4,
+  0x7f,0xd7,0x7a,0x17,0xb7,0xe7,0xc7,0xa2,0xf3,0xb3,0xfd,0x4d,0x3a,0xb0,0x55,0x92,
+  0x4b,0xdb,0x1d,0xf4,0x76,0x2,0x0,0x16,0xdc,0x7d,0xfb,0xdd,0xfb,0x64,0x50,0xd0,
+  0x3e,0xb,0x0,0x1f,0xff,0xe4,0xc7,0xaf,0x11,0xfa,0xff,0xf5,0x3a,0x21,0x86,0x8b,
+  0xde,0xfd,0x1,0x1,0xfd,0x9d,0xa0,0xa,0xe8,0xe1,0xb2,0xf6,0xdb,0x60,0x10,0x13,
+  0xe9,0x6d,0xdd,0x5e,0x3,0x3,0xf8,0xd,0xd7,0xc7,0xcf,0xc1,0xaf,0x8d,0xf,0x1b,
+  0x9c,0xe2,0x3f,0x3a,0xd6,0x85,0xd0,0x74,0x70,0x4e,0x2f,0x37,0x8f,0x73,0x65,0x33,
+  0x82,0xf8,0xba,0x98,0xb8,0xf,0x71,0x29,0x40,0x1f,0x27,0xa6,0xcb,0xf3,0xf5,0xfd,
+  0x70,0x7b,0xfd,0x5d,0x7f,0x1a,0xe2,0xe7,0xc6,0x46,0x66,0xfc,0x8b,0x65,0xd,0xb2,
+  0xfb,0xa9,0xd7,0xea,0x37,0xfe,0xee,0xce,0xdf,0xed,0x93,0x6a,0xc0,0x3e,0xb,0x0,
+  0x17,0x5d,0x72,0xd1,0xa2,0x74,0x26,0x3d,0xcf,0x18,0x85,0x3c,0x56,0xfc,0xc3,0x52,
+  0x3,0x1a,0x44,0x70,0x7,0xf1,0xf3,0xbf,0xed,0x75,0xfa,0x93,0x7b,0x7,0xcc,0xf1,
+  0xbc,0xb8,0x98,0xef,0x72,0x2d,0xda,0xc7,0xe1,0xa2,0xbc,0x6d,0x7,0xe0,0xc3,0xf7,
+  0x7c,0xe7,0xfa,0x9d,0x19,0xb6,0x9f,0x5d,0xae,0x8c,0xbe,0x1a,0x82,0x86,0x8,0x14,
+  0x82,0x30,0x88,0xed,0x6f,0x13,0xb6,0x5e,0xef,0x4,0x83,0x26,0x44,0x1f,0x3b,0x1e,
+  0x5b,0x6f,0x4b,0x7,0xb6,0xd5,0x9f,0x8e,0x5b,0x67,0xcd,0x3b,0x99,0x14,0xa0,0x62,
+  0x2c,0x3a,0x85,0x14,0x30,0x76,0xd1,0x7d,0x8b,0x86,0x44,0x91,0x8e,0xbd,0x39,0xf6,
+  0x49,0x0,0x38,0xef,0x82,0xf3,0x46,0xa,0xf1,0x7f,0x13,0x6,0xff,0x18,0x91,0x5a,
+  0x5b,0xbd,0x79,0xa8,0xae,0x89,0xa8,0x63,0xc4,0xcb,0xd6,0xe9,0xbf,0x9b,0x11,0x7d,
+  0xb3,0xf5,0xb6,0x27,0x1,0x87,0x2d,0x1,0x70,0x62,0x8f,0x79,0x3,0x20,0xbe,0xbd,
+  0xd9,0x86,0x79,0x5,0x6c,0x35,0x63,0x67,0x47,0x83,0xe1,0xcf,0xd6,0xff,0x13,0x88,
+  0xd2,0x56,0x17,0x1a,0xc,0x86,0xe,0x30,0xd0,0xbf,0xd,0x94,0xe8,0xf5,0xa7,0xa9,
+  0xb9,0x47,0x7,0x88,0x87,0x17,0xbb,0x1a,0x81,0xc4,0xa,0x86,0x4,0xd1,0x71,0x2a,
+  0x95,0xca,0xd9,0xf,0x2f,0x7a,0xf8,0xc1,0xf7,0x3d,0xb9,0xfe,0xc8,0xc6,0x3e,0x9,
+  0x0,0xe7,0x2e,0x38,0xf7,0x8a,0x4c,0x36,0x73,0x83,0xed,0xc6,0xd3,0x12,0x80,0xb4,
+  0xc7,0x45,0x95,0x7d,0xf4,0x36,0x2e,0x20,0x90,0x3f,0x79,0x3,0x26,0x7a,0x3e,0x62,
+  0x52,0x81,0x4d,0xf0,0xe,0xab,0xbe,0x6d,0xdd,0xb7,0xd5,0x7,0x7e,0x5c,0x17,0xd1,
+  0xf,0x4,0x8,0x1a,0x74,0x7f,0xfe,0x5b,0x10,0x26,0x4b,0x2,0x16,0xd7,0x8f,0x7d,
+  0x32,0x3f,0xbd,0xfd,0x7b,0x33,0xe2,0xb6,0xaf,0xa7,0xc1,0xa5,0xa7,0xbd,0x15,0x61,
+  0x23,0xe1,0x43,0x8,0x51,0x7b,0x2f,0xc6,0xf9,0x35,0x20,0xe8,0x2,0x9e,0x94,0x9e,
+  0xed,0x51,0xc9,0xae,0xef,0x3f,0xb2,0xe8,0x91,0x41,0xaf,0xd2,0xbb,0xb7,0xc7,0x3e,
+  0x9,0x0,0xf3,0xcf,0x9b,0xbf,0x50,0xe8,0xff,0xe7,0xe1,0x77,0x9c,0x30,0x76,0x95,
+  0x61,0x53,0xec,0xd1,0xce,0xda,0x53,0x4f,0xcc,0x69,0x18,0x74,0x48,0x5,0xfa,0xbb,
+  0x1e,0x2e,0x71,0x9e,0xff,0x96,0x8,0x1e,0xdc,0xba,0xef,0xe0,0xea,0x4e,0xfd,0x7f,
+  0x37,0xbf,0x5a,0x17,0xf1,0x9a,0xdf,0xc2,0x46,0x50,0x70,0x49,0x0,0x3,0xe1,0xe8,
+  0xae,0x63,0xc7,0x38,0x7e,0xc8,0x62,0xf,0x2c,0x77,0x20,0xb7,0xf4,0x73,0x83,0x9f,
+  0xa9,0x25,0xc8,0x9a,0x74,0xe8,0xef,0xfa,0x5d,0xa,0xb0,0x58,0x2b,0x40,0x60,0xca,
+  0xe3,0x7f,0x78,0x7c,0x9f,0x52,0x3,0xf6,0x39,0x0,0x98,0x7b,0xd6,0xdc,0x42,0x26,
+  0x9d,0xd9,0x9a,0x4a,0xa7,0xa,0x7a,0x1d,0xcf,0xde,0x8b,0x95,0xf9,0xd6,0xe5,0xbe,
+  0x2c,0x82,0xb7,0x3,0x72,0x62,0x4,0xcd,0xa4,0x2,0xbd,0x6e,0x67,0xc1,0x60,0x40,
+  0xfb,0x59,0x2e,0x3f,0xd7,0x9b,0xec,0x8f,0xe3,0x73,0x90,0x88,0x71,0x76,0x6b,0x38,
+  0xa5,0x82,0x7e,0xb8,0x3f,0xff,0xbe,0x33,0x4,0x6f,0x6f,0x1f,0xf3,0x2e,0x70,0x6f,
+  0x2,0xf,0x17,0x66,0x89,0x45,0xce,0x42,0x22,0xf5,0x68,0x3d,0xaf,0xd7,0x6f,0xec,
+  0x0,0x2a,0x37,0xa0,0x5a,0xab,0xce,0x79,0xe2,0xd1,0x27,0x16,0xf,0x68,0x22,0x7d,
+  0x40,0xc6,0x3e,0x7,0x0,0xa7,0x9d,0x71,0xda,0x79,0xe9,0x4c,0x7a,0x21,0x11,0x47,
+  0x18,0xe9,0xfe,0xba,0x5,0x59,0x43,0xdf,0x1,0x2f,0x6e,0x13,0x88,0xb9,0xed,0x18,
+  0xf1,0x69,0x83,0xdb,0xae,0x80,0x41,0xc3,0x7e,0xd6,0xba,0x9d,0xf9,0x9d,0xff,0xbd,
+  0x3b,0xa4,0x80,0x24,0x9d,0x3f,0xb6,0x4d,0xd8,0x7c,0x9b,0x81,0x10,0xbc,0xf3,0x13,
+  0xc2,0x98,0x9e,0x6e,0x44,0x7d,0x16,0x71,0xc8,0xa3,0xfb,0x62,0x84,0x1f,0x44,0x3a,
+  0x3f,0xef,0xe6,0x13,0xab,0xd7,0xcf,0xa2,0x2,0x51,0xe5,0xab,0xd5,0x6b,0xdf,0x58,
+  0xfc,0xe8,0xe2,0x7f,0x7a,0xdf,0xf,0xed,0x8f,0x68,0xec,0x73,0x0,0x30,0x67,0xee,
+  0x9c,0xeb,0xd3,0xa9,0xf4,0x35,0x54,0xb1,0x37,0xc,0xc,0xb7,0xd7,0x0,0xe0,0x2a,
+  0xf5,0xcd,0x3f,0xfb,0x33,0xe,0xe2,0xe0,0x60,0x60,0x73,0x68,0x9b,0x73,0x6b,0xae,
+  0x44,0xb5,0xf0,0x21,0x34,0xbd,0x10,0x74,0xcc,0x3d,0xdf,0xb6,0xd9,0x77,0xd7,0xdf,
+  0x49,0xeb,0x76,0x66,0xb8,0xb8,0x7f,0xb3,0x75,0x2e,0xc2,0xd7,0x5d,0x73,0x28,0x47,
+  0x41,0x35,0x1,0xc1,0xe7,0xad,0xcb,0xaf,0xc5,0xf6,0x4f,0xa,0x27,0xd6,0x2a,0x45,
+  0x10,0x1,0x83,0x8e,0xf,0xe0,0xf9,0x4,0x9c,0xc0,0x6d,0xdd,0x3f,0x6,0x2,0x61,
+  0x5c,0x2,0xc0,0x67,0x2e,0xd6,0x2f,0x16,0x2a,0xc0,0x9c,0xdd,0x3a,0xe1,0x86,0xf8,
+  0xd8,0xe7,0x0,0x60,0xf6,0xa9,0xb3,0x57,0xa,0xc2,0x9a,0xac,0xc3,0x7f,0x89,0xe0,
+  0x53,0x4c,0x5,0x50,0x5d,0x88,0x8c,0xa,0xe0,0x59,0x15,0x7d,0xac,0x36,0xe4,0x4d,
+  0x6d,0x2,0x8c,0xb,0x37,0x70,0x70,0x4f,0x8a,0xb2,0xd8,0x8e,0xa,0x8b,0x7f,0x60,
+  0x7e,0xba,0x58,0x3b,0x52,0x83,0xd,0xb5,0x4a,0x57,0xd,0x40,0x79,0x63,0xd4,0x81,
+  0x2,0xc0,0xfb,0x25,0x7c,0xd7,0x18,0xa8,0x4,0x60,0x8,0x4d,0x35,0xcd,0xc4,0x8c,
+  0x45,0xd3,0xae,0x5b,0x72,0xf4,0x2e,0x71,0x7d,0xc3,0xb0,0x31,0xb,0x76,0x81,0xd2,
+  0xd9,0x79,0x4e,0xff,0xbe,0x96,0x2,0xac,0x4,0x22,0x3b,0x1f,0x20,0x26,0xe6,0x6b,
+  0x3d,0x3f,0x6c,0x4,0x4,0xdb,0xcd,0x68,0x5c,0xc0,0x12,0x6c,0x5,0x46,0xd5,0xc6,
+  0x3e,0xbd,0xf8,0xe9,0x41,0xef,0xd8,0xb3,0xb7,0xc6,0x3e,0x5,0x0,0x27,0x9c,0x74,
+  0xc2,0x51,0x82,0x70,0x5f,0xe5,0x7a,0xbb,0xe9,0xe8,0xe3,0x47,0x56,0x7f,0xd3,0x5,
+  0xd8,0x51,0xe6,0x9b,0x67,0xf7,0x71,0xf5,0xa0,0x19,0xf7,0xe7,0x71,0x5,0xfa,0x37,
+  0x15,0x81,0x46,0xad,0xc4,0xea,0x61,0x7d,0x79,0x21,0x5f,0x38,0x59,0xac,0xcb,0xd6,
+  0xaa,0xb5,0xf3,0xc4,0x4,0x3e,0x5f,0x6c,0x36,0x4f,0x6c,0x9f,0xd5,0xdc,0x9,0x81,
+  0x9,0xc1,0xc0,0x6,0x4,0x3e,0x76,0xb7,0x4,0x90,0xe4,0x11,0x70,0xad,0xd7,0x5c,
+  0x9e,0x88,0x5d,0x65,0x23,0x9a,0xf6,0x5d,0x52,0x8d,0x58,0x4c,0x1d,0x9b,0x32,0xe9,
+  0x5b,0xb1,0xd2,0x73,0xb9,0x58,0xbe,0x4b,0xac,0x3f,0x87,0x77,0x81,0x72,0x8a,0xfe,
+  0x8c,0xd3,0x9b,0x4,0x24,0x9d,0x30,0xc4,0xab,0x5,0xa9,0xe4,0x26,0xa3,0x6,0xd4,
+  0xdd,0x1c,0x9f,0x47,0x5,0xaa,0x93,0x19,0xc9,0x8b,0x72,0x4,0x52,0xde,0xe5,0x4f,
+  0x3e,0xf6,0xe4,0x8d,0x7b,0x79,0x6a,0xe,0xda,0xd8,0xa7,0x0,0x60,0xd6,0x9,0xb3,
+  0x4e,0x2a,0x97,0xcb,0xa8,0xff,0x8f,0xc4,0x17,0x8e,0xd5,0x6a,0xa8,0xff,0x80,0xdf,
+  0x68,0xfc,0xe3,0xe5,0xbf,0xb5,0x54,0xc0,0x8d,0x82,0x76,0xc6,0x9c,0x76,0x25,0xea,
+  0xa7,0xea,0xe2,0xfe,0xa6,0x8f,0x21,0xa8,0x26,0x91,0x45,0xea,0x11,0xbf,0xb9,0xa5,
+  0xa5,0xe5,0xe4,0xdb,0x6e,0xbe,0x2d,0x56,0xfd,0xf8,0xe2,0x4b,0x2f,0x2e,0x88,0xdf,
+  0xe6,0x9,0x42,0x3a,0x43,0x4c,0xcc,0xd3,0xc4,0xaa,0x63,0xb4,0xad,0x1,0x9,0x6,
+  0x8b,0x69,0x22,0x18,0x24,0xd9,0x14,0xf6,0xe4,0xb0,0x1,0x0,0xef,0x5,0x8b,0x9b,
+  0x62,0xb1,0x12,0xe6,0xcb,0x5f,0x21,0xae,0x77,0x31,0xf6,0x71,0x10,0x92,0xcc,0x83,
+  0xb7,0xff,0xf7,0xed,0x9b,0xf9,0x3e,0x97,0xfc,0xe9,0x25,0x85,0x9e,0xee,0x9e,0x3f,
+  0x88,0x67,0x78,0x2,0x82,0x80,0x2e,0xc6,0xca,0x3,0x87,0xc,0xc7,0x87,0xa8,0x2e,
+  0x80,0xe1,0xf6,0xbc,0xf1,0x67,0xd8,0xd8,0x1f,0x90,0xdb,0x7,0x5c,0x84,0xcf,0x25,
+  0x15,0x6c,0xd,0x86,0xfb,0x8,0xd5,0xb0,0x32,0x7a,0xf4,0xe8,0xff,0xb1,0xe8,0xfe,
+  0x45,0xbf,0xd8,0x6b,0xf,0x73,0x90,0xc7,0x3e,0x5,0x0,0x38,0x8e,0x3e,0xee,0xe8,
+  0x61,0x82,0x43,0x7d,0x55,0xbc,0xfc,0xbf,0xc6,0x34,0x60,0x24,0x22,0xd,0x4,0x31,
+  0x9d,0x3f,0x65,0x19,0x2,0xbd,0xa8,0x73,0x50,0xac,0x77,0xa0,0x17,0xcf,0xe1,0xe7,
+  0xed,0xca,0xf5,0x13,0xb6,0xc1,0x40,0x13,0x8c,0x98,0x78,0xc5,0x5c,0x3e,0x37,0xf7,
+  0xae,0x5b,0xef,0x7a,0xb6,0xbf,0xeb,0xfe,0xf8,0x27,0x3f,0xde,0x26,0xc0,0x60,0xb6,
+  0x58,0x4e,0x12,0x13,0xfa,0xb2,0x7c,0x2e,0x3f,0x1d,0x4b,0x69,0xbb,0xec,0x4,0x7c,
+  0xec,0x9,0x1b,0x0,0x5f,0x4f,0x25,0xce,0xcb,0x65,0x2c,0xb3,0xdd,0x23,0xce,0xf5,
+  0x23,0x71,0x3d,0x4f,0x9,0xa2,0x5f,0x7c,0xfb,0xcd,0xb7,0x6f,0xe8,0xef,0xd8,0x17,
+  0x5d,0x72,0xd1,0x98,0xbe,0xbe,0xbe,0x27,0xc5,0x7e,0xd3,0xa9,0x3a,0xb0,0x78,0x7,
+  0x26,0x71,0x28,0x8c,0xc2,0x7a,0x63,0xa2,0xbe,0x1d,0xd4,0xc3,0x33,0xfd,0xea,0x71,
+  0xf7,0x9f,0x1d,0xa,0xac,0xaf,0x5b,0x1f,0xc7,0x34,0x93,0x15,0x8b,0x0,0xe1,0x3b,
+  0xda,0x87,0xb5,0xff,0xfd,0x23,0x8b,0x1e,0x19,0x52,0x75,0xfb,0xf7,0xf4,0xd8,0xe7,
+  0x0,0x40,0x8f,0x99,0xc7,0xce,0x3c,0x42,0x10,0xd3,0x7f,0x88,0xb9,0x70,0x8e,0x16,
+  0xaf,0x11,0x8,0xd2,0xa9,0x74,0x23,0x10,0x58,0xdc,0x9e,0xb7,0x2a,0x27,0x2,0x63,
+  0xcd,0x3f,0x1a,0xdc,0x85,0x10,0x7,0x3,0x14,0x8d,0xb1,0x21,0x85,0xd0,0xfd,0xeb,
+  0x82,0xeb,0x5d,0xb4,0xf0,0xce,0x85,0x3b,0x5d,0x92,0xea,0xc2,0x4b,0x2e,0xbc,0x56,
+  0x4c,0xf6,0xeb,0x5a,0x5a,0x5b,0xe8,0xba,0x93,0xde,0xe2,0xee,0x8a,0x5,0x70,0xba,
+  0x8,0xd5,0x2a,0xbc,0x1f,0x2c,0x46,0x2a,0x3e,0xef,0xb8,0xfb,0xf6,0xbb,0x2f,0xda,
+  0xd9,0x63,0x9f,0xff,0xb1,0xf3,0xa7,0x17,0x4b,0xc5,0x27,0xc5,0x73,0x1e,0x83,0x36,
+  0x1,0x32,0xc,0x86,0xf1,0x3a,0x6,0xd,0x7d,0x1,0xec,0x98,0x7e,0x4b,0xef,0xb7,
+  0x9,0x9f,0xab,0x16,0xbc,0x60,0xa,0x7e,0x8a,0xf7,0xf8,0x46,0x7b,0x7b,0xfb,0x5f,
+  0x3d,0xf9,0xf8,0x93,0x8f,0xec,0x96,0x87,0xf5,0x47,0x36,0xf6,0x59,0x0,0xd0,0xe3,
+  0xa8,0xa3,0x8f,0x3a,0x47,0x4c,0x8a,0xef,0x8,0x62,0x39,0x14,0x5b,0x91,0xe1,0x4,
+  0xc4,0x86,0xa1,0xd,0x81,0x41,0x7e,0xa3,0xd8,0xcf,0xd7,0x99,0x10,0xde,0x84,0xb8,
+  0x1,0x5c,0xa8,0xc7,0x7d,0x99,0x88,0x1f,0x9,0xf7,0x53,0xf7,0x2d,0xbc,0xef,0x57,
+  0xbb,0x72,0xcd,0x97,0x5c,0x7a,0xc9,0xbc,0x52,0xb9,0xb4,0x48,0x70,0xad,0x98,0x1a,
+  0xc0,0xc7,0xee,0x56,0x9,0x92,0x2c,0xff,0x1a,0x0,0xc4,0x33,0xfa,0xa7,0x3b,0x6e,
+  0xb9,0xe3,0x1b,0xbb,0x72,0xec,0x73,0x3f,0x7a,0xee,0x9,0x42,0x22,0xc2,0xc2,0xac,
+  0x5,0x54,0x7,0x74,0x4b,0x30,0x4d,0xc8,0x46,0x8c,0xb7,0xc0,0x20,0xc6,0xe9,0xed,
+  0x6,0x22,0x5c,0xdc,0x57,0x36,0x5,0x34,0x48,0x22,0xd1,0x2b,0x83,0x61,0xa7,0x0,
+  0x9c,0xaf,0x8c,0x18,0x35,0xe2,0x47,0xf,0x3f,0xf0,0xf0,0x3e,0x15,0xfc,0xc3,0xc7,
+  0x3e,0xf,0x0,0x38,0x8e,0x99,0x75,0xc,0x1a,0xdf,0xbe,0x20,0x26,0xcc,0x57,0xc5,
+  0x13,0x19,0x46,0xc6,0x36,0x1,0x4,0x4e,0xfb,0x0,0x77,0x9,0x5a,0x5e,0x2,0x53,
+  0xf5,0xd7,0x1,0x6,0x14,0x6f,0x8e,0x62,0xbf,0x10,0xff,0xc5,0x76,0x5f,0x7e,0xf0,
+  0xfe,0x7,0xff,0x65,0x57,0xaf,0xf7,0x93,0x97,0x7f,0x72,0x4c,0xa9,0x54,0xda,0x84,
+  0x40,0x95,0xce,0x36,0x2,0xc0,0xee,0x8e,0x2,0xd4,0xc3,0x15,0xdb,0x4f,0x85,0x4a,
+  0xc5,0x7d,0x89,0xe7,0xb5,0xe0,0xb6,0xff,0xbe,0x6d,0x97,0x53,0x6a,0xcf,0x3a,0xe7,
+  0xac,0x79,0x2,0x18,0x17,0xa,0x9,0x2c,0xab,0x3d,0x3,0x31,0x4b,0x7f,0xd8,0x18,
+  0xe1,0x17,0xab,0xd,0xe8,0x22,0x7c,0xf5,0x9d,0xa,0xaa,0xd6,0x6a,0xda,0x50,0x58,
+  0x17,0x6f,0xf4,0x47,0x6d,0xc3,0xdb,0xbe,0xfc,0xd4,0x63,0x4f,0x75,0xed,0xea,0xf5,
+  0x7e,0x50,0xc6,0x7e,0x0,0x60,0x63,0xe6,0x31,0x33,0x47,0x62,0xc3,0x50,0xf1,0xf5,
+  0x2f,0x90,0x88,0x53,0x99,0x94,0x1,0x2,0x3b,0x2e,0x80,0xdb,0x4,0x62,0x75,0xff,
+  0xbd,0xb8,0xdd,0x40,0xf7,0xb3,0x47,0x3,0x19,0x15,0xf0,0xf4,0xbc,0xef,0xff,0xfe,
+  0xc1,0xdf,0xbf,0xef,0x98,0xf3,0xb,0x3e,0x7e,0xc1,0xdb,0x42,0xd7,0x9e,0x4e,0x9d,
+  0x8d,0x77,0xc6,0x10,0xd8,0xdf,0x26,0x2e,0x69,0x3f,0x21,0xec,0x17,0xbf,0x53,0x61,
+  0x52,0x21,0xd1,0x8,0x75,0x66,0xc2,0xad,0x37,0xdd,0xda,0xaf,0xde,0xdf,0x6c,0xcc,
+  0x3d,0x73,0xee,0x65,0xe2,0x78,0xbf,0x21,0x75,0xc,0x3d,0x3,0xaa,0xb1,0x26,0xef,
+  0xf6,0x1b,0x23,0x72,0x26,0x21,0xc4,0xc2,0x82,0x21,0xfa,0xd,0x1,0x8a,0xa9,0x7,
+  0xf7,0xb,0x9,0xe3,0x4b,0x2f,0x3e,0xf7,0xe2,0x1b,0xef,0xf7,0xf9,0x7f,0x50,0xc6,
+  0x7e,0x0,0x70,0xc,0xa1,0x16,0x1c,0x23,0x26,0xcd,0x77,0xc4,0x24,0x3a,0xd,0x27,
+  0x21,0x2,0x0,0x2,0x1,0xba,0xdf,0x9c,0x2a,0x80,0x6,0x3,0xf0,0x9c,0x51,0x83,
+  0xba,0x9c,0xb7,0xf8,0xfb,0xee,0xd6,0xb6,0xd6,0x8b,0xee,0xfb,0xdd,0x7d,0xef,0x5b,
+  0xe4,0x3c,0xff,0xa2,0xf3,0x6f,0x11,0xe7,0xba,0x58,0xbb,0xd0,0x9a,0x71,0xfd,0xdd,
+  0x92,0xd,0x68,0xd,0x4d,0x90,0xca,0xed,0xb7,0x6a,0xe1,0x9d,0xb,0xa7,0xec,0x8e,
+  0x67,0x3f,0xfb,0xd4,0xd9,0xd7,0x8a,0x67,0x7f,0x9d,0x76,0x79,0x92,0xea,0xe4,0x10,
+  0xff,0xf5,0xf5,0xd9,0xc6,0x3d,0xad,0xe,0xd4,0xab,0x52,0xc7,0x57,0x76,0x83,0xe5,
+  0xe2,0xfd,0x7c,0x69,0xc9,0xcb,0x4b,0x6,0xb3,0x4,0x38,0xbe,0x84,0xf0,0x7d,0x1f,
+  0x65,0xf,0x5c,0xd4,0xfe,0x91,0x30,0x3e,0x34,0xf3,0x43,0x17,0x8a,0x49,0x87,0x35,
+  0x3,0x27,0x23,0xf1,0x23,0xb1,0xd1,0xa4,0xf4,0x2d,0x49,0xc0,0x6b,0x54,0x11,0xf4,
+  0x93,0xd5,0x1c,0x52,0x8c,0x67,0xb,0x2d,0x85,0xb9,0x42,0xdf,0xdc,0x2d,0xa5,0xa7,
+  0xce,0xbf,0xf0,0xfc,0x6b,0xc5,0x44,0xbf,0x4e,0x97,0xe4,0xc6,0x11,0x23,0xf4,0xdd,
+  0xf0,0x66,0x5d,0x49,0x3e,0x7c,0xa0,0x68,0x8d,0xc0,0x26,0xb6,0xbb,0xe3,0x9e,0xbb,
+  0xee,0xd9,0x69,0x3,0x60,0xd2,0x38,0xf1,0xe4,0x13,0xaf,0x17,0x84,0x7b,0xd,0x49,
+  0x5f,0x29,0xd9,0x49,0xa8,0x21,0xc7,0x3f,0xa1,0x56,0x20,0xea,0xf7,0x64,0xe0,0xab,
+  0x53,0x4c,0x40,0x97,0xd8,0xf7,0x1b,0x2d,0x2d,0x2d,0xdf,0x7d,0xee,0xe9,0xe7,0x76,
+  0x5b,0x57,0xe9,0xf,0xd2,0xd8,0xf,0x0,0xfd,0x8c,0x99,0xc7,0xcd,0x2c,0x8,0xe,
+  0xfe,0xb7,0x62,0x72,0x5d,0x2b,0x8,0xbb,0xd,0x39,0x7d,0x36,0x9d,0x25,0x43,0x15,
+  0x55,0x13,0x60,0x0,0x60,0xb2,0x7,0x95,0xee,0xaf,0x9b,0x79,0x8,0x42,0x5d,0x22,
+  0x44,0xcf,0xb9,0x8f,0xfd,0xfe,0xb1,0xdd,0x16,0x61,0x26,0x24,0x80,0x79,0x82,0xfb,
+  0x2e,0xd2,0xa0,0x84,0xa3,0x69,0x15,0xa0,0x5d,0x18,0xfd,0x85,0xfc,0xea,0xc0,0x1f,
+  0x31,0xfe,0x49,0x48,0x35,0xbb,0x64,0x0,0x74,0x8d,0xd9,0x73,0x67,0xa7,0x8a,0x7d,
+  0xc5,0xdb,0xc5,0x33,0x3f,0x1f,0x41,0x40,0xf7,0x10,0x8c,0x5,0x2,0xf1,0xf2,0x64,
+  0xb8,0xbe,0x1e,0xf9,0xf3,0xd5,0x35,0xfe,0x34,0x93,0xcd,0x7c,0xe5,0xe5,0x17,0x5e,
+  0x7e,0x5f,0x6a,0xc9,0x7,0x7d,0xec,0x7,0x80,0x1,0xe,0xa1,0x16,0x8c,0xaf,0xd5,
+  0x6b,0xff,0x21,0x26,0xd7,0x65,0x3a,0x54,0x17,0x89,0x8f,0xd4,0x2,0x6e,0xed,0x57,
+  0x51,0x7f,0x7a,0x42,0x8a,0x49,0xbc,0x56,0x10,0xff,0x89,0x4f,0x3e,0xfe,0xe4,0xda,
+  0xdd,0x79,0x3d,0x1f,0xbd,0xe8,0xa3,0x63,0xca,0xa5,0xf2,0x26,0x23,0x95,0xec,0xa6,
+  0xb0,0xe0,0xc4,0x34,0x5f,0xfb,0x37,0xf1,0xf,0xc5,0x6c,0x6c,0x5d,0x26,0xce,0xbf,
+  0x40,0x0,0xc0,0x6e,0xad,0xa9,0x27,0xa4,0x80,0x6c,0xa9,0x54,0xba,0x4f,0x9c,0xe6,
+  0xc,0x8a,0x7e,0xcc,0xa4,0xe2,0xd7,0xc0,0xdc,0x90,0x26,0x97,0x42,0x82,0xc2,0xa3,
+  0xe2,0x9d,0xfc,0x8d,0x10,0xf7,0x5f,0xde,0x9d,0xd7,0xf3,0x41,0x1d,0xfb,0x1,0x60,
+  0x27,0x87,0x50,0xb,0x4e,0x10,0x22,0xe8,0x7f,0x89,0x89,0x76,0x2,0x25,0xb4,0xa0,
+  0xae,0x9a,0x4a,0x1b,0x20,0x20,0x5f,0x7f,0x20,0x39,0xbf,0x98,0x90,0x9d,0x42,0x44,
+  0x9f,0x2b,0xc4,0xcf,0x25,0x7b,0xe2,0x5a,0xe6,0x9d,0x33,0x8f,0xc,0x81,0xc8,0x25,
+  0x4d,0xac,0x1,0x8e,0x26,0x6f,0xd5,0x4e,0xbe,0x49,0x1c,0x56,0xd5,0x9e,0xd8,0x3a,
+  0x6d,0x5d,0x17,0x0,0x80,0x20,0x27,0x9e,0xc1,0x84,0x7,0xee,0x7d,0x60,0xb7,0x73,
+  0xda,0x59,0x27,0xce,0x1a,0x56,0x2e,0x96,0x1f,0x17,0xf7,0x73,0x14,0x49,0x2,0xa9,
+  0x74,0x74,0x29,0xcc,0xba,0xaf,0x54,0x82,0x55,0xe8,0x5d,0x79,0xfd,0xd5,0xd7,0xf7,
+  0x99,0x30,0xde,0xdd,0x31,0xf6,0x3,0xc0,0x2e,0x8e,0x23,0x8e,0x3c,0xe2,0x4a,0xd4,
+  0xc1,0x5,0x41,0x8d,0x37,0xc9,0x3b,0xd8,0x7a,0x2b,0x8,0x75,0xe2,0x4b,0x97,0x58,
+  0x37,0xff,0xe5,0x17,0x5f,0xee,0x37,0xca,0x6f,0x0,0x43,0xbf,0xa7,0x90,0x7d,0x87,
+  0xd3,0xe7,0x9d,0xfe,0x5b,0xa1,0x72,0x7c,0x2,0x3,0x98,0xb4,0x1d,0x40,0x6e,0x9c,
+  0x5c,0x29,0xa8,0xd9,0x70,0x26,0xfb,0xd8,0x40,0x10,0x46,0x1,0x35,0x68,0xdb,0x10,
+  0x60,0xb7,0xe2,0xd1,0x87,0x1f,0x9d,0xde,0xec,0xb0,0xef,0xe7,0xc6,0x67,0x1e,0x3b,
+  0x73,0x8c,0x0,0xd3,0xc7,0xc4,0xbd,0x1c,0x8a,0xc6,0x58,0x8a,0x11,0x8,0x3,0xe3,
+  0xd6,0x13,0x92,0x56,0x51,0x48,0x5d,0xdf,0x12,0x52,0xd6,0xb7,0x5f,0x7c,0xee,0xc5,
+  0xc1,0x28,0xed,0xed,0x32,0xee,0xe9,0x75,0x43,0xd2,0xf0,0x67,0x5f,0xe8,0x1f,0xc3,
+  0xe0,0x4,0xa0,0xff,0xc6,0xef,0xc8,0xf6,0x2,0x6b,0x1b,0x50,0xeb,0xed,0x7,0x1f,
+  0x3a,0xb6,0x7b,0x5f,0x2f,0xe7,0xf0,0xf,0x1d,0xde,0x26,0x3e,0xd0,0x18,0xf7,0x45,
+  0x31,0x9,0xb,0x2c,0xab,0xad,0x28,0xa4,0x83,0x73,0x5e,0x7b,0xf5,0xb5,0x81,0x14,
+  0x97,0x18,0xe8,0x3b,0x68,0xd8,0x6e,0xee,0x99,0x73,0xff,0x4a,0x10,0xe3,0xb7,0xb5,
+  0x2a,0xd2,0x90,0x72,0xc,0x3,0x30,0xa,0xc6,0x68,0xdd,0x51,0xa,0xdc,0xae,0xea,
+  0xc3,0x5c,0x6c,0xa8,0xff,0xb,0x22,0xbc,0xf9,0xf1,0x3f,0x3c,0xde,0xac,0xa2,0x6e,
+  0xb8,0x93,0xeb,0x1b,0x86,0x90,0xba,0x26,0x8a,0xf3,0x3d,0x2a,0x9e,0xf1,0x41,0x3a,
+  0xa6,0x42,0x65,0x8,0xfe,0x36,0x9b,0xcb,0x7e,0xf9,0x95,0x17,0x5f,0x59,0x35,0xd0,
+  0x63,0xbd,0x8f,0xe1,0x22,0xf2,0x9d,0xdd,0x7f,0xc8,0x1,0xc2,0x50,0x4,0x0,0x9b,
+  0x40,0x3d,0xc7,0xef,0x3e,0xfb,0x9d,0x6f,0xeb,0x3b,0x8e,0xd7,0xdf,0x83,0x4f,0x5a,
+  0x3f,0xe0,0x67,0x73,0xe8,0x11,0x87,0x1e,0x24,0x88,0xed,0xdf,0xc4,0xd7,0x8f,0x89,
+  0xa9,0x59,0xf1,0x53,0xfe,0xf9,0x4b,0x97,0x2c,0x7d,0x68,0x80,0xf7,0xc8,0x6b,0xfa,
+  0x7a,0x4d,0xb6,0xd3,0x7f,0x1b,0x20,0x3b,0xe9,0x94,0x93,0x8e,0x17,0xe7,0x7a,0x8c,
+  0x22,0x17,0xd3,0x7e,0x54,0x5,0xd8,0xb1,0xb7,0xab,0x57,0x80,0xbc,0x79,0x87,0xa5,
+  0x9f,0x73,0x7d,0xc7,0x77,0x1c,0xba,0x31,0xa9,0x20,0xcc,0xbf,0x7b,0xfa,0x89,0xa7,
+  0xbf,0xe7,0x38,0x82,0xe7,0x3e,0x6a,0xe2,0x8,0x9b,0x6d,0x23,0x24,0xae,0xa9,0xe2,
+  0x1a,0xfe,0x20,0x88,0x7f,0xa2,0xb8,0x97,0x57,0x84,0x74,0x75,0xcd,0x92,0x57,0x96,
+  0x3c,0x67,0xed,0xdf,0xdf,0xf1,0x77,0xc7,0xb0,0xe7,0x92,0x8b,0xa1,0xc,0xe4,0x5c,
+  0x43,0x2,0x8,0x76,0x16,0x0,0xf6,0x6,0x82,0xd9,0x5d,0xad,0xfb,0xbb,0x76,0x4d,
+  0x38,0xfd,0x21,0xb4,0x2d,0x3d,0xf0,0xef,0xae,0xf3,0x84,0x4d,0x8e,0xe5,0x1c,0x87,
+  0x1c,0x7e,0xc8,0xa9,0x62,0x72,0x16,0xde,0x5c,0xfa,0xe6,0xa2,0x1,0xde,0x9f,0xeb,
+  0x3e,0xf8,0x62,0x9f,0x3b,0xb6,0x6e,0xcc,0xd8,0x31,0xf9,0x83,0x67,0x1c,0xbc,0x42,
+  0x10,0x43,0x96,0xc7,0x28,0xc8,0xd,0x76,0xd1,0xf7,0xcf,0x44,0x7d,0xf3,0x37,0xd3,
+  0xfd,0xe9,0x53,0xa5,0xde,0xa2,0xa,0x50,0x2e,0x97,0xcf,0x7a,0xe5,0xa5,0x57,0x5e,
+  0x64,0xcf,0xcc,0x45,0x4,0x61,0xc2,0x27,0x38,0xf6,0x4b,0x7e,0xbe,0x87,0x1d,0x32,
+  0x43,0x70,0xfc,0x93,0x5f,0x7b,0xe5,0xb5,0x5f,0xc,0x60,0xbf,0xdd,0x45,0x84,0xae,
+  0x79,0x63,0xde,0x1,0xf4,0x3f,0x37,0xec,0x67,0x92,0x24,0x99,0xe,0xca,0x18,0xc8,
+  0x2c,0x49,0xba,0xf1,0xdd,0x79,0xe1,0xb6,0xf8,0x6e,0x9f,0xdb,0x45,0x10,0x36,0xa1,
+  0xb8,0xee,0x27,0x49,0x75,0x0,0xc7,0x7e,0xf6,0xcb,0x69,0x6,0xe,0xfd,0x3d,0xbf,
+  0xa4,0xeb,0xe0,0xd7,0xeb,0x5b,0xbf,0xf9,0xe0,0x6,0x81,0x94,0xb5,0x6f,0xec,0x59,
+  0x1d,0x7f,0xe2,0xf1,0xb7,0xb,0xbd,0xf8,0x68,0x34,0x90,0xc5,0xda,0x73,0xeb,0x9d,
+  0x6,0xea,0x1,0x68,0x90,0xfe,0xc3,0x44,0x2f,0x0,0x8b,0xab,0xaf,0xbe,0xf1,0xda,
+  0x1b,0x87,0x17,0xfb,0x8a,0x15,0x76,0x14,0xbd,0x53,0x60,0x1d,0xdd,0xf5,0x9b,0x3d,
+  0x87,0x2,0x68,0x2e,0x39,0x24,0x1,0xc,0xf4,0xb3,0x4f,0x7f,0xdb,0xf,0xe0,0x89,
+  0x98,0xeb,0xe2,0xd7,0x8,0xd0,0x28,0x1,0x84,0x9,0xeb,0xc2,0x26,0x7f,0xf,0xda,
+  0xd8,0x59,0xfd,0x73,0x77,0x13,0xbd,0x4d,0x64,0x5c,0xbc,0xe7,0x23,0x5,0x71,0x11,
+  0xdf,0xb5,0x9d,0x4d,0x50,0xae,0x7b,0x73,0x1,0x40,0x12,0xa1,0xf7,0xf7,0xbb,0xeb,
+  0x5e,0xa0,0xc9,0x31,0xf8,0x35,0x72,0x62,0xd7,0xeb,0x52,0x10,0x11,0x7b,0xa,0xe2,
+  0x0,0xa0,0xb7,0x6b,0xd8,0xff,0xa8,0xa3,0x8f,0xfa,0xa2,0xe0,0x8a,0x9f,0xd4,0x9e,
+  0x80,0x24,0x3,0xe0,0x80,0x7,0xd3,0xfb,0x93,0xfe,0x66,0xa9,0xb4,0xaf,0xb,0xee,
+  0x7f,0x45,0xf4,0xb,0x11,0x7,0xff,0xb4,0x17,0x7b,0x3d,0x38,0x3e,0x83,0xc6,0x2b,
+  0x32,0xfb,0xd9,0xeb,0xed,0xed,0xf9,0x3a,0x5b,0xd,0xe1,0xb,0x9f,0x7,0xfd,0x11,
+  0x62,0x12,0x51,0xbb,0xae,0xa5,0xd9,0x31,0x3,0xeb,0x78,0xf6,0x76,0x83,0x2,0x4,
+  0x7b,0x5a,0x5,0x68,0xaa,0xc3,0x82,0x1b,0x0,0x6,0xb2,0xf8,0x9,0x7f,0xdb,0x20,
+  0x61,0x5f,0x47,0xd2,0x27,0x58,0xe7,0xef,0xef,0x19,0x35,0xd3,0xe1,0x93,0xa4,0x16,
+  0x3f,0xe1,0x13,0x97,0x34,0x44,0xc4,0xee,0x43,0x4,0x6,0x7c,0x3d,0xff,0xdd,0x7c,
+  0x9f,0x32,0x75,0xca,0x29,0x23,0x46,0x8d,0xf8,0x22,0xaa,0x0,0xce,0x88,0xc0,0xf7,
+  0x3b,0x1c,0x86,0x40,0x2a,0xf5,0x25,0x0,0xa0,0x58,0x2c,0xde,0xf9,0xd6,0xb2,0xb7,
+  0x7e,0xa,0x72,0x72,0xeb,0x45,0x13,0x6c,0xdd,0xb1,0x4e,0x13,0x1,0x7,0x2,0x5b,
+  0x1a,0xb0,0x25,0x5,0xd7,0xef,0x36,0x31,0x25,0x81,0x8d,0xeb,0xb8,0xcd,0x88,0x2f,
+  0x89,0x20,0xb9,0xa1,0x99,0x3,0x42,0x60,0xfd,0xce,0x8f,0x91,0x4,0x82,0x49,0xa0,
+  0x0,0x8e,0xef,0x7b,0x7c,0xec,0x8e,0x99,0xe2,0x52,0x11,0x92,0xc,0x6f,0x49,0x62,
+  0xbc,0x26,0xdc,0x66,0xc4,0x9e,0x44,0xf4,0x69,0xeb,0x58,0x36,0x67,0x4d,0x3a,0x27,
+  0x40,0xe4,0x2d,0x70,0xe9,0xdd,0xf6,0x6f,0xcd,0xee,0x1,0x12,0xce,0xeb,0xba,0x7,
+  0xdf,0xfa,0x9b,0x13,0x7a,0x1a,0xe2,0xc4,0xef,0xab,0xcf,0x34,0xdb,0x2f,0x6,0x12,
+  0x85,0x96,0x42,0xc7,0xf4,0x43,0xa6,0x7f,0x1d,0xdd,0x63,0x76,0x99,0xb0,0xf7,0x9b,
+  0x15,0x98,0x24,0x9,0xe8,0x5a,0x7f,0x9b,0x37,0x6e,0xfe,0xc1,0xc6,0xf5,0x1b,0x5f,
+  0x81,0x46,0x82,0xc7,0xa5,0xc6,0xd6,0x87,0xd6,0x6f,0x1c,0x18,0x6c,0x82,0x1f,0xa8,
+  0x4,0x91,0xf4,0xdd,0x25,0x89,0x80,0xe3,0x9c,0x0,0xcd,0x1,0x84,0x13,0xb9,0x4d,
+  0xa0,0x36,0x0,0xd9,0xd7,0xe2,0x41,0xfc,0x9e,0x6d,0x50,0x2,0xc7,0x7e,0x7c,0xfd,
+  0x5e,0x1b,0xef,0x17,0x0,0x9a,0x39,0x97,0x9a,0x71,0x59,0xfe,0x3d,0x89,0xb3,0x73,
+  0x42,0x49,0x41,0x23,0xe1,0xf0,0xef,0x1c,0x4,0x5c,0x40,0x2,0x6c,0x3d,0x38,0xd6,
+  0xd9,0x52,0x44,0xb3,0x7d,0x1,0x1a,0xc1,0xc2,0x6b,0x72,0x7e,0x3f,0x61,0xe1,0x84,
+  0x9c,0x86,0x38,0xe7,0xcf,0x58,0xbf,0xf1,0x4f,0x5f,0xfd,0x6e,0x9e,0xc9,0xa1,0x47,
+  0x1c,0x7a,0x75,0x36,0x9b,0x1d,0x6e,0x82,0x91,0xde,0xcf,0xdb,0x1d,0xc0,0xf4,0x53,
+  0x1,0x38,0xe1,0xf2,0x37,0x97,0xff,0x9f,0x4a,0xa5,0xd2,0xb,0x71,0x62,0xaf,0xb1,
+  0x4f,0xbd,0x4e,0x83,0x0,0xff,0xde,0x8c,0x98,0x5d,0xbf,0x5,0x3b,0xf9,0xbd,0xde,
+  0xe4,0x98,0x49,0xea,0xa,0x80,0x1b,0x38,0x6c,0xae,0xcd,0x89,0xd9,0x3e,0x6e,0xd2,
+  0x79,0xed,0xf5,0xe0,0xd8,0xdf,0xf5,0x6,0xf6,0x28,0x20,0xec,0x2e,0x59,0xb1,0x99,
+  0x6a,0xd0,0x4c,0xd4,0xd7,0xdf,0x39,0xa1,0xf3,0xdf,0x38,0x61,0xd8,0xc4,0x63,0xeb,
+  0xc9,0x36,0x77,0xed,0xf,0x5c,0x42,0xb6,0x3d,0xc0,0xce,0x3,0x7,0xa8,0x63,0xa4,
+  0x1c,0xdb,0xdb,0xf7,0xc3,0x41,0xaa,0x81,0x8b,0x43,0x9c,0xeb,0xdb,0xdf,0xb5,0x4,
+  0x90,0x61,0xc7,0xe1,0x0,0xe1,0x4f,0x9e,0x3a,0x79,0x4e,0x5b,0x6b,0xdb,0xc,0x9d,
+  0x9e,0xbc,0xdb,0xde,0xaa,0x63,0xe8,0xa4,0x9c,0x4a,0xa9,0xb2,0x6d,0xf9,0xdb,0xcb,
+  0xef,0x2,0x39,0xb1,0xd1,0x8,0x58,0x63,0x4b,0x9d,0x7d,0xe7,0x1c,0xdf,0x96,0x12,
+  0x92,0xb8,0xb7,0x4b,0x6a,0x8,0x13,0xd6,0xdb,0xc7,0x4c,0x5a,0x5c,0xc7,0x1b,0x88,
+  0x54,0x1,0x30,0x30,0xb0,0xd2,0x44,0x5d,0x77,0x9c,0xf,0xac,0x67,0x91,0x4,0x38,
+  0x7b,0xdd,0x4b,0xb0,0x3b,0x24,0x80,0xfe,0x2e,0xb0,0xc1,0x72,0x6d,0xed,0xe7,0x32,
+  0x76,0xd9,0xa0,0x60,0x8b,0xc8,0x2e,0x7d,0x58,0xff,0x9e,0x24,0x45,0xb8,0x8,0x94,
+  0x8b,0xeb,0x9c,0x90,0x93,0x54,0x9,0x6e,0x78,0xb4,0xbd,0x15,0x49,0x62,0xbe,0xad,
+  0xdb,0xdb,0xa0,0xc6,0xaf,0xbd,0x3f,0x20,0xc8,0x38,0x96,0xec,0xa8,0x51,0xa3,0xe,
+  0x1a,0x39,0x7a,0xe4,0xcc,0x5d,0x6e,0x6,0xb2,0x13,0xbb,0x68,0xb7,0x60,0x4f,0x4f,
+  0xcf,0xca,0x75,0x6b,0xd6,0x61,0x88,0x73,0x59,0x2d,0x8,0x2,0x55,0xf5,0x69,0x4b,
+  0x3,0x7a,0x71,0x11,0xb7,0x4d,0xfc,0x2e,0x3b,0x42,0x98,0xf0,0x9d,0x4b,0x16,0xa1,
+  0x75,0x9e,0xa4,0x73,0xb9,0x6c,0x13,0xf6,0xf9,0x1,0xe2,0x1c,0x5b,0xa7,0x6f,0xbb,
+  0x38,0x79,0xa8,0xee,0x93,0x83,0x45,0xdd,0xfa,0x4,0xc7,0xb5,0x82,0xe3,0xfc,0x0,
+  0x8d,0x20,0x30,0x64,0x0,0x60,0x67,0x3d,0x1,0x2e,0xae,0xaf,0x3f,0x9b,0x19,0xfd,
+  0x52,0xec,0x77,0x4d,0x24,0x2e,0xa2,0x71,0x49,0x6,0x2e,0xe2,0x3,0x68,0xe4,0xf4,
+  0x2e,0x83,0x9c,0xbe,0x1e,0x97,0x3a,0x1,0x8e,0xed,0x5c,0x20,0xc1,0x1,0x49,0x5f,
+  0xbf,0xd,0xa,0x69,0x48,0x96,0x66,0x6c,0xf1,0xdf,0x6,0x3,0x4d,0xf4,0x39,0xb1,
+  0xe4,0xd5,0xd2,0x22,0xc4,0xff,0x61,0xa3,0xc6,0x8c,0x3a,0x8,0xb7,0x11,0x1c,0xda,
+  0x4f,0xb8,0xd6,0x26,0x2f,0xca,0xfc,0xdc,0x68,0xc,0xf3,0xe2,0x4,0x2a,0xb6,0xc5,
+  0x75,0x41,0xd7,0xf6,0xae,0xb5,0xbd,0x3d,0xbd,0x58,0xe9,0xb7,0xa4,0x16,0x24,0x7c,
+  0x4,0x82,0x1a,0x34,0x4a,0x3,0x9c,0x10,0x6d,0xe,0x9,0xe0,0x26,0xf2,0x24,0xa2,
+  0xe7,0xc7,0xb1,0x89,0xb9,0x6,0x6e,0x80,0xb0,0x25,0x6,0x17,0xd8,0xd8,0xd7,0x93,
+  0xf4,0x3b,0x27,0x60,0x6e,0xef,0x0,0x68,0xbc,0x47,0x97,0x34,0xd0,0x9f,0x71,0x70,
+  0x50,0x1,0x20,0x89,0xa3,0x37,0x73,0x81,0xec,0xca,0x39,0x5c,0x46,0x37,0x17,0x17,
+  0x76,0xe9,0xcb,0x36,0xf1,0xb8,0xac,0xe4,0x0,0x71,0x2,0x76,0xe9,0xe3,0xdc,0xf0,
+  0xe8,0x83,0x1b,0x80,0x7c,0xeb,0xd3,0xb5,0xde,0x4b,0x38,0x87,0xd,0x30,0xf6,0x35,
+  0xf2,0x75,0x49,0x36,0x2,0x2e,0x19,0x68,0xdd,0x1f,0xff,0xce,0x82,0x4,0x1,0xbd,
+  0x64,0xd9,0x6f,0x5c,0xa5,0xb0,0x25,0x25,0x7b,0xe9,0xcf,0xf5,0x65,0x2f,0x35,0xf6,
+  0xa9,0xb9,0xbd,0x96,0x0,0xaa,0xd0,0x8,0x0,0x1,0xfb,0xee,0x12,0xef,0x1,0xdc,
+  0x44,0x66,0x73,0x64,0x17,0xf7,0x76,0x2d,0xf5,0x84,0xed,0x92,0x8c,0x90,0x0,0x6e,
+  0x8e,0xde,0xc,0x14,0xc0,0xba,0x1e,0x17,0x38,0xd9,0x36,0x1,0x80,0x46,0xa3,0x68,
+  0x33,0x63,0xa4,0xfd,0x2e,0xf6,0xd8,0xd8,0x83,0xda,0x62,0xe2,0x39,0x6c,0xc2,0xe7,
+  0xeb,0x5c,0xe2,0x7b,0x92,0x38,0x9d,0xc4,0x6d,0x6d,0x69,0x2,0xac,0x63,0xdb,0xd7,
+  0xa0,0xb7,0x71,0x49,0xe,0x2e,0xa0,0x2,0x70,0x13,0x93,0x7d,0x7d,0xfc,0xbc,0xcd,
+  0xbc,0x0,0xae,0xef,0xfc,0x19,0xd8,0x20,0x61,0x7b,0x8,0xf4,0xa7,0xad,0x6a,0xb8,
+  0x8c,0x8b,0xae,0x7b,0x74,0xbd,0x23,0xce,0xe1,0x38,0x50,0xf0,0x9,0xae,0x39,0x30,
+  0x12,0xbe,0x6,0x4,0xfd,0xdd,0x16,0xfb,0x6b,0xd0,0x48,0x34,0xb6,0x35,0xdd,0xc5,
+  0x19,0x93,0xc0,0x21,0xc9,0x46,0x30,0x10,0x9b,0x41,0x33,0x23,0x60,0xd2,0xe2,0xf2,
+  0xe1,0xf7,0x27,0x4d,0x0,0xb8,0xd,0x9e,0xb6,0x94,0x3,0xd0,0x8,0x4,0xae,0x77,
+  0xb1,0x47,0xc6,0xae,0x2,0xc0,0x40,0x74,0x7f,0xd7,0x39,0x92,0x3c,0x2,0x49,0xd6,
+  0x7b,0x1b,0xc,0x0,0x1a,0x89,0x21,0x49,0x5f,0x4f,0x12,0x83,0x93,0x8c,0x83,0xfc,
+  0xbe,0xb8,0x94,0xc0,0xf7,0x4d,0xf2,0x10,0x0,0x24,0x5f,0xbf,0x9f,0xf0,0xdd,0xbe,
+  0x46,0x2e,0x79,0x80,0xe3,0x3c,0x2e,0x4e,0xde,0xcc,0xce,0x90,0xe4,0x41,0xb0,0x41,
+  0x80,0xdf,0xd3,0x40,0xdd,0x64,0x36,0xd7,0x4d,0x5a,0x5c,0x5c,0x19,0x20,0xce,0x4d,
+  0xfb,0x3b,0x57,0x12,0x58,0xb8,0x88,0x3c,0x9,0x40,0x92,0x6c,0xe,0x0,0x71,0x82,
+  0xd,0xfb,0xf9,0x6e,0xef,0x6b,0xab,0x3,0x0,0x6e,0x9,0xc0,0xbe,0x87,0x66,0x96,
+  0xff,0x21,0x7,0x0,0x3b,0xab,0xfb,0xef,0xcc,0xf9,0x5c,0x6,0x42,0xbe,0x3e,0x49,
+  0xe7,0xd6,0xd6,0x77,0x9b,0xf8,0xf8,0x31,0xf4,0xf7,0x10,0xdc,0x84,0xa9,0xef,0xa9,
+  0x99,0xae,0xec,0xb2,0xfa,0x27,0x11,0x69,0x92,0xd4,0xe0,0x27,0x7c,0x26,0xed,0x7,
+  0x8e,0x73,0xb8,0xa2,0x23,0x9b,0xa9,0x1f,0xcd,0xbc,0xb,0x1c,0x0,0xf4,0xf1,0x5d,
+  0x13,0xb0,0x99,0xa5,0x9a,0x13,0x1f,0xe,0x6e,0xe1,0xb6,0x8d,0x5d,0x2e,0x17,0x1d,
+  0x58,0xe7,0x48,0xe2,0x84,0xf6,0xdf,0x41,0xc2,0x36,0xc1,0x0,0xd7,0x35,0xd3,0xb7,
+  0xf5,0xb1,0x3d,0xeb,0x18,0x5e,0xc2,0xf6,0x1e,0xc4,0x8d,0x83,0xae,0xf3,0x1,0xdb,
+  0xa6,0xbf,0xfb,0x5,0xc7,0xf7,0x81,0x1a,0xd9,0x5d,0xfb,0xe,0x68,0xec,0xd,0x15,
+  0xa0,0xd9,0xb9,0x6d,0x43,0xa1,0xcb,0xca,0x9e,0xc4,0xb9,0xf9,0x76,0x2e,0xa2,0x4,
+  0x48,0x26,0x28,0xfe,0xc0,0xfc,0x84,0xdf,0xf9,0x64,0xb0,0x41,0xc3,0x3e,0x8f,0xbd,
+  0x6f,0xd2,0x75,0x36,0xbb,0xc6,0xa4,0xe3,0xc,0x74,0x1b,0xfd,0xdd,0x56,0x8f,0x6c,
+  0xb5,0xc0,0x36,0x12,0xba,0x86,0xed,0xa7,0xe6,0x44,0xe1,0xe2,0x6c,0x7a,0x3b,0xd,
+  0x0,0xfa,0x6f,0x9b,0x18,0x21,0xe1,0x6f,0xd7,0xc4,0x4d,0x2,0x22,0xd7,0x3a,0xfb,
+  0xf7,0xc0,0x71,0x4c,0x4e,0xa0,0xf6,0xfd,0xf0,0x7d,0xf5,0x6f,0xfa,0xbe,0x3,0x6b,
+  0xbd,0xbd,0x2d,0xbf,0x77,0xf,0x1a,0x1,0x22,0xb4,0xce,0x6b,0x3,0x85,0x7,0xc9,
+  0xcf,0x80,0x9f,0xf7,0x7d,0x11,0x7a,0xd2,0x18,0x4c,0x0,0xb0,0xaf,0x63,0xa0,0x44,
+  0x9b,0xc4,0x35,0xf9,0xe0,0xf5,0x0,0x92,0xc,0x9d,0xcd,0x88,0xca,0xb5,0xaf,0xd,
+  0xc,0xd0,0x64,0xff,0xfe,0xae,0x39,0x69,0xbf,0x5d,0x79,0x1f,0x5e,0xc2,0x71,0x92,
+  0xec,0x26,0xcd,0x0,0x53,0xdf,0x5f,0x12,0x67,0x6a,0xc6,0x39,0xfb,0x33,0x6c,0x25,
+  0x4d,0xda,0x0,0x92,0x47,0xd8,0xcf,0xa7,0xeb,0xda,0x20,0xe1,0x7b,0xb3,0x7d,0x5d,
+  0xeb,0x39,0x61,0xda,0xcf,0x7,0x9f,0x67,0x1d,0xe2,0x0,0xe0,0x2,0x15,0xbe,0xf,
+  0x9f,0x3f,0xf6,0x76,0xae,0xf7,0xbe,0x47,0x45,0x7f,0x7e,0x93,0x43,0x6d,0x24,0xa5,
+  0x3,0xf7,0x47,0x74,0x2e,0x3d,0xdd,0x7e,0xf0,0xae,0xed,0x9a,0x11,0x34,0x3f,0x47,
+  0x98,0xb0,0xbe,0xd9,0x3e,0xfd,0xad,0xdf,0x53,0xcf,0xbf,0x99,0x1d,0x2,0xa0,0xff,
+  0x94,0x6b,0x9b,0x1b,0x26,0x81,0x2,0xdf,0x9e,0xaf,0xf,0x1c,0xdb,0x36,0xe3,0xf2,
+  0xfd,0xad,0x6b,0xb6,0x4d,0x7f,0x3a,0xf3,0x40,0x75,0xea,0xa4,0xf7,0xcb,0xb9,0x36,
+  0x7f,0x26,0xf6,0x77,0x7e,0x9c,0x66,0x6a,0xd5,0x40,0xef,0x71,0xaf,0x8c,0xa1,0x8,
+  0x0,0x3,0x25,0x7a,0xd7,0xc3,0x6f,0xc6,0xc1,0xed,0x11,0x3a,0xf6,0xeb,0x6f,0xbb,
+  0x9d,0xb9,0xf6,0x81,0xac,0xdf,0x93,0xa3,0x99,0x41,0xb1,0x3f,0xe0,0x6a,0x46,0x24,
+  0x61,0x93,0x6d,0x76,0x95,0xf8,0x76,0x66,0xec,0xca,0x31,0xfa,0x3,0xa2,0x66,0xcf,
+  0x22,0xe9,0xf9,0x24,0x1,0x67,0x7f,0x0,0xb0,0x33,0x6,0xf4,0x3d,0x3e,0x86,0x2a,
+  0x0,0xf4,0xc7,0x95,0x7,0x3a,0x91,0xf5,0xd8,0x19,0x4e,0xb3,0xb3,0xfa,0xd6,0xce,
+  0x4a,0x1,0x7b,0xf3,0xe5,0x27,0x4d,0xe0,0x66,0x86,0x5d,0x7b,0x82,0x26,0xdd,0x5f,
+  0x33,0xa2,0x1a,0x28,0x40,0xec,0xca,0xf5,0xef,0x2c,0xa8,0xc,0xd4,0x88,0xed,0xf5,
+  0xf3,0xf7,0x40,0x24,0xc5,0xa0,0x9f,0xdf,0x87,0xc,0xe1,0x27,0xdd,0xe4,0x50,0x1c,
+  0x3b,0x73,0x8d,0xcd,0x90,0x79,0xa0,0xc7,0xd9,0xd9,0x97,0xe4,0xef,0xe4,0xf6,0x7b,
+  0x7b,0x78,0x3,0x5c,0xe7,0x7a,0xe,0xfd,0x11,0x7f,0x7f,0x84,0xbe,0x47,0xc,0x57,
+  0xd6,0xe8,0x8f,0xe8,0x76,0x75,0xec,0xca,0x73,0xdb,0x1d,0xa0,0xb7,0x57,0xc7,0x1f,
+  0x13,0x0,0xc,0xd4,0x3d,0xd2,0xcc,0x6a,0x9a,0xc4,0xd,0x86,0x94,0x58,0xf6,0x47,
+  0x34,0x6,0x22,0x1d,0xfc,0xb1,0x8e,0xdd,0x41,0x1b,0x43,0xfe,0x39,0xfc,0x31,0x0,
+  0xc0,0xfe,0xb1,0x7f,0xec,0x1f,0x7b,0x68,0xec,0x7,0x80,0xfd,0x63,0xff,0xd8,0x87,
+  0xc7,0x7e,0x0,0xd8,0x3f,0xf6,0x8f,0x7d,0x78,0xec,0x7,0x80,0xfd,0x63,0xff,0xd8,
+  0x87,0xc7,0x7e,0x0,0xd8,0x3f,0xf6,0x8f,0x7d,0x78,0xec,0x7,0x80,0xfd,0x63,0xff,
+  0xd8,0x87,0xc7,0x7e,0x0,0xd8,0x3f,0xf6,0x8f,0x7d,0x78,0xec,0x7,0x80,0xfd,0x63,
+  0xff,0xd8,0x87,0xc7,0x7e,0x0,0xd8,0x3f,0xf6,0x8f,0x7d,0x78,0xec,0x7,0x80,0xfd,
+  0x63,0xff,0xd8,0x87,0xc7,0xff,0xf,0x64,0x32,0xe7,0xca,0x48,0x6e,0x77,0x6a,0x0,
+  0x0,0x0,0x0,0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82,
+    // /Users/zhenkai/Develop/mumble-1.2.3/src/actd/images/audio.png
+  0x0,0x0,0x21,0x9c,
+  0x89,
+  0x50,0x4e,0x47,0xd,0xa,0x1a,0xa,0x0,0x0,0x0,0xd,0x49,0x48,0x44,0x52,0x0,
+  0x0,0x0,0x80,0x0,0x0,0x0,0x80,0x8,0x6,0x0,0x0,0x0,0xc3,0x3e,0x61,0xcb,
+  0x0,0x0,0x0,0x7,0x74,0x49,0x4d,0x45,0x7,0xd7,0x2,0x12,0x16,0x5,0x1e,0xdc,
+  0xec,0x5c,0xa7,0x0,0x0,0x0,0x6,0x62,0x4b,0x47,0x44,0x0,0xff,0x0,0xff,0x0,
+  0xff,0xa0,0xbd,0xa7,0x93,0x0,0x0,0x21,0x3e,0x49,0x44,0x41,0x54,0x78,0xda,0xed,
+  0x7d,0x79,0x90,0x24,0x57,0x9d,0xde,0xf7,0x7b,0x2f,0x33,0xeb,0xee,0xee,0xe9,0x9e,
+  0x99,0x9e,0x43,0x33,0xba,0x46,0x12,0x2,0x24,0x84,0xb4,0x8,0x4,0x4,0xb6,0xb4,
+  0xd8,0xc6,0x60,0x1b,0x3b,0x8c,0x14,0xbb,0xb1,0xc2,0x8b,0x59,0x2f,0x18,0x13,0x7b,
+  0x60,0x16,0xf6,0xf,0x47,0xd8,0x63,0x1c,0xe1,0xdd,0x25,0x8,0xad,0x8d,0x58,0x8,
+  0x1b,0x22,0x16,0xc,0x18,0x71,0x39,0x10,0xe2,0x54,0xec,0x22,0x8c,0x2c,0x21,0x90,
+  0x90,0xb8,0x84,0xee,0x19,0x69,0xba,0x7b,0x7a,0x8e,0xee,0x99,0x3e,0xab,0x2a,0x8f,
+  0xf7,0x7e,0xfe,0x23,0x5f,0x66,0xbe,0xca,0xce,0x3a,0xba,0xa7,0xc5,0x4e,0xf7,0xd4,
+  0xeb,0xc8,0xc8,0xac,0xac,0xac,0xea,0xca,0xf7,0x7d,0xbf,0xe3,0xfb,0xbd,0x97,0x99,
+  0xc0,0xb0,0xd,0xdb,0xb0,0xd,0xdb,0xb0,0xd,0xdb,0xb0,0xd,0xdb,0xb0,0x5d,0x70,
+  0x8d,0x86,0x5d,0x70,0x7e,0xb7,0x3f,0x78,0x68,0x7c,0xc4,0x13,0x7b,0xaf,0xda,0xed,
+  0xee,0x7d,0x9d,0x0,0xae,0x85,0x10,0x97,0xb1,0xa2,0xc9,0x46,0x79,0x67,0x65,0xb2,
+  0x7e,0xf0,0x58,0x24,0xfd,0x8f,0xdc,0xb6,0xff,0x8e,0xaf,0xf,0x9,0xb0,0x5,0xdb,
+  0xad,0x5f,0x82,0x9c,0xdc,0xb7,0x73,0x72,0xcc,0x3d,0x78,0x7d,0xcd,0xab,0xbf,0x46,
+  0x70,0xe9,0x6a,0x92,0x74,0x50,0x47,0x7a,0xb7,0xe6,0x68,0x34,0x50,0x7e,0x85,0x40,
+  0x8e,0x24,0x47,0x0,0x4,0x10,0xc5,0x80,0x31,0x40,0x4,0x10,0x4,0xf6,0x34,0xae,
+  0x40,0xa3,0x5e,0xbb,0xe3,0x6d,0x17,0xdd,0xf1,0xfe,0x21,0x1,0xce,0xb3,0xf6,0xbe,
+  0x7,0x2f,0xaa,0x34,0xa3,0xe8,0xd2,0x7d,0xb5,0x4b,0x5e,0xe7,0x89,0xca,0x75,0x2,
+  0xce,0x15,0xc4,0xd8,0xaf,0xa1,0x27,0x94,0x8e,0xea,0x4a,0xab,0x92,0x20,0x21,0x5,
+  0x1c,0x2,0x8,0x94,0x20,0xcb,0x0,0x51,0xc,0xd,0x11,0x81,0x11,0xbf,0xb,0x10,
+  0x88,0xd8,0x0,0x27,0xa1,0x59,0x83,0x8,0xd8,0x37,0x72,0x95,0x86,0xb7,0xf4,0x9a,
+  0xdb,0xf,0x7e,0xfa,0xe1,0xf5,0xfe,0x46,0x67,0x8,0xd3,0x6,0x1b,0x83,0xde,0xf5,
+  0xfd,0xc6,0x44,0xb5,0x3a,0x72,0xed,0xb8,0x3c,0x78,0xa3,0xeb,0x94,0x5f,0x2e,0xd8,
+  0xb9,0x14,0x8c,0xbd,0x9a,0xa3,0x31,0xa5,0x54,0x95,0x89,0xdd,0x49,0xb7,0x24,0xc0,
+  0x4,0xa8,0x18,0x50,0x26,0x82,0x80,0x80,0x20,0x17,0x9e,0xa4,0xd4,0xc,0x99,0x19,
+  0x42,0x8,0x10,0x24,0xca,0x4e,0x1d,0x15,0xb7,0xe,0x4f,0x94,0x51,0x72,0xeb,0xf0,
+  0x44,0x5,0x9e,0x5b,0x46,0x49,0x56,0xe1,0xa,0xf,0x20,0xc0,0x8f,0x9a,0x78,0x7a,
+  0xfe,0xc7,0x68,0x87,0x4b,0x38,0xb5,0xf2,0xbc,0xd8,0x3d,0xb6,0xef,0x83,0x0,0x6e,
+  0x1d,0x12,0x60,0xb3,0xdc,0xf3,0xe3,0xf0,0x76,0xcf,0xee,0xbc,0xa4,0x51,0x1b,0x7d,
+  0x65,0xbd,0xbc,0xfb,0x37,0x1c,0xaa,0x5e,0x25,0x59,0x1e,0xd4,0xac,0x77,0x29,0xad,
+  0x46,0xf8,0x11,0x5d,0xa2,0xba,0x70,0xa4,0xf0,0x88,0x40,0x20,0x95,0x58,0x28,0x20,
+  0xc9,0x83,0xeb,0x24,0x36,0xcd,0x20,0x12,0xa9,0x5,0x97,0x9c,0xa,0x4a,0xb2,0x81,
+  0x8a,0x5b,0x43,0x59,0xd4,0x63,0x80,0x9d,0xa,0x4a,0x32,0x5e,0x84,0x70,0xc0,0xac,
+  0xa1,0x10,0x41,0xb3,0x2,0x23,0x82,0x66,0xd,0x86,0x6,0xb3,0x46,0xc8,0x6d,0x30,
+  0x33,0x98,0x18,0x7,0xc6,0x5e,0x82,0xe7,0xce,0xfc,0x4,0xcc,0x8c,0xd5,0xf6,0xd2,
+  0xa1,0x8d,0x9c,0xe7,0x5,0x4b,0x80,0x77,0xdc,0x37,0x36,0x56,0x2d,0x79,0x2f,0x1d,
+  0x2f,0xed,0x7a,0x65,0x99,0x46,0xaf,0x73,0xa8,0x72,0x88,0x88,0xf6,0x91,0xc6,0x78,
+  0xa4,0x54,0x5d,0x37,0x95,0xe7,0x8c,0x95,0x85,0x23,0x3c,0x10,0xc7,0x6e,0x19,0x20,
+  0x48,0x22,0xb8,0x32,0x8b,0x9d,0x4,0x2,0x48,0x40,0x90,0x80,0x30,0xd6,0x5b,0x75,
+  0x47,0x51,0x72,0xea,0xa8,0xb8,0xa3,0xa8,0xc8,0x1a,0x4a,0x4e,0x1d,0x65,0xa7,0x6,
+  0x4f,0x54,0x62,0x6b,0x87,0x86,0xe6,0x8,0x1a,0x2a,0x6,0x9b,0x43,0x68,0x28,0x68,
+  0x56,0x8,0x75,0xb,0x1a,0x1a,0x9a,0x43,0x68,0x56,0x50,0x1c,0xc5,0xe0,0x1b,0x2,
+  0x24,0xdb,0x9a,0x19,0x24,0x0,0x57,0xba,0x50,0x3a,0x42,0xc0,0x2d,0x1a,0x12,0xc0,
+  0xb4,0xc3,0xf7,0xc1,0x59,0xf6,0xf6,0xee,0x8f,0xa8,0x7d,0x4d,0xc3,0x3d,0x70,0x43,
+  0xc5,0xd9,0xf1,0x72,0x7,0xce,0x25,0xc4,0x34,0xa9,0x18,0xa3,0x5a,0xa9,0x8a,0x94,
+  0xd2,0x71,0xa8,0x4c,0x92,0x1c,0x63,0xb9,0x99,0x3b,0x2e,0xb9,0x48,0xf7,0xc5,0x7f,
+  0x12,0x44,0x84,0x92,0xac,0xa0,0xec,0x34,0x50,0x75,0x77,0xa0,0xe6,0x8c,0xa2,0x2c,
+  0x47,0x50,0xf5,0x46,0x51,0x92,0x55,0x94,0x9c,0x1a,0x3c,0x51,0x86,0x4e,0x1,0x52,
+  0x60,0x3,0xaa,0x86,0x6,0xb3,0x4a,0x41,0x8d,0xf7,0x99,0xb5,0x21,0x42,0xb2,0xad,
+  0x38,0x82,0x36,0xd6,0xaf,0xd3,0xed,0x8c,0x0,0x1a,0xa,0xc,0x8e,0xbd,0x0,0x34,
+  0x20,0x92,0x9c,0x41,0x47,0x17,0xc,0x1,0xde,0xfe,0xdd,0xc9,0xda,0x68,0x4d,0x5d,
+  0x2d,0xc8,0xb9,0x66,0x47,0x69,0xef,0x75,0x2e,0xd5,0xaf,0x72,0x84,0x7b,0x80,0x20,
+  0x27,0x58,0xa3,0xa1,0xb5,0x2a,0x4d,0xca,0xb2,0x74,0xa9,0x4,0x41,0xd2,0xb8,0x5f,
+  0x80,0x92,0xce,0x72,0x8c,0xbb,0x86,0x0,0x91,0x80,0x0,0x41,0x90,0x40,0xc9,0xa9,
+  0xa3,0xea,0x8d,0xa1,0x2a,0xc7,0x50,0x75,0xc6,0x50,0x73,0x47,0x51,0x72,0x1a,0xa8,
+  0xb8,0x75,0x94,0x65,0x1d,0x52,0xb8,0x0,0x33,0x18,0xb0,0x2c,0x31,0x1,0x5a,0x23,
+  0xe2,0x30,0xde,0x36,0x80,0xb2,0x1,0xbf,0x3,0x64,0x3,0xa8,0xe6,0x28,0x5,0x5c,
+  0x21,0x8c,0xbd,0x0,0x47,0x88,0x38,0xc8,0x80,0x4e,0x89,0xa2,0xe3,0xff,0xc8,0xca,
+  0xfc,0x5f,0x36,0xde,0x80,0x41,0xa4,0x41,0xc4,0x88,0x78,0x1b,0x13,0xe0,0x4f,0x7e,
+  0x36,0x59,0xbb,0xac,0xf2,0xfa,0xbf,0xd2,0x1,0xfd,0xe3,0x25,0xff,0xcc,0xa8,0x84,
+  0xf4,0x5c,0x51,0x25,0x57,0x94,0xb3,0xec,0x38,0x4e,0x99,0x41,0x32,0x7e,0x2d,0x48,
+  0x0,0x4c,0x10,0x22,0x7e,0xed,0x8a,0x12,0xaa,0xce,0x18,0x2a,0xce,0x28,0x6a,0xee,
+  0x98,0xb1,0xe4,0x11,0x94,0x9d,0x6,0xca,0xb2,0x8e,0x92,0xac,0x82,0x48,0x20,0x81,
+  0x97,0xd9,0xac,0xcd,0x1f,0xc0,0x50,0x3a,0xcc,0xde,0x7,0x67,0x16,0x6e,0x80,0x89,
+  0xc1,0x32,0x0,0x43,0x41,0x71,0x80,0x48,0x7,0x88,0xd8,0x8f,0xb7,0x39,0x80,0xe2,
+  0x18,0xec,0x88,0x3,0x8b,0x24,0xaa,0x3,0x54,0x36,0x1e,0x83,0x53,0xd0,0x39,0x47,
+  0x80,0x24,0x1c,0x20,0xfe,0x9f,0xa4,0xc1,0x42,0x5,0xdb,0x92,0x0,0xef,0x7b,0xf0,
+  0xa2,0xca,0xd,0x8d,0x5b,0x5f,0x58,0x5c,0x3d,0x3b,0x21,0x58,0x63,0xc2,0xab,0x19,
+  0xcb,0x45,0xea,0x9a,0x9,0x2,0x25,0x59,0x47,0xcd,0x1b,0x43,0x45,0x8e,0xa2,0xe2,
+  0x8e,0xa0,0xea,0x34,0x50,0x96,0x23,0x28,0xbb,0xd,0x54,0x64,0xd,0x8e,0x2c,0xc7,
+  0x2e,0x93,0x61,0x3a,0x54,0xa7,0x96,0xc,0x8e,0xe1,0x3,0x47,0x1d,0xfb,0x62,0xc1,
+  0xa5,0x33,0x12,0x70,0x46,0x86,0x88,0x43,0x44,0xdc,0x46,0xa8,0x7d,0x6b,0x6d,0x16,
+  0x3,0x7a,0x4c,0x90,0x98,0x28,0x31,0xc0,0x2a,0x5,0xb8,0x97,0x55,0xb3,0xc9,0xd,
+  0xe2,0x23,0x55,0xea,0xee,0x8b,0xde,0x67,0x28,0x30,0x29,0x30,0x47,0xe1,0xb6,0x24,
+  0xc0,0x4d,0x7,0x6e,0xfd,0x5c,0x6b,0xc5,0x9f,0xf0,0x44,0x9,0xae,0xac,0xe0,0x40,
+  0xe3,0x65,0xa8,0x38,0x23,0x28,0xcb,0x6,0x2a,0x4e,0x1d,0x25,0x67,0x4,0x65,0xa7,
+  0x6,0x1,0xd1,0x69,0x9d,0x39,0xb,0x56,0x1c,0x14,0x5a,0x35,0x5b,0xa0,0xa6,0x96,
+  0xce,0xa1,0x1,0x33,0x44,0xa4,0xdb,0x88,0x8c,0xf5,0x26,0xdb,0x21,0xfb,0xd0,0x1c,
+  0x5a,0xa0,0xe9,0xe,0x50,0x3b,0x63,0x75,0x77,0xab,0xce,0x27,0x76,0xf6,0xb1,0xba,
+  0x63,0x3f,0xaf,0x49,0x4,0x35,0x2b,0x0,0x40,0x88,0x0,0x80,0x86,0x46,0xb8,0x3d,
+  0x9,0x50,0xe6,0x89,0xb7,0x4,0x62,0x1e,0x8e,0x20,0xdc,0x30,0xf9,0xcf,0x31,0x51,
+  0xbe,0x68,0x8d,0x5,0x33,0x6b,0x44,0x88,0x80,0xcc,0x59,0x76,0x58,0x6b,0x76,0x1c,
+  0x1b,0x17,0x9c,0xb8,0x63,0x3,0xac,0x65,0xb5,0x11,0xfb,0x99,0x55,0xe6,0x3a,0x5e,
+  0x43,0x19,0xab,0x5d,0x6b,0xd5,0x9,0x60,0x6b,0x5d,0x35,0x77,0x58,0xad,0xce,0x83,
+  0x3a,0x10,0x1,0x74,0x4a,0x1c,0x80,0x3b,0xbe,0x5b,0x23,0x30,0xdf,0x1e,0x6d,0xbf,
+  0x10,0xc0,0xcc,0x63,0xf7,0x1e,0xfb,0x68,0x69,0xd4,0x15,0x68,0x94,0x76,0x61,0xac,
+  0x34,0x19,0x5b,0x72,0xce,0x82,0x93,0x4e,0x89,0x2d,0x37,0x6,0x38,0x3,0x37,0xb1,
+  0xde,0x38,0xe,0xaf,0xed,0xd8,0x4c,0x56,0x9d,0x93,0xab,0xde,0x44,0xab,0xee,0x70,
+  0xfb,0x66,0x5b,0x9b,0xe3,0x60,0xc2,0x2,0xc,0xe9,0x34,0x34,0x40,0xc,0xad,0xb7,
+  0x67,0x8,0xb8,0x8,0x60,0x78,0x4e,0xd,0x15,0x77,0x4,0x67,0xc3,0x69,0x34,0x9c,
+  0x5d,0x58,0x55,0x67,0x52,0x37,0xad,0x74,0x6,0xf2,0xda,0xce,0xe7,0x9c,0x2b,0xce,
+  0xf6,0xd9,0xae,0x1a,0x96,0x5,0x6f,0xb6,0x55,0xa7,0x61,0xc1,0x26,0x40,0x4a,0x96,
+  0xcc,0xaa,0xb3,0xdf,0x64,0xc7,0x7d,0x65,0xfd,0xe6,0x4e,0xb2,0xc0,0x26,0x1d,0x6b,
+  0x30,0x29,0xb5,0x2d,0x43,0x80,0x27,0xab,0x20,0x22,0x8,0xe1,0x60,0x29,0x3a,0x81,
+  0xc5,0xf0,0x78,0x6a,0xd,0x99,0x85,0x60,0x60,0x57,0x3d,0xa8,0x55,0xeb,0x9c,0xf5,
+  0xae,0xc7,0xaa,0x6d,0x57,0xbd,0x11,0xab,0x2e,0x22,0x51,0xfe,0x77,0xc4,0x6a,0xc3,
+  0x92,0x9c,0xc4,0xd1,0xb6,0x25,0x0,0x8,0x10,0x10,0x68,0xeb,0xd5,0x8d,0x59,0xb5,
+  0x65,0xdd,0xdd,0x42,0xc0,0xda,0x78,0xbf,0x79,0x56,0xad,0xd9,0xfe,0x2e,0x65,0xfd,
+  0x8f,0xdc,0x77,0x27,0xe0,0x9a,0x4a,0xa0,0x4a,0x40,0xd6,0xa,0x4a,0x1b,0x15,0x92,
+  0x7a,0x0,0x6b,0x38,0x4f,0x68,0x30,0x31,0x6f,0x4f,0x2,0x38,0x15,0x53,0x6e,0xd5,
+  0x8,0x54,0xf3,0xdc,0x5d,0xf5,0x39,0x5a,0x75,0x52,0xbe,0xed,0xb4,0xea,0x9c,0xab,
+  0xb6,0x3e,0x9f,0x27,0x62,0x5c,0x1f,0xc8,0xa,0x3f,0x2a,0x2d,0x12,0x45,0x1d,0xbf,
+  0x23,0x6d,0x5a,0x80,0x43,0x27,0x37,0x80,0x2b,0x73,0xbd,0x24,0x41,0x6e,0x50,0xdd,
+  0xa6,0x1e,0xa0,0x2,0xb0,0x86,0x22,0x1f,0x81,0x6e,0x6e,0xaa,0x55,0x77,0xba,0x6a,
+  0x6d,0x1,0x9c,0x93,0x6d,0x3d,0x5d,0x75,0x46,0x0,0xcd,0xda,0x2a,0xf2,0x84,0x6,
+  0x68,0xbb,0xb4,0xab,0x3a,0xad,0x77,0x90,0x44,0x38,0x92,0x83,0x1d,0xa7,0xe5,0x95,
+  0xdb,0x92,0x0,0xae,0xf4,0x40,0x44,0x68,0x46,0x3e,0x7c,0x13,0x2,0xd6,0x80,0xda,
+  0xc5,0xaa,0xbb,0xbb,0x6a,0x6c,0xc8,0xaa,0x6d,0xf9,0x98,0x28,0xe,0x9d,0x3,0x79,
+  0xf3,0xa5,0xd0,0x60,0x63,0x3c,0xc4,0x62,0x6c,0x7b,0x12,0x40,0x94,0x63,0xaf,0x47,
+  0x8c,0x40,0x37,0x3b,0x8,0xd0,0x29,0xbd,0x36,0x66,0xd5,0xf6,0x77,0x85,0xba,0x95,
+  0x2a,0x8a,0xc,0xe4,0x20,0xad,0xdb,0x77,0xb8,0xe6,0xf3,0xac,0x11,0x51,0x7d,0x5b,
+  0x12,0x20,0x29,0xea,0x28,0xe,0xd2,0x10,0xd0,0xdd,0xaa,0x55,0xe,0xf4,0x24,0x44,
+  0x44,0x8,0xd9,0x47,0x64,0x0,0xe,0x93,0xda,0xbc,0xce,0x6a,0xf3,0xeb,0x75,0xcd,
+  0xe7,0x61,0x93,0xdb,0x92,0x0,0x8a,0xc3,0xb8,0xf6,0xae,0x83,0x34,0x4,0xd8,0x56,
+  0xad,0x11,0x21,0xd4,0x6d,0x44,0xec,0x23,0xd0,0x2d,0x28,0xf6,0x4d,0x5d,0x3e,0x19,
+  0x84,0x89,0x93,0xad,0xad,0xda,0x1a,0xee,0x4e,0x34,0xdc,0xdd,0x38,0xd1,0x7a,0xaa,
+  0x67,0x88,0x21,0x12,0xdb,0x53,0x6,0xc6,0xa5,0xd9,0x8,0xab,0xea,0xc,0x4e,0xf9,
+  0xcf,0x9a,0x7a,0xbc,0x9f,0xe,0xbe,0xc4,0x4,0xd9,0x9e,0xad,0xe2,0xec,0x68,0xdd,
+  0x32,0xfe,0xde,0x8a,0x24,0x17,0x53,0xcd,0x9f,0xe1,0xe1,0xb9,0x2f,0x77,0x37,0x7f,
+  0xe1,0x9c,0xdd,0x96,0x4,0x58,0xc,0x67,0xd3,0xf5,0x9c,0x7f,0x64,0xbb,0x60,0xcb,
+  0x0,0x4e,0x32,0x70,0x9c,0x88,0x67,0xa0,0x69,0x86,0x9,0xc7,0x1,0x9e,0x22,0x4d,
+  0xb3,0x1a,0x62,0x9a,0xb9,0x3d,0xf3,0x5f,0xae,0x79,0xf2,0xf2,0x7,0x4e,0x7d,0xe6,
+  0x11,0x0,0x98,0x28,0x5d,0xfc,0xa2,0xfc,0x90,0xe1,0x9c,0xc0,0xcd,0x6f,0x2d,0x0,
+  0x33,0xc,0xcc,0x12,0x70,0x8c,0x18,0xb3,0xc,0x9a,0x66,0xd2,0xc7,0x41,0x34,0xe3,
+  0xa,0x67,0xba,0x82,0x1d,0x27,0xe,0xbf,0xec,0xf1,0xbe,0x83,0x37,0x7f,0xc9,0xf6,
+  0xac,0x6d,0x1a,0x12,0xe0,0x3c,0x68,0x27,0x1,0x9c,0x0,0xf3,0x14,0x88,0x8e,0xa7,
+  0x56,0xcb,0x98,0x25,0x16,0x53,0xae,0xe7,0xcc,0xfe,0xd9,0xd5,0x33,0xf3,0xfd,0xbf,
+  0xe6,0xf8,0x79,0x73,0x42,0x43,0x2,0xc4,0xad,0xd,0xe0,0x38,0x8,0xc7,0xc1,0x98,
+  0x2,0x70,0x82,0x98,0x8e,0x69,0x81,0x59,0x49,0x3c,0x1d,0x86,0x62,0x46,0xd5,0xeb,
+  0xb3,0x77,0x5e,0xf1,0xac,0xbf,0xdd,0x4e,0x7c,0xfb,0x13,0x80,0x30,0x7,0xc6,0x2c,
+  0x40,0xc7,0x40,0x7a,0x96,0x34,0xcd,0x30,0x68,0x9a,0x84,0x9a,0x5,0xc4,0x94,0x1f,
+  0x8a,0xd9,0x3b,0xaf,0x3f,0x71,0xfa,0x42,0x65,0xfe,0x96,0x26,0x80,0x14,0xe,0x4,
+  0x49,0x48,0xe1,0x80,0x89,0x9f,0x6c,0x7,0xcd,0x4f,0x12,0xd3,0xac,0x80,0x9e,0x8e,
+  0x48,0xcc,0x8c,0x36,0x2a,0xc7,0xf,0x5f,0xfa,0x7c,0x7b,0xe8,0xe0,0xb6,0x30,0x1,
+  0x1c,0xe9,0x82,0x20,0x50,0xf6,0x6a,0x18,0xab,0xef,0x86,0x24,0x1,0x21,0x24,0x4,
+  0xe5,0xeb,0x1e,0xf4,0xe8,0x7,0x5f,0xf2,0xf0,0x1d,0x43,0x48,0xb7,0x19,0x1,0x3c,
+  0xa7,0x1c,0xaf,0xb9,0x84,0x92,0x53,0x8e,0xb,0x3c,0x8,0x90,0x14,0xee,0x88,0x4,
+  0x1c,0x72,0x41,0x1b,0x2b,0x84,0xd,0x9,0xb0,0x95,0x7e,0xac,0xaf,0x57,0xa0,0x10,
+  0xae,0x51,0xd4,0x21,0x13,0xca,0xd4,0xa8,0xd,0xe1,0x5c,0x7f,0x13,0x5b,0xa7,0x72,
+  0xa2,0xd6,0x82,0x6f,0xbd,0x1b,0xb2,0x7f,0xe5,0x10,0xce,0xed,0x4c,0x80,0x3e,0x13,
+  0x5e,0x98,0x74,0x65,0x8,0xe7,0xb6,0xf6,0x0,0xc3,0x76,0x41,0x13,0x60,0xd8,0x86,
+  0x4,0x18,0xb6,0x21,0x1,0x86,0x6d,0x48,0x80,0x61,0x1b,0x12,0x60,0xd8,0x86,0x4,
+  0x18,0xb6,0x21,0x1,0x86,0x6d,0x48,0x80,0x61,0x1b,0x12,0x60,0xd8,0x86,0x4,0x18,
+  0xb6,0x21,0x1,0x86,0x6d,0x48,0x80,0x61,0x1b,0x12,0x60,0xd8,0xd6,0xdf,0x86,0xb3,
+  0x82,0xcf,0xf3,0x96,0x5e,0x90,0xca,0xdc,0x73,0x48,0x7c,0xa3,0x17,0xae,0xe,0x3d,
+  0xc0,0x30,0x4,0xc,0xdb,0xf6,0x70,0x15,0x1b,0xf3,0x0,0xc3,0x10,0xb0,0xc5,0x2,
+  0xc2,0x30,0x7,0xb8,0x40,0x31,0xe7,0x3e,0x46,0xbe,0x41,0x7,0x30,0xc,0x1,0x17,
+  0x78,0x4,0x18,0x12,0xe0,0x42,0xf,0xf,0xc3,0x10,0xb0,0x65,0x80,0xe5,0x3e,0x20,
+  0x6f,0x53,0x2,0x30,0xf,0xe7,0x3,0x27,0xf8,0xf6,0xea,0xa,0xbd,0xfd,0x43,0x0,
+  0xbf,0x38,0x41,0xf0,0x2,0x17,0x8,0x5b,0x26,0x4,0x9c,0x87,0xf8,0xbe,0xe8,0xcf,
+  0x5c,0xc,0xc3,0x90,0x36,0xf9,0x37,0xf1,0x16,0xe,0x1,0x9b,0x5a,0xa,0x3d,0x5f,
+  0x1f,0x98,0xd9,0xf1,0xbb,0xa2,0x28,0xa2,0x81,0xcd,0x9c,0x35,0xe5,0x3e,0xcf,0x7d,
+  0xbe,0x9f,0xb7,0x56,0x12,0xd8,0x27,0x7,0xe2,0x73,0x7,0x9c,0xce,0x37,0x2,0xbc,
+  0x48,0x9f,0x67,0xeb,0x58,0xde,0x32,0x1e,0x20,0xbe,0x59,0x36,0xf7,0x38,0x73,0xee,
+  0xd7,0x21,0xf4,0x6b,0x6,0xff,0x9c,0xbf,0x33,0xc,0x43,0xea,0xd0,0x0,0xbd,0x92,
+  0xc0,0xde,0xe7,0x6b,0x7f,0xd,0xd9,0xf6,0xb2,0x85,0x64,0x20,0xf7,0xae,0x84,0x75,
+  0xde,0xe9,0xb3,0xa8,0x23,0x68,0x3,0xe0,0xd0,0xdf,0x25,0x29,0xda,0xed,0xf6,0xe0,
+  0x49,0x7a,0x2c,0x3,0x44,0x2f,0x6b,0x2f,0x78,0x8f,0xce,0x7f,0x2,0xf0,0x80,0xc3,
+  0xa1,0xd4,0x15,0x70,0xb2,0x16,0x9c,0x3,0x19,0x7e,0xed,0x21,0x23,0x8a,0x22,0xeb,
+  0xbe,0x17,0x3,0xd5,0x1,0x44,0xf,0x97,0xaf,0xf3,0xe0,0x6f,0x8d,0x10,0x60,0xf1,
+  0xa0,0xa7,0x7,0xd0,0x5d,0x41,0xa7,0x2,0x12,0xd0,0xf9,0x2,0x72,0x5f,0xf,0x50,
+  0x1b,0xb8,0x9f,0xa8,0x7,0x1,0xd8,0xbc,0xa7,0xf3,0x61,0x60,0x6b,0x55,0x2,0x7,
+  0x1b,0xd,0xc9,0x3,0x2e,0xba,0x90,0xe0,0x5c,0x81,0xa6,0xd,0xa8,0x72,0x5a,0x8f,
+  0x6a,0xf7,0x7d,0x5f,0xa0,0x9a,0x7d,0xa2,0xa7,0x14,0x8e,0xd,0x40,0x16,0xec,0x4d,
+  0xc0,0xd6,0x39,0x12,0x6c,0x2d,0x19,0xd8,0xcf,0x3,0xe8,0xb5,0xe0,0xb,0xb,0x7c,
+  0x61,0x59,0x47,0x37,0x2,0x70,0x41,0xac,0x5c,0x17,0x60,0xeb,0x20,0xd4,0x7a,0xb2,
+  0xf5,0x41,0x33,0xa4,0xa2,0x10,0x60,0x83,0x4f,0x5b,0xb2,0xe,0xd0,0x99,0x4,0xf6,
+  0x37,0x81,0x1c,0xe0,0x22,0x47,0x84,0x5e,0x21,0x80,0xfb,0x10,0x64,0x23,0x91,0xb,
+  0xe7,0xf0,0x39,0x8a,0xeb,0x0,0x3c,0x60,0x1d,0x80,0x6d,0xf,0x60,0x67,0xfd,0xba,
+  0x4b,0x28,0xe4,0xad,0xe5,0x1,0xe2,0x67,0xbe,0xf6,0xea,0xba,0x22,0xeb,0x97,0x3d,
+  0x8,0xc0,0xdd,0xd2,0x8d,0x4d,0x0,0x9b,0xd6,0x49,0x8,0xde,0x4,0xfb,0xc8,0xe7,
+  0x0,0x79,0xf0,0xb,0xff,0xdf,0x16,0x2a,0x5,0xf7,0xf1,0x0,0x9c,0xba,0x40,0x69,
+  0xad,0xf3,0x4,0x28,0x72,0x8f,0x76,0x56,0xbc,0x5e,0x50,0x78,0x93,0xf6,0x17,0xbe,
+  0xef,0x38,0xce,0xc0,0xc4,0x30,0xfe,0x4f,0xf4,0xd0,0xfe,0x85,0xe1,0x6c,0xb,0x10,
+  0x80,0xd7,0x78,0x83,0x3e,0x4,0xb0,0xc1,0x97,0x5,0xf1,0x9f,0xbb,0x58,0x7c,0x5e,
+  0x67,0xf1,0x8b,0xc,0x7c,0xdf,0xff,0x25,0xa5,0xec,0x38,0x63,0xee,0xff,0x8b,0xe4,
+  0x0,0xd6,0xbf,0xb5,0x72,0x0,0xb6,0x54,0x2c,0xf7,0x2f,0x5,0xe7,0xc1,0xcf,0x13,
+  0xc0,0xee,0x9c,0xfc,0xeb,0x6e,0x21,0x60,0x33,0x41,0xe5,0xf5,0x78,0x85,0x72,0xb9,
+  0xac,0xd7,0xaa,0xb9,0xbe,0x6,0x60,0x1f,0xdc,0x6b,0x6c,0x80,0xb7,0x44,0x1d,0x20,
+  0xf9,0xdd,0x8c,0x81,0xa,0x1,0x79,0xf,0xe0,0x74,0x71,0x7f,0x64,0x75,0x92,0xce,
+  0x91,0x82,0x7,0xb5,0xd0,0x4d,0x0,0xb9,0xe7,0xfe,0xf5,0x84,0x0,0x30,0x27,0x39,
+  0x40,0xf2,0x19,0x61,0x79,0x81,0x3c,0x8b,0x78,0xcb,0x79,0x0,0xee,0x53,0xa,0x26,
+  0xcd,0x64,0xce,0xc7,0xb1,0xc0,0xb7,0xe3,0xbf,0xd,0xb6,0xd,0xbe,0x2e,0xd8,0xbf,
+  0x19,0xa0,0xf,0x4a,0xa2,0xae,0xef,0xd5,0xeb,0x75,0x85,0xe6,0xba,0x2,0xa5,0xc8,
+  0x91,0x99,0xd0,0x67,0x4a,0xd1,0xd6,0xc9,0x1,0xfa,0xc,0x6,0xc5,0x6,0xd0,0x61,
+  0xf9,0xc9,0x36,0xe5,0x8a,0x22,0x76,0xde,0x94,0x2c,0xaa,0xc8,0x3a,0xd6,0x11,0xe,
+  0xd6,0x65,0xe9,0x87,0xf,0x1f,0x96,0x37,0xdd,0x74,0x93,0x3b,0x31,0x31,0xe1,0xd4,
+  0x6a,0x35,0xc7,0x71,0x1c,0xb1,0xb8,0xb8,0x18,0x1c,0x39,0x72,0x24,0xb8,0xed,0xb6,
+  0xdb,0x82,0xe4,0x78,0xd7,0x75,0xed,0xb,0x83,0x6,0xd,0x81,0x5c,0x50,0xd3,0xe0,
+  0x2d,0xeb,0x1,0xb2,0xe,0xe0,0x41,0xa,0x81,0xb2,0xc0,0x3,0x14,0x65,0xf9,0x79,
+  0xf0,0xf3,0x5e,0xe0,0x5c,0xa4,0x5a,0xc7,0x71,0xb7,0xde,0x7a,0x2b,0xdd,0x79,0xe7,
+  0x9d,0x13,0x3f,0xf3,0xef,0x7a,0xc5,0x8a,0x98,0x79,0xa5,0xaf,0x82,0xeb,0x98,0x4e,
+  0x1d,0x9a,0xd5,0x5f,0xdc,0x35,0x4d,0xd1,0x8,0x6b,0xed,0x11,0x81,0x68,0x82,0x2,
+  0xb1,0xd3,0x5d,0xfc,0xec,0xf3,0xef,0x5a,0x54,0x14,0x9d,0xe,0x54,0xf0,0xe4,0xf7,
+  0x17,0xff,0xf2,0x54,0xd,0xbb,0x7,0xac,0x47,0xb1,0xed,0xf6,0x31,0x40,0x8e,0xb3,
+  0x45,0xea,0x0,0x18,0x30,0xd,0xd6,0xa0,0x1c,0xf8,0x32,0xe7,0x12,0x29,0x67,0x5,
+  0x36,0xf8,0xdd,0x3c,0xc0,0x86,0xea,0x0,0x87,0xf,0x1f,0xa6,0xdf,0xff,0xe0,0x9b,
+  0xf7,0xff,0x70,0xfe,0x2b,0xff,0xc2,0xd7,0x2b,0xff,0xec,0x1b,0xcd,0x3f,0x79,0x35,
+  0x43,0xd5,0xa1,0x29,0x7e,0xe,0xb2,0xf9,0x4,0x31,0x81,0x88,0x92,0x2f,0xa9,0x29,
+  0xe,0x76,0x44,0xf0,0xcd,0xc8,0x9e,0x7e,0xe3,0xb1,0xe6,0x4f,0x41,0x0,0x2a,0x62,
+  0x7,0xca,0x34,0x6,0x41,0xb2,0xeb,0xa3,0xe3,0x58,0x17,0x16,0x7a,0x8a,0x96,0xad,
+  0x19,0x2,0x6,0x74,0x81,0xe,0x0,0xd7,0x2,0xdf,0x76,0x83,0xba,0x20,0xf,0xd0,
+  0x3d,0x92,0xc0,0x75,0xb7,0xfb,0xee,0xbb,0x4f,0xae,0x5c,0xf5,0x7f,0x6f,0x59,0x88,
+  0x8e,0xff,0xf1,0xb7,0x4f,0x7e,0xf4,0xd,0xcc,0xaa,0x6,0x12,0x20,0x2,0x4,0x1c,
+  0xc3,0xc0,0x18,0x1f,0xa2,0xb5,0x35,0xa3,0x38,0xd1,0x8d,0x1f,0x2f,0xf,0x0,0x44,
+  0x80,0x66,0x85,0x25,0x75,0x12,0xb,0x3c,0x83,0xcb,0x76,0x5e,0x8b,0xd3,0x2b,0xd3,
+  0x58,0x6c,0x75,0x7d,0xc0,0x89,0x28,0xb0,0xf6,0x9e,0x44,0xd8,0x3a,0x32,0x90,0x75,
+  0xcf,0x1c,0x40,0x2b,0x90,0x1,0xdf,0xc9,0x49,0x3f,0x5d,0x90,0x5,0x2b,0xcb,0xea,
+  0x75,0x1f,0x19,0x38,0x48,0x91,0xca,0xf9,0xfa,0x89,0xf,0xfd,0xa3,0xe9,0xf0,0xb,
+  0x1f,0x68,0xb5,0x96,0xde,0x40,0x42,0x10,0x81,0x20,0xc8,0x1,0x21,0xb6,0xf2,0xf8,
+  0x4f,0xa2,0xec,0x34,0x50,0x12,0xd,0x94,0x44,0x2d,0x85,0x5f,0xb3,0x42,0x4b,0x2d,
+  0x62,0x55,0x9d,0x41,0xc8,0x3e,0x40,0x0,0x71,0xa7,0x64,0x21,0x22,0x8,0x21,0xb0,
+  0xb3,0xb1,0x1f,0xd5,0x52,0x1d,0xa7,0x97,0xa6,0x10,0xe9,0xa8,0x57,0x7c,0xd2,0xdb,
+  0xca,0x3,0xf4,0x8b,0x0,0xe6,0xbd,0x7c,0xf2,0xc7,0x5,0xd6,0xa0,0xb,0xb6,0x37,
+  0x5c,0x92,0x7d,0xe0,0xe4,0xa7,0x2f,0xff,0xec,0xb1,0x77,0xfd,0x55,0x3b,0x5a,0xfe,
+  0x87,0x24,0x4,0x9,0x21,0x21,0x20,0x40,0x90,0x98,0x28,0x1d,0xc0,0x64,0xe9,0x6a,
+  0x8c,0x79,0xfb,0x31,0xea,0xee,0x41,0x5d,0xee,0x4,0x11,0xc5,0x4f,0x12,0x87,0xb2,
+  0x9e,0x28,0xae,0xd2,0xe7,0x18,0x37,0xd5,0x22,0xe6,0x83,0xa3,0x38,0xed,0x3f,0x87,
+  0x99,0xd6,0x2f,0x11,0x70,0x2b,0x97,0xc6,0x30,0x4a,0x6e,0x15,0xbb,0xc7,0xe,0xe2,
+  0xe4,0xe2,0x14,0x94,0xa,0x6d,0x57,0x52,0x14,0xe6,0x7a,0xe6,0x36,0x5b,0x47,0x6,
+  0xf6,0xbf,0x38,0x8e,0xa,0x62,0x3f,0xba,0x68,0x60,0xdd,0xc5,0x42,0xd6,0x63,0xf5,
+  0xe2,0xee,0xd9,0xff,0xf8,0xce,0x27,0x56,0xff,0xf6,0xcf,0x18,0xd1,0x4e,0x21,0x24,
+  0x24,0x24,0xf6,0x94,0x5f,0x8a,0xcb,0x6a,0xaf,0xc6,0x9e,0xca,0xd5,0xf0,0xa8,0x1a,
+  0x3f,0xe7,0x80,0xe3,0x27,0x8b,0x7,0xdc,0x84,0xd6,0x91,0x79,0x9c,0xad,0x45,0x82,
+  0x94,0xc,0xf1,0x71,0xa3,0xee,0x5e,0x8c,0xb8,0x7b,0x71,0x49,0xed,0x46,0x4c,0x35,
+  0x1f,0xc3,0x73,0xab,0xf,0x42,0x6b,0xd5,0x31,0xf1,0x55,0xa,0x17,0x3b,0x47,0xf7,
+  0xe0,0xf4,0xe2,0x34,0xb4,0xe2,0x6e,0xe7,0xd9,0x37,0xf,0xd8,0x42,0x39,0x40,0x6f,
+  0x15,0xa0,0x3b,0x93,0x40,0x58,0xae,0x1e,0xb9,0x8c,0x5f,0xd,0x90,0xf1,0xf7,0x6c,
+  0xcf,0xf0,0xb7,0x4a,0x9f,0x79,0xe1,0x9d,0x9f,0xa,0x75,0xeb,0x77,0x40,0x82,0x5c,
+  0xaa,0xe0,0xca,0xfa,0xdf,0xc3,0x4b,0x1a,0x37,0xa3,0x22,0x47,0xe3,0x27,0x1b,0x73,
+  0x14,0x3f,0xe1,0xc4,0x3c,0xbb,0xd8,0x6,0x9b,0x59,0x41,0x9b,0x27,0x96,0xc7,0xaf,
+  0xa3,0x35,0x44,0x50,0x66,0xbd,0xab,0x74,0x39,0xca,0x72,0x4,0xbf,0x58,0xfc,0x66,
+  0xfc,0xc,0x64,0xca,0x2c,0x43,0x92,0xc4,0x68,0x6d,0x1c,0x67,0x97,0xe7,0xd1,0xc5,
+  0xf2,0xcf,0x4f,0xf,0xc0,0xcc,0x76,0xb6,0x9e,0x54,0xeb,0x2,0x0,0x1,0x11,0x45,
+  0x3d,0x3e,0x37,0x48,0x8,0xa0,0x5c,0xec,0xef,0xd6,0x29,0x7a,0x23,0xd6,0x7f,0xdf,
+  0xa9,0xc3,0xf5,0x1f,0x1c,0xf9,0xc2,0xd7,0x15,0x85,0x37,0x13,0x49,0x5c,0x51,0x7b,
+  0x3d,0xae,0x1d,0xfd,0x27,0x28,0xc9,0x3a,0x98,0x35,0x2,0xdd,0x4a,0x9f,0x69,0xcc,
+  0x1d,0x20,0xab,0xf4,0x89,0xe6,0x9,0xf8,0x9c,0x92,0x22,0x82,0x66,0x6d,0x6d,0x2b,
+  0x8b,0x34,0x11,0x1c,0x2a,0x61,0x57,0xe9,0x72,0x4c,0x35,0x7f,0x8a,0x34,0x7b,0xa4,
+  0xd8,0x20,0x5c,0x59,0x82,0x57,0x72,0xd1,0xa,0x43,0xac,0x17,0xfc,0x5f,0xb,0x1,
+  0x98,0x59,0xce,0xb7,0xa6,0xf7,0x3c,0xba,0xf8,0xa5,0x57,0x2c,0xab,0x13,0xd7,0x7,
+  0xca,0xbf,0xf6,0x7f,0x1f,0x7b,0xef,0xa5,0x11,0x87,0x75,0xe6,0xa8,0xaa,0x59,0x55,
+  0x35,0x74,0x59,0x90,0x6c,0x49,0x78,0xb,0x9f,0x3b,0xf6,0x6f,0xcf,0x86,0xba,0x75,
+  0x9a,0x59,0xfd,0xf2,0xdb,0x27,0xff,0x62,0xa6,0x81,0xc9,0xb8,0xa,0xd8,0x37,0x2,
+  0x30,0xf5,0x88,0xfd,0xe7,0xc,0x3c,0x0,0x1c,0xbe,0xef,0xef,0x3b,0x4f,0x2d,0xff,
+  0xf2,0x6b,0x82,0x9c,0x9b,0xcb,0x72,0x14,0x37,0x8d,0xdf,0x8e,0xbd,0xe5,0xab,0xa1,
+  0xa1,0x11,0xea,0x36,0x42,0x6e,0x41,0x71,0x90,0x82,0xcc,0xa9,0x55,0x9b,0xc7,0xdc,
+  0xa7,0x16,0x6e,0xb6,0x53,0x42,0x74,0x86,0x80,0x4,0x78,0xc5,0x11,0x34,0xe2,0xf5,
+  0x98,0xbb,0x1f,0x8f,0x47,0xf7,0xa2,0x22,0x1b,0x10,0xe4,0xa6,0x3f,0x9f,0xc1,0x28,
+  0x7b,0x65,0xb4,0x10,0x50,0x17,0x92,0xeb,0x5f,0x7b,0x12,0xc8,0xcc,0xce,0x63,0x2b,
+  0x77,0x5f,0xf9,0xdc,0xc2,0xf,0x6e,0xfd,0xfc,0xb1,0xf7,0xbc,0xb9,0xa5,0x96,0x5e,
+  0x1,0x70,0x9,0x26,0x1b,0xce,0xb2,0x16,0x42,0xb2,0x8f,0xa1,0xea,0x11,0x5a,0xbb,
+  0x42,0xc5,0x49,0xa7,0xbc,0xe5,0xd8,0xea,0x4f,0x40,0x24,0x50,0x15,0xe3,0xf1,0xa4,
+  0x37,0xa6,0xfc,0xec,0xdf,0xce,0x9c,0x37,0x73,0xff,0x3a,0x7,0xbe,0xca,0x15,0x7c,
+  0x36,0x44,0x82,0xb1,0x7d,0xa5,0x8f,0xb,0x72,0x7e,0xb3,0xea,0x8c,0xe3,0xe6,0x9d,
+  0xef,0x41,0xdd,0xd9,0x89,0x90,0x7d,0xf3,0x34,0xf3,0x96,0x5,0x6c,0xc,0x3e,0xa7,
+  0x96,0xae,0x3b,0xb6,0xe3,0x35,0xe7,0xbc,0x80,0x2a,0x8,0x3,0x11,0x34,0xe2,0x7c,
+  0x21,0xe4,0x16,0x24,0x49,0xb4,0xd4,0x32,0x2a,0xa2,0x61,0x86,0xff,0x19,0x20,0x86,
+  0x20,0x7,0xd2,0x63,0x6f,0x80,0xf2,0xf6,0x8b,0xeb,0x1,0x98,0xb9,0xfc,0xc5,0x99,
+  0x3f,0xfa,0x57,0x9f,0x7d,0xe1,0xdd,0xef,0xf4,0xf5,0xca,0xf5,0x20,0xb8,0xb1,0x1c,
+  0x12,0x6,0xf8,0x2c,0x51,0x5d,0xab,0x83,0x4d,0x8a,0xc3,0x2a,0x3d,0x2e,0xee,0xac,
+  0x0,0x8b,0xd1,0x71,0x68,0x8e,0x70,0xf1,0xf8,0xb5,0x98,0x5b,0x7d,0x1,0xcb,0xed,
+  0x33,0xbd,0x2a,0x81,0xf9,0x1,0x9e,0x5e,0x55,0xbf,0x81,0xdb,0x1d,0x4f,0xbe,0xf1,
+  0xb6,0xaa,0x3b,0xfa,0x6f,0x4,0x39,0x78,0xed,0xf8,0xef,0xa2,0x22,0x47,0x11,0xb2,
+  0x8f,0x40,0x37,0x11,0xe9,0x76,0xc,0xa8,0x65,0xd1,0xc,0x9d,0x66,0xf6,0x1d,0x84,
+  0x80,0x6,0xf2,0x1e,0x22,0xd9,0xee,0x62,0xfd,0x5a,0x87,0x38,0xed,0x1f,0x81,0x20,
+  0x9,0x6,0x23,0xe0,0x26,0x5c,0x2a,0x1b,0xaf,0xa8,0x1,0xd2,0x90,0x8e,0xf0,0xfa,
+  0x58,0xfe,0x8b,0x97,0x3,0x9c,0xe2,0x53,0xf5,0x1f,0x4c,0x7f,0xf8,0x9d,0x9f,0x79,
+  0xe1,0x5f,0xbf,0x37,0xd4,0xfe,0x95,0x20,0x61,0x81,0x1e,0x17,0x42,0x62,0x22,0x78,
+  0x28,0xc9,0x1a,0xca,0xa2,0xe,0xcf,0xd2,0xc1,0x91,0xe,0xd1,0x54,0x67,0xd1,0xd2,
+  0xb,0x88,0x58,0xa7,0x3a,0x58,0x10,0x41,0x73,0x42,0x18,0x82,0x23,0x5,0x76,0x35,
+  0xe,0xa2,0x52,0x6a,0x60,0x6e,0x69,0x6,0xca,0xd2,0xc1,0x3a,0x9b,0x11,0xa3,0xa,
+  0xac,0x5f,0x17,0x24,0x7f,0x3,0x13,0xe0,0xf0,0x23,0xfb,0xaa,0x15,0xa7,0xf1,0x51,
+  0x82,0xa4,0x4b,0x6b,0x37,0xa6,0x96,0xef,0xeb,0x15,0x44,0xda,0x37,0xc0,0x66,0x52,
+  0x2e,0x6,0x9f,0x2d,0xf0,0xad,0xfd,0xe9,0x6b,0x95,0xbe,0x97,0x58,0x7d,0xac,0x18,
+  0x92,0x50,0x10,0x41,0x21,0x82,0xd2,0x11,0xda,0x7a,0x9,0xa7,0x83,0x67,0x21,0xc8,
+  0x1,0x83,0xd,0x39,0x62,0x8c,0x63,0x4f,0xa2,0x41,0x24,0xc2,0x2,0x2f,0xd7,0x97,
+  0xe8,0xce,0x39,0x5a,0x3c,0xdd,0x73,0xe2,0x43,0x6f,0xfa,0xc6,0xf3,0x1f,0xfc,0xef,
+  0x8a,0xdb,0x57,0x80,0xe2,0x27,0x7a,0x12,0x4,0x1c,0xe1,0x62,0x57,0xe9,0x10,0x76,
+  0x97,0xae,0xc0,0xa8,0xbb,0x7,0xa3,0xce,0x5e,0x54,0x9d,0xb1,0xb8,0xa2,0x97,0xba,
+  0x3b,0x3b,0x19,0x8a,0x3b,0x67,0x25,0x3a,0x8d,0xf9,0xe0,0x5,0x9c,0xf2,0x9f,0xc6,
+  0x6c,0xfb,0x89,0xf8,0xe4,0x4c,0xac,0x4b,0xdc,0x5e,0xc5,0xad,0x63,0xf7,0xd8,0x1,
+  0x9c,0x5a,0x9c,0x82,0x52,0x1d,0x39,0x23,0x15,0xc4,0x7d,0x5,0x20,0xea,0xd2,0x29,
+  0x3,0x91,0xa0,0x52,0x3b,0xf4,0x1,0x29,0x4a,0x93,0x20,0x81,0x5d,0xde,0xe5,0x88,
+  0xd8,0x87,0xaf,0x57,0x11,0xea,0xa6,0xf1,0x52,0x36,0xc0,0x9c,0x3,0xdc,0xc4,0x6a,
+  0xdb,0x1b,0xd8,0xa4,0xb0,0x73,0x0,0x93,0x2c,0x2a,0xcb,0xfd,0xfb,0x7a,0x5,0x53,
+  0xad,0x47,0xe3,0x32,0x9f,0xf1,0x0,0xf1,0xf7,0x44,0x1d,0xa4,0xa,0x7d,0xf5,0xb3,
+  0x8d,0x78,0xb9,0xd,0x13,0xe0,0x99,0xf9,0x87,0x46,0xee,0x9a,0xfa,0xa3,0xbf,0x58,
+  0x89,0xe6,0x7e,0xf,0x4,0x97,0x48,0xc2,0xa5,0x32,0x2e,0xae,0xdd,0x80,0x8b,0xab,
+  0xbf,0x81,0xdd,0xa5,0x43,0x10,0x90,0xe9,0xc9,0x29,0x8e,0xe0,0xab,0x55,0x28,0x84,
+  0x50,0x1c,0x99,0x13,0x8f,0xd2,0x62,0x48,0x66,0x5,0x1a,0x3b,0xdc,0x8b,0xb0,0xc3,
+  0xbb,0x8,0x97,0xd5,0x5e,0x8b,0xe7,0x9b,0x3f,0xc6,0xd1,0x95,0x87,0xd7,0x9c,0x8f,
+  0x23,0x5c,0x4c,0x8c,0xec,0xc1,0xdc,0xc2,0xc,0x74,0xe7,0x94,0xf0,0x6e,0xb2,0x4f,
+  0xad,0xd3,0xf5,0xc7,0xdf,0x75,0x18,0xe4,0x39,0xe5,0xdf,0x23,0x10,0x4,0x8,0x11,
+  0xb7,0xe1,0xeb,0x55,0x34,0xd5,0xd9,0xb5,0x40,0x1b,0xab,0x4f,0x40,0x4a,0xf2,0x95,
+  0xc,0x70,0x5e,0x4b,0x92,0x24,0x64,0xa4,0xe1,0xc0,0x10,0x0,0x21,0x56,0xa2,0x39,
+  0x9c,0xf2,0x9f,0x85,0xe2,0xd0,0x80,0x9f,0x1c,0x2f,0x4c,0x69,0x5c,0xa7,0x6a,0x21,
+  0x6a,0xeb,0x67,0x7a,0x8c,0x6d,0x6c,0x6e,0xe,0x70,0xd7,0xf4,0xbf,0xbf,0xf2,0xfe,
+  0xa5,0x8f,0xff,0x1f,0xc5,0xc1,0xcb,0x40,0x12,0x75,0x39,0x81,0x97,0x8f,0xbc,0x9,
+  0x97,0xd4,0x5e,0x5,0x87,0xbc,0xf4,0x24,0x2,0x6e,0x9a,0x22,0x48,0xd4,0x1,0x30,
+  0x17,0x54,0xc2,0x94,0x15,0xff,0x18,0xa,0x4a,0xc7,0xdb,0xfb,0xca,0x2f,0x47,0x45,
+  0x8e,0xe2,0x57,0x4b,0xf7,0xc6,0xe1,0xc0,0xd2,0xc1,0x8e,0x70,0x30,0xd2,0xd8,0x81,
+  0x85,0xa5,0x33,0x60,0x5e,0x63,0xfd,0x91,0x45,0x0,0xb5,0x8e,0xc4,0xa8,0xe3,0xe2,
+  0x92,0xf7,0xbc,0xa9,0x7a,0x5d,0x59,0xd4,0xf,0x24,0xc9,0xea,0x74,0xeb,0xe7,0xf0,
+  0x44,0x15,0x91,0xc9,0xf6,0x99,0x34,0x92,0x19,0xcb,0x9c,0xea,0x15,0x6d,0xbe,0x5c,
+  0x5b,0xfb,0x92,0x39,0x8d,0xc6,0x82,0x99,0x1,0xca,0xf2,0x85,0xd8,0x1b,0xc6,0x71,
+  0x3f,0xe4,0x26,0xce,0x86,0x33,0x58,0x8e,0x4e,0x81,0xa1,0x52,0xf0,0x35,0x8b,0xb8,
+  0xac,0xcc,0x2,0x4c,0xa,0x5a,0x67,0x7d,0xb8,0x3a,0xaf,0x7e,0x5e,0x50,0xe2,0xde,
+  0x7c,0xf,0xf0,0xb9,0xa3,0xef,0x79,0xcd,0x72,0x70,0xe2,0x6e,0x80,0x77,0x7b,0xb2,
+  0x86,0xeb,0x46,0xdf,0x8a,0xcb,0x6b,0xaf,0x33,0x25,0x4e,0xd,0x5f,0xaf,0x22,0x62,
+  0x3f,0x67,0xd5,0x96,0xf4,0xe1,0x4c,0xe,0x65,0x3a,0x79,0xad,0x27,0x48,0x62,0xa0,
+  0xe6,0x8,0x65,0x31,0x82,0x1d,0xde,0x1,0x9c,0x6c,0x3d,0xd5,0x1,0x13,0x33,0xe0,
+  0xc9,0x32,0xbc,0x92,0x8b,0xd0,0xf,0x8b,0xb2,0xfe,0x68,0x1d,0xc5,0x9f,0xc2,0xab,
+  0x8a,0x46,0xdd,0xbd,0xb7,0x48,0xf2,0xe2,0xda,0x3c,0x31,0x4e,0xfa,0x4f,0x61,0x31,
+  0x3c,0x8e,0xab,0x1a,0x37,0x67,0x5,0xaa,0xe4,0x6b,0x99,0xcd,0x25,0x6a,0x3a,0x9d,
+  0xc7,0x94,0xa5,0xb7,0x86,0x0,0xc4,0x99,0x37,0xe0,0xb8,0x56,0xa5,0x4d,0x52,0xe8,
+  0xf3,0xa,0x56,0xa2,0x39,0xac,0xaa,0x79,0x68,0x8e,0xd2,0x98,0xcf,0xcc,0x20,0x28,
+  0x10,0x9,0x10,0xb,0x10,0x4,0x34,0x7,0x86,0x3c,0xc,0xad,0x55,0xf8,0xcb,0xaf,
+  0xb5,0xbf,0xbf,0x11,0x95,0xb3,0x2e,0x2,0xdc,0xf1,0xdc,0x9b,0xaf,0x69,0xea,0xb3,
+  0xf7,0x10,0xd1,0xce,0xc9,0xf2,0x95,0x78,0xcd,0xf8,0xdb,0x51,0x91,0x63,0xb1,0xc5,
+  0xeb,0x0,0xa1,0x6e,0xc7,0xee,0xdd,0xd6,0xbc,0x5,0x92,0x28,0x5d,0xe7,0xbc,0x40,
+  0x46,0x82,0xac,0x12,0x96,0xe9,0xe0,0x7d,0x78,0x66,0xf9,0x7e,0x54,0x9c,0x6,0x88,
+  0x65,0x87,0xe,0x2e,0x95,0x4a,0x68,0xc6,0x3a,0x38,0x4f,0x0,0xd5,0x85,0x0,0x5c,
+  0x0,0x7e,0xd1,0xb4,0x72,0xe1,0x8a,0xda,0x95,0xcc,0x1a,0x9a,0x18,0x4,0x46,0xa8,
+  0x7d,0x1c,0x6b,0x3e,0x86,0x33,0xe1,0x34,0xe,0xd5,0x5f,0x87,0x51,0x77,0xaf,0x71,
+  0xfd,0xdc,0x21,0x47,0x62,0x67,0xd5,0x49,0x83,0x94,0x24,0xe9,0x9e,0xb8,0x7e,0xd0,
+  0xd6,0xcb,0x68,0xaa,0x5,0x44,0xdc,0x86,0x66,0x95,0x3e,0x19,0x3d,0x1,0x9f,0x29,
+  0x76,0xfb,0xc4,0x94,0x7e,0xe,0xa9,0x6f,0xd1,0xf0,0x57,0xf5,0x77,0x7f,0xf6,0x85,
+  0x60,0x6e,0x23,0x2a,0x67,0x60,0x2,0x1c,0x7e,0xfc,0xa6,0xf1,0x12,0x97,0xee,0x21,
+  0x81,0x9d,0x17,0x55,0xaf,0xc5,0x6b,0xc6,0xdf,0xe,0x82,0x44,0xc4,0xed,0xb4,0xfa,
+  0xc5,0x89,0xbe,0xed,0x70,0xf7,0xba,0x23,0x4b,0xd6,0x96,0x1c,0xea,0xac,0x8e,0xd9,
+  0x55,0xb1,0x28,0xcd,0x1b,0x34,0x22,0x28,0x1d,0x22,0xd2,0x3e,0x4,0x9,0x34,0xa3,
+  0x25,0x54,0xe4,0x88,0xe9,0x67,0x9d,0xea,0x60,0x11,0xeb,0xe0,0xbc,0xf5,0x47,0x7d,
+  0x3a,0x25,0x6f,0xf5,0x6b,0x26,0x95,0x72,0x84,0xba,0x86,0x8a,0x33,0x0,0x3,0x2e,
+  0x81,0xb0,0x10,0x4e,0xe3,0xb1,0x85,0xaf,0xa2,0xe1,0xec,0xc6,0xe,0xef,0x0,0x46,
+  0xdc,0x49,0x54,0xe5,0x28,0x1c,0x2a,0xc7,0x63,0xfc,0x9c,0x7d,0x3d,0x19,0xd0,0x14,
+  0xc2,0xf8,0xe9,0xe7,0xdc,0x46,0xa4,0x3,0x84,0x68,0x65,0xe3,0xfb,0xc4,0x90,0x70,
+  0x4c,0xa6,0x11,0x7f,0x9e,0xa1,0xa1,0x49,0x19,0xe0,0x29,0xe7,0x4d,0x74,0xb2,0xe8,
+  0xa3,0xff,0xaf,0xf5,0xd1,0xd,0xe6,0x39,0x83,0x13,0x60,0xdc,0x1b,0xff,0xbc,0x2b,
+  0x4a,0x17,0x8f,0x79,0x17,0xe1,0x55,0x3b,0x7e,0xdb,0xb8,0xad,0x0,0xbe,0x8a,0x9f,
+  0xe8,0x1d,0xbb,0xc2,0xac,0xd4,0x19,0x6f,0x73,0x87,0x3c,0x4a,0x5c,0x96,0x9d,0xf8,
+  0x74,0xc4,0xbf,0x5c,0x26,0x9c,0x80,0xaf,0x38,0xc2,0x5c,0x70,0x34,0xd3,0xc1,0xba,
+  0x9,0x97,0x4a,0x60,0x90,0xd1,0xc1,0xc,0xe9,0x91,0xc8,0x1,0x1f,0xe5,0x62,0x62,
+  0x2f,0xeb,0xcf,0x3,0x9f,0xcc,0x2b,0x70,0x57,0x57,0x5b,0x4b,0x7a,0x87,0x2,0x41,
+  0x83,0x20,0x20,0xc9,0x81,0x2b,0xca,0x46,0x86,0x11,0x5a,0x6a,0x11,0x81,0xbf,0x8a,
+  0xb9,0xe0,0x39,0x48,0x72,0x21,0xc9,0x43,0x49,0x54,0x20,0x85,0x17,0x17,0x68,0xc8,
+  0x49,0x27,0x7d,0x8,0x72,0x20,0x60,0x94,0x12,0xc5,0xae,0xdc,0x21,0x91,0x2,0xab,
+  0x93,0x9f,0x5b,0x60,0xf5,0x99,0xc5,0x27,0x3d,0x16,0x1b,0xcc,0xd2,0xe9,0xe0,0x7f,
+  0x7d,0xeb,0x4f,0x57,0x1f,0xcf,0x29,0x9d,0x81,0xa5,0xee,0x40,0x4,0xf8,0xc8,0x13,
+  0xb7,0xfc,0x76,0x49,0xd6,0xdf,0x44,0x24,0x70,0xcd,0xc8,0x5b,0xd2,0xa4,0xae,0xad,
+  0x96,0x2c,0x97,0xaf,0x2d,0xf0,0xad,0x62,0x47,0x4e,0x17,0xf7,0xae,0x8e,0x65,0x3a,
+  0x38,0x4e,0x1e,0x43,0x28,0x56,0x68,0xaa,0x33,0x98,0xf,0x9e,0xcf,0xe9,0x60,0x95,
+  0x25,0x59,0xac,0xc1,0x91,0x38,0xb3,0x1,0xeb,0xcf,0x83,0xef,0x9a,0xc5,0x4b,0xd6,
+  0xc7,0x9e,0x3b,0xf1,0xd4,0xa5,0xfb,0xaf,0x88,0x27,0x74,0x50,0xec,0xc2,0x1b,0xee,
+  0x6e,0x2c,0x86,0x27,0x4c,0x25,0xb3,0x33,0x82,0x10,0x1,0xa,0x91,0xb9,0x5e,0x3d,
+  0x29,0x4e,0x38,0x86,0x1c,0x36,0x1,0x24,0x92,0x59,0x2,0x9,0xbc,0x89,0xf5,0xc7,
+  0xdb,0xca,0x9a,0xe,0x99,0x58,0xbc,0x95,0x1f,0xe9,0x8,0x7e,0x3b,0x7c,0xfa,0xdb,
+  0xff,0x61,0xf1,0xc3,0x5d,0x72,0x9d,0x73,0xf6,0x0,0xa9,0xc,0x2a,0x39,0x95,0xf,
+  0x9,0x10,0x3c,0x51,0xc1,0xa8,0xbb,0x7,0x11,0xfb,0x68,0xaa,0x85,0x78,0xc0,0x23,
+  0x5f,0xe4,0x30,0xd5,0x29,0x9b,0x14,0x20,0xce,0xb4,0x32,0x67,0xb2,0xa9,0xc3,0x3b,
+  0x58,0x2a,0xc0,0xae,0x84,0xb5,0xd4,0x22,0xa6,0x5a,0x8f,0xc5,0x13,0x22,0x20,0x3b,
+  0xa5,0x93,0xf5,0x7f,0xdb,0xcb,0xea,0x49,0xd3,0x11,0x61,0x41,0x87,0xe8,0x3e,0xb1,
+  0x5f,0x58,0xc0,0x7b,0x0,0x4a,0xc9,0xf2,0xf0,0xff,0x6c,0xfd,0xe2,0x55,0xaf,0x5d,
+  0x8c,0x2a,0xce,0x88,0x23,0x20,0x1,0x92,0x28,0x51,0xd,0x15,0x39,0x8a,0x40,0xaf,
+  0x76,0xcc,0x36,0x24,0xe4,0xc9,0x20,0x40,0x24,0x20,0x48,0x9a,0xc2,0x98,0x88,0xbd,
+  0x0,0x49,0xb3,0xce,0x26,0x2d,0x31,0x67,0x92,0x91,0x98,0x52,0xc5,0x90,0xe,0x12,
+  0x25,0x5e,0x91,0x43,0x28,0xe,0x11,0x46,0xc1,0xd9,0x47,0xbe,0xb8,0xf8,0x9e,0x17,
+  0x1e,0xa,0x16,0xad,0xf3,0x5d,0xf7,0xf0,0xb6,0xd3,0x2f,0x1b,0xfe,0xd3,0x7f,0x7a,
+  0xe8,0x8d,0x9e,0xac,0x1d,0x2,0x9,0x10,0x3,0x11,0xfb,0x68,0xab,0x65,0x4,0xba,
+  0xd9,0xa1,0x77,0xe3,0x13,0xe0,0x4e,0xad,0x6b,0xae,0xe6,0xb0,0xad,0x1f,0xc9,0xbb,
+  0x1d,0xaa,0x20,0x66,0xb7,0x82,0xb2,0xe2,0x7f,0x88,0xa5,0xe8,0x4,0x4e,0x7,0x47,
+  0xc0,0xd0,0x39,0x29,0x24,0x0,0x26,0xd3,0x39,0xa9,0xe,0x9e,0xef,0xe2,0xfe,0x75,
+  0x9f,0xa4,0xcf,0x1e,0x95,0x4c,0xc0,0xaf,0x0,0xa8,0x2,0x28,0x1f,0xfb,0x51,0xc4,
+  0x27,0xa6,0xce,0x3c,0x74,0xf1,0x25,0xd5,0xd7,0x67,0xe7,0x26,0x51,0x93,0x13,0x70,
+  0x45,0x9,0xbe,0x5a,0xed,0x48,0xf3,0xba,0xf1,0xcc,0x26,0x42,0x1c,0x1a,0xb2,0xa2,
+  0x59,0x6a,0xc,0xe0,0x74,0x14,0x31,0x19,0x52,0x4e,0x0,0x8f,0x38,0x80,0xe2,0x0,
+  0x91,0xe,0x10,0x4,0xfe,0xe2,0x23,0x5f,0x3e,0xfb,0xbb,0x3f,0xf8,0xc8,0xca,0x33,
+  0x16,0xe1,0x6d,0xfd,0x8f,0x8d,0x78,0x80,0x22,0x19,0x24,0x2a,0x5e,0xfd,0xf6,0xc4,
+  0x35,0x45,0x1c,0x61,0xaa,0xf9,0x18,0x6a,0xce,0xc4,0x9a,0x82,0x6,0x32,0x68,0x33,
+  0x59,0x64,0xe9,0xe3,0x58,0xfe,0x24,0x1a,0x59,0xa7,0xb1,0x2c,0xd,0x5,0xc8,0x86,
+  0x40,0x7d,0xbd,0x82,0x33,0xe1,0x31,0x34,0xd5,0xd9,0xd8,0x8d,0x92,0x4,0xb1,0x6,
+  0x41,0x43,0x90,0x82,0x66,0x1,0x4d,0xa,0x6c,0xe9,0xe0,0x85,0x69,0xf5,0xb,0xd3,
+  0x19,0x61,0x81,0xfb,0xef,0x56,0xf5,0xb3,0x3d,0x40,0x42,0x80,0xa,0x80,0xba,0x59,
+  0x57,0x0,0x94,0xef,0x3e,0x7c,0xe4,0x4b,0xbf,0xff,0xc9,0xb1,0x1b,0x4b,0x6e,0xc5,
+  0x63,0x96,0x60,0xa1,0x21,0x58,0xc3,0xa3,0x2a,0x5c,0xa7,0x82,0x40,0xaf,0x76,0x86,
+  0x3a,0x4a,0xce,0x3d,0xe9,0xd5,0x44,0x2,0x26,0x29,0x24,0x19,0x32,0xb8,0x10,0x86,
+  0x0,0x49,0x52,0x97,0x58,0x7a,0xa4,0xc3,0x38,0xf9,0x35,0xa0,0x47,0xda,0x47,0xa8,
+  0x7d,0xb4,0x5a,0xad,0x99,0xfb,0x3f,0x35,0xff,0xee,0x7,0x3f,0xb1,0x6c,0x7b,0x3c,
+  0xb5,0xd1,0x89,0xad,0xa2,0x0,0x7c,0x61,0x27,0x42,0x25,0x59,0xbb,0x31,0x8b,0x53,
+  0xa,0x8f,0x2c,0x7c,0x19,0xb3,0xed,0x27,0x10,0xe8,0x16,0x42,0xdd,0x42,0xc8,0x2d,
+  0x84,0xec,0x23,0xe4,0x36,0x22,0x33,0x32,0xa6,0x38,0xc8,0x7e,0x38,0x7,0x50,0x8,
+  0xa0,0xc,0x93,0x95,0x91,0x75,0x59,0x81,0x28,0x66,0xb9,0x46,0x88,0x36,0x2f,0xe3,
+  0x4c,0xf8,0x2,0x4e,0x5,0xcf,0x22,0xe0,0x66,0xe6,0x2e,0x61,0xc6,0x16,0x8c,0xcb,
+  0x8c,0x75,0xb0,0xca,0x74,0xb0,0x52,0xe1,0xa3,0x5f,0x68,0x3d,0x58,0xe0,0x1,0x6,
+  0x99,0xf8,0x41,0x16,0xf8,0x9e,0x5,0x7c,0x4a,0x80,0xa3,0xf,0xfa,0x4b,0xf,0x7c,
+  0xf9,0xc8,0xe7,0x22,0xdd,0x66,0xfb,0xbc,0x22,0xe,0xc0,0xd0,0x28,0x8b,0x6,0x2a,
+  0x62,0x14,0xe,0x95,0xd2,0x10,0x68,0x4b,0x5b,0xc6,0xda,0xf0,0x97,0xcc,0x6d,0x20,
+  0x12,0xd0,0x1c,0x21,0xe2,0x58,0x46,0x67,0x4b,0xb,0x41,0x6e,0x99,0x9b,0x5e,0xbe,
+  0xf7,0x8b,0xef,0x3d,0x7e,0xfb,0x83,0x9f,0x58,0x3a,0x92,0x3b,0xbf,0x75,0xc7,0x7e,
+  0xdb,0x3,0x90,0x45,0x6,0xfb,0xea,0x5a,0x7,0x80,0xeb,0x9,0x6f,0x5f,0xec,0xca,
+  0x1,0x26,0x82,0xaf,0x56,0xf1,0xc3,0x33,0x9f,0xc6,0x25,0xd5,0x57,0xe1,0x40,0xf5,
+  0x7a,0x94,0x45,0xdd,0x1e,0xcb,0x33,0x21,0xcd,0x58,0x40,0x92,0x23,0x71,0x2a,0x5e,
+  0xb2,0xf7,0xc,0xeb,0x3,0x6e,0xc1,0x57,0xcb,0x68,0xea,0x5,0x23,0x25,0x75,0x9c,
+  0x39,0x1b,0x9b,0xb5,0xa5,0x90,0x89,0xac,0x66,0xd6,0x6c,0x16,0x6e,0x56,0xe6,0xf4,
+  0xdf,0x4e,0x3d,0x10,0xcd,0x17,0x58,0x7f,0x3f,0xe0,0xf3,0x53,0xc9,0x5d,0x2b,0x1c,
+  0x74,0x2c,0xdf,0x3c,0x7c,0xf2,0x91,0x6a,0xc3,0x1d,0xbf,0xe1,0x2d,0x17,0xbd,0x55,
+  0x43,0x92,0x60,0x7,0x42,0x8,0x8,0x76,0xa0,0x49,0x41,0x42,0x82,0xc8,0x81,0x23,
+  0x24,0x8,0x32,0x1d,0xfd,0x64,0x0,0x5a,0x6b,0x90,0x50,0x71,0x72,0xa8,0xe3,0xfc,
+  0x50,0x53,0x4,0x61,0xaa,0x89,0x8a,0x43,0x84,0xda,0xef,0x0,0x3d,0x54,0xd9,0x76,
+  0xab,0xdd,0x5a,0xfc,0xd5,0x7d,0xa7,0xee,0xf8,0xea,0x1f,0x9f,0xfa,0xe,0x80,0x56,
+  0xce,0xe2,0xed,0x73,0xe1,0x8d,0x86,0x0,0x1b,0x7c,0xd7,0xea,0xc,0x4f,0x91,0xae,
+  0x6a,0x8e,0x8c,0x1b,0xce,0xe6,0xb1,0x4f,0xb5,0x7e,0x8a,0xe3,0xed,0x5f,0x61,0xbc,
+  0x74,0x0,0xa3,0xce,0x1e,0x34,0x9c,0xdd,0x28,0xcb,0x6,0x1c,0x2a,0x59,0x44,0x20,
+  0x2b,0x32,0x6a,0x28,0xc4,0xae,0x2c,0xb6,0x1e,0x1f,0x21,0xb7,0x52,0xe2,0x10,0x1,
+  0x12,0x6e,0x3a,0x25,0xba,0x53,0xa,0x89,0xf8,0x0,0xb6,0x60,0x37,0x13,0x2b,0x34,
+  0x6b,0xfd,0xf3,0xaf,0xac,0x7e,0xb2,0xc0,0xfd,0xf7,0xf3,0x0,0x8c,0xb5,0x77,0x11,
+  0xa1,0x2e,0xf9,0x10,0x0,0xf0,0x97,0xdf,0x3f,0xfd,0x37,0xcb,0x27,0x79,0xf9,0x75,
+  0xb7,0xef,0xb9,0x4d,0x7a,0x4e,0x49,0x28,0x1,0x29,0x24,0x88,0x1d,0x28,0x92,0x90,
+  0x24,0xa1,0xd9,0x49,0x63,0x3c,0x74,0x5c,0x2a,0x8e,0xcb,0xb6,0x11,0x22,0xa,0x21,
+  0xc9,0x10,0xc4,0x9c,0x4f,0x5c,0x36,0xf,0x4d,0x21,0xcd,0x4f,0x3d,0x40,0xa0,0x5b,
+  0xf0,0xa3,0x56,0xfb,0xf8,0xd3,0xb,0xf7,0x7c,0xf7,0xcf,0x4f,0x7e,0xee,0xe8,0x43,
+  0xcd,0x53,0x66,0xd6,0x54,0xe2,0xf6,0x75,0x1,0x1,0xec,0xd1,0xd0,0x75,0x79,0x0,
+  0xb2,0xc0,0xef,0xc8,0x84,0xa3,0x28,0x58,0x54,0x8e,0xda,0x21,0x98,0x21,0x20,0x50,
+  0x96,0xd,0x2c,0x47,0xa7,0xd2,0xbe,0x59,0xa,0x4f,0x60,0x35,0x9a,0x87,0xa4,0xa7,
+  0x21,0xc9,0x81,0x23,0x3c,0x78,0xa2,0x96,0x6a,0x60,0x41,0xe,0x0,0x36,0x31,0x2f,
+  0x4b,0x7c,0x92,0x4c,0xd8,0x56,0xb9,0x4,0x5,0x6d,0xac,0x26,0x79,0x9d,0xea,0x60,
+  0xe6,0x35,0x49,0xa7,0xe6,0x8,0xf3,0x47,0xda,0x9f,0x7f,0xe8,0x7f,0xb4,0x9e,0xb2,
+  0x3a,0x67,0x50,0x77,0x98,0xbf,0x71,0x4,0xe7,0x46,0xf,0x95,0xe9,0xe8,0xe,0x12,
+  0x7c,0xe7,0xc3,0x33,0xf,0xfd,0xea,0x7b,0x67,0x9f,0x7b,0xeb,0x7f,0xbe,0xf8,0x6d,
+  0x93,0x97,0x95,0x5f,0xa6,0x94,0x24,0x21,0x4,0x88,0xe3,0xac,0xde,0x21,0x37,0x4d,
+  0xf8,0x88,0x64,0x2a,0xfb,0x44,0xb2,0x2f,0xf5,0xe,0x48,0xd5,0x4f,0x12,0x1e,0x43,
+  0xed,0x23,0xd2,0x3e,0xfc,0xb0,0xd5,0x9a,0x7a,0x7c,0xe1,0x5b,0xdf,0xf9,0xf0,0xec,
+  0x5d,0xc7,0x1e,0x69,0x9d,0x6,0xe0,0x9b,0xa5,0x28,0xc7,0x29,0xaa,0x64,0xf2,0x7a,
+  0x9,0x60,0xbb,0xc0,0x12,0x80,0x72,0x12,0xff,0x16,0x17,0x17,0x8f,0x36,0x4a,0x13,
+  0x3b,0x18,0x12,0x4c,0xc,0x87,0x3c,0x23,0x81,0x9a,0x66,0x52,0x87,0xf5,0x7f,0x4d,
+  0x8c,0x56,0x1c,0x66,0xbf,0x81,0x60,0x88,0x20,0x33,0xf9,0x83,0x4c,0x16,0x65,0xe6,
+  0xa8,0x73,0x1d,0x93,0xb8,0x50,0xb6,0x8a,0x45,0xaa,0x43,0x12,0xb5,0x96,0xc3,0xa7,
+  0xee,0x7e,0xdf,0xd2,0xc7,0xba,0x74,0xce,0xa0,0x83,0x3e,0xf6,0xe0,0x51,0xb2,0x4,
+  0xe8,0xbc,0xaa,0x28,0x21,0x86,0xb,0x40,0x1e,0x7b,0xa4,0x39,0x7b,0xe7,0x5b,0x9e,
+  0xf8,0xd8,0xf5,0xff,0x72,0xfc,0xf2,0x1b,0x6f,0x1f,0xff,0xcd,0x3d,0x57,0x54,0xae,
+  0x11,0x52,0xba,0x2,0x2,0xa1,0x5,0xb6,0x80,0x5c,0x23,0x3,0x6d,0xdd,0x6f,0x13,
+  0x20,0xc,0x3,0xff,0xf4,0xd4,0xf2,0x4f,0x8e,0xfc,0x78,0xf1,0xfe,0xef,0x7d,0xec,
+  0xe4,0x3,0xcb,0x27,0xd5,0xaa,0x39,0x9f,0xe4,0xdc,0x2,0xeb,0x1c,0xbb,0x49,0xdb,
+  0xd,0x11,0x20,0xef,0xfe,0x3d,0x8b,0x0,0xd5,0xa9,0x27,0xe6,0x1f,0xd9,0xbb,0xf3,
+  0xe0,0xf5,0x42,0x68,0x80,0x25,0x98,0x5,0x1a,0xce,0x2e,0x2c,0x84,0xb3,0xe9,0xe0,
+  0x46,0x91,0xbf,0x4,0x25,0x17,0x44,0x8,0xc3,0x7a,0x61,0xa,0x22,0x9d,0xd5,0xb0,
+  0xb4,0x50,0xca,0x3a,0x5,0x5c,0x71,0x64,0x8c,0x5e,0x77,0x64,0xc7,0x71,0x7d,0x20,
+  0xce,0x8e,0x3,0x3f,0x3c,0xfd,0xbd,0xf,0xcf,0xbf,0x6f,0xfe,0x68,0xb8,0x68,0x3a,
+  0x29,0xb0,0xe4,0xd0,0x20,0x37,0xd5,0xcb,0x4f,0x16,0x4d,0x5c,0x6b,0x3b,0x37,0xab,
+  0x38,0xf1,0x8,0x76,0x78,0x94,0x0,0xe4,0xa3,0x5f,0x3d,0xf3,0xc4,0xa3,0x5f,0x3d,
+  0xf3,0xd4,0xc4,0xc1,0x52,0xed,0xfa,0xdf,0x1a,0xb9,0xe6,0xe0,0xf5,0xd5,0xab,0x77,
+  0xec,0x2f,0x5d,0x5c,0x1d,0x97,0xfb,0x4,0x49,0x91,0x91,0x3e,0x21,0x7b,0xd6,0x43,
+  0xfe,0x6a,0x34,0xbf,0x34,0xd7,0x3e,0x7a,0x66,0xa6,0x7d,0xf4,0xc4,0x33,0xcd,0x67,
+  0x7f,0xf8,0x99,0xf9,0xc7,0x16,0x67,0x82,0x95,0x9c,0x9b,0xb7,0x41,0xf,0x73,0x19,
+  0x7f,0x3f,0x85,0x33,0xf0,0x98,0xb7,0x67,0x59,0x7e,0xa2,0x7f,0xeb,0x66,0x5d,0xdb,
+  0x79,0x48,0xee,0x7a,0xdf,0xdd,0x37,0x7e,0xaa,0xea,0xd6,0xcb,0xa9,0xb,0x37,0xc0,
+  0xb5,0xd5,0x22,0x22,0x4,0x70,0xc8,0x8d,0x2b,0x5d,0xc2,0xb3,0xb6,0x5d,0x38,0xe4,
+  0x99,0xa,0x58,0xfc,0x3a,0xa9,0x86,0x49,0x72,0xad,0x70,0x40,0x26,0xa6,0x47,0x71,
+  0x7d,0x9c,0xb3,0x38,0x68,0x27,0x42,0xa1,0x6e,0x21,0x30,0xaf,0x5b,0xad,0xe6,0xfc,
+  0x7d,0xff,0xed,0xe4,0xbb,0x1e,0xfe,0x6c,0xeb,0x49,0x0,0x4d,0x93,0x18,0xb5,0x73,
+  0x61,0xa0,0x1f,0x9,0x64,0x2e,0xd1,0x2b,0x59,0xe1,0x2f,0x31,0x2,0xc7,0xea,0x1f,
+  0x17,0x6b,0x2f,0x3c,0x75,0x50,0x74,0x53,0x2a,0x9,0xda,0x73,0x45,0xa9,0x31,0x7e,
+  0x99,0xd7,0x18,0xdd,0xe3,0x8c,0x8c,0x4c,0x7a,0xf5,0xd6,0x72,0xb4,0xa2,0x3,0xa8,
+  0xa5,0xd9,0x60,0x61,0xf6,0x57,0xed,0xb9,0xd3,0xcf,0x85,0x4b,0x5,0xaa,0x25,0xc8,
+  0xed,0xb,0xad,0x50,0x94,0x58,0x7e,0x98,0x23,0x66,0xd1,0xbc,0x7,0xde,0x48,0xe,
+  0x90,0xbf,0xb9,0x82,0x7,0xa0,0x3c,0xf7,0xac,0x52,0xbf,0xf8,0xfe,0xcc,0x37,0x6e,
+  0x78,0xe3,0x65,0x6f,0x93,0xc6,0x15,0xb,0x8,0x8,0x48,0x54,0x9c,0xd1,0x58,0xb3,
+  0x9a,0x64,0x2e,0x19,0x1f,0x4f,0x27,0x47,0x10,0x77,0x5c,0xcc,0x90,0x64,0xf1,0x44,
+  0xb1,0xe,0x8e,0xb3,0x7d,0x61,0xcd,0xc,0xd2,0xa6,0xcc,0x19,0x27,0x45,0x91,0x25,
+  0x27,0x43,0xa3,0x83,0x57,0x96,0x5b,0x47,0xbf,0xfb,0x5f,0x4f,0xbe,0xff,0x97,0x77,
+  0xb7,0x9e,0xb7,0x3a,0x2e,0x2a,0xa8,0x85,0xf7,0x6b,0xa,0xc5,0x37,0x8e,0x52,0x96,
+  0x47,0xf0,0xc,0x28,0x49,0x78,0x14,0xd6,0xda,0xbe,0x2,0x49,0x76,0x24,0x91,0xa,
+  0xe2,0xc4,0x93,0xfe,0xc2,0x89,0x27,0x7d,0x7b,0xca,0x2a,0x17,0xc8,0xb6,0x28,0xb7,
+  0x6d,0x9f,0x47,0x5e,0xe3,0x77,0x1b,0xe1,0x5c,0xd7,0x14,0xb0,0x41,0x2a,0x81,0xb6,
+  0x65,0x48,0x0,0xe2,0xae,0x3f,0x3c,0x76,0xef,0xe4,0x37,0x6b,0x2f,0xdd,0x7f,0xe9,
+  0xae,0x97,0xa,0x28,0x30,0x4b,0x68,0xd2,0x90,0x5a,0x83,0x48,0xa2,0x2c,0x46,0x4c,
+  0x4c,0x53,0xe9,0xa0,0x90,0x26,0x9,0x62,0x15,0xcf,0xa,0x22,0x5,0xc1,0x2,0x9a,
+  0x24,0x44,0x47,0xb1,0x24,0x26,0x83,0x36,0xa3,0x7d,0xb6,0xe,0x4e,0xf5,0xaf,0x4a,
+  0xd7,0x7c,0xfc,0xe9,0xc5,0xbb,0xbf,0xf2,0x87,0xb3,0x1f,0x3f,0x73,0x2c,0x5a,0xc8,
+  0x59,0xb,0xba,0x4c,0x7,0xef,0xd7,0xa2,0xdc,0xb1,0x76,0x47,0x3a,0xe6,0x7f,0xb8,
+  0x58,0x7b,0xdf,0x81,0xfc,0xcd,0xa8,0xba,0xdd,0x91,0x14,0x5,0xd3,0xd3,0xb9,0x60,
+  0xd8,0x9a,0xb,0xe6,0x30,0x74,0x9b,0xd2,0x16,0x15,0x4c,0xfd,0xca,0x87,0x84,0xd,
+  0x85,0x80,0xa,0x80,0x9a,0x71,0xff,0x75,0x0,0xd,0xf3,0xba,0xa,0xa0,0x52,0x99,
+  0x10,0xf5,0x7f,0x77,0xd7,0xd5,0x7f,0xb0,0xf3,0xc0,0xc8,0xa1,0x2c,0xa9,0x4b,0xb2,
+  0x5d,0x7,0x12,0x12,0x42,0x64,0x85,0x1b,0x22,0x61,0x25,0x7f,0xb1,0xdb,0x77,0xc8,
+  0x89,0xab,0x5f,0x89,0xf5,0x93,0xc8,0x92,0x20,0xb,0x78,0xdb,0xf5,0x7,0xaa,0x85,
+  0x66,0x73,0xe5,0xd4,0x8f,0xbe,0x34,0xf7,0x91,0xbf,0xf9,0xf3,0xb9,0x1f,0x19,0x57,
+  0x9f,0x2c,0xbe,0x59,0x47,0x66,0x3b,0xca,0x85,0x80,0x41,0x9b,0xcc,0x15,0xc0,0x8a,
+  0xee,0x33,0x64,0xbb,0x7e,0x69,0x4d,0x41,0xcf,0xcb,0xc8,0xa2,0x44,0xac,0xdb,0xf5,
+  0x89,0x45,0x17,0xa8,0x16,0x4d,0x61,0xeb,0x66,0xf1,0xf6,0xb1,0x1b,0xce,0x1,0xdc,
+  0x5c,0x5,0xac,0x6e,0x80,0x4f,0xc0,0xaf,0x9a,0x78,0xe8,0xb9,0x55,0x94,0xdf,0xf1,
+  0xd7,0x57,0xfd,0xce,0x65,0xd7,0x8e,0xbc,0x16,0x42,0x52,0x26,0x71,0x92,0xec,0x5e,
+  0x40,0xa6,0x24,0xe8,0x1c,0xf4,0xb0,0xb7,0x33,0x1d,0xcc,0x66,0x32,0x49,0x68,0x55,
+  0xc2,0x92,0x82,0x48,0x1b,0xad,0x66,0x73,0xe9,0xf9,0x9f,0x9f,0xfd,0xda,0x37,0xff,
+  0xd3,0xcc,0x57,0xe7,0x8e,0xaa,0x5,0x4b,0xe,0xf9,0x56,0xe2,0x57,0x94,0x20,0xa9,
+  0x8d,0xd4,0xc5,0xbb,0x58,0x77,0xfe,0x7e,0x83,0xb6,0xd5,0xb,0x74,0xbf,0x27,0x31,
+  0xf7,0x20,0x82,0xce,0x85,0x6,0x2e,0x98,0xca,0xa5,0x7a,0x4c,0x6f,0xdf,0xb0,0xcb,
+  0xef,0x56,0x6,0x2d,0x59,0xf2,0xaf,0x66,0x25,0x83,0x15,0xb3,0xaf,0x6c,0xde,0x77,
+  0x0,0xb8,0x6f,0x78,0xf7,0xae,0x6b,0x5f,0xfb,0x8e,0xc9,0xdf,0xaa,0x8f,0x79,0x7b,
+  0xb2,0x64,0xce,0x10,0x41,0x38,0xa6,0x74,0x2b,0x73,0x52,0x48,0x18,0xdd,0x2f,0xac,
+  0x99,0x9b,0x96,0xe,0xd6,0x1,0x42,0x8e,0xb,0x45,0xad,0x56,0xf3,0xec,0x73,0xf,
+  0x9f,0xb9,0xfb,0x9e,0xc3,0x33,0x5f,0x5f,0x98,0x56,0x4b,0x39,0x29,0xe4,0xe7,0x40,
+  0x8f,0x72,0x3,0x22,0xd1,0x26,0x58,0x46,0xb7,0xbb,0x8d,0x16,0xdd,0x79,0x54,0x60,
+  0xf0,0x9b,0x51,0x17,0xdd,0x87,0xa8,0xdb,0xbd,0x8b,0x8a,0xee,0x5f,0xb0,0x29,0xa0,
+  0x17,0x11,0xc0,0x96,0x7f,0x45,0x8b,0x67,0x85,0xa,0x7,0x80,0xeb,0x96,0xa5,0xfb,
+  0xf,0x3e,0x30,0xf9,0xea,0x97,0xdc,0xdc,0xb8,0x65,0x74,0xd2,0xbb,0x4a,0x8,0x49,
+  0x64,0xc9,0xbb,0xc4,0xd2,0x45,0x4e,0x7,0xdb,0xf2,0x3b,0xd3,0xf4,0x21,0x5a,0x6d,
+  0x7f,0xe9,0xd4,0xb3,0x4b,0x3f,0x7a,0xf2,0x7,0xb,0xf7,0x7f,0xff,0x13,0xa7,0x7e,
+  0xaa,0xfc,0xe,0xb,0xf,0xa,0x0,0xf,0xb,0x26,0x80,0x9c,0x53,0x46,0x3c,0x20,
+  0x21,0xfa,0x59,0x7e,0x9e,0x0,0xf9,0x6b,0x15,0x8b,0x42,0x42,0x37,0x42,0xe4,0x6f,
+  0x5e,0xb1,0xe9,0x2d,0x5f,0x4,0xca,0xcb,0xa0,0xbc,0x34,0x72,0xd0,0x79,0x17,0xe,
+  0x9,0x40,0x5e,0xfa,0xea,0xfa,0xee,0xeb,0x6e,0xad,0x5f,0x3f,0x79,0x65,0xe5,0xea,
+  0x91,0xdd,0xde,0xc5,0x95,0x86,0xd8,0x23,0x84,0x23,0x6c,0xeb,0xb7,0xc1,0xd7,0xcc,
+  0x6a,0xf5,0xac,0x7f,0x7c,0x79,0x2e,0x78,0x7e,0xee,0x85,0xd6,0x91,0xa9,0x5f,0x2c,
+  0x3f,0xfb,0xc3,0xbf,0x9e,0x7f,0x5c,0x5,0x85,0x40,0xe7,0xd7,0xaa,0x60,0xc8,0x37,
+  0x6f,0xf5,0x9b,0x4d,0x80,0x81,0x27,0x91,0xf6,0xf1,0x0,0x45,0x4,0x0,0xce,0xe1,
+  0x32,0xf5,0xcd,0x38,0x9,0x7b,0x40,0xc4,0xb5,0x80,0xf6,0x72,0xdb,0xf9,0x81,0x92,
+  0x22,0x3d,0x9c,0xca,0xa1,0x3d,0x2f,0x73,0x47,0x76,0x5e,0xea,0x8d,0x8e,0xee,0x2f,
+  0x8d,0x7a,0x25,0xe1,0xac,0xcc,0xab,0xe6,0xea,0xe9,0x70,0x75,0xe9,0x44,0xd4,0x9c,
+  0x7f,0x21,0x5c,0x69,0x2d,0xaa,0x20,0x7,0x5e,0x54,0x0,0xae,0x5d,0x92,0x2d,0x9a,
+  0xe9,0xdb,0xcd,0xea,0xcf,0x39,0x39,0xba,0x50,0x9a,0x3d,0x12,0x98,0x2f,0x8c,0xb8,
+  0x3d,0x46,0xc9,0x8a,0xee,0xc4,0x29,0xbb,0xc4,0xc7,0xa2,0x18,0x88,0x82,0x6c,0x36,
+  0xca,0x65,0xbc,0x61,0x1f,0x29,0xa4,0x50,0x7c,0xe9,0xd7,0x86,0xa6,0x46,0x5d,0xa8,
+  0xcd,0xc9,0xc5,0xa7,0x7c,0x79,0x54,0x5a,0x9d,0x5f,0x24,0x93,0x44,0x1,0x1,0xa8,
+  0x80,0x0,0x8c,0xde,0xb7,0x6c,0x51,0x7d,0xa4,0x90,0xee,0xb2,0x4f,0xf7,0x20,0xc2,
+  0x10,0xfc,0x75,0x78,0x80,0x6e,0x52,0xa8,0x9b,0x6,0x2e,0x92,0x43,0x45,0x9,0x12,
+  0x72,0x92,0xa8,0x5b,0xfc,0xd3,0x3d,0xf4,0x70,0x37,0x19,0xa4,0x7a,0xbc,0x1e,0xb6,
+  0x73,0x20,0x40,0x7e,0xb8,0xb4,0x9f,0x14,0x2a,0x5a,0x63,0x80,0xc4,0xa8,0x5b,0x26,
+  0xac,0x7b,0x64,0xc2,0xfd,0x96,0x61,0xdb,0x44,0x2,0xf4,0x92,0x40,0xdd,0xc0,0x1f,
+  0x54,0x12,0x71,0x1f,0x22,0x70,0x1f,0x12,0xf0,0x8b,0xa1,0x89,0x87,0x4,0x18,0xac,
+  0xf5,0x2a,0x82,0x6c,0x36,0x1,0xba,0xdd,0xda,0x6d,0xd8,0xfe,0xe,0x9,0xd0,0x4f,
+  0x4d,0xe0,0x1c,0x34,0x31,0x17,0x24,0xa5,0xc3,0x36,0x6c,0xc3,0x36,0x6c,0xc3,0x36,
+  0x6c,0xc3,0xb6,0xf9,0xed,0xff,0x3,0x9e,0x3d,0x7a,0x1d,0x1a,0xc3,0x59,0x38,0x0,
+  0x0,0x0,0x0,0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82,
+  
+};
+
+static const unsigned char qt_resource_name[] = {
+  // images
+  0x0,0x6,
+  0x7,0x3,0x7d,0xc3,
+  0x0,0x69,
+  0x0,0x6d,0x0,0x61,0x0,0x67,0x0,0x65,0x0,0x73,
+    // video.png
+  0x0,0x9,
+  0xa,0xc2,0xae,0xa7,
+  0x0,0x76,
+  0x0,0x69,0x0,0x64,0x0,0x65,0x0,0x6f,0x0,0x2e,0x0,0x70,0x0,0x6e,0x0,0x67,
+    // priv.png
+  0x0,0x8,
+  0x9,0x9,0x59,0xa7,
+  0x0,0x70,
+  0x0,0x72,0x0,0x69,0x0,0x76,0x0,0x2e,0x0,0x70,0x0,0x6e,0x0,0x67,
+    // watermark2.jpg
+  0x0,0xe,
+  0x9,0xbc,0x69,0x7,
+  0x0,0x77,
+  0x0,0x61,0x0,0x74,0x0,0x65,0x0,0x72,0x0,0x6d,0x0,0x61,0x0,0x72,0x0,0x6b,0x0,0x32,0x0,0x2e,0x0,0x6a,0x0,0x70,0x0,0x67,
+    // watermark1.jpg
+  0x0,0xe,
+  0x9,0xbd,0x69,0x7,
+  0x0,0x77,
+  0x0,0x61,0x0,0x74,0x0,0x65,0x0,0x72,0x0,0x6d,0x0,0x61,0x0,0x72,0x0,0x6b,0x0,0x31,0x0,0x2e,0x0,0x6a,0x0,0x70,0x0,0x67,
+    // logo1.jpg
+  0x0,0x9,
+  0xe,0x24,0xb7,0xc7,
+  0x0,0x6c,
+  0x0,0x6f,0x0,0x67,0x0,0x6f,0x0,0x31,0x0,0x2e,0x0,0x6a,0x0,0x70,0x0,0x67,
+    // setting.png
+  0x0,0xb,
+  0x0,0xbd,0xc0,0x27,
+  0x0,0x73,
+  0x0,0x65,0x0,0x74,0x0,0x74,0x0,0x69,0x0,0x6e,0x0,0x67,0x0,0x2e,0x0,0x70,0x0,0x6e,0x0,0x67,
+    // audio.png
+  0x0,0x9,
+  0xb,0x2,0x86,0x27,
+  0x0,0x61,
+  0x0,0x75,0x0,0x64,0x0,0x69,0x0,0x6f,0x0,0x2e,0x0,0x70,0x0,0x6e,0x0,0x67,
+  
+};
+
+static const unsigned char qt_resource_struct[] = {
+  // :
+  0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x1,
+  // :/images
+  0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x7,0x0,0x0,0x0,0x2,
+  // :/images/setting.png
+  0x0,0x0,0x0,0x9c,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0xc4,0x4a,
+  // :/images/priv.png
+  0x0,0x0,0x0,0x2a,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x2e,0x20,
+  // :/images/watermark2.jpg
+  0x0,0x0,0x0,0x40,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x53,0x99,
+  // :/images/watermark1.jpg
+  0x0,0x0,0x0,0x62,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x5f,0x58,
+  // :/images/video.png
+  0x0,0x0,0x0,0x12,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0,
+  // :/images/audio.png
+  0x0,0x0,0x0,0xb8,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x1,0x91,0xba,
+  // :/images/logo1.jpg
+  0x0,0x0,0x0,0x84,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x6b,0x17,
+
+};
+
+QT_BEGIN_NAMESPACE
+
+extern Q_CORE_EXPORT bool qRegisterResourceData
+    (int, const unsigned char *, const unsigned char *, const unsigned char *);
+
+extern Q_CORE_EXPORT bool qUnregisterResourceData
+    (int, const unsigned char *, const unsigned char *, const unsigned char *);
+
+QT_END_NAMESPACE
+
+
+int QT_MANGLE_NAMESPACE(qInitResources_actd)()
+{
+    QT_PREPEND_NAMESPACE(qRegisterResourceData)
+        (0x01, qt_resource_struct, qt_resource_name, qt_resource_data);
+    return 1;
+}
+
+Q_CONSTRUCTOR_FUNCTION(QT_MANGLE_NAMESPACE(qInitResources_actd))
+
+int QT_MANGLE_NAMESPACE(qCleanupResources_actd)()
+{
+    QT_PREPEND_NAMESPACE(qUnregisterResourceData)
+       (0x01, qt_resource_struct, qt_resource_name, qt_resource_data);
+    return 1;
+}
+
+Q_DESTRUCTOR_FUNCTION(QT_MANGLE_NAMESPACE(qCleanupResources_actd))
+
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/newconfwizard.h
@@ -0,0 +1,84 @@
+#ifndef NEWCONFWIZARD_H
+#define NEWCONFWIZARD_H
+
+#include <QWizard>
+#include <QDateTime>
+#include "announcement.h"
+
+class QLabel;
+class QLineEdit;
+class QCheckBox;
+class QGroupBox;
+class QRadioButton;
+class QTextEdit;
+class QDateTimeEdit;
+class QSpinBox;
+
+class ConfWizard : public QWizard
+{
+	Q_OBJECT
+
+public:
+	ConfWizard(QWidget *parent = 0);
+
+	void accept();
+	Announcement *getAnnouncement();
+
+private:
+	Announcement *a;
+
+};
+
+class IntroPage : public QWizardPage
+{
+	Q_OBJECT
+
+public:
+	IntroPage(QWidget *parent = 0);
+
+private:
+	QLabel *label;
+};
+
+class ConfigPage: public QWizardPage
+{
+	Q_OBJECT
+public:
+	ConfigPage(QWidget *parent = 0);
+private:
+	QLabel *confNameLabel;
+	QLabel *organizerLabel;
+	QLabel *emailLabel;
+	QLabel *descLabel;
+	QLabel *dateLabel;
+	QLabel *timeLabel;
+	QLabel *durationLabel;
+	QLabel *hourLabel;
+	QLabel *minuteLabel;
+
+	QLineEdit *confNameLineEdit;
+	QLineEdit *organizerLineEdit;
+	QLineEdit *emailLineEdit;
+	QCheckBox *videoCheckBox;
+	QCheckBox *privateConfBox;
+	QTextEdit *descTextEdit;
+	QDateTimeEdit *date;
+	QDateTimeEdit *time;
+	QSpinBox *hourEdit;
+	QSpinBox *minuteEdit;
+};
+
+class ConclusionPage : public QWizardPage
+{
+	Q_OBJECT
+public:
+	ConclusionPage(QWidget *parent = 0);
+protected:
+	void initializePage();
+private:
+	QLabel *label;
+};
+
+
+
+#endif
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/debugbox.cpp
@@ -0,0 +1,20 @@
+#include "debugbox.h"
+#include <QMessageBox>
+
+#ifdef QT_NO_DEBUG
+void debug(QString msg) {
+}
+
+void critical (QString msg) {
+}
+
+#else
+void debug(QString msg) {
+	qDebug() << "+++++Debug: "<<  msg << "\n";
+}
+
+void critical (QString msg) {
+	debug(msg);
+	exit(1);
+}
+#endif
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/moc_newconfwizard.cpp
@@ -0,0 +1,216 @@
+/****************************************************************************
+** Meta object code from reading C++ file 'newconfwizard.h'
+**
+** Created: Thu Jul 7 16:58:53 2011
+**      by: The Qt Meta Object Compiler version 62 (Qt 4.7.0)
+**
+** WARNING! All changes made in this file will be lost!
+*****************************************************************************/
+
+#include "newconfwizard.h"
+#if !defined(Q_MOC_OUTPUT_REVISION)
+#error "The header file 'newconfwizard.h' doesn't include <QObject>."
+#elif Q_MOC_OUTPUT_REVISION != 62
+#error "This file was generated using the moc from 4.7.0. It"
+#error "cannot be used with the include files from this version of Qt."
+#error "(The moc has changed too much.)"
+#endif
+
+QT_BEGIN_MOC_NAMESPACE
+static const uint qt_meta_data_ConfWizard[] = {
+
+ // content:
+       5,       // revision
+       0,       // classname
+       0,    0, // classinfo
+       0,    0, // methods
+       0,    0, // properties
+       0,    0, // enums/sets
+       0,    0, // constructors
+       0,       // flags
+       0,       // signalCount
+
+       0        // eod
+};
+
+static const char qt_meta_stringdata_ConfWizard[] = {
+    "ConfWizard\0"
+};
+
+const QMetaObject ConfWizard::staticMetaObject = {
+    { &QWizard::staticMetaObject, qt_meta_stringdata_ConfWizard,
+      qt_meta_data_ConfWizard, 0 }
+};
+
+#ifdef Q_NO_DATA_RELOCATION
+const QMetaObject &ConfWizard::getStaticMetaObject() { return staticMetaObject; }
+#endif //Q_NO_DATA_RELOCATION
+
+const QMetaObject *ConfWizard::metaObject() const
+{
+    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
+}
+
+void *ConfWizard::qt_metacast(const char *_clname)
+{
+    if (!_clname) return 0;
+    if (!strcmp(_clname, qt_meta_stringdata_ConfWizard))
+        return static_cast<void*>(const_cast< ConfWizard*>(this));
+    return QWizard::qt_metacast(_clname);
+}
+
+int ConfWizard::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
+{
+    _id = QWizard::qt_metacall(_c, _id, _a);
+    if (_id < 0)
+        return _id;
+    return _id;
+}
+static const uint qt_meta_data_IntroPage[] = {
+
+ // content:
+       5,       // revision
+       0,       // classname
+       0,    0, // classinfo
+       0,    0, // methods
+       0,    0, // properties
+       0,    0, // enums/sets
+       0,    0, // constructors
+       0,       // flags
+       0,       // signalCount
+
+       0        // eod
+};
+
+static const char qt_meta_stringdata_IntroPage[] = {
+    "IntroPage\0"
+};
+
+const QMetaObject IntroPage::staticMetaObject = {
+    { &QWizardPage::staticMetaObject, qt_meta_stringdata_IntroPage,
+      qt_meta_data_IntroPage, 0 }
+};
+
+#ifdef Q_NO_DATA_RELOCATION
+const QMetaObject &IntroPage::getStaticMetaObject() { return staticMetaObject; }
+#endif //Q_NO_DATA_RELOCATION
+
+const QMetaObject *IntroPage::metaObject() const
+{
+    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
+}
+
+void *IntroPage::qt_metacast(const char *_clname)
+{
+    if (!_clname) return 0;
+    if (!strcmp(_clname, qt_meta_stringdata_IntroPage))
+        return static_cast<void*>(const_cast< IntroPage*>(this));
+    return QWizardPage::qt_metacast(_clname);
+}
+
+int IntroPage::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
+{
+    _id = QWizardPage::qt_metacall(_c, _id, _a);
+    if (_id < 0)
+        return _id;
+    return _id;
+}
+static const uint qt_meta_data_ConfigPage[] = {
+
+ // content:
+       5,       // revision
+       0,       // classname
+       0,    0, // classinfo
+       0,    0, // methods
+       0,    0, // properties
+       0,    0, // enums/sets
+       0,    0, // constructors
+       0,       // flags
+       0,       // signalCount
+
+       0        // eod
+};
+
+static const char qt_meta_stringdata_ConfigPage[] = {
+    "ConfigPage\0"
+};
+
+const QMetaObject ConfigPage::staticMetaObject = {
+    { &QWizardPage::staticMetaObject, qt_meta_stringdata_ConfigPage,
+      qt_meta_data_ConfigPage, 0 }
+};
+
+#ifdef Q_NO_DATA_RELOCATION
+const QMetaObject &ConfigPage::getStaticMetaObject() { return staticMetaObject; }
+#endif //Q_NO_DATA_RELOCATION
+
+const QMetaObject *ConfigPage::metaObject() const
+{
+    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
+}
+
+void *ConfigPage::qt_metacast(const char *_clname)
+{
+    if (!_clname) return 0;
+    if (!strcmp(_clname, qt_meta_stringdata_ConfigPage))
+        return static_cast<void*>(const_cast< ConfigPage*>(this));
+    return QWizardPage::qt_metacast(_clname);
+}
+
+int ConfigPage::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
+{
+    _id = QWizardPage::qt_metacall(_c, _id, _a);
+    if (_id < 0)
+        return _id;
+    return _id;
+}
+static const uint qt_meta_data_ConclusionPage[] = {
+
+ // content:
+       5,       // revision
+       0,       // classname
+       0,    0, // classinfo
+       0,    0, // methods
+       0,    0, // properties
+       0,    0, // enums/sets
+       0,    0, // constructors
+       0,       // flags
+       0,       // signalCount
+
+       0        // eod
+};
+
+static const char qt_meta_stringdata_ConclusionPage[] = {
+    "ConclusionPage\0"
+};
+
+const QMetaObject ConclusionPage::staticMetaObject = {
+    { &QWizardPage::staticMetaObject, qt_meta_stringdata_ConclusionPage,
+      qt_meta_data_ConclusionPage, 0 }
+};
+
+#ifdef Q_NO_DATA_RELOCATION
+const QMetaObject &ConclusionPage::getStaticMetaObject() { return staticMetaObject; }
+#endif //Q_NO_DATA_RELOCATION
+
+const QMetaObject *ConclusionPage::metaObject() const
+{
+    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
+}
+
+void *ConclusionPage::qt_metacast(const char *_clname)
+{
+    if (!_clname) return 0;
+    if (!strcmp(_clname, qt_meta_stringdata_ConclusionPage))
+        return static_cast<void*>(const_cast< ConclusionPage*>(this));
+    return QWizardPage::qt_metacast(_clname);
+}
+
+int ConclusionPage::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
+{
+    _id = QWizardPage::qt_metacall(_c, _id, _a);
+    if (_id < 0)
+        return _id;
+    return _id;
+}
+QT_END_MOC_NAMESPACE
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/sessionenum.h
@@ -0,0 +1,105 @@
+#ifndef SESSIONENUM_H
+#define SESSIONENUM_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+#include <openssl/evp.h>
+#include <openssl/rand.h>
+#include <openssl/x509.h>
+#include <openssl/aes.h>
+#include <openssl/hmac.h>
+#include <openssl/pem.h>
+#include <ccn/ccn.h>
+#include <ccn/bloom.h>
+#include <ccn/charbuf.h>
+#include <ccn/keystore.h>
+#include <ccn/signing.h>
+#include <ccn/uri.h>
+#include <errno.h>
+#ifdef __cplusplus
+}
+#endif
+
+#include "announcement.h"
+#include <QThread>
+#include <QObject>
+#include <QTimer>
+#include <QUuid>
+
+class SessionEnum: public QThread {
+	Q_OBJECT
+
+public:
+	void run();
+	void startThread();
+	void stopThread();
+	SessionEnum(QString prefix);
+	SessionEnum();
+	~SessionEnum();
+	void setPrefix(QString prefix) { this->prefix = prefix; }
+	void removeFromMyConferences(Announcement *a);
+	void addToMyConferences(Announcement *a);
+	void addToConferences(Announcement *a, bool pub);
+	void handleDismissEvent(struct ccn_upcall_info *info);
+	void handleEnumInterest(struct ccn_upcall_info *info);
+	void handleEnumContent(struct ccn_upcall_info *info);
+	void handleEnumPrivateInterest(struct ccn_upcall_info *info);
+	void handleEnumPrivateContent(struct ccn_upcall_info *info);
+	bool isConferenceRefresh(unsigned char *hash, bool pub);
+	void sendDismissSignal(Announcement *a);
+	void setListPrivate(bool b);
+
+private slots:
+	void enumerate();
+	void enumeratePriConf();
+	void enumeratePubConf();
+	void checkAlive();
+
+
+signals:
+	void expired(QString, QString);
+	void add(Announcement *);
+
+private:
+	void ccnConnect();
+	void initKeystoreAndSignedInfo();
+	void loadPublicAndPrivateKeys();
+	static int pubKeyEncrypt(EVP_PKEY *public_key, const unsigned char *data, size_t data_length,
+					  unsigned char **encrypted_output, size_t *encrypted_output_length);
+	static int priKeyDecrypt(EVP_PKEY *private_key, const unsigned char *ciphertext, size_t ciphertext_length,
+					  unsigned char **decrypted_output, size_t *decrypted_output_length);
+
+	static int symDecrypt(const unsigned char *key, const unsigned char *iv, const unsigned char *ciphertext, 
+						   size_t ciphertext_length, unsigned char **plaintext, size_t *plaintext_length, 
+						   size_t plaintext_padding);
+
+	static int symEncrypt(const unsigned char *key, const unsigned char *iv, const unsigned char *plaintext, 
+						   size_t plaintext_length, unsigned char **ciphertext, size_t *ciphertext_length,
+						   size_t padding); 
+
+private:
+	QString prefix;
+	QList<Announcement *> myConferences;
+	QList<Announcement *> myPrivateConferences;
+	QList<FetchedAnnouncement *> pubConferences;
+	QList<FetchedAnnouncement *> priConferences;
+	bool bRunning;
+	struct ccn *ccn;
+	struct ccn_closure *to_announce;
+	struct ccn_closure *to_announce_private;
+	struct ccn_closure *fetch_announce;
+	struct ccn_closure *fetch_private;
+	struct ccn_closure *handle_dismiss;
+	struct ccn_keystore *keystore;
+	struct ccn_keystore *actd_keystore;
+	struct ccn_charbuf *signed_info;
+	QTimer *enumTimer;
+	QTimer *aliveTimer;
+	QString uuid;
+	bool listPrivate;
+	QList<struct ccn_pkey *>publicKeys;
+};
+
+
+#endif
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/mainwindow.h
@@ -0,0 +1,84 @@
+#ifndef MAINWINDOW_H
+#define MAINWINDOW_H
+
+#include <QDialog>
+#include <QHash>
+#include <QTextEdit>
+#include <QProcess>
+
+#include "newconfwizard.h"
+#include "sessionenum.h"
+
+class QDialogButtonBox;
+class QTreeWidget;
+class QTreeWidgetItem;
+class QPushButton;
+class QUrlInfo;
+class ConfWizard;
+
+class MainWindow: public QDialog
+{
+	Q_OBJECT
+
+public:
+	MainWindow(char * argv[], QWidget *parent = 0);
+	QSize sizeHint() const;
+
+private slots:
+
+	void processItem();
+	void joinConference();
+	void editConference();
+	void dismissConference();
+	void newConference();
+	void about();
+	void changePref();
+	void addConferenceToList(Announcement *announce);
+	void removeConferenceFromList(QString, QString);
+	void listPrivateConferences();
+
+private:
+	void readSettings();
+	void writeSettings();
+
+
+private:
+	QTreeWidget *pubConfList;
+	//QTreeWidget *myConfList;
+
+	QHash<QTreeWidgetItem *, Announcement *> itemToAnnouncement;
+
+	QLabel *pubConfLabel;
+	//QLabel *myConfLabel;
+	QLabel *confDescLabel;
+	QLabel *currentPrefLabel;
+
+	QPushButton *newButton;
+	QPushButton *prefButton;
+	QPushButton *aboutButton;
+	QPushButton *quitButton;
+
+
+	QPushButton *joinButton;
+	QPushButton *editButton;
+	QPushButton *dismissButton;
+
+	QCheckBox *listPrivate;
+	
+	QTextEdit *confDesc;
+
+//	QDialogButtonBox *topButtonBox;
+	QDialogButtonBox *footButtonBox;
+
+	QString prefix;
+	QString audioPath;
+	
+	SessionEnum * sd;
+
+	QProcess *audioProcess;
+
+	QString binaryPath;
+
+};
+
+#endif
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/debugbox.h
@@ -0,0 +1,7 @@
+#ifndef DEBUGBOX_H
+#define DEBUGBOX_H
+#include <QString>
+#include <QDebug>
+void debug(QString msg);
+void critical(QString msg);
+#endif
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/newconfwizard.cpp
@@ -0,0 +1,203 @@
+#include "newconfwizard.h"
+#include <QtGui>
+#include <QSpinBox>
+#ifdef __cplusplus
+extern "C" {
+#endif
+#include <openssl/rand.h>
+#ifdef __cplusplus
+}
+#endif
+
+
+Announcement *ConfWizard::getAnnouncement() {
+	return a;
+}
+
+ConfWizard::ConfWizard(QWidget *parent)
+	: QWizard(parent)
+{
+	addPage(new IntroPage);
+	addPage(new ConfigPage);
+	addPage(new ConclusionPage);
+	a = NULL;
+	setWindowTitle(tr("Conference Announcement Wizard"));
+}
+
+void ConfWizard::accept() {
+
+	a = new Announcement();
+	a->setOwner(true);
+	QString confName = field("confName").toString();
+	a->setConfName(confName);
+	QString organizer = field("organizer").toString();
+	a->setOrganizer(organizer);
+	QString email = field("email").toString();
+	a->setEmail(email);
+	a->setAudio(true);
+	bool video = field("video").toBool();
+	a->setVideo(video);
+	QString desc = field("confDesc").toString();
+	a->setDesc(desc);
+	QDate date = field("date").toDateTime().date();
+	a->setDate(date);
+	QTime time = field("time").toDateTime().time();
+	a->setTime(time);
+	int hours = field("hours").toInt();
+	a->setHours(hours);
+	int minutes = field("minutes").toInt();
+	a->setMinutes(minutes);
+	bool isPrivate = field("private").toBool();
+	a->setIsPrivate(isPrivate);
+
+	if (isPrivate) {
+		QSettings settings("UCLA-IRL", "ACTD");
+		QString qsCerts = settings.value("qsCerts").toString();
+		settings.setValue("qsCerts", "");
+		QStringList certs = qsCerts.split(":");
+		a->setCerts(certs);
+		
+		unsigned char bytes[32];
+		RAND_bytes(bytes, 32);
+		QByteArray qba((char *)bytes, int (32));
+		QString opaqueName(qba.toBase64()) ;
+		a->setOpaqueName(opaqueName);
+
+		a->initConferenceKey();
+		a->initAudioSessionKey();
+	}
+
+
+	QDialog::accept();
+
+}
+
+IntroPage::IntroPage(QWidget *parent)
+	: QWizardPage(parent)
+{
+	setTitle(tr("Introduction"));
+	setPixmap(QWizard::WatermarkPixmap, QPixmap(":/images/watermark1.jpg"));
+	label = new QLabel(tr("This wizard will generate the conference announcement"
+						 "for you. You simply need to fill in the information"
+						"required according to the hints on the screen."));
+	label->setWordWrap(true);
+	QVBoxLayout *layout = new QVBoxLayout;
+	layout->addWidget(label);
+	setLayout(layout);
+}
+
+ConclusionPage::ConclusionPage(QWidget *parent)
+	:QWizardPage(parent)
+{
+	setTitle(tr("Conclusion"));
+	setPixmap(QWizard::WatermarkPixmap, QPixmap(":/images/watermark2.jpg"));
+
+	label = new QLabel;
+	label->setWordWrap(true);
+
+	QVBoxLayout *layout = new QVBoxLayout;
+	layout->addWidget(label);
+	setLayout(layout);
+	
+}
+
+void ConclusionPage::initializePage()
+{
+	bool isPrivate = field("private").toBool();
+	if (isPrivate) {
+		QStringList certs = QFileDialog::getOpenFileNames(this, "Select the certs of eligible participants",
+														"", "Certs (*.pem)");
+		QString qsCerts = certs.join(":");
+		QSettings settings("UCLA-IRL", "ACTD");
+		settings.setValue("qsCerts", qsCerts);
+	}
+	QString finishText = wizard()->buttonText(QWizard::FinishButton);
+	finishText.remove('&');
+	label->setText(tr("Click %1 to generate the conference announement.").arg(finishText));
+}
+
+ConfigPage::ConfigPage(QWidget *parent)
+	:QWizardPage(parent)
+{
+
+	setTitle(tr("Conference Information"));
+	setPixmap(QWizard::LogoPixmap, QPixmap(":/images/logo1.jpg"));
+
+	confNameLabel = new QLabel(tr("&Conference Name:"));
+	confNameLineEdit = new QLineEdit;
+	confNameLabel->setBuddy(confNameLineEdit);
+
+	organizerLabel = new QLabel(tr("&Organizer Name:"));
+	organizerLineEdit = new QLineEdit;
+	organizerLabel->setBuddy(organizerLineEdit);
+
+	emailLabel = new QLabel(tr("&Email:"));
+	emailLineEdit = new QLineEdit;
+	emailLabel->setBuddy(emailLineEdit);
+
+	videoCheckBox = new QCheckBox(tr("Enable Video"));
+	privateConfBox = new QCheckBox(tr("Private Conference"));
+
+	descLabel = new QLabel(tr("Conference &Description"));
+	descTextEdit = new QTextEdit;
+	descLabel->setBuddy(descTextEdit);
+
+	dateLabel = new QLabel(tr("Date & Time:"));
+	date = new QDateTimeEdit(QDate::currentDate());
+	date->setMinimumDate(QDate::currentDate());
+	date->setCalendarPopup(true);
+
+	time = new QDateTimeEdit(QTime::currentTime());
+	time->setCurrentSection(QDateTimeEdit::HourSection);
+
+	QHBoxLayout *dtLayout = new QHBoxLayout;
+	dtLayout->addWidget(date);
+	dtLayout->addWidget(time);
+
+
+	durationLabel = new QLabel(tr("Duration:"));
+	hourLabel = new QLabel(tr("Hours"));
+	minuteLabel = new QLabel(tr("Minutes"));
+
+	hourEdit = new QSpinBox;
+	hourEdit->setRange(0, 23);
+	minuteEdit = new QSpinBox;
+	minuteEdit->setRange(0, 59);
+	minuteEdit->setSingleStep(5);
+
+	QHBoxLayout *durationLayout = new QHBoxLayout;
+	durationLayout->addWidget(hourEdit);
+	durationLayout->addWidget(hourLabel);
+	durationLayout->addWidget(minuteEdit);
+	durationLayout->addWidget(minuteLabel);
+	
+	registerField("confName*", confNameLineEdit); // mandatory
+	registerField("organizer*", organizerLineEdit); // mandatory
+	registerField("email", emailLineEdit);
+	registerField("video", videoCheckBox);
+	registerField("confDesc", descTextEdit, "plainText");
+	registerField("date", date);
+	registerField("time", time);
+	registerField("hours", hourEdit, "value");
+	registerField("minutes", minuteEdit, "value");
+	registerField("private", privateConfBox);
+	
+	QGridLayout *layout = new QGridLayout;
+	layout->addWidget(confNameLabel, 0, 0);
+	layout->addWidget(confNameLineEdit, 0, 1);
+	layout->addWidget(organizerLabel, 1, 0);
+	layout->addWidget(organizerLineEdit, 1, 1);
+	layout->addWidget(emailLabel, 2, 0);
+	layout->addWidget(emailLineEdit, 2, 1);
+	layout->addWidget(videoCheckBox, 3, 0);
+	layout->addWidget(privateConfBox, 3, 1);
+	layout->addWidget(dateLabel, 4, 0);
+	layout->addLayout(dtLayout, 4, 1);
+	layout->addWidget(durationLabel, 5, 0);
+	layout->addLayout(durationLayout, 5, 1);
+	layout->addWidget(descLabel, 6, 0, 1, 2);
+	layout->addWidget(descTextEdit, 7, 0, 3, 2);
+
+	setLayout(layout);
+
+}
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/actd.pro
@@ -0,0 +1,28 @@
+include(../mumble.pri)
+TEMPLATE = app
+TARGET = actd
+HEADERS = mainwindow.h \
+		  newconfwizard.h \
+		  announcement.h \
+		  sessionenum.h \
+		  debugbox.h
+
+SOURCES = mainwindow.cpp \
+		  newconfwizard.cpp \
+		  announcement.cpp \
+		  sessionenum.cpp \
+		  debugbox.cpp \
+		  main.cpp 
+
+RESOURCES = actd.qrc
+DIST *= actd.icns images/audio.png images/logo1.png images/priv.png images/watermark1.png images/watermark2.png images/video.png images/setting.png
+
+QMAKE_LIBDIR *= /usr/local/lib
+INCLUDEPATH *= /usr/local/include
+LIBS *= -lccn -lssl -lcrypto
+ICON = actd.icns
+CONFIG += console 
+QT += xml
+
+system("(test -e ~/.actd/actd_private_key.pem) &&( test -e ~/.actd/actd_cert.pem) || ./actd_initkeystore.sh")
+include(../../symbols.pri)
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/moc_mainwindow.cpp
@@ -0,0 +1,102 @@
+/****************************************************************************
+** Meta object code from reading C++ file 'mainwindow.h'
+**
+** Created: Thu Jul 7 16:58:52 2011
+**      by: The Qt Meta Object Compiler version 62 (Qt 4.7.0)
+**
+** WARNING! All changes made in this file will be lost!
+*****************************************************************************/
+
+#include "mainwindow.h"
+#if !defined(Q_MOC_OUTPUT_REVISION)
+#error "The header file 'mainwindow.h' doesn't include <QObject>."
+#elif Q_MOC_OUTPUT_REVISION != 62
+#error "This file was generated using the moc from 4.7.0. It"
+#error "cannot be used with the include files from this version of Qt."
+#error "(The moc has changed too much.)"
+#endif
+
+QT_BEGIN_MOC_NAMESPACE
+static const uint qt_meta_data_MainWindow[] = {
+
+ // content:
+       5,       // revision
+       0,       // classname
+       0,    0, // classinfo
+      10,   14, // methods
+       0,    0, // properties
+       0,    0, // enums/sets
+       0,    0, // constructors
+       0,       // flags
+       0,       // signalCount
+
+ // slots: signature, parameters, type, tag, flags
+      12,   11,   11,   11, 0x08,
+      26,   11,   11,   11, 0x08,
+      43,   11,   11,   11, 0x08,
+      60,   11,   11,   11, 0x08,
+      80,   11,   11,   11, 0x08,
+      96,   11,   11,   11, 0x08,
+     104,   11,   11,   11, 0x08,
+     126,  117,   11,   11, 0x08,
+     163,  161,   11,   11, 0x08,
+     205,   11,   11,   11, 0x08,
+
+       0        // eod
+};
+
+static const char qt_meta_stringdata_MainWindow[] = {
+    "MainWindow\0\0processItem()\0joinConference()\0"
+    "editConference()\0dismissConference()\0"
+    "newConference()\0about()\0changePref()\0"
+    "announce\0addConferenceToList(Announcement*)\0"
+    ",\0removeConferenceFromList(QString,QString)\0"
+    "listPrivateConferences()\0"
+};
+
+const QMetaObject MainWindow::staticMetaObject = {
+    { &QDialog::staticMetaObject, qt_meta_stringdata_MainWindow,
+      qt_meta_data_MainWindow, 0 }
+};
+
+#ifdef Q_NO_DATA_RELOCATION
+const QMetaObject &MainWindow::getStaticMetaObject() { return staticMetaObject; }
+#endif //Q_NO_DATA_RELOCATION
+
+const QMetaObject *MainWindow::metaObject() const
+{
+    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
+}
+
+void *MainWindow::qt_metacast(const char *_clname)
+{
+    if (!_clname) return 0;
+    if (!strcmp(_clname, qt_meta_stringdata_MainWindow))
+        return static_cast<void*>(const_cast< MainWindow*>(this));
+    return QDialog::qt_metacast(_clname);
+}
+
+int MainWindow::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
+{
+    _id = QDialog::qt_metacall(_c, _id, _a);
+    if (_id < 0)
+        return _id;
+    if (_c == QMetaObject::InvokeMetaMethod) {
+        switch (_id) {
+        case 0: processItem(); break;
+        case 1: joinConference(); break;
+        case 2: editConference(); break;
+        case 3: dismissConference(); break;
+        case 4: newConference(); break;
+        case 5: about(); break;
+        case 6: changePref(); break;
+        case 7: addConferenceToList((*reinterpret_cast< Announcement*(*)>(_a[1]))); break;
+        case 8: removeConferenceFromList((*reinterpret_cast< QString(*)>(_a[1])),(*reinterpret_cast< QString(*)>(_a[2]))); break;
+        case 9: listPrivateConferences(); break;
+        default: ;
+        }
+        _id -= 10;
+    }
+    return _id;
+}
+QT_END_MOC_NAMESPACE
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/main.cpp
@@ -0,0 +1,15 @@
+#include <QApplication>
+#include "mainwindow.h"
+#include <QIcon>
+
+int main(int argc, char *argv[])
+{
+	Q_INIT_RESOURCE(actd);
+	QApplication app(argc, argv);
+	app.setWindowIcon(QIcon(":/actd.icns"));
+	MainWindow actdWin(argv);
+	actdWin.show();
+	actdWin.activateWindow();
+	actdWin.raise();
+	return actdWin.exec();
+}
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/INSTALL
@@ -0,0 +1,6 @@
+Make sure you have Qt installed on your system.
+
+Type the following command to compile actd:
+qmake actd.pro
+make
+
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/README
@@ -0,0 +1,11 @@
+actd is a program resembles sd of MBONE. 
+
+It performs the following tasks:
+- 1. List all the scheduled or on-going conferences
+- 2. Allow user to create new conferences
+- 3. Launch corresponding audio tool when the user wants to join a conference
+
+When first launched, it asks for the name prefix that is going to be used by the media data. Make sure that this name is routable. It can later be changed by clicking the "Preference" button.
+
+If you have further problem, contact:
+zhenkai@cs.ucla.edu
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/actd/announcement.h
@@ -0,0 +1,116 @@
+#ifndef ANNOUNCEMENT_H
+#define ANNOUNCEMENT_H
+
+#include <QUuid>
+#include <QDateTime>
+#include <QDomDocument>
+#include <QStringList>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+#include <openssl/rand.h>
+#ifdef __cplusplus
+}
+#endif
+
+#define KEY_LENGTH 512/8
+#define SHA_DIGEST_LENGTH 20
+
+class Announcement
+{
+	private:
+
+		QString confName;
+		QString organizer;
+		QString email;
+		bool own;
+		bool audio;
+		bool video;
+		QString desc;
+		QDate date;
+		QTime time;
+		int hours;
+		int minutes;
+		QString uuid;
+		bool isPrivate;
+		QStringList certs;
+		QString opaqueName;
+		QString out;
+
+
+	public:
+		Announcement();
+		void copy(Announcement *a);
+
+		QString getConfName() { return confName; }
+		QString getOrganizer() { return organizer; }
+		QString getEmail() { return email; }
+		QString getUuid() {return uuid; }
+		bool getAudio() { return audio; }
+		bool getVideo() { return video; }
+		bool getOwner() { return own; }
+		QString getDesc() { return desc; }
+		QDate getDate() { return date; }
+		QTime getTime() { return time; }
+		int getHours() { return hours; }
+		int getMinutes() { return minutes; }
+		bool getIsPrivate() { return isPrivate; }
+		bool equalDigest(unsigned char *hash);
+		QStringList &getCerts() { return certs; }
+		QString getOpaqueName() { return opaqueName; }
+		QString getXmlOut() { return out; }
+
+
+		void setConfName(QString confName) { this->confName = confName; }
+		void setOrganizer(QString organizer) { this->organizer = organizer; }
+		void setEmail(QString email) { this->email = email; }
+		void setUuid(QString uuid) { this->uuid = uuid; }
+		void setOwner(bool own) { this->own = own; }
+		void setAudio(bool audio) { this->audio = audio; }
+		void setVideo(bool video) { this->video = video; }
+		void setDesc(QString desc) { this->desc = desc; }
+		void setDate(QDate date) { this->date = date; }
+		void setTime(QTime time) { this->time = time; }
+		void setHours(int hours) { this->hours = hours; }
+		void setMinutes(int minutes) { this->minutes = minutes; }
+		void setIsPrivate(bool b) { isPrivate = b; }
+		void setCerts(QStringList &certs) { this->certs = certs; }
+		void setOpaqueName(QString opaqueName) { this->opaqueName = opaqueName; }
+		void setXmlOut(QString out) { this->out = out; }
+		void setDigest(unsigned char *hash);
+		void initConferenceKey();
+		void initAudioSessionKey();
+
+		unsigned char conferenceKey[KEY_LENGTH];
+		unsigned char audioSessionKey[KEY_LENGTH];
+		unsigned char digest[SHA_DIGEST_LENGTH];
+
+};
+
+QDataStream &operator<<(QDataStream &out, Announcement *a);
+
+
+
+class FetchedAnnouncement : public Announcement
+{
+	public:
+		FetchedAnnouncement();
+		void refreshReceived();
+		bool isStaled();
+		bool needRefresh();
+		bool isDismissed() { return dismissed; }
+		void setDismissed(bool dismissed) { this->dismissed = dismissed; }
+		bool getIsEligible() { return isEligible; }
+		void setIsEligible(bool b) { isEligible = b; }
+	
+	private:
+		QDateTime timestamp;
+		bool dismissed;
+		bool isEligible;
+};
+
+QString &operator<<(QString &out, Announcement *a);
+QDomDocument &operator>>(QDomDocument &in, Announcement *a);
+
+#endif
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/VoiceRecorder.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/VoiceRecorder.h
@@ -1,6 +1,6 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2010-2011, Benjamin Jemlich <pcgod@users.sourceforge.net>
-   Copyright (C) 2010-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2010, Benjamin Jemlich <pcgod@users.sourceforge.net>
+   Copyright (C) 2010, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -36,10 +36,10 @@
 #pragma once
 
 #include "mumble_pch.hpp"
-#include "Timer.h"
 
 class ClientUser;
 class RecordUser;
+struct Timer;
 
 namespace VoiceRecorderFormat {
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/GlobalShortcut_win.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/GlobalShortcut_win.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -30,7 +30,9 @@
 
 #include "GlobalShortcut_win.h"
 #include "MainWindow.h"
+#ifndef COMPAT_CLIENT
 #include "Overlay.h"
+#endif
 #include "Global.h"
 #include "../../overlay/HardHook.h"
 
@@ -46,6 +48,8 @@ static uint qHash(const GUID &a) {
 	return val;
 }
 
+#ifndef COMPAT_CLIENT
+
 static HWND WINAPI HookWindowFromPoint(POINT p);
 static BOOL WINAPI HookSetForegroundWindow(HWND hwnd);
 
@@ -80,6 +84,8 @@ static BOOL WINAPI HookSetForegroundWind
 	return ret;
 }
 
+#endif
+
 GlobalShortcutEngine *GlobalShortcutEngine::platformInit() {
 	return new GlobalShortcutWin();
 }
@@ -121,6 +127,7 @@ void GlobalShortcutWin::run() {
 
 	hhKeyboard = SetWindowsHookEx(WH_KEYBOARD_LL, HookKeyboard, hSelf, 0);
 	hhMouse = SetWindowsHookEx(WH_MOUSE_LL, HookMouse, hSelf, 0);
+
 #ifdef QT_NO_DEBUG
 #endif
 
@@ -233,6 +240,7 @@ LRESULT CALLBACK GlobalShortcutWin::Hook
 		ql << QVariant(QUuid(GUID_SysKeyboard));
 		bool suppress = gsw->handleButton(ql, !(key->flags & LLKHF_UP));
 
+#ifndef COMPAT_CLIENT
 		if (! suppress && g.ocIntercept) {
 			HWND hwnd = g.ocIntercept->qgv.winId();
 
@@ -249,6 +257,7 @@ LRESULT CALLBACK GlobalShortcutWin::Hook
 
 			suppress = true;
 		}
+#endif
 
 		if (suppress)
 			return 1;
@@ -303,6 +312,7 @@ LRESULT CALLBACK GlobalShortcutWin::Hook
 				break;
 		}
 
+#ifndef COMPAT_CLIENT
 		if (g.ocIntercept) {
 			POINT p;
 			GetCursorPos(&p);
@@ -349,6 +359,7 @@ LRESULT CALLBACK GlobalShortcutWin::Hook
 
 			suppress = true;
 		}
+#endif
 
 		bool down = false;
 		unsigned int btn = 0;
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/GlobalShortcut_macx.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/GlobalShortcut_macx.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
@@ -33,6 +33,20 @@
 #include "GlobalShortcut.h"
 #include "Global.h"
 
+class GlobalShortcutMacInit : public QObject, public DeferInit {
+	private:
+		Q_OBJECT
+		Q_DISABLE_COPY(GlobalShortcutMacInit)
+	public:
+		GlobalShortcutMacInit();
+		void initialize();
+	public slots:
+		void openPrefsPane(const QString &) const;
+	protected:
+		bool accessibilityApiEnabled() const;
+		void accessibilityDialog() const;
+};
+
 class GlobalShortcutMac : public GlobalShortcutEngine {
 	private:
 		Q_OBJECT
@@ -45,8 +59,10 @@ class GlobalShortcutMac : public GlobalS
 		bool handleModButton(CGEventFlags newmask);
 		virtual bool canSuppress();
 
+#ifndef COMPAT_CLIENT
 	public slots:
 		void forwardEvent(void *evt);
+#endif
 
 	protected:
 		CFRunLoopRef loop;
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ConnectDialog.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ConnectDialog.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -34,7 +34,6 @@
 #include "mumble_pch.hpp"
 #include "Timer.h"
 #include "Database.h"
-#include "Net.h"
 
 #ifdef USE_BONJOUR
 #include "BonjourClient.h"
@@ -156,7 +155,6 @@ class ServerItem : public QTreeWidgetIte
 
 		FavoriteServer toFavoriteServer() const;
 		QMimeData *toMimeData() const;
-		static QMimeData *toMimeData(const QString &name, const QString &host, unsigned short port, const QString &channel = QString());
 
 		static QIcon loadIcon(const QString &name);
 
@@ -188,7 +186,7 @@ class ConnectDialogEdit : public QDialog
 	public:
 		QString qsName, qsHostname, qsUsername, qsPassword;
 		unsigned short usPort;
-		ConnectDialogEdit(QWidget *parent, const QString &name = QString(), const QString &host = QString(), const QString &user = QString(), unsigned short port = DEFAULT_MUMBLE_PORT, const QString &password = QString(), bool add = false);
+		ConnectDialogEdit(QWidget *parent, const QString &name = QString(), const QString &host = QString(), const QString &user = QString(), unsigned short port = 64738, const QString &password = QString(), bool add = false);
 };
 
 class ConnectDialog : public QDialog, public Ui::ConnectDialog {
@@ -243,7 +241,7 @@ class ConnectDialog : public QDialog, pu
 		void stopDns(ServerItem *);
 	public slots:
 		void accept();
-		void fetched(QByteArray, QUrl, QMap<QString, QString>);
+		void finished();
 
 		void udpReply();
 		void lookedUp(QHostInfo);
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Audio.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Audio.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/DirectSound.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/DirectSound.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/os_win.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/os_win.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -197,8 +197,27 @@ void os_init() {
 	mumble_speex_init();
 
 #ifdef QT_NO_DEBUG
+#ifdef COMPAT_CLIENT
+	errno_t res = 0;
+	size_t reqSize;
+	_wgetenv_s(&reqSize, NULL, 0, L"APPDATA");
+	if (reqSize > 0) {
+		reqSize += strlen("/Mumble/Console11x.txt");
+		size_t bSize = reqSize;
+
+		STACKVAR(wchar_t, buff, reqSize+1);
+
+		_wgetenv_s(&reqSize, buff, bSize, L"APPDATA");
+		wcscat_s(buff, bSize, L"/Mumble/Console11x.txt");
+		res = _wfopen_s(&fConsole, buff, L"a+");
+	}
+	if ((res != 0) || (! fConsole)) {
+		res=_wfopen_s(&fConsole, L"Console11x.txt", L"a+");
+	}
+#else
 	QString console = g.qdBasePath.filePath(QLatin1String("Console.txt"));
 	fConsole = _wfsopen(console.utf16(), L"a+", _SH_DENYWR);
+#endif
 
 	if (fConsole)
 		qInstallMsgHandler(mumbleMessageOutput);
@@ -223,7 +242,11 @@ void os_init() {
 	musComment.Buffer = wcComment;
 	musComment.BufferSize = wcslen(wcComment) * sizeof(wchar_t);
 
+#ifdef COMPAT_CLIENT
+	QString dump = QDesktopServices::storageLocation(QDesktopServices::DataLocation) + QLatin1String("\\mumble11x.dmp");
+#else
 	QString dump = g.qdBasePath.filePath(QLatin1String("mumble.dmp"));
+#endif
 
 	QFileInfo fi(dump);
 	QDir::root().mkpath(fi.absolutePath());
@@ -236,8 +259,10 @@ void os_init() {
 		qWarning("Application: Failed to set priority!");
 #endif
 
+#ifndef COMPAT_CLIENT
 	g.qdBasePath.mkpath(QLatin1String("Snapshots"));
 	if (bIsWin7)
 		SetCurrentProcessExplicitAppUserModelID(QString::fromLatin1("net.sourceforge.mumble.Mumble").utf16());
+#endif
 }
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/WASAPI.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/WASAPI.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -59,10 +59,13 @@ class WASAPIInput : public AudioInput {
 	private:
 		Q_OBJECT
 		Q_DISABLE_COPY(WASAPIInput)
+
 	public:
+		void addInternalEcho(const void *data, unsigned int nsamp){};
 		WASAPIInput();
 		~WASAPIInput();
 		void run();
+		typedef AudioInput super;
 };
 
 class WASAPIOutput : public AudioOutput {
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/AudioStats.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/AudioStats.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -50,14 +50,16 @@ class AudioBar : public QWidget {
 		QList<Qt::BrushStyle> qlReplacementBrushes;
 };
 
-class AudioEchoWidget : public QWidget {
+class AudioEchoWidget : public QGLWidget {
 	private:
 		Q_OBJECT
 		Q_DISABLE_COPY(AudioEchoWidget)
 	public:
 		AudioEchoWidget(QWidget *parent);
-	protected slots:
-		void paintEvent(QPaintEvent *event);
+	protected:
+		void initializeGL();
+		void resizeGL(int w, int h);
+		void paintGL();
 };
 
 class AudioNoiseWidget : public QWidget {
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/OverlayEditorScene.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/OverlayEditorScene.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/G15LCDEngine_lglcd.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/G15LCDEngine_lglcd.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/GlobalShortcut_unix.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/GlobalShortcut_unix.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -36,9 +36,12 @@ GlobalShortcutEngine *GlobalShortcutEngi
 
 GlobalShortcutX::GlobalShortcutX() {
 	bRunning=false;
+	bXInput = false;
 
 	display = NULL;
 
+	iKeyPress = iKeyRelease = iButtonPress = iButtonRelease = -1;
+
 #ifdef Q_OS_LINUX
 	QString dir = QLatin1String("/dev/input");
 	QFileSystemWatcher *fsw = new QFileSystemWatcher(QStringList(dir), this);
@@ -64,60 +67,81 @@ GlobalShortcutX::GlobalShortcutX() {
 		return;
 	}
 
-	for (int i=0; i < ScreenCount(display); ++i)
-		qsRootWindows.insert(RootWindow(display, i));
-
-	int evt, error;
-
-	if (XQueryExtension(display, "XInputExtension", &iXIopcode, &evt, &error)) {
-		int major = 2;
-		int minor = 0;
-		int rc = XIQueryVersion(display, &major, &minor);
-		if (rc != BadRequest) {
-			qWarning("GlobalShortcutX: Using XI2 %d.%d", major, minor);
-
-			queryXIMasterList();
-
-			XIEventMask evmask;
-			unsigned char mask[(XI_LASTEVENT + 7)/8];
-
-			memset(&evmask, 0, sizeof(evmask));
-			memset(mask, 0, sizeof(mask));
-
-			XISetMask(mask, XI_RawButtonPress);
-			XISetMask(mask, XI_RawButtonRelease);
-			XISetMask(mask, XI_RawKeyPress);
-			XISetMask(mask, XI_RawKeyRelease);
-			XISetMask(mask, XI_HierarchyChanged);
-
-			evmask.deviceid = XIAllDevices;
-			evmask.mask_len = sizeof(mask);
-			evmask.mask = mask;
-
-			foreach(Window w, qsRootWindows)
-				XISelectEvents(display, w, &evmask, 1);
-			XFlush(display);
-
+	XExtensionVersion *version = XGetExtensionVersion(display, INAME);
+	if (version && (version != reinterpret_cast<XExtensionVersion *>(NoSuchExtension))) {
+		qWarning("GlobalShortcutX: Using XInput %d.%d", version->major_version, version->minor_version);
+		bXInput = true;
+		XFree(version);
+		initXInput();
+		if (qmXDevices.isEmpty()) {
+			qWarning("GlobalShortcutX: No XInput devices");
+		} else {
 			connect(new QSocketNotifier(ConnectionNumber(display), QSocketNotifier::Read, this), SIGNAL(activated(int)), this, SLOT(displayReadyRead(int)));
-
 			return;
 		}
+	} else {
+		qWarning("GlobalShortcutX: No XInput support, falling back to polled input. This wastes a lot of CPU resources, so please enable one of the other methods.");
+		bRunning=true;
+		start(QThread::TimeCriticalPriority);
 	}
-
-	qWarning("GlobalShortcutX: No XInput support, falling back to polled input. This wastes a lot of CPU resources, so please enable one of the other methods.");
-	bRunning=true;
-	start(QThread::TimeCriticalPriority);
 }
 
 GlobalShortcutX::~GlobalShortcutX() {
 	bRunning = false;
 	wait();
-
+	foreach(XDevice *dev, qmXDevices)
+		XCloseDevice(display, dev);
 	if (display)
 		XCloseDisplay(display);
 }
 
-// Tight loop polling
+void GlobalShortcutX::initXInput() {
+	foreach(XDevice *dev, qmXDevices)
+		XCloseDevice(display, dev);
+
+	qmXDevices.clear();
+
+	int numdev;
+	XDeviceInfo *infolist = XListInputDevices(display, &numdev);
+	if (! infolist)
+		return;
+	for (int i=0;i<numdev;++i) {
+		XDeviceInfo *info = infolist + i;
+		XDevice *dev = XOpenDevice(display, info->id);
+		if (dev) {
+			bool key = false, button = false;
+			for (int j=0;j<dev->num_classes;++j) {
+				XInputClassInfo *ici = dev->classes + j;
+				key = key || (ici->input_class == KeyClass);
+				button = button || (ici->input_class == ButtonClass);
+			}
+
+			XEventClass events[4];
+			int nevents = 0;
+			if (key) {
+				DeviceKeyPress(dev, iKeyPress, events[nevents]);
+				++nevents;
+				DeviceKeyRelease(dev, iKeyRelease, events[nevents]);
+				++nevents;
+			}
+			if (button) {
+				DeviceButtonPress(dev, iButtonPress, events[nevents]);
+				++nevents;
+				DeviceButtonRelease(dev, iButtonRelease, events[nevents]);
+				++nevents;
+			}
+
+			if ((nevents != 0) && ! XSelectExtensionEvent(display, XDefaultRootWindow(display), events, nevents)) {
+				qWarning("GlobalShortcutX: XInput %ld:%s", info->id, info->name);
+				qmXDevices.insert(info->id, dev);
+			} else {
+				XCloseDevice(display, dev);
+			}
+		}
+	}
+	XFree(infolist);
+}
+
 void GlobalShortcutX::run() {
 	Window root = XDefaultRootWindow(display);
 	Window root_ret, child_ret;
@@ -161,30 +185,6 @@ void GlobalShortcutX::run() {
 	}
 }
 
-// Find XI2 master devices so they can be ignored.
-void GlobalShortcutX::queryXIMasterList() {
-	XIDeviceInfo *info, *dev;
-	int ndevices;
-
-	qsMasterDevices.clear();
-
-	dev = info = XIQueryDevice(display, XIAllDevices, &ndevices);
-	for (int i=0;i<ndevices;++i) {
-		switch (dev->use) {
-			case XIMasterPointer:
-			case XIMasterKeyboard:
-				qsMasterDevices.insert(dev->deviceid);
-				break;
-			default:
-				break;
-		}
-
-		++dev;
-	}
-	XIFreeDeviceInfo(info);
-}
-
-// XInput2 event is ready on socketnotifier.
 void GlobalShortcutX::displayReadyRead(int) {
 	XEvent evt;
 
@@ -193,33 +193,28 @@ void GlobalShortcutX::displayReadyRead(i
 
 	while (XPending(display)) {
 		XNextEvent(display, &evt);
-		XGenericEventCookie *cookie = & evt.xcookie;
-
-		if ((cookie->type != GenericEvent) || (cookie->extension != iXIopcode) || !XGetEventData(display, cookie))
-			continue;
-
-		XIDeviceEvent *xide = reinterpret_cast<XIDeviceEvent *>(cookie->data);
-
-		switch (cookie->evtype) {
-			case XI_RawKeyPress:
-			case XI_RawKeyRelease:
-				if (! qsMasterDevices.contains(xide->deviceid))
-					handleButton(xide->detail, cookie->evtype == XI_RawKeyPress);
-				break;
-			case XI_RawButtonPress:
-			case XI_RawButtonRelease:
-				if (! qsMasterDevices.contains(xide->deviceid))
-					handleButton(xide->detail + 0x117, cookie->evtype == XI_RawButtonPress);
-				break;
-			case XI_HierarchyChanged:
-				queryXIMasterList();
+		if ((evt.type == iButtonPress) || (evt.type == iButtonRelease)) {
+			XDeviceButtonEvent *be = reinterpret_cast<XDeviceButtonEvent *>(&evt);
+			handleButton(be->button + 0x117, evt.type == iButtonPress);
+		} else if ((evt.type == iKeyPress) || (evt.type == iKeyRelease)) {
+			XDeviceKeyEvent *ke = reinterpret_cast<XDeviceKeyEvent *>(&evt);
+			if ((evt.type == iKeyRelease) && XPending(display)) {
+				// Is it a silly key repeat?
+				XEvent nxt;
+				XPeekEvent(display, &nxt);
+				if (nxt.type == iKeyPress) {
+					XDeviceKeyEvent *ne = reinterpret_cast<XDeviceKeyEvent *>(&nxt);
+					if (ke->keycode == ne->keycode) {
+						XNextEvent(display, &nxt);
+						continue;
+					}
+				}
+			}
+			handleButton(ke->keycode, evt.type == iKeyPress);
 		}
-
-		XFreeEventData(display, cookie);
 	}
 }
 
-// One of the raw /dev/input devices has ready input
 void GlobalShortcutX::inputReadyRead(int) {
 #ifdef Q_OS_LINUX
 	struct input_event ev;
@@ -267,7 +262,6 @@ void GlobalShortcutX::inputReadyRead(int
 
 #define test_bit(bit, array)    (array[bit/8] & (1<<(bit%8)))
 
-// The /dev/input directory changed
 void GlobalShortcutX::directoryChanged(const QString &dir) {
 #ifdef Q_OS_LINUX
 	QDir d(dir, QLatin1String("event*"), 0, QDir::System);
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/TextMessage.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/TextMessage.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Overlay_win.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Overlay_win.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -34,12 +34,21 @@
 #include "MainWindow.h"
 #include "Global.h"
 
+typedef void (__cdecl *HooksProc)();
 typedef unsigned int (__cdecl *GetOverlayMagicVersionProc)();
 typedef void (__cdecl *PrepProc)();
 typedef void (__cdecl *PrepDXGIProc)();
 
-// Used by the overlay to detect whether we injected into ourselve
-extern "C" __declspec(dllexport) void mumbleSelfDetection() {};
+class OverlayPrivateWin : public OverlayPrivate {
+	protected:
+		QLibrary *qlOverlay;
+	public:
+		HooksProc hpInstall, hpRemove;
+
+		void setActive(bool);
+		OverlayPrivateWin(QObject *);
+		~OverlayPrivateWin();
+};
 
 OverlayPrivateWin::OverlayPrivateWin(QObject *p) : OverlayPrivate(p) {
 	QString path=QString::fromLatin1("%1/mumble_ol.dll").arg(qApp->applicationDirPath());
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/GlobalShortcut.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/GlobalShortcut.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/RichTextEditor.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/RichTextEditor.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ALSAAudio.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ALSAAudio.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/PAAudio.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/PAAudio.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
    Copyright (C) 2007, Stefan Gehn <mETz AT gehn DOT net>
 
    All rights reserved.
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/AudioInput.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/AudioInput.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -77,15 +77,13 @@ class AudioInput : public QThread {
 
 		QMutex qmEcho;
 		QList<short *> qlEchoFrames;
+		bool playback;
 		unsigned int iJitterSeq;
 		int iMinBuffered;
 
 		unsigned int iMicFilled, iEchoFilled;
 		inMixerFunc imfMic, imfEcho;
 		inMixerFunc chooseMixer(const unsigned int nchan, SampleFormat sf);
-		void resetAudioProcessor();
-		int encodeSpeexFrame(short *pSource, unsigned char *buffer);
-		int encodeCELTFrame(short *pSource, unsigned char *buffer);
 	protected:
 		MessageHandler::UDPMessageType umtType;
 		SampleFormat eMicFormat, eEchoFormat;
@@ -142,6 +140,7 @@ class AudioInput : public QThread {
 	signals:
 		void doDeaf();
 	public:
+		virtual void addInternalEcho(const void *data, unsigned int nsamp);
 		bool bResetProcessor;
 
 		Timer tIdle;
@@ -158,8 +157,12 @@ class AudioInput : public QThread {
 		void run() = 0;
 		virtual bool isAlive() const;
 		bool isTransmitting() const;
+
+		bool getPlayback() { return playback; }
+		void setPlayback(bool pb) { playback = pb; }
 };
 
+
 #else
 class AudioInput;
 #endif
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ACLEditor.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ACLEditor.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/BanEditor.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/BanEditor.cpp
@@ -1,4 +1,4 @@
-/* copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/mumble.qrc
+++ mumble-1.2.3-87-gf7d8711/src/mumble/mumble.qrc
@@ -51,17 +51,5 @@
  <file alias="UserLeftChannel.ogg">../../samples/UserLeftChannel.ogg</file>
  <file alias="UserMutedYouOrByYou.ogg">../../samples/UserMutedYouOrByYou.ogg</file>
  <file alias="RecordingStateChanged.ogg">../../samples/RecordingStateChanged.ogg</file>
- <file>mumble_en.qm</file>
- <file>mumble_es.qm</file>
- <file>mumble_fr.qm</file>
- <file>mumble_de.qm</file>
- <file>mumble_it.qm</file>
- <file>mumble_ja.qm</file>
- <file>mumble_pl.qm</file>
- <file>mumble_pt_BR.qm</file>
- <file>mumble_da.qm</file>
- <file>mumble_he.qm</file>
- <file>mumble_ru.qm</file>
- <file>mumble_sv.qm</file>
 </qresource>
 </RCC>
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/OverlayClient.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/OverlayClient.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -105,7 +105,7 @@ bool OverlayClient::eventFilter(QObject
 
 void OverlayClient::updateFPS() {
 	if (g.s.os.bFps) {
-		const BasepointPixmap &pm = OverlayTextLine(QString(QLatin1String("%1")).arg(iroundf(fFps + 0.5f)), g.s.os.qfFps).createPixmap(g.s.os.qcFps);
+		const BasepointPixmap &pm = OverlayTextLine(tr("FPS: %1").arg(iroundf(fFps + 0.5f)), g.s.os.qfFps).createPixmap(g.s.os.qcFps);
 		qgpiFPS->setPixmap(pm);
 		// offset to use basepoint
 		//TODO: settings are providing a top left anchor, so shift down by ascent
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Overlay.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Overlay.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -35,7 +35,7 @@
 #include "Global.h"
 #include "Message.h"
 #include "Database.h"
-#include "WebFetch.h"
+#include "NetworkConfig.h"
 #include "ServerHandler.h"
 #include "MainWindow.h"
 #include "GlobalShortcut.h"
@@ -335,6 +335,8 @@ void Overlay::checkUpdates() {
 #endif
 
 	QUrl url;
+	url.setScheme(QLatin1String("http"));
+	url.setHost(g.qsRegionalHost);
 	url.setPath(QLatin1String("/overlay.php"));
 
 	url.addQueryItem(QLatin1String("ver"), QLatin1String(QUrl::toPercentEncoding(QLatin1String(MUMBLE_RELEASE))));
@@ -347,74 +349,89 @@ void Overlay::checkUpdates() {
 #endif
 
 #ifdef QT_NO_DEBUG
-	WebFetch::fetch(url, this, SLOT(fetched(QByteArray,QUrl)));
+	QNetworkReply *rep = Network::get(url);
+	connect(rep, SIGNAL(finished()), this, SLOT(finished()));
 #else
 	g.mw->msgBox(tr("Skipping overlay update in debug mode."));
 #endif
 }
 
-void Overlay::fetched(QByteArray data, QUrl url) {
-	if (data.isEmpty())
-		return;
-
-	const QString &path = url.path();
-	if (path == QLatin1String("/overlay.php")) {
-		qmOverlayHash.clear();
-		QDomDocument doc;
-		doc.setContent(data);
-
-		QDomElement root=doc.documentElement();
-		QDomNode n = root.firstChild();
-		while (!n.isNull()) {
-			QDomElement e = n.toElement();
-			if (!e.isNull()) {
-				if (e.tagName() == QLatin1String("file")) {
-					QString name = QFileInfo(e.attribute(QLatin1String("name"))).fileName();
-					QString hash = e.attribute(QLatin1String("hash"));
-					qmOverlayHash.insert(name, hash);
+void Overlay::finished() {
+	QNetworkReply *rep = qobject_cast<QNetworkReply *>(sender());
+	QUrl url = rep->request().url();
+
+	if (rep->error() == QNetworkReply::NoError) {
+		const QString &path = url.path();
+		if (path == QLatin1String("/overlay.php")) {
+			qmOverlayHash.clear();
+			QDomDocument doc;
+			doc.setContent(rep->readAll());
+
+			QDomElement root=doc.documentElement();
+			QDomNode n = root.firstChild();
+			while (!n.isNull()) {
+				QDomElement e = n.toElement();
+				if (!e.isNull()) {
+					if (e.tagName() == QLatin1String("file")) {
+						QString name = QFileInfo(e.attribute(QLatin1String("name"))).fileName();
+						QString hash = e.attribute(QLatin1String("hash"));
+						qmOverlayHash.insert(name, hash);
+					}
 				}
+				n = n.nextSibling();
 			}
-			n = n.nextSibling();
-		}
 
 #ifdef Q_OS_MAC
-		QMap<QString, QString>::const_iterator i;
-		for (i = qmOverlayHash.constBegin(); i != qmOverlayHash.constEnd(); ++i) {
-			QString val = i.value();
-			QString key = i.key();
-			if (! val.isEmpty() && key.startsWith(QLatin1String("MumbleOverlay")) && key.endsWith(QLatin1String(".pkg"))) {
-				bool update = true;
-				QFile f(g.qdBasePath.absolutePath() + QLatin1String("/Overlay/MumbleOverlay.pkg"));
-				if (f.exists() && f.open(QIODevice::ReadOnly)) {
-					QString h = QLatin1String(sha1(f.readAll()).toHex());
-					if (val == qmOverlayHash.value(QLatin1String("MumbleOverlay.pkg")))
-						update = false;
-				}
-				if (update) {
-					QUrl url;
-					url.setPath(QString::fromLatin1("overlay/%1").arg(key));
+			QMap<QString, QString>::const_iterator i;
+			for (i = qmOverlayHash.constBegin(); i != qmOverlayHash.constEnd(); ++i) {
+				QString val = i.value();
+				QString key = i.key();
+				if (! val.isEmpty() && key.startsWith(QLatin1String("MumbleOverlay")) && key.endsWith(QLatin1String(".pkg"))) {
+					bool update = true;
+					QFile f(g.qdBasePath.absolutePath() + QLatin1String("/Overlay/MumbleOverlay.pkg"));
+					if (f.exists() && f.open(QIODevice::ReadOnly)) {
+						QString h = QLatin1String(sha1(f.readAll()).toHex());
+						if (val == qmOverlayHash.value(QLatin1String("MumbleOverlay.pkg")))
+							update = false;
+					}
+					if (update) {
+						QUrl url;
+						url.setScheme(QLatin1String("http"));
+						url.setHost(rep->url().host());
+						url.setPath(QString::fromLatin1("overlay/%1").arg(key));
 
-					WebFetch::fetch(url, this, SLOT(fetched(QByteArray,QUrl)));
+						QNetworkReply *r = Network::get(url);
+						connect(r, SIGNAL(finished()), this, SLOT(finished()));
+					}
 				}
 			}
-		}
 #endif
-	} else {
-		QString fname = QFileInfo(path).fileName();
-		if (qmOverlayHash.contains(fname)) {
-			if (qmOverlayHash.value(fname) == QLatin1String(sha1(data).toHex())) {
+		} else {
+			QString fname = QFileInfo(path).fileName();
+			if (qmOverlayHash.contains(fname)) {
+				QByteArray qba = rep->readAll();
+				if (qmOverlayHash.value(fname) == QLatin1String(sha1(qba).toHex())) {
 #ifdef Q_OS_MAC
-				if (fname.startsWith(QLatin1String("MumbleOverlay")) && fname.endsWith(QLatin1String(".pkg"))) {
-					QFile f;
-					f.setFileName(g.qdBasePath.absolutePath() + QLatin1String("/Overlay/MumbleOverlay.pkg"));
-					if (f.open(QIODevice::WriteOnly)) {
-						f.write(data);
-						f.close();
-						g.mw->msgBox(tr("Downloaded new or updated overlay support file to %1.").arg(f.fileName()));
+					if (fname.startsWith(QLatin1String("MumbleOverlay")) && fname.endsWith(QLatin1String(".pkg"))) {
+						QFile f;
+						f.setFileName(g.qdBasePath.absolutePath() + QLatin1String("/Overlay/MumbleOverlay.pkg"));
+						if (f.open(QIODevice::WriteOnly)) {
+							f.write(qba);
+							f.close();
+							g.mw->msgBox(tr("Downloaded new or updated overlay support file to %1.").arg(f.fileName()));
+						}
 					}
-				}
 #endif
+				}
 			}
 		}
+	} else {
+		if (url.host() == g.qsRegionalHost) {
+			url.setHost(QLatin1String("mumble.info"));
+			QNetworkReply *nrep = Network::get(url);
+			connect(nrep, SIGNAL(finished()), this, SLOT(finished()));
+		}
 	}
+
+	rep->deleteLater();
 }
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/PulseAudio.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/PulseAudio.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -99,16 +99,7 @@ PulseAudioSystem::PulseAudioSystem() {
 	pam = pa_threaded_mainloop_new();
 	pa_mainloop_api *api = pa_threaded_mainloop_get_api(pam);
 
-	pa_proplist     *proplist;
-
-	proplist = pa_proplist_new ();
-	pa_proplist_sets (proplist, PA_PROP_APPLICATION_NAME, "Mumble");
-	pa_proplist_sets (proplist, PA_PROP_APPLICATION_ID, "net.sourceforge.mumble.mumble");
-	pa_proplist_sets (proplist, PA_PROP_APPLICATION_ICON_NAME, "mumble");
-	pa_proplist_sets (proplist, PA_PROP_MEDIA_ROLE, "phone");
-
-	pacContext = pa_context_new_with_proplist (api, NULL, proplist);
-	pa_proplist_free (proplist);
+	pacContext = pa_context_new(api, "Mumble");
 
 	pa_context_set_subscribe_callback(pacContext, subscribe_callback, this);
 
@@ -171,17 +162,14 @@ void PulseAudioSystem::eventCallback(pa_
 				case PA_STREAM_TERMINATED: {
 						if (pasOutput)
 							pa_stream_unref(pasOutput);
-
 						pa_sample_spec pss = qhSpecMap.value(odev);
-						pa_channel_map pcm = qhChanMap.value(odev);
-						if ((pss.format != PA_SAMPLE_FLOAT32NE) && (pss.format != PA_SAMPLE_S16NE))
-							pss.format = PA_SAMPLE_FLOAT32NE;
 						if (pss.rate == 0)
 							pss.rate = SAMPLE_RATE;
 						if ((pss.channels == 0) || (! g.s.doPositionalAudio()))
 							pss.channels = 1;
-
-						pasOutput = pa_stream_new(pacContext, "Mumble Speakers", &pss, (pss.channels == 1) ? NULL : &pcm);
+						if ((pss.format != PA_SAMPLE_FLOAT32NE) && (pss.format != PA_SAMPLE_S16NE))
+							pss.format = PA_SAMPLE_FLOAT32NE;
+						pasOutput = pa_stream_new(pacContext, "Mumble Speakers", &pss, NULL);
 						pa_stream_set_state_callback(pasOutput, stream_callback, this);
 						pa_stream_set_write_callback(pasOutput, write_callback, this);
 					}
@@ -239,11 +227,11 @@ void PulseAudioSystem::eventCallback(pa_
 							pa_stream_unref(pasInput);
 
 						pa_sample_spec pss = qhSpecMap.value(idev);
-						if ((pss.format != PA_SAMPLE_FLOAT32NE) && (pss.format != PA_SAMPLE_S16NE))
-							pss.format = PA_SAMPLE_FLOAT32NE;
 						if (pss.rate == 0)
 							pss.rate = SAMPLE_RATE;
 						pss.channels = 1;
+						if ((pss.format != PA_SAMPLE_FLOAT32NE) && (pss.format != PA_SAMPLE_S16NE))
+							pss.format = PA_SAMPLE_FLOAT32NE;
 
 						pasInput = pa_stream_new(pacContext, "Microphone", &pss, NULL);
 						pa_stream_set_state_callback(pasInput, stream_callback, this);
@@ -298,15 +286,12 @@ void PulseAudioSystem::eventCallback(pa_
 							pa_stream_unref(pasSpeaker);
 
 						pa_sample_spec pss = qhSpecMap.value(edev);
-						pa_channel_map pcm = qhChanMap.value(edev);
-						if ((pss.format != PA_SAMPLE_FLOAT32NE) && (pss.format != PA_SAMPLE_S16NE))
-							pss.format = PA_SAMPLE_FLOAT32NE;
 						if (pss.rate == 0)
 							pss.rate = SAMPLE_RATE;
-						if ((pss.channels == 0) || (! g.s.bEchoMulti))
-							pss.channels = 1;
-
-						pasSpeaker = pa_stream_new(pacContext, "Mumble Speakers (Echo)", &pss, (pss.channels == 1) ? NULL : &pcm);
+						pss.channels = 1;
+						if ((pss.format != PA_SAMPLE_FLOAT32NE) && (pss.format != PA_SAMPLE_S16NE))
+							pss.format = PA_SAMPLE_FLOAT32NE;
+						pasSpeaker = pa_stream_new(pacContext, "Mumble Speakers (Echo)", &pss, NULL);
 						pa_stream_set_state_callback(pasSpeaker, stream_callback, this);
 						pa_stream_set_read_callback(pasSpeaker, read_callback, this);
 					}
@@ -314,9 +299,7 @@ void PulseAudioSystem::eventCallback(pa_
 					do_start = true;
 					break;
 				case PA_STREAM_READY: {
-						if (g.s.bEchoMulti != bEchoMultiCache) {
-							do_stop = true;
-						} else if (edev != qsEchoCache) {
+						if (edev != qsEchoCache) {
 							do_stop = true;
 						}
 						break;
@@ -339,7 +322,6 @@ void PulseAudioSystem::eventCallback(pa_
 			buff.prebuf = -1;
 			buff.fragsize = iBlockLen;
 
-			bEchoMultiCache = g.s.bEchoMulti;
 			qsEchoCache = edev;
 
 			pa_stream_connect_record(pasSpeaker, qPrintable(edev), &buff, PA_STREAM_ADJUST_LATENCY);
@@ -382,8 +364,8 @@ void PulseAudioSystem::sink_callback(pa_
 
 	const QString name = QLatin1String(i->name);
 
+	pas->qhIndexMap.insert(name, i->index);
 	pas->qhSpecMap.insert(name, i->sample_spec);
-	pas->qhChanMap.insert(name, i->channel_map);
 	pas->qhOutput.insert(name, QLatin1String(i->description));
 	pas->qhEchoMap.insert(name, QLatin1String(i->monitor_source_name));
 }
@@ -398,8 +380,8 @@ void PulseAudioSystem::source_callback(p
 
 	const QString name = QLatin1String(i->name);
 
+	pas->qhIndexMap.insert(name, i->index);
 	pas->qhSpecMap.insert(name, i->sample_spec);
-	pas->qhChanMap.insert(name, i->channel_map);
 
 	if (i->monitor_of_sink == PA_INVALID_INDEX)
 		pas->qhInput.insert(QLatin1String(i->name), QLatin1String(i->description));
@@ -560,8 +542,6 @@ void PulseAudioSystem::query() {
 	qhInput.clear();
 	qhOutput.clear();
 	qhEchoMap.clear();
-	qhSpecMap.clear();
-	qhChanMap.clear();
 	qhInput.insert(QString(), tr("Default Input"));
 	qhOutput.insert(QString(), tr("Default Output"));
 	pa_operation_unref(pa_context_get_server_info(pacContext, server_callback, this));
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/DirectSound.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/DirectSound.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ViewCert.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ViewCert.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ServerHandler.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ServerHandler.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Global.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Global.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/licenses.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/licenses.h
@@ -1,12 +1,12 @@
-static const char *licenseMumble = "Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>\n"
+static const char *licenseMumble = "Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>\n"
                                    "Copyright (C) 2007, Stefan Gehn <mETz AT gehn DOT net>\n"
                                    "Copyright (C) 2007, Sebastian Schlingmann <mit_service@users.sourceforge.net>\n"
-                                   "Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>\n"
+                                   "Copyright (C) 2008-2010, Mikkel Krautz <mikkel@krautz.dk>\n"
                                    "Copyright (C) 2008, Andreas Messer <andi@bupfen.de>\n"
                                    "Copyright (C) 2007, Trenton Schulz\n"
-                                   "Copyright (C) 2008-2011, Stefan Hacker <dd0t@users.sourceforge.net>\n"
-                                   "Copyright (C) 2008-2011, Snares <snares@users.sourceforge.net>\n"
-                                   "Copyright (C) 2009-2011, Benjamin Jemlich <pcgod@users.sourceforge.net>\n"
+                                   "Copyright (C) 2008-2010, Stefan Hacker <dd0t@users.sourceforge.net>\n"
+                                   "Copyright (C) 2008-2010, Snares <snares@users.sourceforge.net>\n"
+                                   "Copyright (C) 2009-2010, Benjamin Jemlich <pcgod@users.sourceforge.net>\n"
                                    "\n"
                                    "All rights reserved.\n"
                                    "\n"
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/TextMessage.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/TextMessage.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/G15LCDEngine_helper.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/G15LCDEngine_helper.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ConfigDialogDelegate.mm
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ConfigDialogDelegate.mm
@@ -1,4 +1,4 @@
-/* Copyright (C) 2009-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Plugins.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Plugins.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -33,7 +33,7 @@
 #include "Message.h"
 #include "ServerHandler.h"
 #include "MainWindow.h"
-#include "WebFetch.h"
+#include "NetworkConfig.h"
 #include "../../plugins/mumble_plugin.h"
 #include "Global.h"
 
@@ -456,6 +456,8 @@ void Plugins::on_Timer_timeout() {
 
 void Plugins::checkUpdates() {
 	QUrl url;
+	url.setScheme(QLatin1String("http"));
+	url.setHost(g.qsRegionalHost);
 	url.setPath(QLatin1String("/plugins.php"));
 
 	url.addQueryItem(QLatin1String("ver"), QLatin1String(QUrl::toPercentEncoding(QLatin1String(MUMBLE_RELEASE))));
@@ -469,75 +471,44 @@ void Plugins::checkUpdates() {
 #endif
 
 #ifdef QT_NO_DEBUG
-	WebFetch::fetch(url, this, SLOT(fetched(QByteArray,QUrl)));
+	QNetworkReply *rep = Network::get(url);
+	connect(rep, SIGNAL(finished()), this, SLOT(finished()));
 #else
 	g.mw->msgBox(tr("Skipping plugin update in debug mode."));
 #endif
 }
 
-void Plugins::fetched(QByteArray data, QUrl url) {
-	if (data.isNull())
-		return;
+void Plugins::finished() {
+	QNetworkReply *rep = qobject_cast<QNetworkReply *>(sender());
+	QUrl url = rep->request().url();
 
 	bool rescan = false;
-	const QString &path = url.path();
-	if (path == QLatin1String("/plugins.php")) {
-		qmPluginHash.clear();
-		QDomDocument doc;
-		doc.setContent(data);
-
-		QDomElement root=doc.documentElement();
-		QDomNode n = root.firstChild();
-		while (!n.isNull()) {
-			QDomElement e = n.toElement();
-			if (!e.isNull()) {
-				if (e.tagName() == QLatin1String("plugin")) {
-					QString name = QFileInfo(e.attribute(QLatin1String("name"))).fileName();
-					QString hash = e.attribute(QLatin1String("hash"));
-					qmPluginHash.insert(name, hash);
-				}
-			}
-			n = n.nextSibling();
-		}
-
-		QDir qd(qsSystemPlugins, QString(), QDir::Name, QDir::Files | QDir::Readable);
-		QDir qdu(qsUserPlugins, QString(), QDir::Name, QDir::Files | QDir::Readable);
 
-		QFileInfoList libs = qd.entryInfoList();
-		foreach(const QFileInfo &libinfo, libs) {
-			QString libname = libinfo.absoluteFilePath();
-			QString filename = libinfo.fileName();
-			QString wanthash = qmPluginHash.value(filename);
-			if (! wanthash.isNull() && QLibrary::isLibrary(libname)) {
-				QFile f(libname);
-				if (wanthash.isEmpty()) {
-					// Outdated plugin
-					if (f.exists()) {
-						clearPlugins();
-						f.remove();
-						rescan=true;
-					}
-				} else if (f.open(QIODevice::ReadOnly)) {
-					QString h = QLatin1String(sha1(f.readAll()).toHex());
-					f.close();
-					if (h == wanthash) {
-						if (qd != qdu) {
-							QFile qfuser(qsUserPlugins + QString::fromLatin1("/") + filename);
-							if (qfuser.exists()) {
-								clearPlugins();
-								qfuser.remove();
-								rescan=true;
-							}
-						}
-						// Mark for removal from userplugins
-						qmPluginHash.insert(filename, QString());
+	if (rep->error() == QNetworkReply::NoError) {
+		const QString &path = url.path();
+		if (path == QLatin1String("/plugins.php")) {
+			qmPluginHash.clear();
+			QDomDocument doc;
+			doc.setContent(rep->readAll());
+
+			QDomElement root=doc.documentElement();
+			QDomNode n = root.firstChild();
+			while (!n.isNull()) {
+				QDomElement e = n.toElement();
+				if (!e.isNull()) {
+					if (e.tagName() == QLatin1String("plugin")) {
+						QString name = QFileInfo(e.attribute(QLatin1String("name"))).fileName();
+						QString hash = e.attribute(QLatin1String("hash"));
+						qmPluginHash.insert(name, hash);
 					}
 				}
+				n = n.nextSibling();
 			}
-		}
 
-		if (qd != qdu) {
-			libs = qdu.entryInfoList();
+			QDir qd(qsSystemPlugins, QString(), QDir::Name, QDir::Files | QDir::Readable);
+			QDir qdu(qsUserPlugins, QString(), QDir::Name, QDir::Files | QDir::Readable);
+
+			QFileInfoList libs = qd.entryInfoList();
 			foreach(const QFileInfo &libinfo, libs) {
 				QString libname = libinfo.absoluteFilePath();
 				QString filename = libinfo.fileName();
@@ -555,89 +526,136 @@ void Plugins::fetched(QByteArray data, Q
 						QString h = QLatin1String(sha1(f.readAll()).toHex());
 						f.close();
 						if (h == wanthash) {
-							qmPluginHash.remove(filename);
+							if (qd != qdu) {
+								QFile qfuser(qsUserPlugins + QString::fromLatin1("/") + filename);
+								if (qfuser.exists()) {
+									clearPlugins();
+									qfuser.remove();
+									rescan=true;
+								}
+							}
+							// Mark for removal from userplugins
+							qmPluginHash.insert(filename, QString());
 						}
 					}
 				}
 			}
-		}
-		QMap<QString, QString>::const_iterator i;
-		for (i = qmPluginHash.constBegin(); i != qmPluginHash.constEnd(); ++i) {
-			if (! i.value().isEmpty()) {
-				QUrl url;
-				url.setPath(QString::fromLatin1("plugins/%1").arg(i.key()));
 
-				WebFetch::fetch(url, this, SLOT(fetched(QByteArray,QUrl)));
-			}
-		}
-	} else {
-		QString fname = QFileInfo(path).fileName();
-		if (qmPluginHash.contains(fname)) {
-			if (qmPluginHash.value(fname) == QLatin1String(sha1(data).toHex())) {
-				bool verified = true;
-#ifdef Q_OS_WIN
-				verified = false;
-				QString tempname, tempnative;
-				{
-					QTemporaryFile temp(QDir::tempPath() + QLatin1String("/plugin_XXXXXX.dll"));
-					if (temp.open()) {
-						tempname = temp.fileName();
-						tempnative = QDir::toNativeSeparators(tempname);
-						temp.write(data);
-						temp.setAutoRemove(false);
+			if (qd != qdu) {
+				libs = qdu.entryInfoList();
+				foreach(const QFileInfo &libinfo, libs) {
+					QString libname = libinfo.absoluteFilePath();
+					QString filename = libinfo.fileName();
+					QString wanthash = qmPluginHash.value(filename);
+					if (! wanthash.isNull() && QLibrary::isLibrary(libname)) {
+						QFile f(libname);
+						if (wanthash.isEmpty()) {
+							// Outdated plugin
+							if (f.exists()) {
+								clearPlugins();
+								f.remove();
+								rescan=true;
+							}
+						} else if (f.open(QIODevice::ReadOnly)) {
+							QString h = QLatin1String(sha1(f.readAll()).toHex());
+							f.close();
+							if (h == wanthash) {
+								qmPluginHash.remove(filename);
+							}
+						}
 					}
 				}
-				if (! tempname.isNull()) {
-					WINTRUST_FILE_INFO file;
-					ZeroMemory(&file, sizeof(file));
-					file.cbStruct = sizeof(file);
-					file.pcwszFilePath = tempnative.utf16();
-
-					WINTRUST_DATA data;
-					ZeroMemory(&data, sizeof(data));
-					data.cbStruct = sizeof(data);
-					data.dwUIChoice = WTD_UI_NONE;
-					data.fdwRevocationChecks = WTD_REVOKE_NONE;
-					data.dwUnionChoice = WTD_CHOICE_FILE;
-					data.pFile = &file;
-					data.dwProvFlags = WTD_SAFER_FLAG | WTD_USE_DEFAULT_OSVER_CHECK | WTD_LIFETIME_SIGNING_FLAG;
-					data.dwUIContext = WTD_UICONTEXT_INSTALL;
-
-					static GUID guid = WINTRUST_ACTION_GENERIC_VERIFY_V2;
-
-					LONG ts = WinVerifyTrust(0, &guid , &data);
-
-					QFile deltemp(tempname);
-					deltemp.remove();
-					verified = (ts == 0);
+			}
+			QMap<QString, QString>::const_iterator i;
+			for (i = qmPluginHash.constBegin(); i != qmPluginHash.constEnd(); ++i) {
+				if (! i.value().isEmpty()) {
+					QUrl url;
+					url.setScheme(QLatin1String("http"));
+					url.setHost(g.qsRegionalHost);
+					url.setPath(QString::fromLatin1("plugins/%1").arg(i.key()));
+
+					QNetworkReply *r = Network::get(url);
+					connect(r, SIGNAL(finished()), this, SLOT(finished()));
 				}
+			}
+		} else {
+			QString fname = QFileInfo(path).fileName();
+			if (qmPluginHash.contains(fname)) {
+				QByteArray qba = rep->readAll();
+				if (qmPluginHash.value(fname) == QLatin1String(sha1(qba).toHex())) {
+					bool verified = true;
+#ifdef Q_OS_WIN
+					verified = false;
+					QString tempname, tempnative;
+					{
+						QTemporaryFile temp(QDir::tempPath() + QLatin1String("/plugin_XXXXXX.dll"));
+						if (temp.open()) {
+							tempname = temp.fileName();
+							tempnative = QDir::toNativeSeparators(tempname);
+							temp.write(qba);
+							temp.setAutoRemove(false);
+						}
+					}
+					if (! tempname.isNull()) {
+						WINTRUST_FILE_INFO file;
+						ZeroMemory(&file, sizeof(file));
+						file.cbStruct = sizeof(file);
+						file.pcwszFilePath = tempnative.utf16();
+
+						WINTRUST_DATA data;
+						ZeroMemory(&data, sizeof(data));
+						data.cbStruct = sizeof(data);
+						data.dwUIChoice = WTD_UI_NONE;
+						data.fdwRevocationChecks = WTD_REVOKE_NONE;
+						data.dwUnionChoice = WTD_CHOICE_FILE;
+						data.pFile = &file;
+						data.dwProvFlags = WTD_SAFER_FLAG | WTD_USE_DEFAULT_OSVER_CHECK | WTD_LIFETIME_SIGNING_FLAG;
+						data.dwUIContext = WTD_UICONTEXT_INSTALL;
+
+						static GUID guid = WINTRUST_ACTION_GENERIC_VERIFY_V2;
+
+						LONG ts = WinVerifyTrust(0, &guid , &data);
+
+						QFile deltemp(tempname);
+						deltemp.remove();
+						verified = (ts == 0);
+					}
 #endif
-				if (verified) {
-					clearPlugins();
+					if (verified) {
+						clearPlugins();
 
-					QFile f;
-					f.setFileName(qsSystemPlugins + QLatin1String("/") + fname);
-					if (f.open(QIODevice::WriteOnly)) {
-						f.write(data);
-						f.close();
-						g.mw->msgBox(tr("Downloaded new or updated plugin to %1.").arg(f.fileName()));
-					} else {
-						f.setFileName(qsUserPlugins + QLatin1String("/") + fname);
+						QFile f;
+						f.setFileName(qsSystemPlugins + QLatin1String("/") + fname);
 						if (f.open(QIODevice::WriteOnly)) {
-							f.write(data);
+							f.write(qba);
 							f.close();
 							g.mw->msgBox(tr("Downloaded new or updated plugin to %1.").arg(f.fileName()));
 						} else {
-							g.mw->msgBox(tr("Failed to install new plugin to %1.").arg(f.fileName()));
+							f.setFileName(qsUserPlugins + QLatin1String("/") + fname);
+							if (f.open(QIODevice::WriteOnly)) {
+								f.write(qba);
+								f.close();
+								g.mw->msgBox(tr("Downloaded new or updated plugin to %1.").arg(f.fileName()));
+							} else {
+								g.mw->msgBox(tr("Failed to install new plugin to %1.").arg(f.fileName()));
+							}
 						}
-					}
 
-					rescan=true;
+						rescan=true;
+					}
 				}
 			}
 		}
+	} else {
+		if (url.host() == g.qsRegionalHost) {
+			url.setHost(QLatin1String("mumble.info"));
+			QNetworkReply *nrep = Network::get(url);
+			connect(nrep, SIGNAL(finished()), this, SLOT(finished()));
+		}
 	}
 
 	if (rescan)
 		rescanPlugins();
+
+	rep->deleteLater();
 }
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ConfigWidget.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ConfigWidget.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ASIOInput.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ASIOInput.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -92,10 +92,14 @@ class ASIOInput : public AudioInput {
 		bool initializeDriver();
 
 		QWaitCondition qwDone;
+
 	public:
+		// overrides super->addInternalEcho() because it feteches echo from sound card already
+		void addInternalEcho(const void *data, unsigned int nsamp){};
 		ASIOInput();
 		~ASIOInput();
 		void run();
+		typedef AudioInput super;
 };
 
 #endif
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ConnectDialog.ui
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ConnectDialog.ui
@@ -20,7 +20,10 @@
       <enum>Qt::CustomContextMenu</enum>
      </property>
      <property name="dragEnabled">
+	 <!-- NDN MUMBLE disable this
       <bool>true</bool>
+	  -->
+	  <bool>false</bool>
      </property>
      <property name="dragDropMode">
       <enum>QAbstractItemView::DragDrop</enum>
@@ -41,13 +44,15 @@
       <bool>true</bool>
      </property>
      <attribute name="headerStretchLastSection">
-      <bool>false</bool>
+	 <!-- NDN MUMBLE MADE IT TRUE -->
+      <bool>true</bool>
      </attribute>
      <column>
       <property name="text">
        <string>Servername</string>
       </property>
      </column>
+<!-- FOR NDN_MUMBLE
      <column>
       <property name="text">
        <string>Ping</string>
@@ -58,6 +63,7 @@
        <string>Users</string>
       </property>
      </column>
+	-->
     </widget>
    </item>
    <item>
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Cert.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Cert.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/LCD.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/LCD.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/MainWindow.ui
+++ mumble-1.2.3-87-gf7d8711/src/mumble/MainWindow.ui
@@ -607,17 +607,6 @@
     <string>Sends a text message to all users in a channel.</string>
    </property>
   </action>
-  <action name="qaChannelCopyURL">
-   <property name="text">
-    <string>&amp;Copy URL</string>
-   </property>
-   <property name="toolTip">
-    <string>Copies a link to this channel to the clipboard.</string>
-   </property>
-   <property name="whatsThis">
-    <string>Copies a link to this channel to the clipboard.</string>
-   </property>
-  </action>
   <action name="qaConfigMinimal">
    <property name="checkable">
     <bool>true</bool>
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/CrashReporter.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/CrashReporter.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2009-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/OSS.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/OSS.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -237,7 +237,7 @@ void OSSInput::run() {
 	}
 	iMicFreq = ival;
 
-	qWarning("OSSInput: Starting audio capture from %s", device.constData());
+	qWarning("OSSInput: Staring audio capture from %s", device.constData());
 
 	eMicFormat = SampleShort;
 	initializeMixer();
@@ -342,7 +342,7 @@ void OSSOutput::run() {
 
 	int iOutputBlock = (iFrameSize * iMixerFreq) / SAMPLE_RATE;
 
-	qWarning("OSSOutput: Starting audio playback to %s", device.constData());
+	qWarning("OSSOutput: Staring audio playback to %s", device.constData());
 
 	ssize_t blocklen = iOutputBlock * iChannels * sizeof(short);
 	short mbuffer[iOutputBlock * iChannels];
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/LCD.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/LCD.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/GlobalShortcut.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/GlobalShortcut.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/OverlayUserGroup.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/OverlayUserGroup.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -98,11 +98,6 @@ void OverlayUserGroup::contextMenuEvent(
 	if (os->osShow == OverlaySettings::Talking)
 		qaShowTalking->setChecked(true);
 
-	QAction *qaShowActive = qmShow->addAction(OverlayClient::tr("Talking and recently active"));
-	qaShowActive->setCheckable(true);
-	if (os->osShow == OverlaySettings::Active)
-		qaShowActive->setChecked(true);
-
 	QAction *qaShowHome = qmShow->addAction(OverlayClient::tr("All in current channel"));
 	qaShowHome->setCheckable(true);
 	if (os->osShow == OverlaySettings::HomeChannel)
@@ -117,15 +112,10 @@ void OverlayUserGroup::contextMenuEvent(
 
 	QAction *qaShowSelf = qmShow->addAction(OverlayClient::tr("Always show yourself"));
 	qaShowSelf->setCheckable(true);
-	qaShowSelf->setEnabled(os->osShow == OverlaySettings::Talking || os->osShow == OverlaySettings::Active);
+	qaShowSelf->setEnabled(os->osShow == OverlaySettings::Talking);
 	if (os->bAlwaysSelf)
 		qaShowSelf->setChecked(true);
 
-	qmShow->addSeparator();
-
-	QAction *qaConfigureRecentlyActiveTime = qmShow->addAction(OverlayClient::tr("Configure recently active time (%1 seconds)...").arg(os->iActiveTime));
-	qaConfigureRecentlyActiveTime->setEnabled(os->osShow == OverlaySettings::Active);
-
 	QMenu *qmColumns = qm.addMenu(OverlayClient::tr("Columns"));
 	QAction *qaColumns[6];
 	for (unsigned int i=1;i<=5;++i) {
@@ -134,18 +124,6 @@ void OverlayUserGroup::contextMenuEvent(
 		qaColumns[i]->setChecked(i == os->uiColumns);
 	}
 
-	QMenu *qmSort = qm.addMenu(OverlayClient::tr("Sort"));
-
-	QAction *qaSortAlphabetically = qmSort->addAction(OverlayClient::tr("Alphabetically"));
-	qaSortAlphabetically->setCheckable(true);
-	if (os->osSort == OverlaySettings::Alphabetical)
-		qaSortAlphabetically->setChecked(true);
-
-	QAction *qaSortLastStateChange = qmSort->addAction(OverlayClient::tr("Last state change"));
-	qaSortLastStateChange->setCheckable(true);
-	if (os->osSort == OverlaySettings::LastStateChange)
-		qaSortLastStateChange->setChecked(true);
-
 	QAction *qaEdit = qm.addAction(OverlayClient::tr("Edit..."));
 	QAction *qaZoom = qm.addAction(OverlayClient::tr("Reset Zoom"));
 
@@ -168,9 +146,6 @@ void OverlayUserGroup::contextMenuEvent(
 	} else if (act == qaShowTalking) {
 		os->osShow = OverlaySettings::Talking;
 		updateUsers();
-	} else if (act == qaShowActive) {
-		os->osShow = OverlaySettings::Active;
-		updateUsers();
 	} else if (act == qaShowHome) {
 		os->osShow = OverlaySettings::HomeChannel;
 		updateUsers();
@@ -180,27 +155,6 @@ void OverlayUserGroup::contextMenuEvent(
 	} else if (act == qaShowSelf) {
 		os->bAlwaysSelf = ! os->bAlwaysSelf;
 		updateUsers();
-	} else if (act == qaConfigureRecentlyActiveTime) {
-		// FIXME: This might not be the best place to configure this setting, but currently
-		// there's not really a suitable place to put this. In the future an additional tab
-		// might be added for some advanced overlay options, which could then include this
-		// setting.
-		bool ok;
-		int newValue = QInputDialog::getInt(
-		                   qm.parentWidget(),
-		                   OverlayClient::tr("Configure recently active time"),
-		                   OverlayClient::tr("Amount of seconds users remain active after talking:"),
-		                   os->iActiveTime, 1, 2147483647, 1, &ok);
-		if (ok) {
-			os->iActiveTime = newValue;
-		}
-		updateUsers();
-	} else if (act == qaSortAlphabetically) {
-		os->osSort = OverlaySettings::Alphabetical;
-		updateUsers();
-	} else if (act == qaSortLastStateChange) {
-		os->osSort = OverlaySettings::LastStateChange;
-		updateUsers();
 	} else {
 		for (int i=1;i<=5;++i) {
 			if (act == qaColumns[i]) {
@@ -322,11 +276,6 @@ void OverlayUserGroup::updateUsers() {
 					if (! showusers.contains(cu))
 						showusers << cu;
 				break;
-			case OverlaySettings::Active:
-				showusers = ClientUser::getActive();
-				if (os->bAlwaysSelf && !showusers.contains(self))
-					showusers << self;
-				break;
 			default:
 				showusers = ClientUser::getTalking();
 				if (os->bAlwaysSelf && (self->tsState == Settings::Passive))
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/CrashReporter.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/CrashReporter.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2009-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
@@ -105,7 +105,15 @@ void CrashReporter::uploadProgress(qint6
 
 void CrashReporter::run() {
 	QByteArray qbaDumpContents;
+#ifdef COMPAT_CLIENT
+#ifdef Q_OS_MAC
+	QFile qfCrashDump(QDir::homePath() + QLatin1String("/Library/Preferences/Mumble/mumble11x.dmp"));
+#else
+	QFile qfCrashDump(QDesktopServices::storageLocation(QDesktopServices::DataLocation) + QLatin1String("/mumble11x.dmp"));
+#endif
+#else
 	QFile qfCrashDump(g.qdBasePath.filePath(QLatin1String("mumble.dmp")));
+#endif
 	if (! qfCrashDump.exists())
 		return;
 
@@ -134,7 +142,11 @@ void CrashReporter::run() {
 	}
 
 	QStringList qslFilters;
+#ifdef COMPAT_CLIENT
+	qslFilters << QString::fromLatin1("Mumble11x_*.crash");
+#else
 	qslFilters << QString::fromLatin1("Mumble_*.crash");
+#endif
 	qdCrashReports.setNameFilters(qslFilters);
 	qdCrashReports.setSorting(QDir::Time);
 	QFileInfoList qfilEntries = qdCrashReports.entryInfoList();
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/mumble/wav.cpp
@@ -0,0 +1,169 @@
+#include "wavlog.h"
+
+WavHeader::WavHeader() {
+	chunk.id = "RIFF";
+	chunk.format = "WAVE";
+
+	fmt.format = "fmt "; // tricky; don't forget the last whitespace
+	fmt.size = 16;	// PCM
+	fmt.audioFormat = 1; // PCM
+	fmt.bitsPerSample = 16;
+
+	dataHeader.dataTag = "data";
+}
+
+void WavHeader::setNumChannels(int n) {
+	this->fmt.nChannels = n;
+	updateFmt();
+}
+
+void WavHeader::setSampleRate(int sr) {
+	this->fmt.sampleRate = sr;
+	updateFmt();
+}
+
+void WavHeader::updateFmt() {
+	if (fmt.nChannels != 0) {
+		this->fmt.blockAlign = fmt.nChannels * fmt.bitsPerSample / 8;
+	}
+	if (fmt.nChannels != 0 && fmt.sampleRate != 0) {
+		this->fmt.byteRate = fmt.sampleRate * fmt.nChannels * fmt.bitsPerSample / 8;
+
+	}
+}
+
+void WavHeader::setDataSize(int size) {
+	this->dataHeader.size = size;
+	this->chunk.size = size + 36;
+}
+
+std::ostream& operator << (std::ostream& os, const WavHeader& header) {
+	os << header.chunk.id.c_str();
+	os.write((const char *) &(header.chunk.size), 4);
+	os << header.chunk.format.c_str();
+
+	os << header.fmt.format.c_str();
+	os.write((const char *) &(header.fmt.size), 4);
+	os.write((const char *) &(header.fmt.audioFormat), 2);
+	os.write((const char *) &(header.fmt.nChannels), 2);
+	os.write((const char *) &(header.fmt.sampleRate), 4);
+	os.write((const char *) &(header.fmt.byteRate), 4);
+	os.write((const char *) &(header.fmt.blockAlign), 2);
+	os.write((const char *) &(header.fmt.bitsPerSample), 2);
+
+	os << header.dataHeader.dataTag.c_str();
+	os.write((const char *) &(header.dataHeader.size), 4);
+	return os;
+}
+
+void appendWavHeader(string filename, int nChannels, int sampleRate){
+	filename = "/tmp/" + filename;
+	ifstream in;
+	in.open(filename.c_str(), ios::in | ios::binary);
+	string wavFilename = filename + ".wav";
+	ofstream out;
+	out.open(wavFilename.c_str(), ios::out | ios::binary);
+	WavHeader h;
+	h.setNumChannels(nChannels);
+	h.setSampleRate(sampleRate);
+	struct stat fileStats;
+	int padding;
+	stat (filename.c_str(), &fileStats);
+	padding = fileStats.st_size % h.getBlockAlign();
+	h.setDataSize(fileStats.st_size - padding);
+	out << h;
+	out << in.rdbuf();
+	in.close();
+	out.close();
+}
+
+void logWav(string filename, short *frame, int nsamp) {
+	filename = "/tmp/" + filename;
+	ofstream out;
+	out.open(filename.c_str(), ios::out | ios::binary | ios::app);
+	for (int i = 0; i < nsamp; i ++) {
+		out.write((const char *) &(frame[i]), 2);
+	}
+	out.close();
+}
+
+void CircularBuffer::update(char rw, int bytes) {
+	switch(rw) {
+	case 'r': 
+		readBytes += bytes;
+		readPtr += bytes;
+		if (readPtr >= BUFFER_SIZE) {
+			readPtr = readPtr % BUFFER_SIZE;
+		}
+		return;
+
+	case 'w':
+		writeBytes += bytes;
+		writePtr += bytes;
+		if (writePtr >= BUFFER_SIZE) {
+			writePtr = writePtr % BUFFER_SIZE;
+		}
+
+		return;
+	default:
+		fprintf(stderr, "Unknown circular buffer operation\n");
+		abort();
+	}
+}
+
+CircularBuffer::CircularBuffer(char *file){
+	writePtr =0; 
+	readPtr = 0; 
+	readBytes = 0; 
+	writeBytes = 0;
+	fp = fopen(file, "wb");
+}
+
+CircularBuffer::~CircularBuffer() {
+	fclose(fp);
+}
+
+void CircularBuffer::writeToBuffer(char *data, size_t len) {
+	for (int i = 0; i < len; i++) {
+		buf[writePtr] = data[i];
+		update('w', 1);
+		if (isFull()) {
+			fprintf(stderr, "circularBuffer overflow!\n");
+			abort();
+		}
+	}
+}
+
+void CircularBuffer::log(char *msg) {
+	char print_buf[200];
+	struct timeval tv;
+	struct timezone tz;
+	gettimeofday(&tv, &tz);
+	sprintf(print_buf, "%d.%06d: %s", tv.tv_sec, tv.tv_usec, msg);
+	writeToBuffer(print_buf, strlen(print_buf));
+}
+
+int CircularBuffer::readToFile() {
+	if (writeBytes <= readBytes)
+		return 0;
+	int bytes = writeBytes - readBytes;
+	for(int i = 0; i < bytes; i++) {
+		fwrite(buf + readPtr, 1, sizeof(char), fp);
+		update('r', sizeof(char));
+	}
+}
+
+/*
+int main() {
+	CircularBuffer * cb = new CircularBuffer("/tmp/test");
+	for (int i = 0; i < 1000; i++) {
+		char sbuf[100];
+		sprintf(sbuf, "hello world: %d\n", i);
+		cb->log(sbuf);
+		if (i % 100 == 99)
+			cb->readToFile();
+	}
+	return 0;
+}
+*/
+
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Usage.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Usage.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Usage.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Usage.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/AudioConfigDialog.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/AudioConfigDialog.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
    Copyright (C) 2008, Andreas Messer <andi@bupfen.de>
 
    All rights reserved.
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/CustomElements.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/CustomElements.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -93,7 +93,7 @@ void ChatbarTextEdit::dropEvent(QDropEve
 	QTextEdit::dropEvent(evt);
 }
 
-ChatbarTextEdit::ChatbarTextEdit(QWidget *p) : QTextEdit(p), iHistoryIndex(-1) {
+ChatbarTextEdit::ChatbarTextEdit(QWidget *p) : QTextEdit(p) {
 	setWordWrapMode(QTextOption::WrapAtWordBoundaryOrAnywhere);
 	setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);
 	setVerticalScrollBarPolicy(Qt::ScrollBarAlwaysOff);
@@ -150,11 +150,7 @@ bool ChatbarTextEdit::event(QEvent *evt)
 	if (evt->type() == QEvent::KeyPress) {
 		QKeyEvent *kev = static_cast<QKeyEvent*>(evt);
 		if ((kev->key() == Qt::Key_Enter || kev->key() == Qt::Key_Return) && !(kev->modifiers() & Qt::ShiftModifier)) {
-			const QString msg = toPlainText();
-			if (!msg.isEmpty()) {
-				addToHistory(msg);
-				emit entered(msg);
-			}
+			g.mw->sendChatbarMessage();
 			return true;
 		}
 		if (kev->key() == Qt::Key_Tab) {
@@ -163,12 +159,6 @@ bool ChatbarTextEdit::event(QEvent *evt)
 		} else if (kev->key() == Qt::Key_Space && kev->modifiers() == Qt::ControlModifier) {
 			emit ctrlSpacePressed();
 			return true;
-		} else if (kev->key() == Qt::Key_Up && kev->modifiers() == Qt::ControlModifier) {
-			historyUp();
-			return true;
-		} else if (kev->key() == Qt::Key_Down && kev->modifiers() == Qt::ControlModifier) {
-			historyDown();
-			return true;
 		}
 	}
 	return QTextEdit::event(evt);
@@ -241,44 +231,9 @@ unsigned int ChatbarTextEdit::completeAt
 	return id;
 }
 
-void ChatbarTextEdit::addToHistory(const QString &str) {
-	iHistoryIndex = -1;
-	qslHistory.push_front(str);
-	if (qslHistory.length() > MAX_HISTORY) {
-		qslHistory.pop_back();
-	}
-}
-
-void ChatbarTextEdit::historyUp() {
-	if (qslHistory.length() == 0)
-		return;
-
-	if (iHistoryIndex == -1) {
-		qsHistoryTemp = toPlainText();
-	}
-
-	if (iHistoryIndex < qslHistory.length() - 1) {
-		setPlainText(qslHistory[++iHistoryIndex]);
-		moveCursor(QTextCursor::End);
-	}
-}
-
-void ChatbarTextEdit::historyDown() {
-	if (iHistoryIndex < 0) {
-		return;
-	} else if (iHistoryIndex == 0) {
-		setPlainText(qsHistoryTemp);
-		iHistoryIndex--;
-	} else {
-		setPlainText(qslHistory[--iHistoryIndex]);
-	}
-	moveCursor(QTextCursor::End);
-}
-
 void ChatbarTextEdit::pasteAndSend_triggered() {
 	paste();
-	addToHistory(toPlainText());
-	emit entered(toPlainText());
+	g.mw->sendChatbarMessage();
 }
 
 DockTitleBar::DockTitleBar() : QLabel(tr("Drag here")) {
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Database.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Database.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -31,8 +31,6 @@
 #include "Database.h"
 #include "Global.h"
 #include "Message.h"
-#include "Net.h"
-#include "Version.h"
 
 Database::Database() {
 	QSqlDatabase db = QSqlDatabase::addDatabase(QLatin1String("QSQLITE"));
@@ -96,7 +94,7 @@ Database::Database() {
 
 	QSqlQuery query;
 
-	query.exec(QLatin1String("CREATE TABLE IF NOT EXISTS `servers` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` TEXT, `hostname` TEXT, `port` INTEGER DEFAULT " MUMTEXT(DEFAULT_MUMBLE_PORT) ", `username` TEXT, `password` TEXT)"));
+	query.exec(QLatin1String("CREATE TABLE IF NOT EXISTS `servers` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` TEXT, `hostname` TEXT, `port` INTEGER DEFAULT 64738, `username` TEXT, `password` TEXT)"));
 	query.exec(QLatin1String("ALTER TABLE `servers` ADD COLUMN `url` TEXT"));
 
 	query.exec(QLatin1String("CREATE TABLE IF NOT EXISTS `comments` (`who` TEXT, `comment` BLOB, `seen` DATE)"));
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/TextToSpeech_macx.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/TextToSpeech_macx.cpp
@@ -1,6 +1,6 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
    Copyright (C) 2007, Sebastian Schlingmann <mit_service@users.sourceforge.net>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/SharedMemory_win.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/SharedMemory_win.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Overlay.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Overlay.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -395,24 +395,7 @@ class Overlay : public QObject {
 		void toggleShow();
 		void forceSettings();
 		void checkUpdates();
-		void fetched(QByteArray, QUrl);
+		void finished();
 };
 
-#ifdef Q_OS_WIN
-typedef void (__cdecl *HooksProc)();
-class OverlayPrivateWin : public OverlayPrivate {
-	private:
-		Q_OBJECT
-		Q_DISABLE_COPY(OverlayPrivateWin)
-	protected:
-		QLibrary *qlOverlay;
-	public:
-		HooksProc hpInstall, hpRemove;
-
-		void setActive(bool);
-		OverlayPrivateWin(QObject *);
-		~OverlayPrivateWin();
-};
-#endif
-
 #endif
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ViewCert.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ViewCert.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ConfigWidget.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ConfigWidget.h
@@ -1,5 +1,5 @@
 
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/mumble/wavlog.h
@@ -0,0 +1,74 @@
+#ifndef WAVLOG_H
+#define WAVLOG_H
+#include <iostream>
+#include <fstream>
+#include <string>
+#include <sys/stat.h>
+#include <sys/time.h>
+#include <stdlib.h>
+using namespace std;
+
+struct ChunkDesc {
+	string id;
+	int size;
+	string format;
+};
+
+struct FmtDesc {
+	string format;
+	int size;
+	short audioFormat;
+	short nChannels;
+	int sampleRate;
+	int byteRate;
+	short blockAlign;
+	short bitsPerSample;
+}; 
+
+struct DataDesc {
+	string dataTag;
+	int size;
+};
+
+class WavHeader{
+private:
+	struct ChunkDesc chunk;
+	struct FmtDesc fmt;
+	struct DataDesc dataHeader; 
+
+public:
+	WavHeader();
+	void setNumChannels(int n); 
+	void setSampleRate(int sr); 
+	void updateFmt();
+	void setDataSize(int size); 
+	int getBlockAlign() { return fmt.blockAlign; }
+friend std::ostream& operator << (std::ostream& os, const WavHeader& header);
+};
+std::ostream& operator << (std::ostream& os, const WavHeader& header);
+void appendWavHeader(string filename, int nChannels, int sampleRate);
+
+#define BUFFER_SIZE 200000
+class CircularBuffer{
+private:
+	int writePtr;
+	int readPtr;
+	long readBytes;
+	long writeBytes;
+	char buf[BUFFER_SIZE];
+	FILE *fp;
+	bool isFull() {return (writeBytes - readBytes >= BUFFER_SIZE); }
+	bool isEmpty() { return (writeBytes == readBytes); }
+	void update(char rw, int bytes); 
+
+public:
+	CircularBuffer(char *file);
+	~CircularBuffer();
+	void writeToBuffer(char *data, size_t len);
+	int readToFile();
+	void log(char *msg);
+};
+
+
+
+#endif
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ConfigDialog_macx.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ConfigDialog_macx.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/NetworkConfig.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/NetworkConfig.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Global.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Global.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -87,6 +87,7 @@ public:
 	int iMaxBandwidth;
 	int iAudioBandwidth;
 	QDir qdBasePath;
+	QString qsRegionalHost;
 	QMap<int, CELTCodec *> qmCodecs;
 	int iCodecAlpha, iCodecBeta;
 	bool bPreferAlpha;
@@ -134,5 +135,4 @@ class DeferInit {
 // is included long before this definition.
 
 #define g (*Global::g_global_struct)
-
 #endif
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/G15LCDEngine_unix.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/G15LCDEngine_unix.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/AudioStats.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/AudioStats.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -124,11 +124,30 @@ void AudioBar::paintEvent(QPaintEvent *)
 
 }
 
-AudioEchoWidget::AudioEchoWidget(QWidget *p) : QWidget(p) {
+AudioEchoWidget::AudioEchoWidget(QWidget *p) : QGLWidget(p) {
 	setMinimumSize(100, 60);
 }
 
-static inline const QColor mapEchoToColor(float echo) {
+void AudioEchoWidget::initializeGL() {
+	glDisable(GL_LIGHTING);
+
+	glClearColor(0,0,0,0);
+	glShadeModel(GL_SMOOTH);
+
+	glEnable(GL_COLOR_MATERIAL);
+	glDisable(GL_CULL_FACE);
+}
+
+void AudioEchoWidget::resizeGL(int w, int h) {
+	glViewport(0, 0, w, h);
+	glMatrixMode(GL_PROJECTION);
+	glLoadIdentity();
+	glOrtho(0.0, 1.0, 0.0, 1.0, -1.0, 1.0);
+	glMatrixMode(GL_MODELVIEW);
+	glLoadIdentity();
+}
+
+static inline void mapEchoToColor(float echo) {
 	bool neg = (echo < 0.0f);
 	echo = fabsf(echo);
 
@@ -143,26 +162,21 @@ static inline const QColor mapEchoToColo
 
 	if (echo < 0.5f) {
 		a = echo * 2.0f;
-		b = 0.0f;
+		b = 0;
 	} else {
-		a = 1.0f;
+		a = 1;
 		b = (echo - 0.5f) * 2.0f;
 	}
 
 	if (neg)
-		return QColor::fromRgbF(a, b, c);
+		glColor3f(a, b, c);
 	else
-		return QColor::fromRgbF(c, b, a);
+		glColor3f(c, b, a);
 }
 
 #define WGT(x,y) st->W[(y)*N + 2*(x)+1]
 
-void AudioEchoWidget::paintEvent(QPaintEvent *) {
-	QPainter paint(this);
-
-	paint.scale(width(), height());
-	paint.fillRect(rect(), Qt::black);
-
+void AudioEchoWidget::paintGL() {
 	AudioInputPtr ai = g.ai;
 	if (! ai || ! ai->sesEcho)
 		return;
@@ -197,6 +211,8 @@ void AudioEchoWidget::paintEvent(QPaintE
 	float xscale = 1.0f / static_cast<float>(N);
 	float yscale = 1.0f / static_cast<float>(M);
 
+	glBegin(GL_QUADS);
+
 	for (int j = 0; j < M; j++) {
 		for (int i=1;i < N; i++) {
 			float xa = static_cast<float>(i) * xscale;
@@ -205,19 +221,24 @@ void AudioEchoWidget::paintEvent(QPaintE
 			float xb = xa + xscale;
 			float yb = ya + yscale;
 
-			const QColor &c = mapEchoToColor(sqrtf(W[j*n+2*i]*W[j*n+2*i]+W[j*n+2*i-1]*W[j*n+2*i-1]) / 65536.f);
-			paint.fillRect(QRectF(QPointF(xa, ya), QPointF(xb, yb)), c);
+			mapEchoToColor(sqrtf(W[j*n+2*i]*W[j*n+2*i]+W[j*n+2*i-1]*W[j*n+2*i-1]) / 65536.f);
+			glVertex2f(xa, ya);
+			glVertex2f(xb, ya);
+			glVertex2f(xb, yb);
+			glVertex2f(xa, yb);
 		}
 	}
 
-	QPolygonF poly;
-	xscale = 1.0f / (2.0f * static_cast<float>(n));
+	glEnd();
+
+	glBegin(GL_LINE_STRIP);
+	glColor3f(1.0f, 0.0f, 1.0f);
+	xscale = 1.0f / (2.0f*static_cast<float>(n));
 	yscale = 1.0f / (200.0f * 32767.0f);
-	for (int i = 0; i < 2 * n; i++) {
-		poly << QPointF(static_cast<float>(i) * xscale, 0.5f + static_cast<float>(w[i]) * yscale);
+	for (int i=0;i<2*n;i++) {
+		glVertex2f(static_cast<float>(i)*xscale, 0.5f + static_cast<float>(w[i]) * yscale);
 	}
-	paint.setPen(QColor::fromRgbF(1.0f, 0.0f, 1.0f));
-	paint.drawPolyline(poly);
+	glEnd();
 }
 
 AudioNoiseWidget::AudioNoiseWidget(QWidget *p) : QWidget(p) {
@@ -390,7 +411,11 @@ void AudioStats::on_Tick_timeout() {
 	abSpeech->iAbove = iroundf(g.s.fVADmax * 32767.0f + 0.5f);
 
 	if (g.s.vsVAD == Settings::Amplitude) {
+#ifndef COMPAT_CLIENT
 		abSpeech->iValue = iroundf((32767.f/96.0f) * (96.0f + ai->dPeakCleanMic) + 0.5f);
+#else
+		abSpeech->iValue = iroundf((32767.f/96.0f) * (96.0f + ai->dPeakMic) + 0.5f);
+#endif
 	} else {
 		abSpeech->iValue = iroundf(ai->fSpeechProb * 32767.0f + 0.5f);
 	}
@@ -399,5 +424,5 @@ void AudioStats::on_Tick_timeout() {
 
 	anwNoise->update();
 	if (aewEcho)
-		aewEcho->update();
+		aewEcho->updateGL();
 }
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ConfigDialog.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ConfigDialog.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/VoiceRecorderDialog.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/VoiceRecorderDialog.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2010-2011, Stefan Hacker <dd0t@users.sourceforge.net>
-   Copyright (C) 2010-2011, Benjamin Jemlich <pcgod@users.sourceforge.net>
+/* Copyright (C) 2010, Stefan Hacker <dd0t@users.sourceforge.net>
+   Copyright (C) 2010, Benjamin Jemlich <pcgod@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/PulseAudio.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/PulseAudio.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -56,10 +56,9 @@ class PulseAudioSystem : public QObject
 		int iDelayCache;
 		QString qsOutputCache, qsInputCache, qsEchoCache;
 		bool bPositionalCache;
-		bool bEchoMultiCache;
 		QHash<QString, QString> qhEchoMap;
 		QHash<QString, pa_sample_spec> qhSpecMap;
-		QHash<QString, pa_channel_map> qhChanMap;
+		QHash<QString, int> qhIndexMap;
 
 		static void defer_event_callback(pa_mainloop_api *a, pa_defer_event *e, void *userdata);
 		static void context_state_callback(pa_context *c, void *userdata);
@@ -97,10 +96,13 @@ class PulseAudioInput : public AudioInpu
 		QMutex qmMutex;
 		QWaitCondition qwcWait;
 		pa_sample_spec pssMic, pssEcho;
+
 	public:
+		void addInternalEcho(const void *data, unsigned int nsamp){};
 		PulseAudioInput();
 		~PulseAudioInput();
 		void run();
+		typedef AudioInput super;
 };
 
 class PulseAudioOutput : public AudioOutput {
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Tokens.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Tokens.cpp
@@ -1,4 +1,4 @@
-/* copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Plugins.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Plugins.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -93,7 +93,7 @@ class Plugins : public QObject {
 		void rescanPlugins();
 		bool fetch();
 		void checkUpdates();
-		void fetched(QByteArray, QUrl);
+		void finished();
 };
 
 #else
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Overlay_unix.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Overlay_unix.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/G15LCDEngine_helper.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/G15LCDEngine_helper.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/DBus.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/DBus.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/BonjourClient.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/BonjourClient.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2009-2011, Stefan Hacker
+/* Copyright (C) 2009, Stefan Hacker
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Log.ui
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Log.ui
@@ -6,7 +6,7 @@
    <rect>
     <x>0</x>
     <y>0</y>
-    <width>446</width>
+    <width>402</width>
     <height>334</height>
    </rect>
   </property>
@@ -79,7 +79,7 @@
         </property>
        </widget>
       </item>
-      <item row="0" column="1" colspan="3">
+      <item row="0" column="1" colspan="2">
        <widget class="QSlider" name="qsVolume">
         <property name="toolTip">
          <string>Volume of Text-To-Speech Engine</string>
@@ -139,15 +139,18 @@
         </property>
        </widget>
       </item>
-      <item row="1" column="3">
-       <widget class="QCheckBox" name="qcbReadBackOwn">
-        <property name="toolTip">
-         <string>If enabled text messages you send will be read back to you with TTS</string>
+      <item row="1" column="2">
+       <spacer>
+        <property name="orientation">
+         <enum>Qt::Horizontal</enum>
         </property>
-        <property name="text">
-         <string>Read back own messages</string>
+        <property name="sizeHint" stdset="0">
+         <size>
+          <width>8</width>
+          <height>16</height>
+         </size>
         </property>
-       </widget>
+       </spacer>
       </item>
      </layout>
     </widget>
@@ -170,54 +173,6 @@
       </item>
      </layout>
     </widget>
-   </item>
-   <item>
-    <widget class="QGroupBox" name="qgbMaxBlocks">
-     <property name="title">
-      <string>Chat Log</string>
-     </property>
-     <layout class="QGridLayout" name="gridLayout">
-      <item row="0" column="0">
-       <widget class="QLabel" name="qlMaxBlocks">
-        <property name="text">
-         <string>Maximum chat length</string>
-        </property>
-       </widget>
-      </item>
-      <item row="0" column="1">
-       <widget class="QSpinBox" name="qsbMaxBlocks">
-        <property name="buttonSymbols">
-         <enum>QAbstractSpinBox::PlusMinus</enum>
-        </property>
-        <property name="specialValueText">
-         <string>Unlimited</string>
-        </property>
-        <property name="suffix">
-         <string> Lines</string>
-        </property>
-        <property name="maximum">
-         <number>1000000</number>
-        </property>
-        <property name="singleStep">
-         <number>100</number>
-        </property>
-       </widget>
-      </item>
-      <item row="0" column="2">
-       <spacer name="horizontalSpacer">
-        <property name="orientation">
-         <enum>Qt::Horizontal</enum>
-        </property>
-        <property name="sizeHint" stdset="0">
-         <size>
-          <width>8</width>
-          <height>16</height>
-         </size>
-        </property>
-       </spacer>
-      </item>
-     </layout>
-    </widget>
    </item>
   </layout>
  </widget>
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/OverlayText.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/OverlayText.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/mumble_pch.hpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/mumble_pch.hpp
@@ -3,8 +3,8 @@
 #define _MUMBLE_PCH_H
 
 #define QT_NO_DEBUG_STREAM
+#define QT_ASCII_CAST_WARNINGS
 #define QT_NO_CAST_TO_ASCII
-#define QT_NO_CAST_FROM_ASCII
 #define QT_USE_FAST_CONCATENATION
 #define QT_USE_FAST_OPERATOR_PLUS
 
@@ -33,6 +33,7 @@
 #include <QtDBus/QtDBus>
 #endif
 #include <QtNetwork/QtNetwork>
+#include <QtOpenGL/QtOpenGL>
 #include <QtSql/QtSql>
 #include <QtXml/QtXml>
 
@@ -45,6 +46,7 @@
 /* OpenSSL defines set_key. This breaks our protobuf-generated setters. */
 #undef set_key
 
+#ifndef COMPAT_CLIENT
 #ifdef Q_OS_WIN
 #define ENABLE_SNDFILE_WINDOWS_PROTOTYPES 1
 #endif
@@ -53,6 +55,10 @@
 #undef __int64_t
 #include <celt.h>
 #include <celt_header.h>
+#else
+#include <ogg/ogg.h>
+#include <speex/speex_callbacks.h>
+#endif
 #include <speex/speex.h>
 #include <speex/speex_header.h>
 #include <speex/speex_jitter.h>
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/VersionCheck.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/VersionCheck.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
 All rights reserved.
 
@@ -40,7 +40,7 @@ class VersionCheck : public QObject {
 	protected:
 		bool bSilent;
 	public slots:
-		void fetched(QByteArray data, QUrl url);
+		void finished();
 	public:
 		VersionCheck(bool autocheck, QObject *parent = NULL, bool focus = false);
 };
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/About.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/About.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/WASAPI.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/WASAPI.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/TaskList.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/TaskList.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Benjamin Jemlich <pcgod@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Benjamin Jemlich <pcgod@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/VersionCheck.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/VersionCheck.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -31,12 +31,14 @@
 #include "VersionCheck.h"
 #include "Global.h"
 #include "MainWindow.h"
-#include "WebFetch.h"
+#include "NetworkConfig.h"
 
 VersionCheck::VersionCheck(bool autocheck, QObject *p, bool focus) : QObject(p) {
 	bSilent = autocheck;
 
 	QUrl url;
+	url.setScheme(QLatin1String("http"));
+	url.setHost(g.qsRegionalHost);
 	url.setPath(focus ? QLatin1String("/focus.php") : QLatin1String("/ver.php"));
 
 	url.addQueryItem(QLatin1String("ver"), QLatin1String(QUrl::toPercentEncoding(QLatin1String(MUMBLE_RELEASE))));
@@ -70,13 +72,18 @@ VersionCheck::VersionCheck(bool autochec
 		}
 	}
 
-	WebFetch::fetch(url, this, SLOT(fetched(QByteArray,QUrl)));
+	QNetworkReply *rep = Network::get(url);
+	connect(rep, SIGNAL(finished()), this, SLOT(finished()));
 }
 
-void VersionCheck::fetched(QByteArray a, QUrl url) {
-	if (! a.isNull()) {
+void VersionCheck::finished() {
+	QNetworkReply *rep = qobject_cast<QNetworkReply *>(sender());
+	QUrl url = rep->request().url();
+
+	if (rep->error() == QNetworkReply::NoError) {
+		const QByteArray &a=rep->readAll();
 		if (! a.isEmpty()) {
-#ifdef SNAPSHOT_BUILD
+#if defined(SNAPSHOT_BUILD) && ! defined(COMPAT_CLIENT)
 			if (url.path() == QLatin1String("/focus.php")) {
 				g.mw->msgBox(QString::fromUtf8(a));
 			} else if (url.path() == QLatin1String("/ver.php")) {
@@ -90,8 +97,6 @@ void VersionCheck::fetched(QByteArray a,
 				elem = elem.firstChildElement(QLatin1String("a"));
 
 				QUrl fetch = QUrl(elem.attribute(QLatin1String("href")));
-				fetch.setHost(QString());
-				fetch.setScheme(QString());
 				if (! fetch.isValid()) {
 					g.mw->msgBox(QString::fromUtf8(a));
 				} else {
@@ -144,23 +149,14 @@ void VersionCheck::fetched(QByteArray a,
 							g.mw->msgBox(tr("Corrupt download of new version detected. Automatically removed."));
 							qf.remove();
 						}
-
-						// Delete snapshots older than 30 days
-						QDir snapdir(g.qdBasePath.absolutePath() + QLatin1String("/Snapshots/"),
-						             QString(),
-						             QDir::Name,
-						             QDir::Files);
-
-						foreach(const QFileInfo fileInfo, snapdir.entryInfoList()) {
-							if (fileInfo.created().daysTo(QDateTime::currentDateTime()) > 30) {
-								qWarning() << "Purging old snapshot" << fileInfo.fileName();
-								QFile file(fileInfo.absoluteFilePath());
-								file.remove();
-							}
-						}
 					} else {
+						fetch.setHost(g.qsRegionalHost);
 						g.mw->msgBox(tr("Downloading new snapshot from %1 to %2").arg(fetch.toString(), filename));
-						WebFetch::fetch(fetch, this, SLOT(fetched(QByteArray,QUrl)));
+
+						QNetworkReply *nrep = Network::get(fetch);
+						connect(nrep, SIGNAL(finished()), this, SLOT(finished()));
+
+						rep->deleteLater();
 						return;
 					}
 				}
@@ -181,9 +177,19 @@ void VersionCheck::fetched(QByteArray a,
 			g.mw->msgBox(QString::fromUtf8(a));
 #endif
 		}
-	} else if (bSilent) {
-		g.mw->msgBox(tr("Mumble failed to retrieve version information from the central server."));
+	} else {
+		if (url.host() == g.qsRegionalHost) {
+			url.setHost(QLatin1String("mumble.info"));
+			QNetworkReply *nrep = Network::get(url);
+			connect(nrep, SIGNAL(finished()), this, SLOT(finished()));
+
+			rep->deleteLater();
+			return;
+		} else if (bSilent) {
+			g.mw->msgBox(tr("Mumble failed to retrieve version information from the central server."));
+		}
 	}
 
+	rep->deleteLater();
 	deleteLater();
 }
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/AudioWizard.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/AudioWizard.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/PAAudio.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/PAAudio.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
    Copyright (C) 2007, Stefan Gehn <mETz AT gehn DOT net>
 
    All rights reserved.
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ClientUser.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ClientUser.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -47,7 +47,6 @@ class ClientUser : public QObject, publi
 		};
 
 		Settings::TalkState tsState;
-		Timer tLastTalkStateChange;
 		bool bLocalMute;
 
 		float fPowerMin, fPowerMax;
@@ -67,19 +66,12 @@ class ClientUser : public QObject, publi
 		QString getFlagsString() const;
 		ClientUser(QObject *p = NULL);
 
-		/*! Determines whether a user is active or not
-		 * A user is active when it is currently speaking or when the user has
-		 * spoken within Settings::iActiveTime amount of seconds.
-		 */
-		bool isActive();
-
 		static QHash<unsigned int, ClientUser *> c_qmUsers;
 		static QReadWriteLock c_qrwlUsers;
 
 		static QList<ClientUser *> c_qlTalking;
 		static QReadWriteLock c_qrwlTalking;
 		static QList<ClientUser *> getTalking();
-		static QList<ClientUser *> getActive();
 
 		static void sortUsersOverlay(QList<ClientUser *> &list);
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/mumble.pro
+++ mumble-1.2.3-87-gf7d8711/src/mumble/mumble.pro
@@ -1,18 +1,20 @@
 include(../mumble.pri)
 
-DEFINES		*= MUMBLE
+CONFIG *= no-embed-qt-translations 
+DEFINES		*= MUMBLE NDN_MUMBLE
 TEMPLATE	= app
-QT		*= network sql xml svg
+QT		*= network sql opengl xml svg
 TARGET		= mumble
-HEADERS		*= BanEditor.h ACLEditor.h ConfigWidget.h Log.h AudioConfigDialog.h AudioStats.h AudioInput.h AudioOutput.h CustomElements.h MainWindow.h ServerHandler.h About.h ConnectDialog.h GlobalShortcut.h TextToSpeech.h Settings.h Database.h VersionCheck.h Global.h UserModel.h Audio.h ConfigDialog.h Plugins.h LookConfig.h Overlay.h OverlayText.h SharedMemory.h AudioWizard.h ViewCert.h TextMessage.h NetworkConfig.h LCD.h Usage.h Cert.h ClientUser.h UserEdit.h Tokens.h UserView.h RichTextEditor.h UserInformation.h FileEngine.h SocketRPC.h VoiceRecorder.h VoiceRecorderDialog.h WebFetch.h
-SOURCES		*= BanEditor.cpp ACLEditor.cpp ConfigWidget.cpp Log.cpp AudioConfigDialog.cpp AudioStats.cpp AudioInput.cpp AudioOutput.cpp main.cpp CustomElements.cpp MainWindow.cpp ServerHandler.cpp About.cpp ConnectDialog.cpp Settings.cpp Database.cpp VersionCheck.cpp Global.cpp UserModel.cpp Audio.cpp ConfigDialog.cpp Plugins.cpp LookConfig.cpp OverlayClient.cpp OverlayConfig.cpp OverlayEditor.cpp OverlayEditorScene.cpp OverlayUser.cpp OverlayUserGroup.cpp Overlay.cpp OverlayText.cpp SharedMemory.cpp AudioWizard.cpp ViewCert.cpp Messages.cpp TextMessage.cpp GlobalShortcut.cpp NetworkConfig.cpp LCD.cpp Usage.cpp Cert.cpp ClientUser.cpp UserEdit.cpp Tokens.cpp UserView.cpp RichTextEditor.cpp UserInformation.cpp FileEngine.cpp SocketRPC.cpp VoiceRecorder.cpp VoiceRecorderDialog.cpp WebFetch.cpp
+HEADERS		*= BanEditor.h ACLEditor.h ConfigWidget.h Log.h AudioConfigDialog.h AudioStats.h AudioInput.h AudioOutput.h CustomElements.h MainWindow.h ServerHandler.h About.h ConnectDialog.h GlobalShortcut.h TextToSpeech.h Settings.h Database.h VersionCheck.h Global.h UserModel.h Audio.h ConfigDialog.h Plugins.h LookConfig.h Overlay.h OverlayText.h SharedMemory.h AudioWizard.h ViewCert.h TextMessage.h NetworkConfig.h LCD.h Usage.h Cert.h ClientUser.h UserEdit.h Tokens.h UserView.h RichTextEditor.h UserInformation.h FileEngine.h SocketRPC.h VoiceRecorder.h VoiceRecorderDialog.h wavlog.h
+SOURCES		*= BanEditor.cpp ACLEditor.cpp ConfigWidget.cpp Log.cpp AudioConfigDialog.cpp AudioStats.cpp AudioInput.cpp AudioOutput.cpp main.cpp CustomElements.cpp MainWindow.cpp ServerHandler.cpp About.cpp ConnectDialog.cpp Settings.cpp Database.cpp VersionCheck.cpp Global.cpp UserModel.cpp Audio.cpp ConfigDialog.cpp Plugins.cpp LookConfig.cpp OverlayClient.cpp OverlayConfig.cpp OverlayEditor.cpp OverlayEditorScene.cpp OverlayUser.cpp OverlayUserGroup.cpp Overlay.cpp OverlayText.cpp SharedMemory.cpp AudioWizard.cpp ViewCert.cpp Messages.cpp TextMessage.cpp GlobalShortcut.cpp NetworkConfig.cpp LCD.cpp Usage.cpp Cert.cpp ClientUser.cpp UserEdit.cpp Tokens.cpp UserView.cpp RichTextEditor.cpp UserInformation.cpp FileEngine.cpp SocketRPC.cpp VoiceRecorder.cpp VoiceRecorderDialog.cpp wav.cpp
 SOURCES *= smallft.cpp
 DIST		*= ../../icons/mumble.ico licenses.h smallft.h ../../icons/mumble.xpm murmur_pch.h mumble.plist
 RESOURCES	*= mumble.qrc mumble_flags.qrc
 FORMS	*= ConfigDialog.ui MainWindow.ui ConnectDialog.ui ConnectDialogEdit.ui BanEditor.ui ACLEditor.ui Plugins.ui Overlay.ui OverlayEditor.ui LookConfig.ui AudioInput.ui AudioOutput.ui Log.ui TextMessage.ui AudioStats.ui NetworkConfig.ui LCD.ui GlobalShortcut.ui GlobalShortcutTarget.ui Cert.ui UserEdit.ui AudioWizard.ui Tokens.ui RichTextEditor.ui RichTextEditorLink.ui UserInformation.ui VoiceRecorderDialog.ui
-TRANSLATIONS	= mumble_en.ts mumble_es.ts mumble_de.ts mumble_fr.ts mumble_pl.ts mumble_ru.ts mumble_cs.ts mumble_it.ts mumble_ja.ts mumble_pt_BR.ts mumble_zh_CN.ts mumble_zh_TW.ts mumble_da.ts mumble_he.ts mumble_sv.ts
+#TRANSLATIONS	= mumble_en.ts mumble_es.ts mumble_de.ts mumble_fr.ts mumble_pl.ts mumble_ru.ts mumble_cs.ts mumble_it.ts mumble_ja.ts mumble_pt_BR.ts mumble_zh_CN.ts mumble_zh_TW.ts mumble_da.ts mumble_he.ts mumble_sv.ts
 PRECOMPILED_HEADER = mumble_pch.hpp
 INCLUDEPATH *= ../bonjour
+QMAKE_CXXFLAGS *= -rdynamic
 
 isEmpty(QMAKE_LRELEASE) {
   QMAKE_QMAKE_BASE = $$basename(QMAKE_QMAKE)
@@ -76,8 +78,8 @@ CONFIG(no-vorbis-recording) {
 win32 {
   RC_FILE	= mumble.rc
   HEADERS	*= GlobalShortcut_win.h TaskList.h
-  SOURCES	*= GlobalShortcut_win.cpp TextToSpeech_win.cpp Overlay_win.cpp SharedMemory_win.cpp os_win.cpp TaskList.cpp ../../overlay/HardHook.cpp ../../overlay/ods.cpp
-  LIBS		*= -l"$$(DXSDK_DIR)Lib/x86/dxguid" -l"$$(DXSDK_DIR)Lib/x86/dinput8" -lsapi -lole32 -lws2_32 -ladvapi32 -lwintrust -ldbghelp -llibsndfile-1 -lshell32 -lshlwapi -luser32 -lgdi32
+  SOURCES	*= GlobalShortcut_win.cpp TextToSpeech_win.cpp Overlay_win.cpp SharedMemory_win.cpp os_win.cpp TaskList.cpp ../../overlay/HardHook.cpp
+  LIBS		*= -l"$$(DXSDK_DIR)Lib/x86/dxguid" -l"$$(DXSDK_DIR)Lib/x86/dinput8" -lsapi -lole32 -lws2_32 -ladvapi32 -lwintrust -ldbghelp -llibsndfile-1 -lshell32 -lshlwapi
   LIBS		*= -ldelayimp -delayload:speex.dll -delayload:shell32.dll
 
   DEFINES	*= WIN32
@@ -91,10 +93,8 @@ win32 {
     CONFIG	*= wasapi
   }
 
-  !CONFIG(no-elevation) {
-    CONFIG(release, debug|release) {
-      QMAKE_LFLAGS *= /MANIFESTUAC:\"level=\'asInvoker\' uiAccess=\'true\'\"
-    }
+  CONFIG(release, debug|release) {
+    QMAKE_LFLAGS *= /MANIFESTUAC:\"level=\'asInvoker\' uiAccess=\'true\'\"
   }
 }
 
@@ -253,7 +253,7 @@ g15 {
 
 	win32 {
 		LIBS *= -llgLcd
-		QMAKE_LIBDIR *= "$$G15SDK_PATH/Lib/x86"
+		QMAKE_LIBDIR *= "$$G15SDK_PATH/Libs/x86"
 		INCLUDEPATH *= "$$G15SDK_PATH/Src"
 		DEFINES *= WIN32
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/GlobalShortcut_unix.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/GlobalShortcut_unix.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -35,7 +35,7 @@
 #include <QX11Info>
 #include <X11/X.h>
 #include <X11/Xlib.h>
-#include <X11/extensions/XInput2.h>
+#include <X11/extensions/XInput.h>
 #include <X11/Xutil.h>
 #ifdef Q_OS_LINUX
 #include <linux/input.h>
@@ -50,20 +50,20 @@ class GlobalShortcutX : public GlobalSho
 		Q_DISABLE_COPY(GlobalShortcutX)
 	public:
 		Display *display;
-		QSet<Window> qsRootWindows;
-		int iXIopcode;
-		QSet<int> qsMasterDevices;
-
 		volatile bool bRunning;
+		bool bXInput;
 		QSet<QString> qsKeyboards;
 		QMap<QString, QFile *> qmInputDevices;
+		QMap<XID, XDevice *> qmXDevices;
 
 		GlobalShortcutX();
 		~GlobalShortcutX();
 		void run();
 		QString buttonName(const QVariant &);
 
-		void queryXIMasterList();
+		int iKeyPress, iKeyRelease, iButtonPress, iButtonRelease;
+
+		void initXInput();
 	public slots:
 		void displayReadyRead(int);
 		void inputReadyRead(int);
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/AudioWizard.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/AudioWizard.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -129,6 +129,9 @@ AudioWizard::AudioWizard(QWidget *p) : Q
 	qlQualityCustom->setVisible(qrbQualityCustom->isChecked());
 
 	qcbPositional->setChecked(g.s.bPositionalAudio);
+#ifdef NDN_MUMBLE
+	qcbPositional->setVisible(false);
+#endif
 	qcbAttenuateOthers->setChecked(g.s.bAttenuateOthers);
 
 	on_qcbInput_activated(qcbInput->currentIndex());
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/BanEditor.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/BanEditor.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/VoiceRecorderDialog.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/VoiceRecorderDialog.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2010-2011, Stefan Hacker <dd0t@users.sourceforge.net>
-   Copyright (C) 2010-2011, Benjamin Jemlich <pcgod@users.sourceforge.net>
+/* Copyright (C) 2010, Stefan Hacker <dd0t@users.sourceforge.net>
+   Copyright (C) 2010, Benjamin Jemlich <pcgod@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Settings.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Settings.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -128,8 +128,6 @@ OverlaySettings::OverlaySettings() {
 
 	osShow = LinkedChannels;
 	bAlwaysSelf = true;
-	iActiveTime = 5;
-	osSort = Alphabetical;
 
 	qcUserName[Settings::Passive] = QColor(170, 170, 170);
 	qcUserName[Settings::Talking] = QColor(255, 255, 255);
@@ -250,11 +248,18 @@ Settings::Settings() {
 	atTransmit = VAD;
 	bTransmitPosition = false;
 	bMute = bDeaf = false;
+#ifdef NDN_MUMBLE
+	bTTS = false;
+#else
 	bTTS = true;
-	bTTSMessageReadBack = false;
+#endif
 	iTTSVolume = 75;
 	iTTSThreshold = 250;
+#ifdef NDN_MUMBLE
+	iQuality = 32000;
+#else
 	iQuality = 40000;
+#endif
 	fVolume = 1.0f;
 	fOtherVolume = 0.5f;
 	bAttenuateOthersOnTalk = false;
@@ -324,7 +329,11 @@ Settings::Settings() {
 	iPortAudioInput = -1; // default device
 	iPortAudioOutput = -1; // default device
 
+#ifdef NDN_MUMBLE
+	bPositionalAudio = false;
+#else
 	bPositionalAudio = true;
+#endif
 	bPositionalHeadphone = false;
 	fAudioMinDistance = 1.0f;
 	fAudioMaxDistance = 15.0f;
@@ -367,8 +376,6 @@ Settings::Settings() {
 	dPacketLoss = 0;
 	dMaxPacketDelay = 0.0f;
 
-	iMaxLogBlocks = 0;
-
 	for (int i=Log::firstMsgType;i<=Log::lastMsgType;++i)
 		qmMessages.insert(i, Settings::LogConsole | Settings::LogBalloon | Settings::LogTTS);
 
@@ -451,8 +458,6 @@ void OverlaySettings::load(QSettings* se
 
 	LOADENUM(osShow, "show");
 	SAVELOAD(bAlwaysSelf, "alwaysself");
-	SAVELOAD(iActiveTime, "activetime");
-	LOADENUM(osSort, "sort");
 
 	SAVELOAD(fX, "x");
 	SAVELOAD(fY, "y");
@@ -581,7 +586,6 @@ void Settings::load(QSettings* settings_
 	SAVELOAD(bTTS, "tts/enable");
 	SAVELOAD(iTTSVolume, "tts/volume");
 	SAVELOAD(iTTSThreshold, "tts/threshold");
-	SAVELOAD(bTTSMessageReadBack, "tts/readback");
 
 	// Network settings
 	SAVELOAD(bTCPCompat, "net/tcponly");
@@ -597,7 +601,6 @@ void Settings::load(QSettings* settings_
 	SAVELOAD(iMaxImageSize, "net/maximagesize");
 	SAVELOAD(iMaxImageWidth, "net/maximagewidth");
 	SAVELOAD(iMaxImageHeight, "net/maximageheight");
-	SAVELOAD(qsRegionalHost, "net/region");
 
 	SAVELOAD(bExpert, "ui/expert");
 	SAVELOAD(qsLanguage, "ui/language");
@@ -634,7 +637,6 @@ void Settings::load(QSettings* settings_
 	SAVELOAD(qbaConnectDialogGeometry, "ui/connect/geometry");
 	SAVELOAD(qbaConnectDialogHeader, "ui/connect/header");
 	SAVELOAD(bHighContrast, "ui/HighContrast");
-	SAVELOAD(iMaxLogBlocks, "ui/MaxLogBlocks");
 
 	// Recording
 	SAVELOAD(qsRecordingPath, "recording/path");
@@ -712,8 +714,6 @@ void OverlaySettings::save(QSettings* se
 
 	SAVELOAD(osShow, "show");
 	SAVELOAD(bAlwaysSelf, "alwaysself");
-	SAVELOAD(iActiveTime, "activetime");
-	SAVELOAD(osSort, "sort");
 	SAVELOAD(fX, "x");
 	SAVELOAD(fY, "y");
 	SAVELOAD(fZoom, "zoom");
@@ -840,7 +840,6 @@ void Settings::save() {
 	SAVELOAD(bTTS, "tts/enable");
 	SAVELOAD(iTTSVolume, "tts/volume");
 	SAVELOAD(iTTSThreshold, "tts/threshold");
-	SAVELOAD(bTTSMessageReadBack, "tts/readback");
 
 	// Network settings
 	SAVELOAD(bTCPCompat, "net/tcponly");
@@ -855,7 +854,6 @@ void Settings::save() {
 	SAVELOAD(iMaxImageSize, "net/maximagesize");
 	SAVELOAD(iMaxImageWidth, "net/maximagewidth");
 	SAVELOAD(iMaxImageHeight, "net/maximageheight");
-	SAVELOAD(qsRegionalHost, "net/region");
 
 	SAVELOAD(bExpert, "ui/expert");
 	SAVELOAD(qsLanguage, "ui/language");
@@ -890,7 +888,6 @@ void Settings::save() {
 	SAVELOAD(qbaConnectDialogGeometry, "ui/connect/geometry");
 	SAVELOAD(qbaConnectDialogHeader, "ui/connect/header");
 	SAVELOAD(bHighContrast, "ui/HighContrast");
-	SAVELOAD(iMaxLogBlocks, "ui/MaxLogBlocks");
 
 	// Recording
 	SAVELOAD(qsRecordingPath, "recording/path");
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Mumble.pb.h
@@ -0,0 +1,8257 @@
+// Generated by the protocol buffer compiler.  DO NOT EDIT!
+// source: Mumble.proto
+
+#ifndef PROTOBUF_Mumble_2eproto__INCLUDED
+#define PROTOBUF_Mumble_2eproto__INCLUDED
+
+#include <string>
+
+#include <google/protobuf/stubs/common.h>
+
+#if GOOGLE_PROTOBUF_VERSION < 2003000
+#error This file was generated by a newer version of protoc which is
+#error incompatible with your Protocol Buffer headers.  Please update
+#error your headers.
+#endif
+#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
+#error This file was generated by an older version of protoc which is
+#error incompatible with your Protocol Buffer headers.  Please
+#error regenerate this file with a newer version of protoc.
+#endif
+
+#include <google/protobuf/generated_message_util.h>
+#include <google/protobuf/repeated_field.h>
+#include <google/protobuf/extension_set.h>
+#include <google/protobuf/generated_message_reflection.h>
+// @@protoc_insertion_point(includes)
+
+namespace MumbleProto {
+
+// Internal implementation detail -- do not call these.
+void  protobuf_AddDesc_Mumble_2eproto();
+void protobuf_AssignDesc_Mumble_2eproto();
+void protobuf_ShutdownFile_Mumble_2eproto();
+
+class Version;
+class UDPTunnel;
+class Authenticate;
+class Ping;
+class Reject;
+class ServerConfig;
+class ServerSync;
+class ChannelRemove;
+class ChannelState;
+class UserRemove;
+class UserState;
+class BanList;
+class BanList_BanEntry;
+class TextMessage;
+class PermissionDenied;
+class ACL;
+class ACL_ChanGroup;
+class ACL_ChanACL;
+class QueryUsers;
+class CryptSetup;
+class ContextActionAdd;
+class ContextAction;
+class UserList;
+class UserList_User;
+class VoiceTarget;
+class VoiceTarget_Target;
+class PermissionQuery;
+class CodecVersion;
+class UserStats;
+class UserStats_Stats;
+class RequestBlob;
+
+enum Reject_RejectType {
+  Reject_RejectType_None = 0,
+  Reject_RejectType_WrongVersion = 1,
+  Reject_RejectType_InvalidUsername = 2,
+  Reject_RejectType_WrongUserPW = 3,
+  Reject_RejectType_WrongServerPW = 4,
+  Reject_RejectType_UsernameInUse = 5,
+  Reject_RejectType_ServerFull = 6,
+  Reject_RejectType_NoCertificate = 7
+};
+bool Reject_RejectType_IsValid(int value);
+const Reject_RejectType Reject_RejectType_RejectType_MIN = Reject_RejectType_None;
+const Reject_RejectType Reject_RejectType_RejectType_MAX = Reject_RejectType_NoCertificate;
+const int Reject_RejectType_RejectType_ARRAYSIZE = Reject_RejectType_RejectType_MAX + 1;
+
+const ::google::protobuf::EnumDescriptor* Reject_RejectType_descriptor();
+inline const ::std::string& Reject_RejectType_Name(Reject_RejectType value) {
+  return ::google::protobuf::internal::NameOfEnum(
+    Reject_RejectType_descriptor(), value);
+}
+inline bool Reject_RejectType_Parse(
+    const ::std::string& name, Reject_RejectType* value) {
+  return ::google::protobuf::internal::ParseNamedEnum<Reject_RejectType>(
+    Reject_RejectType_descriptor(), name, value);
+}
+enum PermissionDenied_DenyType {
+  PermissionDenied_DenyType_Text = 0,
+  PermissionDenied_DenyType_Permission = 1,
+  PermissionDenied_DenyType_SuperUser = 2,
+  PermissionDenied_DenyType_ChannelName = 3,
+  PermissionDenied_DenyType_TextTooLong = 4,
+  PermissionDenied_DenyType_H9K = 5,
+  PermissionDenied_DenyType_TemporaryChannel = 6,
+  PermissionDenied_DenyType_MissingCertificate = 7,
+  PermissionDenied_DenyType_UserName = 8,
+  PermissionDenied_DenyType_ChannelFull = 9
+};
+bool PermissionDenied_DenyType_IsValid(int value);
+const PermissionDenied_DenyType PermissionDenied_DenyType_DenyType_MIN = PermissionDenied_DenyType_Text;
+const PermissionDenied_DenyType PermissionDenied_DenyType_DenyType_MAX = PermissionDenied_DenyType_ChannelFull;
+const int PermissionDenied_DenyType_DenyType_ARRAYSIZE = PermissionDenied_DenyType_DenyType_MAX + 1;
+
+const ::google::protobuf::EnumDescriptor* PermissionDenied_DenyType_descriptor();
+inline const ::std::string& PermissionDenied_DenyType_Name(PermissionDenied_DenyType value) {
+  return ::google::protobuf::internal::NameOfEnum(
+    PermissionDenied_DenyType_descriptor(), value);
+}
+inline bool PermissionDenied_DenyType_Parse(
+    const ::std::string& name, PermissionDenied_DenyType* value) {
+  return ::google::protobuf::internal::ParseNamedEnum<PermissionDenied_DenyType>(
+    PermissionDenied_DenyType_descriptor(), name, value);
+}
+enum ContextActionAdd_Context {
+  ContextActionAdd_Context_Server = 1,
+  ContextActionAdd_Context_Channel = 2,
+  ContextActionAdd_Context_User = 4
+};
+bool ContextActionAdd_Context_IsValid(int value);
+const ContextActionAdd_Context ContextActionAdd_Context_Context_MIN = ContextActionAdd_Context_Server;
+const ContextActionAdd_Context ContextActionAdd_Context_Context_MAX = ContextActionAdd_Context_User;
+const int ContextActionAdd_Context_Context_ARRAYSIZE = ContextActionAdd_Context_Context_MAX + 1;
+
+const ::google::protobuf::EnumDescriptor* ContextActionAdd_Context_descriptor();
+inline const ::std::string& ContextActionAdd_Context_Name(ContextActionAdd_Context value) {
+  return ::google::protobuf::internal::NameOfEnum(
+    ContextActionAdd_Context_descriptor(), value);
+}
+inline bool ContextActionAdd_Context_Parse(
+    const ::std::string& name, ContextActionAdd_Context* value) {
+  return ::google::protobuf::internal::ParseNamedEnum<ContextActionAdd_Context>(
+    ContextActionAdd_Context_descriptor(), name, value);
+}
+// ===================================================================
+
+class Version : public ::google::protobuf::Message {
+ public:
+  Version();
+  virtual ~Version();
+  
+  Version(const Version& from);
+  
+  inline Version& operator=(const Version& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const Version& default_instance();
+  
+  void Swap(Version* other);
+  
+  // implements Message ----------------------------------------------
+  
+  Version* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const Version& from);
+  void MergeFrom(const Version& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 version = 1;
+  inline bool has_version() const;
+  inline void clear_version();
+  static const int kVersionFieldNumber = 1;
+  inline ::google::protobuf::uint32 version() const;
+  inline void set_version(::google::protobuf::uint32 value);
+  
+  // optional string release = 2;
+  inline bool has_release() const;
+  inline void clear_release();
+  static const int kReleaseFieldNumber = 2;
+  inline const ::std::string& release() const;
+  inline void set_release(const ::std::string& value);
+  inline void set_release(const char* value);
+  inline void set_release(const char* value, size_t size);
+  inline ::std::string* mutable_release();
+  
+  // optional string os = 3;
+  inline bool has_os() const;
+  inline void clear_os();
+  static const int kOsFieldNumber = 3;
+  inline const ::std::string& os() const;
+  inline void set_os(const ::std::string& value);
+  inline void set_os(const char* value);
+  inline void set_os(const char* value, size_t size);
+  inline ::std::string* mutable_os();
+  
+  // optional string os_version = 4;
+  inline bool has_os_version() const;
+  inline void clear_os_version();
+  static const int kOsVersionFieldNumber = 4;
+  inline const ::std::string& os_version() const;
+  inline void set_os_version(const ::std::string& value);
+  inline void set_os_version(const char* value);
+  inline void set_os_version(const char* value, size_t size);
+  inline ::std::string* mutable_os_version();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.Version)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 version_;
+  ::std::string* release_;
+  static const ::std::string _default_release_;
+  ::std::string* os_;
+  static const ::std::string _default_os_;
+  ::std::string* os_version_;
+  static const ::std::string _default_os_version_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static Version* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UDPTunnel : public ::google::protobuf::Message {
+ public:
+  UDPTunnel();
+  virtual ~UDPTunnel();
+  
+  UDPTunnel(const UDPTunnel& from);
+  
+  inline UDPTunnel& operator=(const UDPTunnel& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UDPTunnel& default_instance();
+  
+  void Swap(UDPTunnel* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UDPTunnel* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UDPTunnel& from);
+  void MergeFrom(const UDPTunnel& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required bytes packet = 1;
+  inline bool has_packet() const;
+  inline void clear_packet();
+  static const int kPacketFieldNumber = 1;
+  inline const ::std::string& packet() const;
+  inline void set_packet(const ::std::string& value);
+  inline void set_packet(const char* value);
+  inline void set_packet(const void* value, size_t size);
+  inline ::std::string* mutable_packet();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UDPTunnel)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::std::string* packet_;
+  static const ::std::string _default_packet_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UDPTunnel* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class Authenticate : public ::google::protobuf::Message {
+ public:
+  Authenticate();
+  virtual ~Authenticate();
+  
+  Authenticate(const Authenticate& from);
+  
+  inline Authenticate& operator=(const Authenticate& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const Authenticate& default_instance();
+  
+  void Swap(Authenticate* other);
+  
+  // implements Message ----------------------------------------------
+  
+  Authenticate* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const Authenticate& from);
+  void MergeFrom(const Authenticate& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional string username = 1;
+  inline bool has_username() const;
+  inline void clear_username();
+  static const int kUsernameFieldNumber = 1;
+  inline const ::std::string& username() const;
+  inline void set_username(const ::std::string& value);
+  inline void set_username(const char* value);
+  inline void set_username(const char* value, size_t size);
+  inline ::std::string* mutable_username();
+  
+  // optional string password = 2;
+  inline bool has_password() const;
+  inline void clear_password();
+  static const int kPasswordFieldNumber = 2;
+  inline const ::std::string& password() const;
+  inline void set_password(const ::std::string& value);
+  inline void set_password(const char* value);
+  inline void set_password(const char* value, size_t size);
+  inline ::std::string* mutable_password();
+  
+  // repeated string tokens = 3;
+  inline int tokens_size() const;
+  inline void clear_tokens();
+  static const int kTokensFieldNumber = 3;
+  inline const ::std::string& tokens(int index) const;
+  inline ::std::string* mutable_tokens(int index);
+  inline void set_tokens(int index, const ::std::string& value);
+  inline void set_tokens(int index, const char* value);
+  inline void set_tokens(int index, const char* value, size_t size);
+  inline ::std::string* add_tokens();
+  inline void add_tokens(const ::std::string& value);
+  inline void add_tokens(const char* value);
+  inline void add_tokens(const char* value, size_t size);
+  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tokens() const;
+  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tokens();
+  
+  // repeated int32 celt_versions = 4;
+  inline int celt_versions_size() const;
+  inline void clear_celt_versions();
+  static const int kCeltVersionsFieldNumber = 4;
+  inline ::google::protobuf::int32 celt_versions(int index) const;
+  inline void set_celt_versions(int index, ::google::protobuf::int32 value);
+  inline void add_celt_versions(::google::protobuf::int32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
+      celt_versions() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
+      mutable_celt_versions();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.Authenticate)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::std::string* username_;
+  static const ::std::string _default_username_;
+  ::std::string* password_;
+  static const ::std::string _default_password_;
+  ::google::protobuf::RepeatedPtrField< ::std::string> tokens_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > celt_versions_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static Authenticate* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class Ping : public ::google::protobuf::Message {
+ public:
+  Ping();
+  virtual ~Ping();
+  
+  Ping(const Ping& from);
+  
+  inline Ping& operator=(const Ping& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const Ping& default_instance();
+  
+  void Swap(Ping* other);
+  
+  // implements Message ----------------------------------------------
+  
+  Ping* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const Ping& from);
+  void MergeFrom(const Ping& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint64 timestamp = 1;
+  inline bool has_timestamp() const;
+  inline void clear_timestamp();
+  static const int kTimestampFieldNumber = 1;
+  inline ::google::protobuf::uint64 timestamp() const;
+  inline void set_timestamp(::google::protobuf::uint64 value);
+  
+  // optional uint32 good = 2;
+  inline bool has_good() const;
+  inline void clear_good();
+  static const int kGoodFieldNumber = 2;
+  inline ::google::protobuf::uint32 good() const;
+  inline void set_good(::google::protobuf::uint32 value);
+  
+  // optional uint32 late = 3;
+  inline bool has_late() const;
+  inline void clear_late();
+  static const int kLateFieldNumber = 3;
+  inline ::google::protobuf::uint32 late() const;
+  inline void set_late(::google::protobuf::uint32 value);
+  
+  // optional uint32 lost = 4;
+  inline bool has_lost() const;
+  inline void clear_lost();
+  static const int kLostFieldNumber = 4;
+  inline ::google::protobuf::uint32 lost() const;
+  inline void set_lost(::google::protobuf::uint32 value);
+  
+  // optional uint32 resync = 5;
+  inline bool has_resync() const;
+  inline void clear_resync();
+  static const int kResyncFieldNumber = 5;
+  inline ::google::protobuf::uint32 resync() const;
+  inline void set_resync(::google::protobuf::uint32 value);
+  
+  // optional uint32 udp_packets = 6;
+  inline bool has_udp_packets() const;
+  inline void clear_udp_packets();
+  static const int kUdpPacketsFieldNumber = 6;
+  inline ::google::protobuf::uint32 udp_packets() const;
+  inline void set_udp_packets(::google::protobuf::uint32 value);
+  
+  // optional uint32 tcp_packets = 7;
+  inline bool has_tcp_packets() const;
+  inline void clear_tcp_packets();
+  static const int kTcpPacketsFieldNumber = 7;
+  inline ::google::protobuf::uint32 tcp_packets() const;
+  inline void set_tcp_packets(::google::protobuf::uint32 value);
+  
+  // optional float udp_ping_avg = 8;
+  inline bool has_udp_ping_avg() const;
+  inline void clear_udp_ping_avg();
+  static const int kUdpPingAvgFieldNumber = 8;
+  inline float udp_ping_avg() const;
+  inline void set_udp_ping_avg(float value);
+  
+  // optional float udp_ping_var = 9;
+  inline bool has_udp_ping_var() const;
+  inline void clear_udp_ping_var();
+  static const int kUdpPingVarFieldNumber = 9;
+  inline float udp_ping_var() const;
+  inline void set_udp_ping_var(float value);
+  
+  // optional float tcp_ping_avg = 10;
+  inline bool has_tcp_ping_avg() const;
+  inline void clear_tcp_ping_avg();
+  static const int kTcpPingAvgFieldNumber = 10;
+  inline float tcp_ping_avg() const;
+  inline void set_tcp_ping_avg(float value);
+  
+  // optional float tcp_ping_var = 11;
+  inline bool has_tcp_ping_var() const;
+  inline void clear_tcp_ping_var();
+  static const int kTcpPingVarFieldNumber = 11;
+  inline float tcp_ping_var() const;
+  inline void set_tcp_ping_var(float value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.Ping)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint64 timestamp_;
+  ::google::protobuf::uint32 good_;
+  ::google::protobuf::uint32 late_;
+  ::google::protobuf::uint32 lost_;
+  ::google::protobuf::uint32 resync_;
+  ::google::protobuf::uint32 udp_packets_;
+  ::google::protobuf::uint32 tcp_packets_;
+  float udp_ping_avg_;
+  float udp_ping_var_;
+  float tcp_ping_avg_;
+  float tcp_ping_var_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static Ping* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class Reject : public ::google::protobuf::Message {
+ public:
+  Reject();
+  virtual ~Reject();
+  
+  Reject(const Reject& from);
+  
+  inline Reject& operator=(const Reject& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const Reject& default_instance();
+  
+  void Swap(Reject* other);
+  
+  // implements Message ----------------------------------------------
+  
+  Reject* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const Reject& from);
+  void MergeFrom(const Reject& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef Reject_RejectType RejectType;
+  static const RejectType None = Reject_RejectType_None;
+  static const RejectType WrongVersion = Reject_RejectType_WrongVersion;
+  static const RejectType InvalidUsername = Reject_RejectType_InvalidUsername;
+  static const RejectType WrongUserPW = Reject_RejectType_WrongUserPW;
+  static const RejectType WrongServerPW = Reject_RejectType_WrongServerPW;
+  static const RejectType UsernameInUse = Reject_RejectType_UsernameInUse;
+  static const RejectType ServerFull = Reject_RejectType_ServerFull;
+  static const RejectType NoCertificate = Reject_RejectType_NoCertificate;
+  static inline bool RejectType_IsValid(int value) {
+    return Reject_RejectType_IsValid(value);
+  }
+  static const RejectType RejectType_MIN =
+    Reject_RejectType_RejectType_MIN;
+  static const RejectType RejectType_MAX =
+    Reject_RejectType_RejectType_MAX;
+  static const int RejectType_ARRAYSIZE =
+    Reject_RejectType_RejectType_ARRAYSIZE;
+  static inline const ::google::protobuf::EnumDescriptor*
+  RejectType_descriptor() {
+    return Reject_RejectType_descriptor();
+  }
+  static inline const ::std::string& RejectType_Name(RejectType value) {
+    return Reject_RejectType_Name(value);
+  }
+  static inline bool RejectType_Parse(const ::std::string& name,
+      RejectType* value) {
+    return Reject_RejectType_Parse(name, value);
+  }
+  
+  // accessors -------------------------------------------------------
+  
+  // optional .MumbleProto.Reject.RejectType type = 1;
+  inline bool has_type() const;
+  inline void clear_type();
+  static const int kTypeFieldNumber = 1;
+  inline ::MumbleProto::Reject_RejectType type() const;
+  inline void set_type(::MumbleProto::Reject_RejectType value);
+  
+  // optional string reason = 2;
+  inline bool has_reason() const;
+  inline void clear_reason();
+  static const int kReasonFieldNumber = 2;
+  inline const ::std::string& reason() const;
+  inline void set_reason(const ::std::string& value);
+  inline void set_reason(const char* value);
+  inline void set_reason(const char* value, size_t size);
+  inline ::std::string* mutable_reason();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.Reject)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  int type_;
+  ::std::string* reason_;
+  static const ::std::string _default_reason_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static Reject* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ServerConfig : public ::google::protobuf::Message {
+ public:
+  ServerConfig();
+  virtual ~ServerConfig();
+  
+  ServerConfig(const ServerConfig& from);
+  
+  inline ServerConfig& operator=(const ServerConfig& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ServerConfig& default_instance();
+  
+  void Swap(ServerConfig* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ServerConfig* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ServerConfig& from);
+  void MergeFrom(const ServerConfig& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 max_bandwidth = 1;
+  inline bool has_max_bandwidth() const;
+  inline void clear_max_bandwidth();
+  static const int kMaxBandwidthFieldNumber = 1;
+  inline ::google::protobuf::uint32 max_bandwidth() const;
+  inline void set_max_bandwidth(::google::protobuf::uint32 value);
+  
+  // optional string welcome_text = 2;
+  inline bool has_welcome_text() const;
+  inline void clear_welcome_text();
+  static const int kWelcomeTextFieldNumber = 2;
+  inline const ::std::string& welcome_text() const;
+  inline void set_welcome_text(const ::std::string& value);
+  inline void set_welcome_text(const char* value);
+  inline void set_welcome_text(const char* value, size_t size);
+  inline ::std::string* mutable_welcome_text();
+  
+  // optional bool allow_html = 3;
+  inline bool has_allow_html() const;
+  inline void clear_allow_html();
+  static const int kAllowHtmlFieldNumber = 3;
+  inline bool allow_html() const;
+  inline void set_allow_html(bool value);
+  
+  // optional uint32 message_length = 4;
+  inline bool has_message_length() const;
+  inline void clear_message_length();
+  static const int kMessageLengthFieldNumber = 4;
+  inline ::google::protobuf::uint32 message_length() const;
+  inline void set_message_length(::google::protobuf::uint32 value);
+  
+  // optional uint32 image_message_length = 5;
+  inline bool has_image_message_length() const;
+  inline void clear_image_message_length();
+  static const int kImageMessageLengthFieldNumber = 5;
+  inline ::google::protobuf::uint32 image_message_length() const;
+  inline void set_image_message_length(::google::protobuf::uint32 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ServerConfig)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 max_bandwidth_;
+  ::std::string* welcome_text_;
+  static const ::std::string _default_welcome_text_;
+  bool allow_html_;
+  ::google::protobuf::uint32 message_length_;
+  ::google::protobuf::uint32 image_message_length_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ServerConfig* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ServerSync : public ::google::protobuf::Message {
+ public:
+  ServerSync();
+  virtual ~ServerSync();
+  
+  ServerSync(const ServerSync& from);
+  
+  inline ServerSync& operator=(const ServerSync& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ServerSync& default_instance();
+  
+  void Swap(ServerSync* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ServerSync* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ServerSync& from);
+  void MergeFrom(const ServerSync& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 session = 1;
+  inline bool has_session() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 1;
+  inline ::google::protobuf::uint32 session() const;
+  inline void set_session(::google::protobuf::uint32 value);
+  
+  // optional uint32 max_bandwidth = 2;
+  inline bool has_max_bandwidth() const;
+  inline void clear_max_bandwidth();
+  static const int kMaxBandwidthFieldNumber = 2;
+  inline ::google::protobuf::uint32 max_bandwidth() const;
+  inline void set_max_bandwidth(::google::protobuf::uint32 value);
+  
+  // optional string welcome_text = 3;
+  inline bool has_welcome_text() const;
+  inline void clear_welcome_text();
+  static const int kWelcomeTextFieldNumber = 3;
+  inline const ::std::string& welcome_text() const;
+  inline void set_welcome_text(const ::std::string& value);
+  inline void set_welcome_text(const char* value);
+  inline void set_welcome_text(const char* value, size_t size);
+  inline ::std::string* mutable_welcome_text();
+  
+  // optional uint64 permissions = 4;
+  inline bool has_permissions() const;
+  inline void clear_permissions();
+  static const int kPermissionsFieldNumber = 4;
+  inline ::google::protobuf::uint64 permissions() const;
+  inline void set_permissions(::google::protobuf::uint64 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ServerSync)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 session_;
+  ::google::protobuf::uint32 max_bandwidth_;
+  ::std::string* welcome_text_;
+  static const ::std::string _default_welcome_text_;
+  ::google::protobuf::uint64 permissions_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ServerSync* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ChannelRemove : public ::google::protobuf::Message {
+ public:
+  ChannelRemove();
+  virtual ~ChannelRemove();
+  
+  ChannelRemove(const ChannelRemove& from);
+  
+  inline ChannelRemove& operator=(const ChannelRemove& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ChannelRemove& default_instance();
+  
+  void Swap(ChannelRemove* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ChannelRemove* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ChannelRemove& from);
+  void MergeFrom(const ChannelRemove& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required uint32 channel_id = 1;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 1;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ChannelRemove)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 channel_id_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ChannelRemove* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ChannelState : public ::google::protobuf::Message {
+ public:
+  ChannelState();
+  virtual ~ChannelState();
+  
+  ChannelState(const ChannelState& from);
+  
+  inline ChannelState& operator=(const ChannelState& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ChannelState& default_instance();
+  
+  void Swap(ChannelState* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ChannelState* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ChannelState& from);
+  void MergeFrom(const ChannelState& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 channel_id = 1;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 1;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // optional uint32 parent = 2;
+  inline bool has_parent() const;
+  inline void clear_parent();
+  static const int kParentFieldNumber = 2;
+  inline ::google::protobuf::uint32 parent() const;
+  inline void set_parent(::google::protobuf::uint32 value);
+  
+  // optional string name = 3;
+  inline bool has_name() const;
+  inline void clear_name();
+  static const int kNameFieldNumber = 3;
+  inline const ::std::string& name() const;
+  inline void set_name(const ::std::string& value);
+  inline void set_name(const char* value);
+  inline void set_name(const char* value, size_t size);
+  inline ::std::string* mutable_name();
+  
+  // repeated uint32 links = 4;
+  inline int links_size() const;
+  inline void clear_links();
+  static const int kLinksFieldNumber = 4;
+  inline ::google::protobuf::uint32 links(int index) const;
+  inline void set_links(int index, ::google::protobuf::uint32 value);
+  inline void add_links(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      links() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_links();
+  
+  // optional string description = 5;
+  inline bool has_description() const;
+  inline void clear_description();
+  static const int kDescriptionFieldNumber = 5;
+  inline const ::std::string& description() const;
+  inline void set_description(const ::std::string& value);
+  inline void set_description(const char* value);
+  inline void set_description(const char* value, size_t size);
+  inline ::std::string* mutable_description();
+  
+  // repeated uint32 links_add = 6;
+  inline int links_add_size() const;
+  inline void clear_links_add();
+  static const int kLinksAddFieldNumber = 6;
+  inline ::google::protobuf::uint32 links_add(int index) const;
+  inline void set_links_add(int index, ::google::protobuf::uint32 value);
+  inline void add_links_add(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      links_add() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_links_add();
+  
+  // repeated uint32 links_remove = 7;
+  inline int links_remove_size() const;
+  inline void clear_links_remove();
+  static const int kLinksRemoveFieldNumber = 7;
+  inline ::google::protobuf::uint32 links_remove(int index) const;
+  inline void set_links_remove(int index, ::google::protobuf::uint32 value);
+  inline void add_links_remove(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      links_remove() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_links_remove();
+  
+  // optional bool temporary = 8 [default = false];
+  inline bool has_temporary() const;
+  inline void clear_temporary();
+  static const int kTemporaryFieldNumber = 8;
+  inline bool temporary() const;
+  inline void set_temporary(bool value);
+  
+  // optional int32 position = 9 [default = 0];
+  inline bool has_position() const;
+  inline void clear_position();
+  static const int kPositionFieldNumber = 9;
+  inline ::google::protobuf::int32 position() const;
+  inline void set_position(::google::protobuf::int32 value);
+  
+  // optional bytes description_hash = 10;
+  inline bool has_description_hash() const;
+  inline void clear_description_hash();
+  static const int kDescriptionHashFieldNumber = 10;
+  inline const ::std::string& description_hash() const;
+  inline void set_description_hash(const ::std::string& value);
+  inline void set_description_hash(const char* value);
+  inline void set_description_hash(const void* value, size_t size);
+  inline ::std::string* mutable_description_hash();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ChannelState)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 channel_id_;
+  ::google::protobuf::uint32 parent_;
+  ::std::string* name_;
+  static const ::std::string _default_name_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > links_;
+  ::std::string* description_;
+  static const ::std::string _default_description_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > links_add_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > links_remove_;
+  bool temporary_;
+  ::google::protobuf::int32 position_;
+  ::std::string* description_hash_;
+  static const ::std::string _default_description_hash_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ChannelState* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UserRemove : public ::google::protobuf::Message {
+ public:
+  UserRemove();
+  virtual ~UserRemove();
+  
+  UserRemove(const UserRemove& from);
+  
+  inline UserRemove& operator=(const UserRemove& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UserRemove& default_instance();
+  
+  void Swap(UserRemove* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UserRemove* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UserRemove& from);
+  void MergeFrom(const UserRemove& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required uint32 session = 1;
+  inline bool has_session() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 1;
+  inline ::google::protobuf::uint32 session() const;
+  inline void set_session(::google::protobuf::uint32 value);
+  
+  // optional uint32 actor = 2;
+  inline bool has_actor() const;
+  inline void clear_actor();
+  static const int kActorFieldNumber = 2;
+  inline ::google::protobuf::uint32 actor() const;
+  inline void set_actor(::google::protobuf::uint32 value);
+  
+  // optional string reason = 3;
+  inline bool has_reason() const;
+  inline void clear_reason();
+  static const int kReasonFieldNumber = 3;
+  inline const ::std::string& reason() const;
+  inline void set_reason(const ::std::string& value);
+  inline void set_reason(const char* value);
+  inline void set_reason(const char* value, size_t size);
+  inline ::std::string* mutable_reason();
+  
+  // optional bool ban = 4;
+  inline bool has_ban() const;
+  inline void clear_ban();
+  static const int kBanFieldNumber = 4;
+  inline bool ban() const;
+  inline void set_ban(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UserRemove)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 session_;
+  ::google::protobuf::uint32 actor_;
+  ::std::string* reason_;
+  static const ::std::string _default_reason_;
+  bool ban_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UserRemove* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UserState : public ::google::protobuf::Message {
+ public:
+  UserState();
+  virtual ~UserState();
+  
+  UserState(const UserState& from);
+  
+  inline UserState& operator=(const UserState& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UserState& default_instance();
+  
+  void Swap(UserState* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UserState* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UserState& from);
+  void MergeFrom(const UserState& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 session = 1;
+  inline bool has_session() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 1;
+  inline ::google::protobuf::uint32 session() const;
+  inline void set_session(::google::protobuf::uint32 value);
+  
+  // optional uint32 actor = 2;
+  inline bool has_actor() const;
+  inline void clear_actor();
+  static const int kActorFieldNumber = 2;
+  inline ::google::protobuf::uint32 actor() const;
+  inline void set_actor(::google::protobuf::uint32 value);
+  
+  // optional string name = 3;
+  inline bool has_name() const;
+  inline void clear_name();
+  static const int kNameFieldNumber = 3;
+  inline const ::std::string& name() const;
+  inline void set_name(const ::std::string& value);
+  inline void set_name(const char* value);
+  inline void set_name(const char* value, size_t size);
+  inline ::std::string* mutable_name();
+  
+  // optional uint32 user_id = 4;
+  inline bool has_user_id() const;
+  inline void clear_user_id();
+  static const int kUserIdFieldNumber = 4;
+  inline ::google::protobuf::uint32 user_id() const;
+  inline void set_user_id(::google::protobuf::uint32 value);
+  
+  // optional uint32 channel_id = 5;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 5;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // optional bool mute = 6;
+  inline bool has_mute() const;
+  inline void clear_mute();
+  static const int kMuteFieldNumber = 6;
+  inline bool mute() const;
+  inline void set_mute(bool value);
+  
+  // optional bool deaf = 7;
+  inline bool has_deaf() const;
+  inline void clear_deaf();
+  static const int kDeafFieldNumber = 7;
+  inline bool deaf() const;
+  inline void set_deaf(bool value);
+  
+  // optional bool suppress = 8;
+  inline bool has_suppress() const;
+  inline void clear_suppress();
+  static const int kSuppressFieldNumber = 8;
+  inline bool suppress() const;
+  inline void set_suppress(bool value);
+  
+  // optional bool self_mute = 9;
+  inline bool has_self_mute() const;
+  inline void clear_self_mute();
+  static const int kSelfMuteFieldNumber = 9;
+  inline bool self_mute() const;
+  inline void set_self_mute(bool value);
+  
+  // optional bool self_deaf = 10;
+  inline bool has_self_deaf() const;
+  inline void clear_self_deaf();
+  static const int kSelfDeafFieldNumber = 10;
+  inline bool self_deaf() const;
+  inline void set_self_deaf(bool value);
+  
+  // optional bytes texture = 11;
+  inline bool has_texture() const;
+  inline void clear_texture();
+  static const int kTextureFieldNumber = 11;
+  inline const ::std::string& texture() const;
+  inline void set_texture(const ::std::string& value);
+  inline void set_texture(const char* value);
+  inline void set_texture(const void* value, size_t size);
+  inline ::std::string* mutable_texture();
+  
+  // optional bytes plugin_context = 12;
+  inline bool has_plugin_context() const;
+  inline void clear_plugin_context();
+  static const int kPluginContextFieldNumber = 12;
+  inline const ::std::string& plugin_context() const;
+  inline void set_plugin_context(const ::std::string& value);
+  inline void set_plugin_context(const char* value);
+  inline void set_plugin_context(const void* value, size_t size);
+  inline ::std::string* mutable_plugin_context();
+  
+  // optional string plugin_identity = 13;
+  inline bool has_plugin_identity() const;
+  inline void clear_plugin_identity();
+  static const int kPluginIdentityFieldNumber = 13;
+  inline const ::std::string& plugin_identity() const;
+  inline void set_plugin_identity(const ::std::string& value);
+  inline void set_plugin_identity(const char* value);
+  inline void set_plugin_identity(const char* value, size_t size);
+  inline ::std::string* mutable_plugin_identity();
+  
+  // optional string comment = 14;
+  inline bool has_comment() const;
+  inline void clear_comment();
+  static const int kCommentFieldNumber = 14;
+  inline const ::std::string& comment() const;
+  inline void set_comment(const ::std::string& value);
+  inline void set_comment(const char* value);
+  inline void set_comment(const char* value, size_t size);
+  inline ::std::string* mutable_comment();
+  
+  // optional string hash = 15;
+  inline bool has_hash() const;
+  inline void clear_hash();
+  static const int kHashFieldNumber = 15;
+  inline const ::std::string& hash() const;
+  inline void set_hash(const ::std::string& value);
+  inline void set_hash(const char* value);
+  inline void set_hash(const char* value, size_t size);
+  inline ::std::string* mutable_hash();
+  
+  // optional bytes comment_hash = 16;
+  inline bool has_comment_hash() const;
+  inline void clear_comment_hash();
+  static const int kCommentHashFieldNumber = 16;
+  inline const ::std::string& comment_hash() const;
+  inline void set_comment_hash(const ::std::string& value);
+  inline void set_comment_hash(const char* value);
+  inline void set_comment_hash(const void* value, size_t size);
+  inline ::std::string* mutable_comment_hash();
+  
+  // optional bytes texture_hash = 17;
+  inline bool has_texture_hash() const;
+  inline void clear_texture_hash();
+  static const int kTextureHashFieldNumber = 17;
+  inline const ::std::string& texture_hash() const;
+  inline void set_texture_hash(const ::std::string& value);
+  inline void set_texture_hash(const char* value);
+  inline void set_texture_hash(const void* value, size_t size);
+  inline ::std::string* mutable_texture_hash();
+  
+  // optional bool priority_speaker = 18;
+  inline bool has_priority_speaker() const;
+  inline void clear_priority_speaker();
+  static const int kPrioritySpeakerFieldNumber = 18;
+  inline bool priority_speaker() const;
+  inline void set_priority_speaker(bool value);
+  
+  // optional bool recording = 19;
+  inline bool has_recording() const;
+  inline void clear_recording();
+  static const int kRecordingFieldNumber = 19;
+  inline bool recording() const;
+  inline void set_recording(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UserState)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 session_;
+  ::google::protobuf::uint32 actor_;
+  ::std::string* name_;
+  static const ::std::string _default_name_;
+  ::google::protobuf::uint32 user_id_;
+  ::google::protobuf::uint32 channel_id_;
+  bool mute_;
+  bool deaf_;
+  bool suppress_;
+  bool self_mute_;
+  bool self_deaf_;
+  ::std::string* texture_;
+  static const ::std::string _default_texture_;
+  ::std::string* plugin_context_;
+  static const ::std::string _default_plugin_context_;
+  ::std::string* plugin_identity_;
+  static const ::std::string _default_plugin_identity_;
+  ::std::string* comment_;
+  static const ::std::string _default_comment_;
+  ::std::string* hash_;
+  static const ::std::string _default_hash_;
+  ::std::string* comment_hash_;
+  static const ::std::string _default_comment_hash_;
+  ::std::string* texture_hash_;
+  static const ::std::string _default_texture_hash_;
+  bool priority_speaker_;
+  bool recording_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UserState* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class BanList_BanEntry : public ::google::protobuf::Message {
+ public:
+  BanList_BanEntry();
+  virtual ~BanList_BanEntry();
+  
+  BanList_BanEntry(const BanList_BanEntry& from);
+  
+  inline BanList_BanEntry& operator=(const BanList_BanEntry& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const BanList_BanEntry& default_instance();
+  
+  void Swap(BanList_BanEntry* other);
+  
+  // implements Message ----------------------------------------------
+  
+  BanList_BanEntry* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const BanList_BanEntry& from);
+  void MergeFrom(const BanList_BanEntry& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required bytes address = 1;
+  inline bool has_address() const;
+  inline void clear_address();
+  static const int kAddressFieldNumber = 1;
+  inline const ::std::string& address() const;
+  inline void set_address(const ::std::string& value);
+  inline void set_address(const char* value);
+  inline void set_address(const void* value, size_t size);
+  inline ::std::string* mutable_address();
+  
+  // required uint32 mask = 2;
+  inline bool has_mask() const;
+  inline void clear_mask();
+  static const int kMaskFieldNumber = 2;
+  inline ::google::protobuf::uint32 mask() const;
+  inline void set_mask(::google::protobuf::uint32 value);
+  
+  // optional string name = 3;
+  inline bool has_name() const;
+  inline void clear_name();
+  static const int kNameFieldNumber = 3;
+  inline const ::std::string& name() const;
+  inline void set_name(const ::std::string& value);
+  inline void set_name(const char* value);
+  inline void set_name(const char* value, size_t size);
+  inline ::std::string* mutable_name();
+  
+  // optional string hash = 4;
+  inline bool has_hash() const;
+  inline void clear_hash();
+  static const int kHashFieldNumber = 4;
+  inline const ::std::string& hash() const;
+  inline void set_hash(const ::std::string& value);
+  inline void set_hash(const char* value);
+  inline void set_hash(const char* value, size_t size);
+  inline ::std::string* mutable_hash();
+  
+  // optional string reason = 5;
+  inline bool has_reason() const;
+  inline void clear_reason();
+  static const int kReasonFieldNumber = 5;
+  inline const ::std::string& reason() const;
+  inline void set_reason(const ::std::string& value);
+  inline void set_reason(const char* value);
+  inline void set_reason(const char* value, size_t size);
+  inline ::std::string* mutable_reason();
+  
+  // optional string start = 6;
+  inline bool has_start() const;
+  inline void clear_start();
+  static const int kStartFieldNumber = 6;
+  inline const ::std::string& start() const;
+  inline void set_start(const ::std::string& value);
+  inline void set_start(const char* value);
+  inline void set_start(const char* value, size_t size);
+  inline ::std::string* mutable_start();
+  
+  // optional uint32 duration = 7;
+  inline bool has_duration() const;
+  inline void clear_duration();
+  static const int kDurationFieldNumber = 7;
+  inline ::google::protobuf::uint32 duration() const;
+  inline void set_duration(::google::protobuf::uint32 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.BanList.BanEntry)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::std::string* address_;
+  static const ::std::string _default_address_;
+  ::google::protobuf::uint32 mask_;
+  ::std::string* name_;
+  static const ::std::string _default_name_;
+  ::std::string* hash_;
+  static const ::std::string _default_hash_;
+  ::std::string* reason_;
+  static const ::std::string _default_reason_;
+  ::std::string* start_;
+  static const ::std::string _default_start_;
+  ::google::protobuf::uint32 duration_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static BanList_BanEntry* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class BanList : public ::google::protobuf::Message {
+ public:
+  BanList();
+  virtual ~BanList();
+  
+  BanList(const BanList& from);
+  
+  inline BanList& operator=(const BanList& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const BanList& default_instance();
+  
+  void Swap(BanList* other);
+  
+  // implements Message ----------------------------------------------
+  
+  BanList* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const BanList& from);
+  void MergeFrom(const BanList& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef BanList_BanEntry BanEntry;
+  
+  // accessors -------------------------------------------------------
+  
+  // repeated .MumbleProto.BanList.BanEntry bans = 1;
+  inline int bans_size() const;
+  inline void clear_bans();
+  static const int kBansFieldNumber = 1;
+  inline const ::MumbleProto::BanList_BanEntry& bans(int index) const;
+  inline ::MumbleProto::BanList_BanEntry* mutable_bans(int index);
+  inline ::MumbleProto::BanList_BanEntry* add_bans();
+  inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::BanList_BanEntry >&
+      bans() const;
+  inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::BanList_BanEntry >*
+      mutable_bans();
+  
+  // optional bool query = 2 [default = false];
+  inline bool has_query() const;
+  inline void clear_query();
+  static const int kQueryFieldNumber = 2;
+  inline bool query() const;
+  inline void set_query(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.BanList)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::RepeatedPtrField< ::MumbleProto::BanList_BanEntry > bans_;
+  bool query_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static BanList* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class TextMessage : public ::google::protobuf::Message {
+ public:
+  TextMessage();
+  virtual ~TextMessage();
+  
+  TextMessage(const TextMessage& from);
+  
+  inline TextMessage& operator=(const TextMessage& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const TextMessage& default_instance();
+  
+  void Swap(TextMessage* other);
+  
+  // implements Message ----------------------------------------------
+  
+  TextMessage* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const TextMessage& from);
+  void MergeFrom(const TextMessage& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 actor = 1;
+  inline bool has_actor() const;
+  inline void clear_actor();
+  static const int kActorFieldNumber = 1;
+  inline ::google::protobuf::uint32 actor() const;
+  inline void set_actor(::google::protobuf::uint32 value);
+  
+  // repeated uint32 session = 2;
+  inline int session_size() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 2;
+  inline ::google::protobuf::uint32 session(int index) const;
+  inline void set_session(int index, ::google::protobuf::uint32 value);
+  inline void add_session(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      session() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_session();
+  
+  // repeated uint32 channel_id = 3;
+  inline int channel_id_size() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 3;
+  inline ::google::protobuf::uint32 channel_id(int index) const;
+  inline void set_channel_id(int index, ::google::protobuf::uint32 value);
+  inline void add_channel_id(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      channel_id() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_channel_id();
+  
+  // repeated uint32 tree_id = 4;
+  inline int tree_id_size() const;
+  inline void clear_tree_id();
+  static const int kTreeIdFieldNumber = 4;
+  inline ::google::protobuf::uint32 tree_id(int index) const;
+  inline void set_tree_id(int index, ::google::protobuf::uint32 value);
+  inline void add_tree_id(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      tree_id() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_tree_id();
+  
+  // required string message = 5;
+  inline bool has_message() const;
+  inline void clear_message();
+  static const int kMessageFieldNumber = 5;
+  inline const ::std::string& message() const;
+  inline void set_message(const ::std::string& value);
+  inline void set_message(const char* value);
+  inline void set_message(const char* value, size_t size);
+  inline ::std::string* mutable_message();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.TextMessage)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 actor_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > session_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > channel_id_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tree_id_;
+  ::std::string* message_;
+  static const ::std::string _default_message_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static TextMessage* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class PermissionDenied : public ::google::protobuf::Message {
+ public:
+  PermissionDenied();
+  virtual ~PermissionDenied();
+  
+  PermissionDenied(const PermissionDenied& from);
+  
+  inline PermissionDenied& operator=(const PermissionDenied& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const PermissionDenied& default_instance();
+  
+  void Swap(PermissionDenied* other);
+  
+  // implements Message ----------------------------------------------
+  
+  PermissionDenied* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const PermissionDenied& from);
+  void MergeFrom(const PermissionDenied& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef PermissionDenied_DenyType DenyType;
+  static const DenyType Text = PermissionDenied_DenyType_Text;
+  static const DenyType Permission = PermissionDenied_DenyType_Permission;
+  static const DenyType SuperUser = PermissionDenied_DenyType_SuperUser;
+  static const DenyType ChannelName = PermissionDenied_DenyType_ChannelName;
+  static const DenyType TextTooLong = PermissionDenied_DenyType_TextTooLong;
+  static const DenyType H9K = PermissionDenied_DenyType_H9K;
+  static const DenyType TemporaryChannel = PermissionDenied_DenyType_TemporaryChannel;
+  static const DenyType MissingCertificate = PermissionDenied_DenyType_MissingCertificate;
+  static const DenyType UserName = PermissionDenied_DenyType_UserName;
+  static const DenyType ChannelFull = PermissionDenied_DenyType_ChannelFull;
+  static inline bool DenyType_IsValid(int value) {
+    return PermissionDenied_DenyType_IsValid(value);
+  }
+  static const DenyType DenyType_MIN =
+    PermissionDenied_DenyType_DenyType_MIN;
+  static const DenyType DenyType_MAX =
+    PermissionDenied_DenyType_DenyType_MAX;
+  static const int DenyType_ARRAYSIZE =
+    PermissionDenied_DenyType_DenyType_ARRAYSIZE;
+  static inline const ::google::protobuf::EnumDescriptor*
+  DenyType_descriptor() {
+    return PermissionDenied_DenyType_descriptor();
+  }
+  static inline const ::std::string& DenyType_Name(DenyType value) {
+    return PermissionDenied_DenyType_Name(value);
+  }
+  static inline bool DenyType_Parse(const ::std::string& name,
+      DenyType* value) {
+    return PermissionDenied_DenyType_Parse(name, value);
+  }
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 permission = 1;
+  inline bool has_permission() const;
+  inline void clear_permission();
+  static const int kPermissionFieldNumber = 1;
+  inline ::google::protobuf::uint32 permission() const;
+  inline void set_permission(::google::protobuf::uint32 value);
+  
+  // optional uint32 channel_id = 2;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 2;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // optional uint32 session = 3;
+  inline bool has_session() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 3;
+  inline ::google::protobuf::uint32 session() const;
+  inline void set_session(::google::protobuf::uint32 value);
+  
+  // optional string reason = 4;
+  inline bool has_reason() const;
+  inline void clear_reason();
+  static const int kReasonFieldNumber = 4;
+  inline const ::std::string& reason() const;
+  inline void set_reason(const ::std::string& value);
+  inline void set_reason(const char* value);
+  inline void set_reason(const char* value, size_t size);
+  inline ::std::string* mutable_reason();
+  
+  // optional .MumbleProto.PermissionDenied.DenyType type = 5;
+  inline bool has_type() const;
+  inline void clear_type();
+  static const int kTypeFieldNumber = 5;
+  inline ::MumbleProto::PermissionDenied_DenyType type() const;
+  inline void set_type(::MumbleProto::PermissionDenied_DenyType value);
+  
+  // optional string name = 6;
+  inline bool has_name() const;
+  inline void clear_name();
+  static const int kNameFieldNumber = 6;
+  inline const ::std::string& name() const;
+  inline void set_name(const ::std::string& value);
+  inline void set_name(const char* value);
+  inline void set_name(const char* value, size_t size);
+  inline ::std::string* mutable_name();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.PermissionDenied)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 permission_;
+  ::google::protobuf::uint32 channel_id_;
+  ::google::protobuf::uint32 session_;
+  ::std::string* reason_;
+  static const ::std::string _default_reason_;
+  int type_;
+  ::std::string* name_;
+  static const ::std::string _default_name_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static PermissionDenied* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ACL_ChanGroup : public ::google::protobuf::Message {
+ public:
+  ACL_ChanGroup();
+  virtual ~ACL_ChanGroup();
+  
+  ACL_ChanGroup(const ACL_ChanGroup& from);
+  
+  inline ACL_ChanGroup& operator=(const ACL_ChanGroup& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ACL_ChanGroup& default_instance();
+  
+  void Swap(ACL_ChanGroup* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ACL_ChanGroup* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ACL_ChanGroup& from);
+  void MergeFrom(const ACL_ChanGroup& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required string name = 1;
+  inline bool has_name() const;
+  inline void clear_name();
+  static const int kNameFieldNumber = 1;
+  inline const ::std::string& name() const;
+  inline void set_name(const ::std::string& value);
+  inline void set_name(const char* value);
+  inline void set_name(const char* value, size_t size);
+  inline ::std::string* mutable_name();
+  
+  // optional bool inherited = 2 [default = true];
+  inline bool has_inherited() const;
+  inline void clear_inherited();
+  static const int kInheritedFieldNumber = 2;
+  inline bool inherited() const;
+  inline void set_inherited(bool value);
+  
+  // optional bool inherit = 3 [default = true];
+  inline bool has_inherit() const;
+  inline void clear_inherit();
+  static const int kInheritFieldNumber = 3;
+  inline bool inherit() const;
+  inline void set_inherit(bool value);
+  
+  // optional bool inheritable = 4 [default = true];
+  inline bool has_inheritable() const;
+  inline void clear_inheritable();
+  static const int kInheritableFieldNumber = 4;
+  inline bool inheritable() const;
+  inline void set_inheritable(bool value);
+  
+  // repeated uint32 add = 5;
+  inline int add_size() const;
+  inline void clear_add();
+  static const int kAddFieldNumber = 5;
+  inline ::google::protobuf::uint32 add(int index) const;
+  inline void set_add(int index, ::google::protobuf::uint32 value);
+  inline void add_add(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      add() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_add();
+  
+  // repeated uint32 remove = 6;
+  inline int remove_size() const;
+  inline void clear_remove();
+  static const int kRemoveFieldNumber = 6;
+  inline ::google::protobuf::uint32 remove(int index) const;
+  inline void set_remove(int index, ::google::protobuf::uint32 value);
+  inline void add_remove(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      remove() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_remove();
+  
+  // repeated uint32 inherited_members = 7;
+  inline int inherited_members_size() const;
+  inline void clear_inherited_members();
+  static const int kInheritedMembersFieldNumber = 7;
+  inline ::google::protobuf::uint32 inherited_members(int index) const;
+  inline void set_inherited_members(int index, ::google::protobuf::uint32 value);
+  inline void add_inherited_members(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      inherited_members() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_inherited_members();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ACL.ChanGroup)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::std::string* name_;
+  static const ::std::string _default_name_;
+  bool inherited_;
+  bool inherit_;
+  bool inheritable_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > add_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remove_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > inherited_members_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ACL_ChanGroup* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ACL_ChanACL : public ::google::protobuf::Message {
+ public:
+  ACL_ChanACL();
+  virtual ~ACL_ChanACL();
+  
+  ACL_ChanACL(const ACL_ChanACL& from);
+  
+  inline ACL_ChanACL& operator=(const ACL_ChanACL& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ACL_ChanACL& default_instance();
+  
+  void Swap(ACL_ChanACL* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ACL_ChanACL* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ACL_ChanACL& from);
+  void MergeFrom(const ACL_ChanACL& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional bool apply_here = 1 [default = true];
+  inline bool has_apply_here() const;
+  inline void clear_apply_here();
+  static const int kApplyHereFieldNumber = 1;
+  inline bool apply_here() const;
+  inline void set_apply_here(bool value);
+  
+  // optional bool apply_subs = 2 [default = true];
+  inline bool has_apply_subs() const;
+  inline void clear_apply_subs();
+  static const int kApplySubsFieldNumber = 2;
+  inline bool apply_subs() const;
+  inline void set_apply_subs(bool value);
+  
+  // optional bool inherited = 3 [default = true];
+  inline bool has_inherited() const;
+  inline void clear_inherited();
+  static const int kInheritedFieldNumber = 3;
+  inline bool inherited() const;
+  inline void set_inherited(bool value);
+  
+  // optional uint32 user_id = 4;
+  inline bool has_user_id() const;
+  inline void clear_user_id();
+  static const int kUserIdFieldNumber = 4;
+  inline ::google::protobuf::uint32 user_id() const;
+  inline void set_user_id(::google::protobuf::uint32 value);
+  
+  // optional string group = 5;
+  inline bool has_group() const;
+  inline void clear_group();
+  static const int kGroupFieldNumber = 5;
+  inline const ::std::string& group() const;
+  inline void set_group(const ::std::string& value);
+  inline void set_group(const char* value);
+  inline void set_group(const char* value, size_t size);
+  inline ::std::string* mutable_group();
+  
+  // optional uint32 grant = 6;
+  inline bool has_grant() const;
+  inline void clear_grant();
+  static const int kGrantFieldNumber = 6;
+  inline ::google::protobuf::uint32 grant() const;
+  inline void set_grant(::google::protobuf::uint32 value);
+  
+  // optional uint32 deny = 7;
+  inline bool has_deny() const;
+  inline void clear_deny();
+  static const int kDenyFieldNumber = 7;
+  inline ::google::protobuf::uint32 deny() const;
+  inline void set_deny(::google::protobuf::uint32 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ACL.ChanACL)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  bool apply_here_;
+  bool apply_subs_;
+  bool inherited_;
+  ::google::protobuf::uint32 user_id_;
+  ::std::string* group_;
+  static const ::std::string _default_group_;
+  ::google::protobuf::uint32 grant_;
+  ::google::protobuf::uint32 deny_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ACL_ChanACL* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ACL : public ::google::protobuf::Message {
+ public:
+  ACL();
+  virtual ~ACL();
+  
+  ACL(const ACL& from);
+  
+  inline ACL& operator=(const ACL& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ACL& default_instance();
+  
+  void Swap(ACL* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ACL* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ACL& from);
+  void MergeFrom(const ACL& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef ACL_ChanGroup ChanGroup;
+  typedef ACL_ChanACL ChanACL;
+  
+  // accessors -------------------------------------------------------
+  
+  // required uint32 channel_id = 1;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 1;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // optional bool inherit_acls = 2 [default = true];
+  inline bool has_inherit_acls() const;
+  inline void clear_inherit_acls();
+  static const int kInheritAclsFieldNumber = 2;
+  inline bool inherit_acls() const;
+  inline void set_inherit_acls(bool value);
+  
+  // repeated .MumbleProto.ACL.ChanGroup groups = 3;
+  inline int groups_size() const;
+  inline void clear_groups();
+  static const int kGroupsFieldNumber = 3;
+  inline const ::MumbleProto::ACL_ChanGroup& groups(int index) const;
+  inline ::MumbleProto::ACL_ChanGroup* mutable_groups(int index);
+  inline ::MumbleProto::ACL_ChanGroup* add_groups();
+  inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanGroup >&
+      groups() const;
+  inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanGroup >*
+      mutable_groups();
+  
+  // repeated .MumbleProto.ACL.ChanACL acls = 4;
+  inline int acls_size() const;
+  inline void clear_acls();
+  static const int kAclsFieldNumber = 4;
+  inline const ::MumbleProto::ACL_ChanACL& acls(int index) const;
+  inline ::MumbleProto::ACL_ChanACL* mutable_acls(int index);
+  inline ::MumbleProto::ACL_ChanACL* add_acls();
+  inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanACL >&
+      acls() const;
+  inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanACL >*
+      mutable_acls();
+  
+  // optional bool query = 5 [default = false];
+  inline bool has_query() const;
+  inline void clear_query();
+  static const int kQueryFieldNumber = 5;
+  inline bool query() const;
+  inline void set_query(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ACL)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 channel_id_;
+  bool inherit_acls_;
+  ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanGroup > groups_;
+  ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanACL > acls_;
+  bool query_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ACL* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class QueryUsers : public ::google::protobuf::Message {
+ public:
+  QueryUsers();
+  virtual ~QueryUsers();
+  
+  QueryUsers(const QueryUsers& from);
+  
+  inline QueryUsers& operator=(const QueryUsers& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const QueryUsers& default_instance();
+  
+  void Swap(QueryUsers* other);
+  
+  // implements Message ----------------------------------------------
+  
+  QueryUsers* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const QueryUsers& from);
+  void MergeFrom(const QueryUsers& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // repeated uint32 ids = 1;
+  inline int ids_size() const;
+  inline void clear_ids();
+  static const int kIdsFieldNumber = 1;
+  inline ::google::protobuf::uint32 ids(int index) const;
+  inline void set_ids(int index, ::google::protobuf::uint32 value);
+  inline void add_ids(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      ids() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_ids();
+  
+  // repeated string names = 2;
+  inline int names_size() const;
+  inline void clear_names();
+  static const int kNamesFieldNumber = 2;
+  inline const ::std::string& names(int index) const;
+  inline ::std::string* mutable_names(int index);
+  inline void set_names(int index, const ::std::string& value);
+  inline void set_names(int index, const char* value);
+  inline void set_names(int index, const char* value, size_t size);
+  inline ::std::string* add_names();
+  inline void add_names(const ::std::string& value);
+  inline void add_names(const char* value);
+  inline void add_names(const char* value, size_t size);
+  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& names() const;
+  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_names();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.QueryUsers)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ids_;
+  ::google::protobuf::RepeatedPtrField< ::std::string> names_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static QueryUsers* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class CryptSetup : public ::google::protobuf::Message {
+ public:
+  CryptSetup();
+  virtual ~CryptSetup();
+  
+  CryptSetup(const CryptSetup& from);
+  
+  inline CryptSetup& operator=(const CryptSetup& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const CryptSetup& default_instance();
+  
+  void Swap(CryptSetup* other);
+  
+  // implements Message ----------------------------------------------
+  
+  CryptSetup* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const CryptSetup& from);
+  void MergeFrom(const CryptSetup& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional bytes key = 1;
+  inline bool has_key() const;
+  inline void clear_key();
+  static const int kKeyFieldNumber = 1;
+  inline const ::std::string& key() const;
+  inline void set_key(const ::std::string& value);
+  inline void set_key(const char* value);
+  inline void set_key(const void* value, size_t size);
+  inline ::std::string* mutable_key();
+  
+  // optional bytes client_nonce = 2;
+  inline bool has_client_nonce() const;
+  inline void clear_client_nonce();
+  static const int kClientNonceFieldNumber = 2;
+  inline const ::std::string& client_nonce() const;
+  inline void set_client_nonce(const ::std::string& value);
+  inline void set_client_nonce(const char* value);
+  inline void set_client_nonce(const void* value, size_t size);
+  inline ::std::string* mutable_client_nonce();
+  
+  // optional bytes server_nonce = 3;
+  inline bool has_server_nonce() const;
+  inline void clear_server_nonce();
+  static const int kServerNonceFieldNumber = 3;
+  inline const ::std::string& server_nonce() const;
+  inline void set_server_nonce(const ::std::string& value);
+  inline void set_server_nonce(const char* value);
+  inline void set_server_nonce(const void* value, size_t size);
+  inline ::std::string* mutable_server_nonce();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.CryptSetup)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::std::string* key_;
+  static const ::std::string _default_key_;
+  ::std::string* client_nonce_;
+  static const ::std::string _default_client_nonce_;
+  ::std::string* server_nonce_;
+  static const ::std::string _default_server_nonce_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static CryptSetup* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ContextActionAdd : public ::google::protobuf::Message {
+ public:
+  ContextActionAdd();
+  virtual ~ContextActionAdd();
+  
+  ContextActionAdd(const ContextActionAdd& from);
+  
+  inline ContextActionAdd& operator=(const ContextActionAdd& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ContextActionAdd& default_instance();
+  
+  void Swap(ContextActionAdd* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ContextActionAdd* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ContextActionAdd& from);
+  void MergeFrom(const ContextActionAdd& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef ContextActionAdd_Context Context;
+  static const Context Server = ContextActionAdd_Context_Server;
+  static const Context Channel = ContextActionAdd_Context_Channel;
+  static const Context User = ContextActionAdd_Context_User;
+  static inline bool Context_IsValid(int value) {
+    return ContextActionAdd_Context_IsValid(value);
+  }
+  static const Context Context_MIN =
+    ContextActionAdd_Context_Context_MIN;
+  static const Context Context_MAX =
+    ContextActionAdd_Context_Context_MAX;
+  static const int Context_ARRAYSIZE =
+    ContextActionAdd_Context_Context_ARRAYSIZE;
+  static inline const ::google::protobuf::EnumDescriptor*
+  Context_descriptor() {
+    return ContextActionAdd_Context_descriptor();
+  }
+  static inline const ::std::string& Context_Name(Context value) {
+    return ContextActionAdd_Context_Name(value);
+  }
+  static inline bool Context_Parse(const ::std::string& name,
+      Context* value) {
+    return ContextActionAdd_Context_Parse(name, value);
+  }
+  
+  // accessors -------------------------------------------------------
+  
+  // required string action = 1;
+  inline bool has_action() const;
+  inline void clear_action();
+  static const int kActionFieldNumber = 1;
+  inline const ::std::string& action() const;
+  inline void set_action(const ::std::string& value);
+  inline void set_action(const char* value);
+  inline void set_action(const char* value, size_t size);
+  inline ::std::string* mutable_action();
+  
+  // required string text = 2;
+  inline bool has_text() const;
+  inline void clear_text();
+  static const int kTextFieldNumber = 2;
+  inline const ::std::string& text() const;
+  inline void set_text(const ::std::string& value);
+  inline void set_text(const char* value);
+  inline void set_text(const char* value, size_t size);
+  inline ::std::string* mutable_text();
+  
+  // optional uint32 context = 3;
+  inline bool has_context() const;
+  inline void clear_context();
+  static const int kContextFieldNumber = 3;
+  inline ::google::protobuf::uint32 context() const;
+  inline void set_context(::google::protobuf::uint32 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ContextActionAdd)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::std::string* action_;
+  static const ::std::string _default_action_;
+  ::std::string* text_;
+  static const ::std::string _default_text_;
+  ::google::protobuf::uint32 context_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ContextActionAdd* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ContextAction : public ::google::protobuf::Message {
+ public:
+  ContextAction();
+  virtual ~ContextAction();
+  
+  ContextAction(const ContextAction& from);
+  
+  inline ContextAction& operator=(const ContextAction& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ContextAction& default_instance();
+  
+  void Swap(ContextAction* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ContextAction* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ContextAction& from);
+  void MergeFrom(const ContextAction& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 session = 1;
+  inline bool has_session() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 1;
+  inline ::google::protobuf::uint32 session() const;
+  inline void set_session(::google::protobuf::uint32 value);
+  
+  // optional uint32 channel_id = 2;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 2;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // required string action = 3;
+  inline bool has_action() const;
+  inline void clear_action();
+  static const int kActionFieldNumber = 3;
+  inline const ::std::string& action() const;
+  inline void set_action(const ::std::string& value);
+  inline void set_action(const char* value);
+  inline void set_action(const char* value, size_t size);
+  inline ::std::string* mutable_action();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ContextAction)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 session_;
+  ::google::protobuf::uint32 channel_id_;
+  ::std::string* action_;
+  static const ::std::string _default_action_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ContextAction* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UserList_User : public ::google::protobuf::Message {
+ public:
+  UserList_User();
+  virtual ~UserList_User();
+  
+  UserList_User(const UserList_User& from);
+  
+  inline UserList_User& operator=(const UserList_User& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UserList_User& default_instance();
+  
+  void Swap(UserList_User* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UserList_User* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UserList_User& from);
+  void MergeFrom(const UserList_User& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required uint32 user_id = 1;
+  inline bool has_user_id() const;
+  inline void clear_user_id();
+  static const int kUserIdFieldNumber = 1;
+  inline ::google::protobuf::uint32 user_id() const;
+  inline void set_user_id(::google::protobuf::uint32 value);
+  
+  // optional string name = 2;
+  inline bool has_name() const;
+  inline void clear_name();
+  static const int kNameFieldNumber = 2;
+  inline const ::std::string& name() const;
+  inline void set_name(const ::std::string& value);
+  inline void set_name(const char* value);
+  inline void set_name(const char* value, size_t size);
+  inline ::std::string* mutable_name();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UserList.User)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 user_id_;
+  ::std::string* name_;
+  static const ::std::string _default_name_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UserList_User* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UserList : public ::google::protobuf::Message {
+ public:
+  UserList();
+  virtual ~UserList();
+  
+  UserList(const UserList& from);
+  
+  inline UserList& operator=(const UserList& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UserList& default_instance();
+  
+  void Swap(UserList* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UserList* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UserList& from);
+  void MergeFrom(const UserList& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef UserList_User User;
+  
+  // accessors -------------------------------------------------------
+  
+  // repeated .MumbleProto.UserList.User users = 1;
+  inline int users_size() const;
+  inline void clear_users();
+  static const int kUsersFieldNumber = 1;
+  inline const ::MumbleProto::UserList_User& users(int index) const;
+  inline ::MumbleProto::UserList_User* mutable_users(int index);
+  inline ::MumbleProto::UserList_User* add_users();
+  inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::UserList_User >&
+      users() const;
+  inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::UserList_User >*
+      mutable_users();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UserList)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::RepeatedPtrField< ::MumbleProto::UserList_User > users_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UserList* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class VoiceTarget_Target : public ::google::protobuf::Message {
+ public:
+  VoiceTarget_Target();
+  virtual ~VoiceTarget_Target();
+  
+  VoiceTarget_Target(const VoiceTarget_Target& from);
+  
+  inline VoiceTarget_Target& operator=(const VoiceTarget_Target& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const VoiceTarget_Target& default_instance();
+  
+  void Swap(VoiceTarget_Target* other);
+  
+  // implements Message ----------------------------------------------
+  
+  VoiceTarget_Target* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const VoiceTarget_Target& from);
+  void MergeFrom(const VoiceTarget_Target& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // repeated uint32 session = 1;
+  inline int session_size() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 1;
+  inline ::google::protobuf::uint32 session(int index) const;
+  inline void set_session(int index, ::google::protobuf::uint32 value);
+  inline void add_session(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      session() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_session();
+  
+  // optional uint32 channel_id = 2;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 2;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // optional string group = 3;
+  inline bool has_group() const;
+  inline void clear_group();
+  static const int kGroupFieldNumber = 3;
+  inline const ::std::string& group() const;
+  inline void set_group(const ::std::string& value);
+  inline void set_group(const char* value);
+  inline void set_group(const char* value, size_t size);
+  inline ::std::string* mutable_group();
+  
+  // optional bool links = 4 [default = false];
+  inline bool has_links() const;
+  inline void clear_links();
+  static const int kLinksFieldNumber = 4;
+  inline bool links() const;
+  inline void set_links(bool value);
+  
+  // optional bool children = 5 [default = false];
+  inline bool has_children() const;
+  inline void clear_children();
+  static const int kChildrenFieldNumber = 5;
+  inline bool children() const;
+  inline void set_children(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.VoiceTarget.Target)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > session_;
+  ::google::protobuf::uint32 channel_id_;
+  ::std::string* group_;
+  static const ::std::string _default_group_;
+  bool links_;
+  bool children_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static VoiceTarget_Target* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class VoiceTarget : public ::google::protobuf::Message {
+ public:
+  VoiceTarget();
+  virtual ~VoiceTarget();
+  
+  VoiceTarget(const VoiceTarget& from);
+  
+  inline VoiceTarget& operator=(const VoiceTarget& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const VoiceTarget& default_instance();
+  
+  void Swap(VoiceTarget* other);
+  
+  // implements Message ----------------------------------------------
+  
+  VoiceTarget* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const VoiceTarget& from);
+  void MergeFrom(const VoiceTarget& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef VoiceTarget_Target Target;
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 id = 1;
+  inline bool has_id() const;
+  inline void clear_id();
+  static const int kIdFieldNumber = 1;
+  inline ::google::protobuf::uint32 id() const;
+  inline void set_id(::google::protobuf::uint32 value);
+  
+  // repeated .MumbleProto.VoiceTarget.Target targets = 2;
+  inline int targets_size() const;
+  inline void clear_targets();
+  static const int kTargetsFieldNumber = 2;
+  inline const ::MumbleProto::VoiceTarget_Target& targets(int index) const;
+  inline ::MumbleProto::VoiceTarget_Target* mutable_targets(int index);
+  inline ::MumbleProto::VoiceTarget_Target* add_targets();
+  inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::VoiceTarget_Target >&
+      targets() const;
+  inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::VoiceTarget_Target >*
+      mutable_targets();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.VoiceTarget)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 id_;
+  ::google::protobuf::RepeatedPtrField< ::MumbleProto::VoiceTarget_Target > targets_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static VoiceTarget* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class PermissionQuery : public ::google::protobuf::Message {
+ public:
+  PermissionQuery();
+  virtual ~PermissionQuery();
+  
+  PermissionQuery(const PermissionQuery& from);
+  
+  inline PermissionQuery& operator=(const PermissionQuery& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const PermissionQuery& default_instance();
+  
+  void Swap(PermissionQuery* other);
+  
+  // implements Message ----------------------------------------------
+  
+  PermissionQuery* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const PermissionQuery& from);
+  void MergeFrom(const PermissionQuery& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 channel_id = 1;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 1;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // optional uint32 permissions = 2;
+  inline bool has_permissions() const;
+  inline void clear_permissions();
+  static const int kPermissionsFieldNumber = 2;
+  inline ::google::protobuf::uint32 permissions() const;
+  inline void set_permissions(::google::protobuf::uint32 value);
+  
+  // optional bool flush = 3 [default = false];
+  inline bool has_flush() const;
+  inline void clear_flush();
+  static const int kFlushFieldNumber = 3;
+  inline bool flush() const;
+  inline void set_flush(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.PermissionQuery)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 channel_id_;
+  ::google::protobuf::uint32 permissions_;
+  bool flush_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static PermissionQuery* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class CodecVersion : public ::google::protobuf::Message {
+ public:
+  CodecVersion();
+  virtual ~CodecVersion();
+  
+  CodecVersion(const CodecVersion& from);
+  
+  inline CodecVersion& operator=(const CodecVersion& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const CodecVersion& default_instance();
+  
+  void Swap(CodecVersion* other);
+  
+  // implements Message ----------------------------------------------
+  
+  CodecVersion* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const CodecVersion& from);
+  void MergeFrom(const CodecVersion& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required int32 alpha = 1;
+  inline bool has_alpha() const;
+  inline void clear_alpha();
+  static const int kAlphaFieldNumber = 1;
+  inline ::google::protobuf::int32 alpha() const;
+  inline void set_alpha(::google::protobuf::int32 value);
+  
+  // required int32 beta = 2;
+  inline bool has_beta() const;
+  inline void clear_beta();
+  static const int kBetaFieldNumber = 2;
+  inline ::google::protobuf::int32 beta() const;
+  inline void set_beta(::google::protobuf::int32 value);
+  
+  // required bool prefer_alpha = 3 [default = true];
+  inline bool has_prefer_alpha() const;
+  inline void clear_prefer_alpha();
+  static const int kPreferAlphaFieldNumber = 3;
+  inline bool prefer_alpha() const;
+  inline void set_prefer_alpha(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.CodecVersion)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::int32 alpha_;
+  ::google::protobuf::int32 beta_;
+  bool prefer_alpha_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static CodecVersion* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UserStats_Stats : public ::google::protobuf::Message {
+ public:
+  UserStats_Stats();
+  virtual ~UserStats_Stats();
+  
+  UserStats_Stats(const UserStats_Stats& from);
+  
+  inline UserStats_Stats& operator=(const UserStats_Stats& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UserStats_Stats& default_instance();
+  
+  void Swap(UserStats_Stats* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UserStats_Stats* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UserStats_Stats& from);
+  void MergeFrom(const UserStats_Stats& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 good = 1;
+  inline bool has_good() const;
+  inline void clear_good();
+  static const int kGoodFieldNumber = 1;
+  inline ::google::protobuf::uint32 good() const;
+  inline void set_good(::google::protobuf::uint32 value);
+  
+  // optional uint32 late = 2;
+  inline bool has_late() const;
+  inline void clear_late();
+  static const int kLateFieldNumber = 2;
+  inline ::google::protobuf::uint32 late() const;
+  inline void set_late(::google::protobuf::uint32 value);
+  
+  // optional uint32 lost = 3;
+  inline bool has_lost() const;
+  inline void clear_lost();
+  static const int kLostFieldNumber = 3;
+  inline ::google::protobuf::uint32 lost() const;
+  inline void set_lost(::google::protobuf::uint32 value);
+  
+  // optional uint32 resync = 4;
+  inline bool has_resync() const;
+  inline void clear_resync();
+  static const int kResyncFieldNumber = 4;
+  inline ::google::protobuf::uint32 resync() const;
+  inline void set_resync(::google::protobuf::uint32 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UserStats.Stats)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 good_;
+  ::google::protobuf::uint32 late_;
+  ::google::protobuf::uint32 lost_;
+  ::google::protobuf::uint32 resync_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UserStats_Stats* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UserStats : public ::google::protobuf::Message {
+ public:
+  UserStats();
+  virtual ~UserStats();
+  
+  UserStats(const UserStats& from);
+  
+  inline UserStats& operator=(const UserStats& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UserStats& default_instance();
+  
+  void Swap(UserStats* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UserStats* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UserStats& from);
+  void MergeFrom(const UserStats& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef UserStats_Stats Stats;
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 session = 1;
+  inline bool has_session() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 1;
+  inline ::google::protobuf::uint32 session() const;
+  inline void set_session(::google::protobuf::uint32 value);
+  
+  // optional bool stats_only = 2 [default = false];
+  inline bool has_stats_only() const;
+  inline void clear_stats_only();
+  static const int kStatsOnlyFieldNumber = 2;
+  inline bool stats_only() const;
+  inline void set_stats_only(bool value);
+  
+  // repeated bytes certificates = 3;
+  inline int certificates_size() const;
+  inline void clear_certificates();
+  static const int kCertificatesFieldNumber = 3;
+  inline const ::std::string& certificates(int index) const;
+  inline ::std::string* mutable_certificates(int index);
+  inline void set_certificates(int index, const ::std::string& value);
+  inline void set_certificates(int index, const char* value);
+  inline void set_certificates(int index, const void* value, size_t size);
+  inline ::std::string* add_certificates();
+  inline void add_certificates(const ::std::string& value);
+  inline void add_certificates(const char* value);
+  inline void add_certificates(const void* value, size_t size);
+  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& certificates() const;
+  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_certificates();
+  
+  // optional .MumbleProto.UserStats.Stats from_client = 4;
+  inline bool has_from_client() const;
+  inline void clear_from_client();
+  static const int kFromClientFieldNumber = 4;
+  inline const ::MumbleProto::UserStats_Stats& from_client() const;
+  inline ::MumbleProto::UserStats_Stats* mutable_from_client();
+  
+  // optional .MumbleProto.UserStats.Stats from_server = 5;
+  inline bool has_from_server() const;
+  inline void clear_from_server();
+  static const int kFromServerFieldNumber = 5;
+  inline const ::MumbleProto::UserStats_Stats& from_server() const;
+  inline ::MumbleProto::UserStats_Stats* mutable_from_server();
+  
+  // optional uint32 udp_packets = 6;
+  inline bool has_udp_packets() const;
+  inline void clear_udp_packets();
+  static const int kUdpPacketsFieldNumber = 6;
+  inline ::google::protobuf::uint32 udp_packets() const;
+  inline void set_udp_packets(::google::protobuf::uint32 value);
+  
+  // optional uint32 tcp_packets = 7;
+  inline bool has_tcp_packets() const;
+  inline void clear_tcp_packets();
+  static const int kTcpPacketsFieldNumber = 7;
+  inline ::google::protobuf::uint32 tcp_packets() const;
+  inline void set_tcp_packets(::google::protobuf::uint32 value);
+  
+  // optional float udp_ping_avg = 8;
+  inline bool has_udp_ping_avg() const;
+  inline void clear_udp_ping_avg();
+  static const int kUdpPingAvgFieldNumber = 8;
+  inline float udp_ping_avg() const;
+  inline void set_udp_ping_avg(float value);
+  
+  // optional float udp_ping_var = 9;
+  inline bool has_udp_ping_var() const;
+  inline void clear_udp_ping_var();
+  static const int kUdpPingVarFieldNumber = 9;
+  inline float udp_ping_var() const;
+  inline void set_udp_ping_var(float value);
+  
+  // optional float tcp_ping_avg = 10;
+  inline bool has_tcp_ping_avg() const;
+  inline void clear_tcp_ping_avg();
+  static const int kTcpPingAvgFieldNumber = 10;
+  inline float tcp_ping_avg() const;
+  inline void set_tcp_ping_avg(float value);
+  
+  // optional float tcp_ping_var = 11;
+  inline bool has_tcp_ping_var() const;
+  inline void clear_tcp_ping_var();
+  static const int kTcpPingVarFieldNumber = 11;
+  inline float tcp_ping_var() const;
+  inline void set_tcp_ping_var(float value);
+  
+  // optional .MumbleProto.Version version = 12;
+  inline bool has_version() const;
+  inline void clear_version();
+  static const int kVersionFieldNumber = 12;
+  inline const ::MumbleProto::Version& version() const;
+  inline ::MumbleProto::Version* mutable_version();
+  
+  // repeated int32 celt_versions = 13;
+  inline int celt_versions_size() const;
+  inline void clear_celt_versions();
+  static const int kCeltVersionsFieldNumber = 13;
+  inline ::google::protobuf::int32 celt_versions(int index) const;
+  inline void set_celt_versions(int index, ::google::protobuf::int32 value);
+  inline void add_celt_versions(::google::protobuf::int32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
+      celt_versions() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
+      mutable_celt_versions();
+  
+  // optional bytes address = 14;
+  inline bool has_address() const;
+  inline void clear_address();
+  static const int kAddressFieldNumber = 14;
+  inline const ::std::string& address() const;
+  inline void set_address(const ::std::string& value);
+  inline void set_address(const char* value);
+  inline void set_address(const void* value, size_t size);
+  inline ::std::string* mutable_address();
+  
+  // optional uint32 bandwidth = 15;
+  inline bool has_bandwidth() const;
+  inline void clear_bandwidth();
+  static const int kBandwidthFieldNumber = 15;
+  inline ::google::protobuf::uint32 bandwidth() const;
+  inline void set_bandwidth(::google::protobuf::uint32 value);
+  
+  // optional uint32 onlinesecs = 16;
+  inline bool has_onlinesecs() const;
+  inline void clear_onlinesecs();
+  static const int kOnlinesecsFieldNumber = 16;
+  inline ::google::protobuf::uint32 onlinesecs() const;
+  inline void set_onlinesecs(::google::protobuf::uint32 value);
+  
+  // optional uint32 idlesecs = 17;
+  inline bool has_idlesecs() const;
+  inline void clear_idlesecs();
+  static const int kIdlesecsFieldNumber = 17;
+  inline ::google::protobuf::uint32 idlesecs() const;
+  inline void set_idlesecs(::google::protobuf::uint32 value);
+  
+  // optional bool strong_certificate = 18 [default = false];
+  inline bool has_strong_certificate() const;
+  inline void clear_strong_certificate();
+  static const int kStrongCertificateFieldNumber = 18;
+  inline bool strong_certificate() const;
+  inline void set_strong_certificate(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UserStats)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 session_;
+  bool stats_only_;
+  ::google::protobuf::RepeatedPtrField< ::std::string> certificates_;
+  ::MumbleProto::UserStats_Stats* from_client_;
+  ::MumbleProto::UserStats_Stats* from_server_;
+  ::google::protobuf::uint32 udp_packets_;
+  ::google::protobuf::uint32 tcp_packets_;
+  float udp_ping_avg_;
+  float udp_ping_var_;
+  float tcp_ping_avg_;
+  float tcp_ping_var_;
+  ::MumbleProto::Version* version_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > celt_versions_;
+  ::std::string* address_;
+  static const ::std::string _default_address_;
+  ::google::protobuf::uint32 bandwidth_;
+  ::google::protobuf::uint32 onlinesecs_;
+  ::google::protobuf::uint32 idlesecs_;
+  bool strong_certificate_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UserStats* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class RequestBlob : public ::google::protobuf::Message {
+ public:
+  RequestBlob();
+  virtual ~RequestBlob();
+  
+  RequestBlob(const RequestBlob& from);
+  
+  inline RequestBlob& operator=(const RequestBlob& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const RequestBlob& default_instance();
+  
+  void Swap(RequestBlob* other);
+  
+  // implements Message ----------------------------------------------
+  
+  RequestBlob* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const RequestBlob& from);
+  void MergeFrom(const RequestBlob& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // repeated uint32 session_texture = 1;
+  inline int session_texture_size() const;
+  inline void clear_session_texture();
+  static const int kSessionTextureFieldNumber = 1;
+  inline ::google::protobuf::uint32 session_texture(int index) const;
+  inline void set_session_texture(int index, ::google::protobuf::uint32 value);
+  inline void add_session_texture(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      session_texture() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_session_texture();
+  
+  // repeated uint32 session_comment = 2;
+  inline int session_comment_size() const;
+  inline void clear_session_comment();
+  static const int kSessionCommentFieldNumber = 2;
+  inline ::google::protobuf::uint32 session_comment(int index) const;
+  inline void set_session_comment(int index, ::google::protobuf::uint32 value);
+  inline void add_session_comment(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      session_comment() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_session_comment();
+  
+  // repeated uint32 channel_description = 3;
+  inline int channel_description_size() const;
+  inline void clear_channel_description();
+  static const int kChannelDescriptionFieldNumber = 3;
+  inline ::google::protobuf::uint32 channel_description(int index) const;
+  inline void set_channel_description(int index, ::google::protobuf::uint32 value);
+  inline void add_channel_description(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      channel_description() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_channel_description();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.RequestBlob)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > session_texture_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > session_comment_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > channel_description_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static RequestBlob* default_instance_;
+};
+// ===================================================================
+
+
+// ===================================================================
+
+// Version
+
+// optional uint32 version = 1;
+inline bool Version::has_version() const {
+  return _has_bit(0);
+}
+inline void Version::clear_version() {
+  version_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 Version::version() const {
+  return version_;
+}
+inline void Version::set_version(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  version_ = value;
+}
+
+// optional string release = 2;
+inline bool Version::has_release() const {
+  return _has_bit(1);
+}
+inline void Version::clear_release() {
+  if (release_ != &_default_release_) {
+    release_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& Version::release() const {
+  return *release_;
+}
+inline void Version::set_release(const ::std::string& value) {
+  _set_bit(1);
+  if (release_ == &_default_release_) {
+    release_ = new ::std::string;
+  }
+  release_->assign(value);
+}
+inline void Version::set_release(const char* value) {
+  _set_bit(1);
+  if (release_ == &_default_release_) {
+    release_ = new ::std::string;
+  }
+  release_->assign(value);
+}
+inline void Version::set_release(const char* value, size_t size) {
+  _set_bit(1);
+  if (release_ == &_default_release_) {
+    release_ = new ::std::string;
+  }
+  release_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Version::mutable_release() {
+  _set_bit(1);
+  if (release_ == &_default_release_) {
+    release_ = new ::std::string;
+  }
+  return release_;
+}
+
+// optional string os = 3;
+inline bool Version::has_os() const {
+  return _has_bit(2);
+}
+inline void Version::clear_os() {
+  if (os_ != &_default_os_) {
+    os_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& Version::os() const {
+  return *os_;
+}
+inline void Version::set_os(const ::std::string& value) {
+  _set_bit(2);
+  if (os_ == &_default_os_) {
+    os_ = new ::std::string;
+  }
+  os_->assign(value);
+}
+inline void Version::set_os(const char* value) {
+  _set_bit(2);
+  if (os_ == &_default_os_) {
+    os_ = new ::std::string;
+  }
+  os_->assign(value);
+}
+inline void Version::set_os(const char* value, size_t size) {
+  _set_bit(2);
+  if (os_ == &_default_os_) {
+    os_ = new ::std::string;
+  }
+  os_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Version::mutable_os() {
+  _set_bit(2);
+  if (os_ == &_default_os_) {
+    os_ = new ::std::string;
+  }
+  return os_;
+}
+
+// optional string os_version = 4;
+inline bool Version::has_os_version() const {
+  return _has_bit(3);
+}
+inline void Version::clear_os_version() {
+  if (os_version_ != &_default_os_version_) {
+    os_version_->clear();
+  }
+  _clear_bit(3);
+}
+inline const ::std::string& Version::os_version() const {
+  return *os_version_;
+}
+inline void Version::set_os_version(const ::std::string& value) {
+  _set_bit(3);
+  if (os_version_ == &_default_os_version_) {
+    os_version_ = new ::std::string;
+  }
+  os_version_->assign(value);
+}
+inline void Version::set_os_version(const char* value) {
+  _set_bit(3);
+  if (os_version_ == &_default_os_version_) {
+    os_version_ = new ::std::string;
+  }
+  os_version_->assign(value);
+}
+inline void Version::set_os_version(const char* value, size_t size) {
+  _set_bit(3);
+  if (os_version_ == &_default_os_version_) {
+    os_version_ = new ::std::string;
+  }
+  os_version_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Version::mutable_os_version() {
+  _set_bit(3);
+  if (os_version_ == &_default_os_version_) {
+    os_version_ = new ::std::string;
+  }
+  return os_version_;
+}
+
+// -------------------------------------------------------------------
+
+// UDPTunnel
+
+// required bytes packet = 1;
+inline bool UDPTunnel::has_packet() const {
+  return _has_bit(0);
+}
+inline void UDPTunnel::clear_packet() {
+  if (packet_ != &_default_packet_) {
+    packet_->clear();
+  }
+  _clear_bit(0);
+}
+inline const ::std::string& UDPTunnel::packet() const {
+  return *packet_;
+}
+inline void UDPTunnel::set_packet(const ::std::string& value) {
+  _set_bit(0);
+  if (packet_ == &_default_packet_) {
+    packet_ = new ::std::string;
+  }
+  packet_->assign(value);
+}
+inline void UDPTunnel::set_packet(const char* value) {
+  _set_bit(0);
+  if (packet_ == &_default_packet_) {
+    packet_ = new ::std::string;
+  }
+  packet_->assign(value);
+}
+inline void UDPTunnel::set_packet(const void* value, size_t size) {
+  _set_bit(0);
+  if (packet_ == &_default_packet_) {
+    packet_ = new ::std::string;
+  }
+  packet_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UDPTunnel::mutable_packet() {
+  _set_bit(0);
+  if (packet_ == &_default_packet_) {
+    packet_ = new ::std::string;
+  }
+  return packet_;
+}
+
+// -------------------------------------------------------------------
+
+// Authenticate
+
+// optional string username = 1;
+inline bool Authenticate::has_username() const {
+  return _has_bit(0);
+}
+inline void Authenticate::clear_username() {
+  if (username_ != &_default_username_) {
+    username_->clear();
+  }
+  _clear_bit(0);
+}
+inline const ::std::string& Authenticate::username() const {
+  return *username_;
+}
+inline void Authenticate::set_username(const ::std::string& value) {
+  _set_bit(0);
+  if (username_ == &_default_username_) {
+    username_ = new ::std::string;
+  }
+  username_->assign(value);
+}
+inline void Authenticate::set_username(const char* value) {
+  _set_bit(0);
+  if (username_ == &_default_username_) {
+    username_ = new ::std::string;
+  }
+  username_->assign(value);
+}
+inline void Authenticate::set_username(const char* value, size_t size) {
+  _set_bit(0);
+  if (username_ == &_default_username_) {
+    username_ = new ::std::string;
+  }
+  username_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Authenticate::mutable_username() {
+  _set_bit(0);
+  if (username_ == &_default_username_) {
+    username_ = new ::std::string;
+  }
+  return username_;
+}
+
+// optional string password = 2;
+inline bool Authenticate::has_password() const {
+  return _has_bit(1);
+}
+inline void Authenticate::clear_password() {
+  if (password_ != &_default_password_) {
+    password_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& Authenticate::password() const {
+  return *password_;
+}
+inline void Authenticate::set_password(const ::std::string& value) {
+  _set_bit(1);
+  if (password_ == &_default_password_) {
+    password_ = new ::std::string;
+  }
+  password_->assign(value);
+}
+inline void Authenticate::set_password(const char* value) {
+  _set_bit(1);
+  if (password_ == &_default_password_) {
+    password_ = new ::std::string;
+  }
+  password_->assign(value);
+}
+inline void Authenticate::set_password(const char* value, size_t size) {
+  _set_bit(1);
+  if (password_ == &_default_password_) {
+    password_ = new ::std::string;
+  }
+  password_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Authenticate::mutable_password() {
+  _set_bit(1);
+  if (password_ == &_default_password_) {
+    password_ = new ::std::string;
+  }
+  return password_;
+}
+
+// repeated string tokens = 3;
+inline int Authenticate::tokens_size() const {
+  return tokens_.size();
+}
+inline void Authenticate::clear_tokens() {
+  tokens_.Clear();
+}
+inline const ::std::string& Authenticate::tokens(int index) const {
+  return tokens_.Get(index);
+}
+inline ::std::string* Authenticate::mutable_tokens(int index) {
+  return tokens_.Mutable(index);
+}
+inline void Authenticate::set_tokens(int index, const ::std::string& value) {
+  tokens_.Mutable(index)->assign(value);
+}
+inline void Authenticate::set_tokens(int index, const char* value) {
+  tokens_.Mutable(index)->assign(value);
+}
+inline void Authenticate::set_tokens(int index, const char* value, size_t size) {
+  tokens_.Mutable(index)->assign(
+    reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Authenticate::add_tokens() {
+  return tokens_.Add();
+}
+inline void Authenticate::add_tokens(const ::std::string& value) {
+  tokens_.Add()->assign(value);
+}
+inline void Authenticate::add_tokens(const char* value) {
+  tokens_.Add()->assign(value);
+}
+inline void Authenticate::add_tokens(const char* value, size_t size) {
+  tokens_.Add()->assign(reinterpret_cast<const char*>(value), size);
+}
+inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
+Authenticate::tokens() const {
+  return tokens_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::std::string>*
+Authenticate::mutable_tokens() {
+  return &tokens_;
+}
+
+// repeated int32 celt_versions = 4;
+inline int Authenticate::celt_versions_size() const {
+  return celt_versions_.size();
+}
+inline void Authenticate::clear_celt_versions() {
+  celt_versions_.Clear();
+}
+inline ::google::protobuf::int32 Authenticate::celt_versions(int index) const {
+  return celt_versions_.Get(index);
+}
+inline void Authenticate::set_celt_versions(int index, ::google::protobuf::int32 value) {
+  celt_versions_.Set(index, value);
+}
+inline void Authenticate::add_celt_versions(::google::protobuf::int32 value) {
+  celt_versions_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
+Authenticate::celt_versions() const {
+  return celt_versions_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
+Authenticate::mutable_celt_versions() {
+  return &celt_versions_;
+}
+
+// -------------------------------------------------------------------
+
+// Ping
+
+// optional uint64 timestamp = 1;
+inline bool Ping::has_timestamp() const {
+  return _has_bit(0);
+}
+inline void Ping::clear_timestamp() {
+  timestamp_ = GOOGLE_ULONGLONG(0);
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint64 Ping::timestamp() const {
+  return timestamp_;
+}
+inline void Ping::set_timestamp(::google::protobuf::uint64 value) {
+  _set_bit(0);
+  timestamp_ = value;
+}
+
+// optional uint32 good = 2;
+inline bool Ping::has_good() const {
+  return _has_bit(1);
+}
+inline void Ping::clear_good() {
+  good_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 Ping::good() const {
+  return good_;
+}
+inline void Ping::set_good(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  good_ = value;
+}
+
+// optional uint32 late = 3;
+inline bool Ping::has_late() const {
+  return _has_bit(2);
+}
+inline void Ping::clear_late() {
+  late_ = 0u;
+  _clear_bit(2);
+}
+inline ::google::protobuf::uint32 Ping::late() const {
+  return late_;
+}
+inline void Ping::set_late(::google::protobuf::uint32 value) {
+  _set_bit(2);
+  late_ = value;
+}
+
+// optional uint32 lost = 4;
+inline bool Ping::has_lost() const {
+  return _has_bit(3);
+}
+inline void Ping::clear_lost() {
+  lost_ = 0u;
+  _clear_bit(3);
+}
+inline ::google::protobuf::uint32 Ping::lost() const {
+  return lost_;
+}
+inline void Ping::set_lost(::google::protobuf::uint32 value) {
+  _set_bit(3);
+  lost_ = value;
+}
+
+// optional uint32 resync = 5;
+inline bool Ping::has_resync() const {
+  return _has_bit(4);
+}
+inline void Ping::clear_resync() {
+  resync_ = 0u;
+  _clear_bit(4);
+}
+inline ::google::protobuf::uint32 Ping::resync() const {
+  return resync_;
+}
+inline void Ping::set_resync(::google::protobuf::uint32 value) {
+  _set_bit(4);
+  resync_ = value;
+}
+
+// optional uint32 udp_packets = 6;
+inline bool Ping::has_udp_packets() const {
+  return _has_bit(5);
+}
+inline void Ping::clear_udp_packets() {
+  udp_packets_ = 0u;
+  _clear_bit(5);
+}
+inline ::google::protobuf::uint32 Ping::udp_packets() const {
+  return udp_packets_;
+}
+inline void Ping::set_udp_packets(::google::protobuf::uint32 value) {
+  _set_bit(5);
+  udp_packets_ = value;
+}
+
+// optional uint32 tcp_packets = 7;
+inline bool Ping::has_tcp_packets() const {
+  return _has_bit(6);
+}
+inline void Ping::clear_tcp_packets() {
+  tcp_packets_ = 0u;
+  _clear_bit(6);
+}
+inline ::google::protobuf::uint32 Ping::tcp_packets() const {
+  return tcp_packets_;
+}
+inline void Ping::set_tcp_packets(::google::protobuf::uint32 value) {
+  _set_bit(6);
+  tcp_packets_ = value;
+}
+
+// optional float udp_ping_avg = 8;
+inline bool Ping::has_udp_ping_avg() const {
+  return _has_bit(7);
+}
+inline void Ping::clear_udp_ping_avg() {
+  udp_ping_avg_ = 0;
+  _clear_bit(7);
+}
+inline float Ping::udp_ping_avg() const {
+  return udp_ping_avg_;
+}
+inline void Ping::set_udp_ping_avg(float value) {
+  _set_bit(7);
+  udp_ping_avg_ = value;
+}
+
+// optional float udp_ping_var = 9;
+inline bool Ping::has_udp_ping_var() const {
+  return _has_bit(8);
+}
+inline void Ping::clear_udp_ping_var() {
+  udp_ping_var_ = 0;
+  _clear_bit(8);
+}
+inline float Ping::udp_ping_var() const {
+  return udp_ping_var_;
+}
+inline void Ping::set_udp_ping_var(float value) {
+  _set_bit(8);
+  udp_ping_var_ = value;
+}
+
+// optional float tcp_ping_avg = 10;
+inline bool Ping::has_tcp_ping_avg() const {
+  return _has_bit(9);
+}
+inline void Ping::clear_tcp_ping_avg() {
+  tcp_ping_avg_ = 0;
+  _clear_bit(9);
+}
+inline float Ping::tcp_ping_avg() const {
+  return tcp_ping_avg_;
+}
+inline void Ping::set_tcp_ping_avg(float value) {
+  _set_bit(9);
+  tcp_ping_avg_ = value;
+}
+
+// optional float tcp_ping_var = 11;
+inline bool Ping::has_tcp_ping_var() const {
+  return _has_bit(10);
+}
+inline void Ping::clear_tcp_ping_var() {
+  tcp_ping_var_ = 0;
+  _clear_bit(10);
+}
+inline float Ping::tcp_ping_var() const {
+  return tcp_ping_var_;
+}
+inline void Ping::set_tcp_ping_var(float value) {
+  _set_bit(10);
+  tcp_ping_var_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// Reject
+
+// optional .MumbleProto.Reject.RejectType type = 1;
+inline bool Reject::has_type() const {
+  return _has_bit(0);
+}
+inline void Reject::clear_type() {
+  type_ = 0;
+  _clear_bit(0);
+}
+inline ::MumbleProto::Reject_RejectType Reject::type() const {
+  return static_cast< ::MumbleProto::Reject_RejectType >(type_);
+}
+inline void Reject::set_type(::MumbleProto::Reject_RejectType value) {
+  GOOGLE_DCHECK(::MumbleProto::Reject_RejectType_IsValid(value));
+  _set_bit(0);
+  type_ = value;
+}
+
+// optional string reason = 2;
+inline bool Reject::has_reason() const {
+  return _has_bit(1);
+}
+inline void Reject::clear_reason() {
+  if (reason_ != &_default_reason_) {
+    reason_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& Reject::reason() const {
+  return *reason_;
+}
+inline void Reject::set_reason(const ::std::string& value) {
+  _set_bit(1);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void Reject::set_reason(const char* value) {
+  _set_bit(1);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void Reject::set_reason(const char* value, size_t size) {
+  _set_bit(1);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Reject::mutable_reason() {
+  _set_bit(1);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  return reason_;
+}
+
+// -------------------------------------------------------------------
+
+// ServerConfig
+
+// optional uint32 max_bandwidth = 1;
+inline bool ServerConfig::has_max_bandwidth() const {
+  return _has_bit(0);
+}
+inline void ServerConfig::clear_max_bandwidth() {
+  max_bandwidth_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 ServerConfig::max_bandwidth() const {
+  return max_bandwidth_;
+}
+inline void ServerConfig::set_max_bandwidth(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  max_bandwidth_ = value;
+}
+
+// optional string welcome_text = 2;
+inline bool ServerConfig::has_welcome_text() const {
+  return _has_bit(1);
+}
+inline void ServerConfig::clear_welcome_text() {
+  if (welcome_text_ != &_default_welcome_text_) {
+    welcome_text_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& ServerConfig::welcome_text() const {
+  return *welcome_text_;
+}
+inline void ServerConfig::set_welcome_text(const ::std::string& value) {
+  _set_bit(1);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  welcome_text_->assign(value);
+}
+inline void ServerConfig::set_welcome_text(const char* value) {
+  _set_bit(1);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  welcome_text_->assign(value);
+}
+inline void ServerConfig::set_welcome_text(const char* value, size_t size) {
+  _set_bit(1);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  welcome_text_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ServerConfig::mutable_welcome_text() {
+  _set_bit(1);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  return welcome_text_;
+}
+
+// optional bool allow_html = 3;
+inline bool ServerConfig::has_allow_html() const {
+  return _has_bit(2);
+}
+inline void ServerConfig::clear_allow_html() {
+  allow_html_ = false;
+  _clear_bit(2);
+}
+inline bool ServerConfig::allow_html() const {
+  return allow_html_;
+}
+inline void ServerConfig::set_allow_html(bool value) {
+  _set_bit(2);
+  allow_html_ = value;
+}
+
+// optional uint32 message_length = 4;
+inline bool ServerConfig::has_message_length() const {
+  return _has_bit(3);
+}
+inline void ServerConfig::clear_message_length() {
+  message_length_ = 0u;
+  _clear_bit(3);
+}
+inline ::google::protobuf::uint32 ServerConfig::message_length() const {
+  return message_length_;
+}
+inline void ServerConfig::set_message_length(::google::protobuf::uint32 value) {
+  _set_bit(3);
+  message_length_ = value;
+}
+
+// optional uint32 image_message_length = 5;
+inline bool ServerConfig::has_image_message_length() const {
+  return _has_bit(4);
+}
+inline void ServerConfig::clear_image_message_length() {
+  image_message_length_ = 0u;
+  _clear_bit(4);
+}
+inline ::google::protobuf::uint32 ServerConfig::image_message_length() const {
+  return image_message_length_;
+}
+inline void ServerConfig::set_image_message_length(::google::protobuf::uint32 value) {
+  _set_bit(4);
+  image_message_length_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// ServerSync
+
+// optional uint32 session = 1;
+inline bool ServerSync::has_session() const {
+  return _has_bit(0);
+}
+inline void ServerSync::clear_session() {
+  session_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 ServerSync::session() const {
+  return session_;
+}
+inline void ServerSync::set_session(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  session_ = value;
+}
+
+// optional uint32 max_bandwidth = 2;
+inline bool ServerSync::has_max_bandwidth() const {
+  return _has_bit(1);
+}
+inline void ServerSync::clear_max_bandwidth() {
+  max_bandwidth_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 ServerSync::max_bandwidth() const {
+  return max_bandwidth_;
+}
+inline void ServerSync::set_max_bandwidth(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  max_bandwidth_ = value;
+}
+
+// optional string welcome_text = 3;
+inline bool ServerSync::has_welcome_text() const {
+  return _has_bit(2);
+}
+inline void ServerSync::clear_welcome_text() {
+  if (welcome_text_ != &_default_welcome_text_) {
+    welcome_text_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& ServerSync::welcome_text() const {
+  return *welcome_text_;
+}
+inline void ServerSync::set_welcome_text(const ::std::string& value) {
+  _set_bit(2);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  welcome_text_->assign(value);
+}
+inline void ServerSync::set_welcome_text(const char* value) {
+  _set_bit(2);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  welcome_text_->assign(value);
+}
+inline void ServerSync::set_welcome_text(const char* value, size_t size) {
+  _set_bit(2);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  welcome_text_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ServerSync::mutable_welcome_text() {
+  _set_bit(2);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  return welcome_text_;
+}
+
+// optional uint64 permissions = 4;
+inline bool ServerSync::has_permissions() const {
+  return _has_bit(3);
+}
+inline void ServerSync::clear_permissions() {
+  permissions_ = GOOGLE_ULONGLONG(0);
+  _clear_bit(3);
+}
+inline ::google::protobuf::uint64 ServerSync::permissions() const {
+  return permissions_;
+}
+inline void ServerSync::set_permissions(::google::protobuf::uint64 value) {
+  _set_bit(3);
+  permissions_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// ChannelRemove
+
+// required uint32 channel_id = 1;
+inline bool ChannelRemove::has_channel_id() const {
+  return _has_bit(0);
+}
+inline void ChannelRemove::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 ChannelRemove::channel_id() const {
+  return channel_id_;
+}
+inline void ChannelRemove::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  channel_id_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// ChannelState
+
+// optional uint32 channel_id = 1;
+inline bool ChannelState::has_channel_id() const {
+  return _has_bit(0);
+}
+inline void ChannelState::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 ChannelState::channel_id() const {
+  return channel_id_;
+}
+inline void ChannelState::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  channel_id_ = value;
+}
+
+// optional uint32 parent = 2;
+inline bool ChannelState::has_parent() const {
+  return _has_bit(1);
+}
+inline void ChannelState::clear_parent() {
+  parent_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 ChannelState::parent() const {
+  return parent_;
+}
+inline void ChannelState::set_parent(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  parent_ = value;
+}
+
+// optional string name = 3;
+inline bool ChannelState::has_name() const {
+  return _has_bit(2);
+}
+inline void ChannelState::clear_name() {
+  if (name_ != &_default_name_) {
+    name_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& ChannelState::name() const {
+  return *name_;
+}
+inline void ChannelState::set_name(const ::std::string& value) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void ChannelState::set_name(const char* value) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void ChannelState::set_name(const char* value, size_t size) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ChannelState::mutable_name() {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  return name_;
+}
+
+// repeated uint32 links = 4;
+inline int ChannelState::links_size() const {
+  return links_.size();
+}
+inline void ChannelState::clear_links() {
+  links_.Clear();
+}
+inline ::google::protobuf::uint32 ChannelState::links(int index) const {
+  return links_.Get(index);
+}
+inline void ChannelState::set_links(int index, ::google::protobuf::uint32 value) {
+  links_.Set(index, value);
+}
+inline void ChannelState::add_links(::google::protobuf::uint32 value) {
+  links_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+ChannelState::links() const {
+  return links_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+ChannelState::mutable_links() {
+  return &links_;
+}
+
+// optional string description = 5;
+inline bool ChannelState::has_description() const {
+  return _has_bit(4);
+}
+inline void ChannelState::clear_description() {
+  if (description_ != &_default_description_) {
+    description_->clear();
+  }
+  _clear_bit(4);
+}
+inline const ::std::string& ChannelState::description() const {
+  return *description_;
+}
+inline void ChannelState::set_description(const ::std::string& value) {
+  _set_bit(4);
+  if (description_ == &_default_description_) {
+    description_ = new ::std::string;
+  }
+  description_->assign(value);
+}
+inline void ChannelState::set_description(const char* value) {
+  _set_bit(4);
+  if (description_ == &_default_description_) {
+    description_ = new ::std::string;
+  }
+  description_->assign(value);
+}
+inline void ChannelState::set_description(const char* value, size_t size) {
+  _set_bit(4);
+  if (description_ == &_default_description_) {
+    description_ = new ::std::string;
+  }
+  description_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ChannelState::mutable_description() {
+  _set_bit(4);
+  if (description_ == &_default_description_) {
+    description_ = new ::std::string;
+  }
+  return description_;
+}
+
+// repeated uint32 links_add = 6;
+inline int ChannelState::links_add_size() const {
+  return links_add_.size();
+}
+inline void ChannelState::clear_links_add() {
+  links_add_.Clear();
+}
+inline ::google::protobuf::uint32 ChannelState::links_add(int index) const {
+  return links_add_.Get(index);
+}
+inline void ChannelState::set_links_add(int index, ::google::protobuf::uint32 value) {
+  links_add_.Set(index, value);
+}
+inline void ChannelState::add_links_add(::google::protobuf::uint32 value) {
+  links_add_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+ChannelState::links_add() const {
+  return links_add_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+ChannelState::mutable_links_add() {
+  return &links_add_;
+}
+
+// repeated uint32 links_remove = 7;
+inline int ChannelState::links_remove_size() const {
+  return links_remove_.size();
+}
+inline void ChannelState::clear_links_remove() {
+  links_remove_.Clear();
+}
+inline ::google::protobuf::uint32 ChannelState::links_remove(int index) const {
+  return links_remove_.Get(index);
+}
+inline void ChannelState::set_links_remove(int index, ::google::protobuf::uint32 value) {
+  links_remove_.Set(index, value);
+}
+inline void ChannelState::add_links_remove(::google::protobuf::uint32 value) {
+  links_remove_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+ChannelState::links_remove() const {
+  return links_remove_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+ChannelState::mutable_links_remove() {
+  return &links_remove_;
+}
+
+// optional bool temporary = 8 [default = false];
+inline bool ChannelState::has_temporary() const {
+  return _has_bit(7);
+}
+inline void ChannelState::clear_temporary() {
+  temporary_ = false;
+  _clear_bit(7);
+}
+inline bool ChannelState::temporary() const {
+  return temporary_;
+}
+inline void ChannelState::set_temporary(bool value) {
+  _set_bit(7);
+  temporary_ = value;
+}
+
+// optional int32 position = 9 [default = 0];
+inline bool ChannelState::has_position() const {
+  return _has_bit(8);
+}
+inline void ChannelState::clear_position() {
+  position_ = 0;
+  _clear_bit(8);
+}
+inline ::google::protobuf::int32 ChannelState::position() const {
+  return position_;
+}
+inline void ChannelState::set_position(::google::protobuf::int32 value) {
+  _set_bit(8);
+  position_ = value;
+}
+
+// optional bytes description_hash = 10;
+inline bool ChannelState::has_description_hash() const {
+  return _has_bit(9);
+}
+inline void ChannelState::clear_description_hash() {
+  if (description_hash_ != &_default_description_hash_) {
+    description_hash_->clear();
+  }
+  _clear_bit(9);
+}
+inline const ::std::string& ChannelState::description_hash() const {
+  return *description_hash_;
+}
+inline void ChannelState::set_description_hash(const ::std::string& value) {
+  _set_bit(9);
+  if (description_hash_ == &_default_description_hash_) {
+    description_hash_ = new ::std::string;
+  }
+  description_hash_->assign(value);
+}
+inline void ChannelState::set_description_hash(const char* value) {
+  _set_bit(9);
+  if (description_hash_ == &_default_description_hash_) {
+    description_hash_ = new ::std::string;
+  }
+  description_hash_->assign(value);
+}
+inline void ChannelState::set_description_hash(const void* value, size_t size) {
+  _set_bit(9);
+  if (description_hash_ == &_default_description_hash_) {
+    description_hash_ = new ::std::string;
+  }
+  description_hash_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ChannelState::mutable_description_hash() {
+  _set_bit(9);
+  if (description_hash_ == &_default_description_hash_) {
+    description_hash_ = new ::std::string;
+  }
+  return description_hash_;
+}
+
+// -------------------------------------------------------------------
+
+// UserRemove
+
+// required uint32 session = 1;
+inline bool UserRemove::has_session() const {
+  return _has_bit(0);
+}
+inline void UserRemove::clear_session() {
+  session_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 UserRemove::session() const {
+  return session_;
+}
+inline void UserRemove::set_session(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  session_ = value;
+}
+
+// optional uint32 actor = 2;
+inline bool UserRemove::has_actor() const {
+  return _has_bit(1);
+}
+inline void UserRemove::clear_actor() {
+  actor_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 UserRemove::actor() const {
+  return actor_;
+}
+inline void UserRemove::set_actor(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  actor_ = value;
+}
+
+// optional string reason = 3;
+inline bool UserRemove::has_reason() const {
+  return _has_bit(2);
+}
+inline void UserRemove::clear_reason() {
+  if (reason_ != &_default_reason_) {
+    reason_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& UserRemove::reason() const {
+  return *reason_;
+}
+inline void UserRemove::set_reason(const ::std::string& value) {
+  _set_bit(2);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void UserRemove::set_reason(const char* value) {
+  _set_bit(2);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void UserRemove::set_reason(const char* value, size_t size) {
+  _set_bit(2);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserRemove::mutable_reason() {
+  _set_bit(2);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  return reason_;
+}
+
+// optional bool ban = 4;
+inline bool UserRemove::has_ban() const {
+  return _has_bit(3);
+}
+inline void UserRemove::clear_ban() {
+  ban_ = false;
+  _clear_bit(3);
+}
+inline bool UserRemove::ban() const {
+  return ban_;
+}
+inline void UserRemove::set_ban(bool value) {
+  _set_bit(3);
+  ban_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// UserState
+
+// optional uint32 session = 1;
+inline bool UserState::has_session() const {
+  return _has_bit(0);
+}
+inline void UserState::clear_session() {
+  session_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 UserState::session() const {
+  return session_;
+}
+inline void UserState::set_session(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  session_ = value;
+}
+
+// optional uint32 actor = 2;
+inline bool UserState::has_actor() const {
+  return _has_bit(1);
+}
+inline void UserState::clear_actor() {
+  actor_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 UserState::actor() const {
+  return actor_;
+}
+inline void UserState::set_actor(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  actor_ = value;
+}
+
+// optional string name = 3;
+inline bool UserState::has_name() const {
+  return _has_bit(2);
+}
+inline void UserState::clear_name() {
+  if (name_ != &_default_name_) {
+    name_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& UserState::name() const {
+  return *name_;
+}
+inline void UserState::set_name(const ::std::string& value) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void UserState::set_name(const char* value) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void UserState::set_name(const char* value, size_t size) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_name() {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  return name_;
+}
+
+// optional uint32 user_id = 4;
+inline bool UserState::has_user_id() const {
+  return _has_bit(3);
+}
+inline void UserState::clear_user_id() {
+  user_id_ = 0u;
+  _clear_bit(3);
+}
+inline ::google::protobuf::uint32 UserState::user_id() const {
+  return user_id_;
+}
+inline void UserState::set_user_id(::google::protobuf::uint32 value) {
+  _set_bit(3);
+  user_id_ = value;
+}
+
+// optional uint32 channel_id = 5;
+inline bool UserState::has_channel_id() const {
+  return _has_bit(4);
+}
+inline void UserState::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(4);
+}
+inline ::google::protobuf::uint32 UserState::channel_id() const {
+  return channel_id_;
+}
+inline void UserState::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(4);
+  channel_id_ = value;
+}
+
+// optional bool mute = 6;
+inline bool UserState::has_mute() const {
+  return _has_bit(5);
+}
+inline void UserState::clear_mute() {
+  mute_ = false;
+  _clear_bit(5);
+}
+inline bool UserState::mute() const {
+  return mute_;
+}
+inline void UserState::set_mute(bool value) {
+  _set_bit(5);
+  mute_ = value;
+}
+
+// optional bool deaf = 7;
+inline bool UserState::has_deaf() const {
+  return _has_bit(6);
+}
+inline void UserState::clear_deaf() {
+  deaf_ = false;
+  _clear_bit(6);
+}
+inline bool UserState::deaf() const {
+  return deaf_;
+}
+inline void UserState::set_deaf(bool value) {
+  _set_bit(6);
+  deaf_ = value;
+}
+
+// optional bool suppress = 8;
+inline bool UserState::has_suppress() const {
+  return _has_bit(7);
+}
+inline void UserState::clear_suppress() {
+  suppress_ = false;
+  _clear_bit(7);
+}
+inline bool UserState::suppress() const {
+  return suppress_;
+}
+inline void UserState::set_suppress(bool value) {
+  _set_bit(7);
+  suppress_ = value;
+}
+
+// optional bool self_mute = 9;
+inline bool UserState::has_self_mute() const {
+  return _has_bit(8);
+}
+inline void UserState::clear_self_mute() {
+  self_mute_ = false;
+  _clear_bit(8);
+}
+inline bool UserState::self_mute() const {
+  return self_mute_;
+}
+inline void UserState::set_self_mute(bool value) {
+  _set_bit(8);
+  self_mute_ = value;
+}
+
+// optional bool self_deaf = 10;
+inline bool UserState::has_self_deaf() const {
+  return _has_bit(9);
+}
+inline void UserState::clear_self_deaf() {
+  self_deaf_ = false;
+  _clear_bit(9);
+}
+inline bool UserState::self_deaf() const {
+  return self_deaf_;
+}
+inline void UserState::set_self_deaf(bool value) {
+  _set_bit(9);
+  self_deaf_ = value;
+}
+
+// optional bytes texture = 11;
+inline bool UserState::has_texture() const {
+  return _has_bit(10);
+}
+inline void UserState::clear_texture() {
+  if (texture_ != &_default_texture_) {
+    texture_->clear();
+  }
+  _clear_bit(10);
+}
+inline const ::std::string& UserState::texture() const {
+  return *texture_;
+}
+inline void UserState::set_texture(const ::std::string& value) {
+  _set_bit(10);
+  if (texture_ == &_default_texture_) {
+    texture_ = new ::std::string;
+  }
+  texture_->assign(value);
+}
+inline void UserState::set_texture(const char* value) {
+  _set_bit(10);
+  if (texture_ == &_default_texture_) {
+    texture_ = new ::std::string;
+  }
+  texture_->assign(value);
+}
+inline void UserState::set_texture(const void* value, size_t size) {
+  _set_bit(10);
+  if (texture_ == &_default_texture_) {
+    texture_ = new ::std::string;
+  }
+  texture_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_texture() {
+  _set_bit(10);
+  if (texture_ == &_default_texture_) {
+    texture_ = new ::std::string;
+  }
+  return texture_;
+}
+
+// optional bytes plugin_context = 12;
+inline bool UserState::has_plugin_context() const {
+  return _has_bit(11);
+}
+inline void UserState::clear_plugin_context() {
+  if (plugin_context_ != &_default_plugin_context_) {
+    plugin_context_->clear();
+  }
+  _clear_bit(11);
+}
+inline const ::std::string& UserState::plugin_context() const {
+  return *plugin_context_;
+}
+inline void UserState::set_plugin_context(const ::std::string& value) {
+  _set_bit(11);
+  if (plugin_context_ == &_default_plugin_context_) {
+    plugin_context_ = new ::std::string;
+  }
+  plugin_context_->assign(value);
+}
+inline void UserState::set_plugin_context(const char* value) {
+  _set_bit(11);
+  if (plugin_context_ == &_default_plugin_context_) {
+    plugin_context_ = new ::std::string;
+  }
+  plugin_context_->assign(value);
+}
+inline void UserState::set_plugin_context(const void* value, size_t size) {
+  _set_bit(11);
+  if (plugin_context_ == &_default_plugin_context_) {
+    plugin_context_ = new ::std::string;
+  }
+  plugin_context_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_plugin_context() {
+  _set_bit(11);
+  if (plugin_context_ == &_default_plugin_context_) {
+    plugin_context_ = new ::std::string;
+  }
+  return plugin_context_;
+}
+
+// optional string plugin_identity = 13;
+inline bool UserState::has_plugin_identity() const {
+  return _has_bit(12);
+}
+inline void UserState::clear_plugin_identity() {
+  if (plugin_identity_ != &_default_plugin_identity_) {
+    plugin_identity_->clear();
+  }
+  _clear_bit(12);
+}
+inline const ::std::string& UserState::plugin_identity() const {
+  return *plugin_identity_;
+}
+inline void UserState::set_plugin_identity(const ::std::string& value) {
+  _set_bit(12);
+  if (plugin_identity_ == &_default_plugin_identity_) {
+    plugin_identity_ = new ::std::string;
+  }
+  plugin_identity_->assign(value);
+}
+inline void UserState::set_plugin_identity(const char* value) {
+  _set_bit(12);
+  if (plugin_identity_ == &_default_plugin_identity_) {
+    plugin_identity_ = new ::std::string;
+  }
+  plugin_identity_->assign(value);
+}
+inline void UserState::set_plugin_identity(const char* value, size_t size) {
+  _set_bit(12);
+  if (plugin_identity_ == &_default_plugin_identity_) {
+    plugin_identity_ = new ::std::string;
+  }
+  plugin_identity_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_plugin_identity() {
+  _set_bit(12);
+  if (plugin_identity_ == &_default_plugin_identity_) {
+    plugin_identity_ = new ::std::string;
+  }
+  return plugin_identity_;
+}
+
+// optional string comment = 14;
+inline bool UserState::has_comment() const {
+  return _has_bit(13);
+}
+inline void UserState::clear_comment() {
+  if (comment_ != &_default_comment_) {
+    comment_->clear();
+  }
+  _clear_bit(13);
+}
+inline const ::std::string& UserState::comment() const {
+  return *comment_;
+}
+inline void UserState::set_comment(const ::std::string& value) {
+  _set_bit(13);
+  if (comment_ == &_default_comment_) {
+    comment_ = new ::std::string;
+  }
+  comment_->assign(value);
+}
+inline void UserState::set_comment(const char* value) {
+  _set_bit(13);
+  if (comment_ == &_default_comment_) {
+    comment_ = new ::std::string;
+  }
+  comment_->assign(value);
+}
+inline void UserState::set_comment(const char* value, size_t size) {
+  _set_bit(13);
+  if (comment_ == &_default_comment_) {
+    comment_ = new ::std::string;
+  }
+  comment_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_comment() {
+  _set_bit(13);
+  if (comment_ == &_default_comment_) {
+    comment_ = new ::std::string;
+  }
+  return comment_;
+}
+
+// optional string hash = 15;
+inline bool UserState::has_hash() const {
+  return _has_bit(14);
+}
+inline void UserState::clear_hash() {
+  if (hash_ != &_default_hash_) {
+    hash_->clear();
+  }
+  _clear_bit(14);
+}
+inline const ::std::string& UserState::hash() const {
+  return *hash_;
+}
+inline void UserState::set_hash(const ::std::string& value) {
+  _set_bit(14);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  hash_->assign(value);
+}
+inline void UserState::set_hash(const char* value) {
+  _set_bit(14);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  hash_->assign(value);
+}
+inline void UserState::set_hash(const char* value, size_t size) {
+  _set_bit(14);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  hash_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_hash() {
+  _set_bit(14);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  return hash_;
+}
+
+// optional bytes comment_hash = 16;
+inline bool UserState::has_comment_hash() const {
+  return _has_bit(15);
+}
+inline void UserState::clear_comment_hash() {
+  if (comment_hash_ != &_default_comment_hash_) {
+    comment_hash_->clear();
+  }
+  _clear_bit(15);
+}
+inline const ::std::string& UserState::comment_hash() const {
+  return *comment_hash_;
+}
+inline void UserState::set_comment_hash(const ::std::string& value) {
+  _set_bit(15);
+  if (comment_hash_ == &_default_comment_hash_) {
+    comment_hash_ = new ::std::string;
+  }
+  comment_hash_->assign(value);
+}
+inline void UserState::set_comment_hash(const char* value) {
+  _set_bit(15);
+  if (comment_hash_ == &_default_comment_hash_) {
+    comment_hash_ = new ::std::string;
+  }
+  comment_hash_->assign(value);
+}
+inline void UserState::set_comment_hash(const void* value, size_t size) {
+  _set_bit(15);
+  if (comment_hash_ == &_default_comment_hash_) {
+    comment_hash_ = new ::std::string;
+  }
+  comment_hash_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_comment_hash() {
+  _set_bit(15);
+  if (comment_hash_ == &_default_comment_hash_) {
+    comment_hash_ = new ::std::string;
+  }
+  return comment_hash_;
+}
+
+// optional bytes texture_hash = 17;
+inline bool UserState::has_texture_hash() const {
+  return _has_bit(16);
+}
+inline void UserState::clear_texture_hash() {
+  if (texture_hash_ != &_default_texture_hash_) {
+    texture_hash_->clear();
+  }
+  _clear_bit(16);
+}
+inline const ::std::string& UserState::texture_hash() const {
+  return *texture_hash_;
+}
+inline void UserState::set_texture_hash(const ::std::string& value) {
+  _set_bit(16);
+  if (texture_hash_ == &_default_texture_hash_) {
+    texture_hash_ = new ::std::string;
+  }
+  texture_hash_->assign(value);
+}
+inline void UserState::set_texture_hash(const char* value) {
+  _set_bit(16);
+  if (texture_hash_ == &_default_texture_hash_) {
+    texture_hash_ = new ::std::string;
+  }
+  texture_hash_->assign(value);
+}
+inline void UserState::set_texture_hash(const void* value, size_t size) {
+  _set_bit(16);
+  if (texture_hash_ == &_default_texture_hash_) {
+    texture_hash_ = new ::std::string;
+  }
+  texture_hash_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_texture_hash() {
+  _set_bit(16);
+  if (texture_hash_ == &_default_texture_hash_) {
+    texture_hash_ = new ::std::string;
+  }
+  return texture_hash_;
+}
+
+// optional bool priority_speaker = 18;
+inline bool UserState::has_priority_speaker() const {
+  return _has_bit(17);
+}
+inline void UserState::clear_priority_speaker() {
+  priority_speaker_ = false;
+  _clear_bit(17);
+}
+inline bool UserState::priority_speaker() const {
+  return priority_speaker_;
+}
+inline void UserState::set_priority_speaker(bool value) {
+  _set_bit(17);
+  priority_speaker_ = value;
+}
+
+// optional bool recording = 19;
+inline bool UserState::has_recording() const {
+  return _has_bit(18);
+}
+inline void UserState::clear_recording() {
+  recording_ = false;
+  _clear_bit(18);
+}
+inline bool UserState::recording() const {
+  return recording_;
+}
+inline void UserState::set_recording(bool value) {
+  _set_bit(18);
+  recording_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// BanList_BanEntry
+
+// required bytes address = 1;
+inline bool BanList_BanEntry::has_address() const {
+  return _has_bit(0);
+}
+inline void BanList_BanEntry::clear_address() {
+  if (address_ != &_default_address_) {
+    address_->clear();
+  }
+  _clear_bit(0);
+}
+inline const ::std::string& BanList_BanEntry::address() const {
+  return *address_;
+}
+inline void BanList_BanEntry::set_address(const ::std::string& value) {
+  _set_bit(0);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  address_->assign(value);
+}
+inline void BanList_BanEntry::set_address(const char* value) {
+  _set_bit(0);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  address_->assign(value);
+}
+inline void BanList_BanEntry::set_address(const void* value, size_t size) {
+  _set_bit(0);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  address_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* BanList_BanEntry::mutable_address() {
+  _set_bit(0);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  return address_;
+}
+
+// required uint32 mask = 2;
+inline bool BanList_BanEntry::has_mask() const {
+  return _has_bit(1);
+}
+inline void BanList_BanEntry::clear_mask() {
+  mask_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 BanList_BanEntry::mask() const {
+  return mask_;
+}
+inline void BanList_BanEntry::set_mask(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  mask_ = value;
+}
+
+// optional string name = 3;
+inline bool BanList_BanEntry::has_name() const {
+  return _has_bit(2);
+}
+inline void BanList_BanEntry::clear_name() {
+  if (name_ != &_default_name_) {
+    name_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& BanList_BanEntry::name() const {
+  return *name_;
+}
+inline void BanList_BanEntry::set_name(const ::std::string& value) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void BanList_BanEntry::set_name(const char* value) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void BanList_BanEntry::set_name(const char* value, size_t size) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* BanList_BanEntry::mutable_name() {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  return name_;
+}
+
+// optional string hash = 4;
+inline bool BanList_BanEntry::has_hash() const {
+  return _has_bit(3);
+}
+inline void BanList_BanEntry::clear_hash() {
+  if (hash_ != &_default_hash_) {
+    hash_->clear();
+  }
+  _clear_bit(3);
+}
+inline const ::std::string& BanList_BanEntry::hash() const {
+  return *hash_;
+}
+inline void BanList_BanEntry::set_hash(const ::std::string& value) {
+  _set_bit(3);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  hash_->assign(value);
+}
+inline void BanList_BanEntry::set_hash(const char* value) {
+  _set_bit(3);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  hash_->assign(value);
+}
+inline void BanList_BanEntry::set_hash(const char* value, size_t size) {
+  _set_bit(3);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  hash_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* BanList_BanEntry::mutable_hash() {
+  _set_bit(3);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  return hash_;
+}
+
+// optional string reason = 5;
+inline bool BanList_BanEntry::has_reason() const {
+  return _has_bit(4);
+}
+inline void BanList_BanEntry::clear_reason() {
+  if (reason_ != &_default_reason_) {
+    reason_->clear();
+  }
+  _clear_bit(4);
+}
+inline const ::std::string& BanList_BanEntry::reason() const {
+  return *reason_;
+}
+inline void BanList_BanEntry::set_reason(const ::std::string& value) {
+  _set_bit(4);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void BanList_BanEntry::set_reason(const char* value) {
+  _set_bit(4);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void BanList_BanEntry::set_reason(const char* value, size_t size) {
+  _set_bit(4);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* BanList_BanEntry::mutable_reason() {
+  _set_bit(4);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  return reason_;
+}
+
+// optional string start = 6;
+inline bool BanList_BanEntry::has_start() const {
+  return _has_bit(5);
+}
+inline void BanList_BanEntry::clear_start() {
+  if (start_ != &_default_start_) {
+    start_->clear();
+  }
+  _clear_bit(5);
+}
+inline const ::std::string& BanList_BanEntry::start() const {
+  return *start_;
+}
+inline void BanList_BanEntry::set_start(const ::std::string& value) {
+  _set_bit(5);
+  if (start_ == &_default_start_) {
+    start_ = new ::std::string;
+  }
+  start_->assign(value);
+}
+inline void BanList_BanEntry::set_start(const char* value) {
+  _set_bit(5);
+  if (start_ == &_default_start_) {
+    start_ = new ::std::string;
+  }
+  start_->assign(value);
+}
+inline void BanList_BanEntry::set_start(const char* value, size_t size) {
+  _set_bit(5);
+  if (start_ == &_default_start_) {
+    start_ = new ::std::string;
+  }
+  start_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* BanList_BanEntry::mutable_start() {
+  _set_bit(5);
+  if (start_ == &_default_start_) {
+    start_ = new ::std::string;
+  }
+  return start_;
+}
+
+// optional uint32 duration = 7;
+inline bool BanList_BanEntry::has_duration() const {
+  return _has_bit(6);
+}
+inline void BanList_BanEntry::clear_duration() {
+  duration_ = 0u;
+  _clear_bit(6);
+}
+inline ::google::protobuf::uint32 BanList_BanEntry::duration() const {
+  return duration_;
+}
+inline void BanList_BanEntry::set_duration(::google::protobuf::uint32 value) {
+  _set_bit(6);
+  duration_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// BanList
+
+// repeated .MumbleProto.BanList.BanEntry bans = 1;
+inline int BanList::bans_size() const {
+  return bans_.size();
+}
+inline void BanList::clear_bans() {
+  bans_.Clear();
+}
+inline const ::MumbleProto::BanList_BanEntry& BanList::bans(int index) const {
+  return bans_.Get(index);
+}
+inline ::MumbleProto::BanList_BanEntry* BanList::mutable_bans(int index) {
+  return bans_.Mutable(index);
+}
+inline ::MumbleProto::BanList_BanEntry* BanList::add_bans() {
+  return bans_.Add();
+}
+inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::BanList_BanEntry >&
+BanList::bans() const {
+  return bans_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::BanList_BanEntry >*
+BanList::mutable_bans() {
+  return &bans_;
+}
+
+// optional bool query = 2 [default = false];
+inline bool BanList::has_query() const {
+  return _has_bit(1);
+}
+inline void BanList::clear_query() {
+  query_ = false;
+  _clear_bit(1);
+}
+inline bool BanList::query() const {
+  return query_;
+}
+inline void BanList::set_query(bool value) {
+  _set_bit(1);
+  query_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// TextMessage
+
+// optional uint32 actor = 1;
+inline bool TextMessage::has_actor() const {
+  return _has_bit(0);
+}
+inline void TextMessage::clear_actor() {
+  actor_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 TextMessage::actor() const {
+  return actor_;
+}
+inline void TextMessage::set_actor(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  actor_ = value;
+}
+
+// repeated uint32 session = 2;
+inline int TextMessage::session_size() const {
+  return session_.size();
+}
+inline void TextMessage::clear_session() {
+  session_.Clear();
+}
+inline ::google::protobuf::uint32 TextMessage::session(int index) const {
+  return session_.Get(index);
+}
+inline void TextMessage::set_session(int index, ::google::protobuf::uint32 value) {
+  session_.Set(index, value);
+}
+inline void TextMessage::add_session(::google::protobuf::uint32 value) {
+  session_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+TextMessage::session() const {
+  return session_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+TextMessage::mutable_session() {
+  return &session_;
+}
+
+// repeated uint32 channel_id = 3;
+inline int TextMessage::channel_id_size() const {
+  return channel_id_.size();
+}
+inline void TextMessage::clear_channel_id() {
+  channel_id_.Clear();
+}
+inline ::google::protobuf::uint32 TextMessage::channel_id(int index) const {
+  return channel_id_.Get(index);
+}
+inline void TextMessage::set_channel_id(int index, ::google::protobuf::uint32 value) {
+  channel_id_.Set(index, value);
+}
+inline void TextMessage::add_channel_id(::google::protobuf::uint32 value) {
+  channel_id_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+TextMessage::channel_id() const {
+  return channel_id_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+TextMessage::mutable_channel_id() {
+  return &channel_id_;
+}
+
+// repeated uint32 tree_id = 4;
+inline int TextMessage::tree_id_size() const {
+  return tree_id_.size();
+}
+inline void TextMessage::clear_tree_id() {
+  tree_id_.Clear();
+}
+inline ::google::protobuf::uint32 TextMessage::tree_id(int index) const {
+  return tree_id_.Get(index);
+}
+inline void TextMessage::set_tree_id(int index, ::google::protobuf::uint32 value) {
+  tree_id_.Set(index, value);
+}
+inline void TextMessage::add_tree_id(::google::protobuf::uint32 value) {
+  tree_id_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+TextMessage::tree_id() const {
+  return tree_id_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+TextMessage::mutable_tree_id() {
+  return &tree_id_;
+}
+
+// required string message = 5;
+inline bool TextMessage::has_message() const {
+  return _has_bit(4);
+}
+inline void TextMessage::clear_message() {
+  if (message_ != &_default_message_) {
+    message_->clear();
+  }
+  _clear_bit(4);
+}
+inline const ::std::string& TextMessage::message() const {
+  return *message_;
+}
+inline void TextMessage::set_message(const ::std::string& value) {
+  _set_bit(4);
+  if (message_ == &_default_message_) {
+    message_ = new ::std::string;
+  }
+  message_->assign(value);
+}
+inline void TextMessage::set_message(const char* value) {
+  _set_bit(4);
+  if (message_ == &_default_message_) {
+    message_ = new ::std::string;
+  }
+  message_->assign(value);
+}
+inline void TextMessage::set_message(const char* value, size_t size) {
+  _set_bit(4);
+  if (message_ == &_default_message_) {
+    message_ = new ::std::string;
+  }
+  message_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* TextMessage::mutable_message() {
+  _set_bit(4);
+  if (message_ == &_default_message_) {
+    message_ = new ::std::string;
+  }
+  return message_;
+}
+
+// -------------------------------------------------------------------
+
+// PermissionDenied
+
+// optional uint32 permission = 1;
+inline bool PermissionDenied::has_permission() const {
+  return _has_bit(0);
+}
+inline void PermissionDenied::clear_permission() {
+  permission_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 PermissionDenied::permission() const {
+  return permission_;
+}
+inline void PermissionDenied::set_permission(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  permission_ = value;
+}
+
+// optional uint32 channel_id = 2;
+inline bool PermissionDenied::has_channel_id() const {
+  return _has_bit(1);
+}
+inline void PermissionDenied::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 PermissionDenied::channel_id() const {
+  return channel_id_;
+}
+inline void PermissionDenied::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  channel_id_ = value;
+}
+
+// optional uint32 session = 3;
+inline bool PermissionDenied::has_session() const {
+  return _has_bit(2);
+}
+inline void PermissionDenied::clear_session() {
+  session_ = 0u;
+  _clear_bit(2);
+}
+inline ::google::protobuf::uint32 PermissionDenied::session() const {
+  return session_;
+}
+inline void PermissionDenied::set_session(::google::protobuf::uint32 value) {
+  _set_bit(2);
+  session_ = value;
+}
+
+// optional string reason = 4;
+inline bool PermissionDenied::has_reason() const {
+  return _has_bit(3);
+}
+inline void PermissionDenied::clear_reason() {
+  if (reason_ != &_default_reason_) {
+    reason_->clear();
+  }
+  _clear_bit(3);
+}
+inline const ::std::string& PermissionDenied::reason() const {
+  return *reason_;
+}
+inline void PermissionDenied::set_reason(const ::std::string& value) {
+  _set_bit(3);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void PermissionDenied::set_reason(const char* value) {
+  _set_bit(3);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void PermissionDenied::set_reason(const char* value, size_t size) {
+  _set_bit(3);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* PermissionDenied::mutable_reason() {
+  _set_bit(3);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  return reason_;
+}
+
+// optional .MumbleProto.PermissionDenied.DenyType type = 5;
+inline bool PermissionDenied::has_type() const {
+  return _has_bit(4);
+}
+inline void PermissionDenied::clear_type() {
+  type_ = 0;
+  _clear_bit(4);
+}
+inline ::MumbleProto::PermissionDenied_DenyType PermissionDenied::type() const {
+  return static_cast< ::MumbleProto::PermissionDenied_DenyType >(type_);
+}
+inline void PermissionDenied::set_type(::MumbleProto::PermissionDenied_DenyType value) {
+  GOOGLE_DCHECK(::MumbleProto::PermissionDenied_DenyType_IsValid(value));
+  _set_bit(4);
+  type_ = value;
+}
+
+// optional string name = 6;
+inline bool PermissionDenied::has_name() const {
+  return _has_bit(5);
+}
+inline void PermissionDenied::clear_name() {
+  if (name_ != &_default_name_) {
+    name_->clear();
+  }
+  _clear_bit(5);
+}
+inline const ::std::string& PermissionDenied::name() const {
+  return *name_;
+}
+inline void PermissionDenied::set_name(const ::std::string& value) {
+  _set_bit(5);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void PermissionDenied::set_name(const char* value) {
+  _set_bit(5);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void PermissionDenied::set_name(const char* value, size_t size) {
+  _set_bit(5);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* PermissionDenied::mutable_name() {
+  _set_bit(5);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  return name_;
+}
+
+// -------------------------------------------------------------------
+
+// ACL_ChanGroup
+
+// required string name = 1;
+inline bool ACL_ChanGroup::has_name() const {
+  return _has_bit(0);
+}
+inline void ACL_ChanGroup::clear_name() {
+  if (name_ != &_default_name_) {
+    name_->clear();
+  }
+  _clear_bit(0);
+}
+inline const ::std::string& ACL_ChanGroup::name() const {
+  return *name_;
+}
+inline void ACL_ChanGroup::set_name(const ::std::string& value) {
+  _set_bit(0);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void ACL_ChanGroup::set_name(const char* value) {
+  _set_bit(0);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void ACL_ChanGroup::set_name(const char* value, size_t size) {
+  _set_bit(0);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ACL_ChanGroup::mutable_name() {
+  _set_bit(0);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  return name_;
+}
+
+// optional bool inherited = 2 [default = true];
+inline bool ACL_ChanGroup::has_inherited() const {
+  return _has_bit(1);
+}
+inline void ACL_ChanGroup::clear_inherited() {
+  inherited_ = true;
+  _clear_bit(1);
+}
+inline bool ACL_ChanGroup::inherited() const {
+  return inherited_;
+}
+inline void ACL_ChanGroup::set_inherited(bool value) {
+  _set_bit(1);
+  inherited_ = value;
+}
+
+// optional bool inherit = 3 [default = true];
+inline bool ACL_ChanGroup::has_inherit() const {
+  return _has_bit(2);
+}
+inline void ACL_ChanGroup::clear_inherit() {
+  inherit_ = true;
+  _clear_bit(2);
+}
+inline bool ACL_ChanGroup::inherit() const {
+  return inherit_;
+}
+inline void ACL_ChanGroup::set_inherit(bool value) {
+  _set_bit(2);
+  inherit_ = value;
+}
+
+// optional bool inheritable = 4 [default = true];
+inline bool ACL_ChanGroup::has_inheritable() const {
+  return _has_bit(3);
+}
+inline void ACL_ChanGroup::clear_inheritable() {
+  inheritable_ = true;
+  _clear_bit(3);
+}
+inline bool ACL_ChanGroup::inheritable() const {
+  return inheritable_;
+}
+inline void ACL_ChanGroup::set_inheritable(bool value) {
+  _set_bit(3);
+  inheritable_ = value;
+}
+
+// repeated uint32 add = 5;
+inline int ACL_ChanGroup::add_size() const {
+  return add_.size();
+}
+inline void ACL_ChanGroup::clear_add() {
+  add_.Clear();
+}
+inline ::google::protobuf::uint32 ACL_ChanGroup::add(int index) const {
+  return add_.Get(index);
+}
+inline void ACL_ChanGroup::set_add(int index, ::google::protobuf::uint32 value) {
+  add_.Set(index, value);
+}
+inline void ACL_ChanGroup::add_add(::google::protobuf::uint32 value) {
+  add_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+ACL_ChanGroup::add() const {
+  return add_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+ACL_ChanGroup::mutable_add() {
+  return &add_;
+}
+
+// repeated uint32 remove = 6;
+inline int ACL_ChanGroup::remove_size() const {
+  return remove_.size();
+}
+inline void ACL_ChanGroup::clear_remove() {
+  remove_.Clear();
+}
+inline ::google::protobuf::uint32 ACL_ChanGroup::remove(int index) const {
+  return remove_.Get(index);
+}
+inline void ACL_ChanGroup::set_remove(int index, ::google::protobuf::uint32 value) {
+  remove_.Set(index, value);
+}
+inline void ACL_ChanGroup::add_remove(::google::protobuf::uint32 value) {
+  remove_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+ACL_ChanGroup::remove() const {
+  return remove_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+ACL_ChanGroup::mutable_remove() {
+  return &remove_;
+}
+
+// repeated uint32 inherited_members = 7;
+inline int ACL_ChanGroup::inherited_members_size() const {
+  return inherited_members_.size();
+}
+inline void ACL_ChanGroup::clear_inherited_members() {
+  inherited_members_.Clear();
+}
+inline ::google::protobuf::uint32 ACL_ChanGroup::inherited_members(int index) const {
+  return inherited_members_.Get(index);
+}
+inline void ACL_ChanGroup::set_inherited_members(int index, ::google::protobuf::uint32 value) {
+  inherited_members_.Set(index, value);
+}
+inline void ACL_ChanGroup::add_inherited_members(::google::protobuf::uint32 value) {
+  inherited_members_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+ACL_ChanGroup::inherited_members() const {
+  return inherited_members_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+ACL_ChanGroup::mutable_inherited_members() {
+  return &inherited_members_;
+}
+
+// -------------------------------------------------------------------
+
+// ACL_ChanACL
+
+// optional bool apply_here = 1 [default = true];
+inline bool ACL_ChanACL::has_apply_here() const {
+  return _has_bit(0);
+}
+inline void ACL_ChanACL::clear_apply_here() {
+  apply_here_ = true;
+  _clear_bit(0);
+}
+inline bool ACL_ChanACL::apply_here() const {
+  return apply_here_;
+}
+inline void ACL_ChanACL::set_apply_here(bool value) {
+  _set_bit(0);
+  apply_here_ = value;
+}
+
+// optional bool apply_subs = 2 [default = true];
+inline bool ACL_ChanACL::has_apply_subs() const {
+  return _has_bit(1);
+}
+inline void ACL_ChanACL::clear_apply_subs() {
+  apply_subs_ = true;
+  _clear_bit(1);
+}
+inline bool ACL_ChanACL::apply_subs() const {
+  return apply_subs_;
+}
+inline void ACL_ChanACL::set_apply_subs(bool value) {
+  _set_bit(1);
+  apply_subs_ = value;
+}
+
+// optional bool inherited = 3 [default = true];
+inline bool ACL_ChanACL::has_inherited() const {
+  return _has_bit(2);
+}
+inline void ACL_ChanACL::clear_inherited() {
+  inherited_ = true;
+  _clear_bit(2);
+}
+inline bool ACL_ChanACL::inherited() const {
+  return inherited_;
+}
+inline void ACL_ChanACL::set_inherited(bool value) {
+  _set_bit(2);
+  inherited_ = value;
+}
+
+// optional uint32 user_id = 4;
+inline bool ACL_ChanACL::has_user_id() const {
+  return _has_bit(3);
+}
+inline void ACL_ChanACL::clear_user_id() {
+  user_id_ = 0u;
+  _clear_bit(3);
+}
+inline ::google::protobuf::uint32 ACL_ChanACL::user_id() const {
+  return user_id_;
+}
+inline void ACL_ChanACL::set_user_id(::google::protobuf::uint32 value) {
+  _set_bit(3);
+  user_id_ = value;
+}
+
+// optional string group = 5;
+inline bool ACL_ChanACL::has_group() const {
+  return _has_bit(4);
+}
+inline void ACL_ChanACL::clear_group() {
+  if (group_ != &_default_group_) {
+    group_->clear();
+  }
+  _clear_bit(4);
+}
+inline const ::std::string& ACL_ChanACL::group() const {
+  return *group_;
+}
+inline void ACL_ChanACL::set_group(const ::std::string& value) {
+  _set_bit(4);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  group_->assign(value);
+}
+inline void ACL_ChanACL::set_group(const char* value) {
+  _set_bit(4);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  group_->assign(value);
+}
+inline void ACL_ChanACL::set_group(const char* value, size_t size) {
+  _set_bit(4);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  group_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ACL_ChanACL::mutable_group() {
+  _set_bit(4);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  return group_;
+}
+
+// optional uint32 grant = 6;
+inline bool ACL_ChanACL::has_grant() const {
+  return _has_bit(5);
+}
+inline void ACL_ChanACL::clear_grant() {
+  grant_ = 0u;
+  _clear_bit(5);
+}
+inline ::google::protobuf::uint32 ACL_ChanACL::grant() const {
+  return grant_;
+}
+inline void ACL_ChanACL::set_grant(::google::protobuf::uint32 value) {
+  _set_bit(5);
+  grant_ = value;
+}
+
+// optional uint32 deny = 7;
+inline bool ACL_ChanACL::has_deny() const {
+  return _has_bit(6);
+}
+inline void ACL_ChanACL::clear_deny() {
+  deny_ = 0u;
+  _clear_bit(6);
+}
+inline ::google::protobuf::uint32 ACL_ChanACL::deny() const {
+  return deny_;
+}
+inline void ACL_ChanACL::set_deny(::google::protobuf::uint32 value) {
+  _set_bit(6);
+  deny_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// ACL
+
+// required uint32 channel_id = 1;
+inline bool ACL::has_channel_id() const {
+  return _has_bit(0);
+}
+inline void ACL::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 ACL::channel_id() const {
+  return channel_id_;
+}
+inline void ACL::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  channel_id_ = value;
+}
+
+// optional bool inherit_acls = 2 [default = true];
+inline bool ACL::has_inherit_acls() const {
+  return _has_bit(1);
+}
+inline void ACL::clear_inherit_acls() {
+  inherit_acls_ = true;
+  _clear_bit(1);
+}
+inline bool ACL::inherit_acls() const {
+  return inherit_acls_;
+}
+inline void ACL::set_inherit_acls(bool value) {
+  _set_bit(1);
+  inherit_acls_ = value;
+}
+
+// repeated .MumbleProto.ACL.ChanGroup groups = 3;
+inline int ACL::groups_size() const {
+  return groups_.size();
+}
+inline void ACL::clear_groups() {
+  groups_.Clear();
+}
+inline const ::MumbleProto::ACL_ChanGroup& ACL::groups(int index) const {
+  return groups_.Get(index);
+}
+inline ::MumbleProto::ACL_ChanGroup* ACL::mutable_groups(int index) {
+  return groups_.Mutable(index);
+}
+inline ::MumbleProto::ACL_ChanGroup* ACL::add_groups() {
+  return groups_.Add();
+}
+inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanGroup >&
+ACL::groups() const {
+  return groups_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanGroup >*
+ACL::mutable_groups() {
+  return &groups_;
+}
+
+// repeated .MumbleProto.ACL.ChanACL acls = 4;
+inline int ACL::acls_size() const {
+  return acls_.size();
+}
+inline void ACL::clear_acls() {
+  acls_.Clear();
+}
+inline const ::MumbleProto::ACL_ChanACL& ACL::acls(int index) const {
+  return acls_.Get(index);
+}
+inline ::MumbleProto::ACL_ChanACL* ACL::mutable_acls(int index) {
+  return acls_.Mutable(index);
+}
+inline ::MumbleProto::ACL_ChanACL* ACL::add_acls() {
+  return acls_.Add();
+}
+inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanACL >&
+ACL::acls() const {
+  return acls_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanACL >*
+ACL::mutable_acls() {
+  return &acls_;
+}
+
+// optional bool query = 5 [default = false];
+inline bool ACL::has_query() const {
+  return _has_bit(4);
+}
+inline void ACL::clear_query() {
+  query_ = false;
+  _clear_bit(4);
+}
+inline bool ACL::query() const {
+  return query_;
+}
+inline void ACL::set_query(bool value) {
+  _set_bit(4);
+  query_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// QueryUsers
+
+// repeated uint32 ids = 1;
+inline int QueryUsers::ids_size() const {
+  return ids_.size();
+}
+inline void QueryUsers::clear_ids() {
+  ids_.Clear();
+}
+inline ::google::protobuf::uint32 QueryUsers::ids(int index) const {
+  return ids_.Get(index);
+}
+inline void QueryUsers::set_ids(int index, ::google::protobuf::uint32 value) {
+  ids_.Set(index, value);
+}
+inline void QueryUsers::add_ids(::google::protobuf::uint32 value) {
+  ids_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+QueryUsers::ids() const {
+  return ids_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+QueryUsers::mutable_ids() {
+  return &ids_;
+}
+
+// repeated string names = 2;
+inline int QueryUsers::names_size() const {
+  return names_.size();
+}
+inline void QueryUsers::clear_names() {
+  names_.Clear();
+}
+inline const ::std::string& QueryUsers::names(int index) const {
+  return names_.Get(index);
+}
+inline ::std::string* QueryUsers::mutable_names(int index) {
+  return names_.Mutable(index);
+}
+inline void QueryUsers::set_names(int index, const ::std::string& value) {
+  names_.Mutable(index)->assign(value);
+}
+inline void QueryUsers::set_names(int index, const char* value) {
+  names_.Mutable(index)->assign(value);
+}
+inline void QueryUsers::set_names(int index, const char* value, size_t size) {
+  names_.Mutable(index)->assign(
+    reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* QueryUsers::add_names() {
+  return names_.Add();
+}
+inline void QueryUsers::add_names(const ::std::string& value) {
+  names_.Add()->assign(value);
+}
+inline void QueryUsers::add_names(const char* value) {
+  names_.Add()->assign(value);
+}
+inline void QueryUsers::add_names(const char* value, size_t size) {
+  names_.Add()->assign(reinterpret_cast<const char*>(value), size);
+}
+inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
+QueryUsers::names() const {
+  return names_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::std::string>*
+QueryUsers::mutable_names() {
+  return &names_;
+}
+
+// -------------------------------------------------------------------
+
+// CryptSetup
+
+// optional bytes key = 1;
+inline bool CryptSetup::has_key() const {
+  return _has_bit(0);
+}
+inline void CryptSetup::clear_key() {
+  if (key_ != &_default_key_) {
+    key_->clear();
+  }
+  _clear_bit(0);
+}
+inline const ::std::string& CryptSetup::key() const {
+  return *key_;
+}
+inline void CryptSetup::set_key(const ::std::string& value) {
+  _set_bit(0);
+  if (key_ == &_default_key_) {
+    key_ = new ::std::string;
+  }
+  key_->assign(value);
+}
+inline void CryptSetup::set_key(const char* value) {
+  _set_bit(0);
+  if (key_ == &_default_key_) {
+    key_ = new ::std::string;
+  }
+  key_->assign(value);
+}
+inline void CryptSetup::set_key(const void* value, size_t size) {
+  _set_bit(0);
+  if (key_ == &_default_key_) {
+    key_ = new ::std::string;
+  }
+  key_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* CryptSetup::mutable_key() {
+  _set_bit(0);
+  if (key_ == &_default_key_) {
+    key_ = new ::std::string;
+  }
+  return key_;
+}
+
+// optional bytes client_nonce = 2;
+inline bool CryptSetup::has_client_nonce() const {
+  return _has_bit(1);
+}
+inline void CryptSetup::clear_client_nonce() {
+  if (client_nonce_ != &_default_client_nonce_) {
+    client_nonce_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& CryptSetup::client_nonce() const {
+  return *client_nonce_;
+}
+inline void CryptSetup::set_client_nonce(const ::std::string& value) {
+  _set_bit(1);
+  if (client_nonce_ == &_default_client_nonce_) {
+    client_nonce_ = new ::std::string;
+  }
+  client_nonce_->assign(value);
+}
+inline void CryptSetup::set_client_nonce(const char* value) {
+  _set_bit(1);
+  if (client_nonce_ == &_default_client_nonce_) {
+    client_nonce_ = new ::std::string;
+  }
+  client_nonce_->assign(value);
+}
+inline void CryptSetup::set_client_nonce(const void* value, size_t size) {
+  _set_bit(1);
+  if (client_nonce_ == &_default_client_nonce_) {
+    client_nonce_ = new ::std::string;
+  }
+  client_nonce_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* CryptSetup::mutable_client_nonce() {
+  _set_bit(1);
+  if (client_nonce_ == &_default_client_nonce_) {
+    client_nonce_ = new ::std::string;
+  }
+  return client_nonce_;
+}
+
+// optional bytes server_nonce = 3;
+inline bool CryptSetup::has_server_nonce() const {
+  return _has_bit(2);
+}
+inline void CryptSetup::clear_server_nonce() {
+  if (server_nonce_ != &_default_server_nonce_) {
+    server_nonce_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& CryptSetup::server_nonce() const {
+  return *server_nonce_;
+}
+inline void CryptSetup::set_server_nonce(const ::std::string& value) {
+  _set_bit(2);
+  if (server_nonce_ == &_default_server_nonce_) {
+    server_nonce_ = new ::std::string;
+  }
+  server_nonce_->assign(value);
+}
+inline void CryptSetup::set_server_nonce(const char* value) {
+  _set_bit(2);
+  if (server_nonce_ == &_default_server_nonce_) {
+    server_nonce_ = new ::std::string;
+  }
+  server_nonce_->assign(value);
+}
+inline void CryptSetup::set_server_nonce(const void* value, size_t size) {
+  _set_bit(2);
+  if (server_nonce_ == &_default_server_nonce_) {
+    server_nonce_ = new ::std::string;
+  }
+  server_nonce_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* CryptSetup::mutable_server_nonce() {
+  _set_bit(2);
+  if (server_nonce_ == &_default_server_nonce_) {
+    server_nonce_ = new ::std::string;
+  }
+  return server_nonce_;
+}
+
+// -------------------------------------------------------------------
+
+// ContextActionAdd
+
+// required string action = 1;
+inline bool ContextActionAdd::has_action() const {
+  return _has_bit(0);
+}
+inline void ContextActionAdd::clear_action() {
+  if (action_ != &_default_action_) {
+    action_->clear();
+  }
+  _clear_bit(0);
+}
+inline const ::std::string& ContextActionAdd::action() const {
+  return *action_;
+}
+inline void ContextActionAdd::set_action(const ::std::string& value) {
+  _set_bit(0);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  action_->assign(value);
+}
+inline void ContextActionAdd::set_action(const char* value) {
+  _set_bit(0);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  action_->assign(value);
+}
+inline void ContextActionAdd::set_action(const char* value, size_t size) {
+  _set_bit(0);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  action_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ContextActionAdd::mutable_action() {
+  _set_bit(0);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  return action_;
+}
+
+// required string text = 2;
+inline bool ContextActionAdd::has_text() const {
+  return _has_bit(1);
+}
+inline void ContextActionAdd::clear_text() {
+  if (text_ != &_default_text_) {
+    text_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& ContextActionAdd::text() const {
+  return *text_;
+}
+inline void ContextActionAdd::set_text(const ::std::string& value) {
+  _set_bit(1);
+  if (text_ == &_default_text_) {
+    text_ = new ::std::string;
+  }
+  text_->assign(value);
+}
+inline void ContextActionAdd::set_text(const char* value) {
+  _set_bit(1);
+  if (text_ == &_default_text_) {
+    text_ = new ::std::string;
+  }
+  text_->assign(value);
+}
+inline void ContextActionAdd::set_text(const char* value, size_t size) {
+  _set_bit(1);
+  if (text_ == &_default_text_) {
+    text_ = new ::std::string;
+  }
+  text_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ContextActionAdd::mutable_text() {
+  _set_bit(1);
+  if (text_ == &_default_text_) {
+    text_ = new ::std::string;
+  }
+  return text_;
+}
+
+// optional uint32 context = 3;
+inline bool ContextActionAdd::has_context() const {
+  return _has_bit(2);
+}
+inline void ContextActionAdd::clear_context() {
+  context_ = 0u;
+  _clear_bit(2);
+}
+inline ::google::protobuf::uint32 ContextActionAdd::context() const {
+  return context_;
+}
+inline void ContextActionAdd::set_context(::google::protobuf::uint32 value) {
+  _set_bit(2);
+  context_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// ContextAction
+
+// optional uint32 session = 1;
+inline bool ContextAction::has_session() const {
+  return _has_bit(0);
+}
+inline void ContextAction::clear_session() {
+  session_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 ContextAction::session() const {
+  return session_;
+}
+inline void ContextAction::set_session(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  session_ = value;
+}
+
+// optional uint32 channel_id = 2;
+inline bool ContextAction::has_channel_id() const {
+  return _has_bit(1);
+}
+inline void ContextAction::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 ContextAction::channel_id() const {
+  return channel_id_;
+}
+inline void ContextAction::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  channel_id_ = value;
+}
+
+// required string action = 3;
+inline bool ContextAction::has_action() const {
+  return _has_bit(2);
+}
+inline void ContextAction::clear_action() {
+  if (action_ != &_default_action_) {
+    action_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& ContextAction::action() const {
+  return *action_;
+}
+inline void ContextAction::set_action(const ::std::string& value) {
+  _set_bit(2);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  action_->assign(value);
+}
+inline void ContextAction::set_action(const char* value) {
+  _set_bit(2);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  action_->assign(value);
+}
+inline void ContextAction::set_action(const char* value, size_t size) {
+  _set_bit(2);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  action_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ContextAction::mutable_action() {
+  _set_bit(2);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  return action_;
+}
+
+// -------------------------------------------------------------------
+
+// UserList_User
+
+// required uint32 user_id = 1;
+inline bool UserList_User::has_user_id() const {
+  return _has_bit(0);
+}
+inline void UserList_User::clear_user_id() {
+  user_id_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 UserList_User::user_id() const {
+  return user_id_;
+}
+inline void UserList_User::set_user_id(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  user_id_ = value;
+}
+
+// optional string name = 2;
+inline bool UserList_User::has_name() const {
+  return _has_bit(1);
+}
+inline void UserList_User::clear_name() {
+  if (name_ != &_default_name_) {
+    name_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& UserList_User::name() const {
+  return *name_;
+}
+inline void UserList_User::set_name(const ::std::string& value) {
+  _set_bit(1);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void UserList_User::set_name(const char* value) {
+  _set_bit(1);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void UserList_User::set_name(const char* value, size_t size) {
+  _set_bit(1);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserList_User::mutable_name() {
+  _set_bit(1);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  return name_;
+}
+
+// -------------------------------------------------------------------
+
+// UserList
+
+// repeated .MumbleProto.UserList.User users = 1;
+inline int UserList::users_size() const {
+  return users_.size();
+}
+inline void UserList::clear_users() {
+  users_.Clear();
+}
+inline const ::MumbleProto::UserList_User& UserList::users(int index) const {
+  return users_.Get(index);
+}
+inline ::MumbleProto::UserList_User* UserList::mutable_users(int index) {
+  return users_.Mutable(index);
+}
+inline ::MumbleProto::UserList_User* UserList::add_users() {
+  return users_.Add();
+}
+inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::UserList_User >&
+UserList::users() const {
+  return users_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::UserList_User >*
+UserList::mutable_users() {
+  return &users_;
+}
+
+// -------------------------------------------------------------------
+
+// VoiceTarget_Target
+
+// repeated uint32 session = 1;
+inline int VoiceTarget_Target::session_size() const {
+  return session_.size();
+}
+inline void VoiceTarget_Target::clear_session() {
+  session_.Clear();
+}
+inline ::google::protobuf::uint32 VoiceTarget_Target::session(int index) const {
+  return session_.Get(index);
+}
+inline void VoiceTarget_Target::set_session(int index, ::google::protobuf::uint32 value) {
+  session_.Set(index, value);
+}
+inline void VoiceTarget_Target::add_session(::google::protobuf::uint32 value) {
+  session_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+VoiceTarget_Target::session() const {
+  return session_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+VoiceTarget_Target::mutable_session() {
+  return &session_;
+}
+
+// optional uint32 channel_id = 2;
+inline bool VoiceTarget_Target::has_channel_id() const {
+  return _has_bit(1);
+}
+inline void VoiceTarget_Target::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 VoiceTarget_Target::channel_id() const {
+  return channel_id_;
+}
+inline void VoiceTarget_Target::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  channel_id_ = value;
+}
+
+// optional string group = 3;
+inline bool VoiceTarget_Target::has_group() const {
+  return _has_bit(2);
+}
+inline void VoiceTarget_Target::clear_group() {
+  if (group_ != &_default_group_) {
+    group_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& VoiceTarget_Target::group() const {
+  return *group_;
+}
+inline void VoiceTarget_Target::set_group(const ::std::string& value) {
+  _set_bit(2);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  group_->assign(value);
+}
+inline void VoiceTarget_Target::set_group(const char* value) {
+  _set_bit(2);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  group_->assign(value);
+}
+inline void VoiceTarget_Target::set_group(const char* value, size_t size) {
+  _set_bit(2);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  group_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* VoiceTarget_Target::mutable_group() {
+  _set_bit(2);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  return group_;
+}
+
+// optional bool links = 4 [default = false];
+inline bool VoiceTarget_Target::has_links() const {
+  return _has_bit(3);
+}
+inline void VoiceTarget_Target::clear_links() {
+  links_ = false;
+  _clear_bit(3);
+}
+inline bool VoiceTarget_Target::links() const {
+  return links_;
+}
+inline void VoiceTarget_Target::set_links(bool value) {
+  _set_bit(3);
+  links_ = value;
+}
+
+// optional bool children = 5 [default = false];
+inline bool VoiceTarget_Target::has_children() const {
+  return _has_bit(4);
+}
+inline void VoiceTarget_Target::clear_children() {
+  children_ = false;
+  _clear_bit(4);
+}
+inline bool VoiceTarget_Target::children() const {
+  return children_;
+}
+inline void VoiceTarget_Target::set_children(bool value) {
+  _set_bit(4);
+  children_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// VoiceTarget
+
+// optional uint32 id = 1;
+inline bool VoiceTarget::has_id() const {
+  return _has_bit(0);
+}
+inline void VoiceTarget::clear_id() {
+  id_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 VoiceTarget::id() const {
+  return id_;
+}
+inline void VoiceTarget::set_id(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  id_ = value;
+}
+
+// repeated .MumbleProto.VoiceTarget.Target targets = 2;
+inline int VoiceTarget::targets_size() const {
+  return targets_.size();
+}
+inline void VoiceTarget::clear_targets() {
+  targets_.Clear();
+}
+inline const ::MumbleProto::VoiceTarget_Target& VoiceTarget::targets(int index) const {
+  return targets_.Get(index);
+}
+inline ::MumbleProto::VoiceTarget_Target* VoiceTarget::mutable_targets(int index) {
+  return targets_.Mutable(index);
+}
+inline ::MumbleProto::VoiceTarget_Target* VoiceTarget::add_targets() {
+  return targets_.Add();
+}
+inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::VoiceTarget_Target >&
+VoiceTarget::targets() const {
+  return targets_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::VoiceTarget_Target >*
+VoiceTarget::mutable_targets() {
+  return &targets_;
+}
+
+// -------------------------------------------------------------------
+
+// PermissionQuery
+
+// optional uint32 channel_id = 1;
+inline bool PermissionQuery::has_channel_id() const {
+  return _has_bit(0);
+}
+inline void PermissionQuery::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 PermissionQuery::channel_id() const {
+  return channel_id_;
+}
+inline void PermissionQuery::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  channel_id_ = value;
+}
+
+// optional uint32 permissions = 2;
+inline bool PermissionQuery::has_permissions() const {
+  return _has_bit(1);
+}
+inline void PermissionQuery::clear_permissions() {
+  permissions_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 PermissionQuery::permissions() const {
+  return permissions_;
+}
+inline void PermissionQuery::set_permissions(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  permissions_ = value;
+}
+
+// optional bool flush = 3 [default = false];
+inline bool PermissionQuery::has_flush() const {
+  return _has_bit(2);
+}
+inline void PermissionQuery::clear_flush() {
+  flush_ = false;
+  _clear_bit(2);
+}
+inline bool PermissionQuery::flush() const {
+  return flush_;
+}
+inline void PermissionQuery::set_flush(bool value) {
+  _set_bit(2);
+  flush_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// CodecVersion
+
+// required int32 alpha = 1;
+inline bool CodecVersion::has_alpha() const {
+  return _has_bit(0);
+}
+inline void CodecVersion::clear_alpha() {
+  alpha_ = 0;
+  _clear_bit(0);
+}
+inline ::google::protobuf::int32 CodecVersion::alpha() const {
+  return alpha_;
+}
+inline void CodecVersion::set_alpha(::google::protobuf::int32 value) {
+  _set_bit(0);
+  alpha_ = value;
+}
+
+// required int32 beta = 2;
+inline bool CodecVersion::has_beta() const {
+  return _has_bit(1);
+}
+inline void CodecVersion::clear_beta() {
+  beta_ = 0;
+  _clear_bit(1);
+}
+inline ::google::protobuf::int32 CodecVersion::beta() const {
+  return beta_;
+}
+inline void CodecVersion::set_beta(::google::protobuf::int32 value) {
+  _set_bit(1);
+  beta_ = value;
+}
+
+// required bool prefer_alpha = 3 [default = true];
+inline bool CodecVersion::has_prefer_alpha() const {
+  return _has_bit(2);
+}
+inline void CodecVersion::clear_prefer_alpha() {
+  prefer_alpha_ = true;
+  _clear_bit(2);
+}
+inline bool CodecVersion::prefer_alpha() const {
+  return prefer_alpha_;
+}
+inline void CodecVersion::set_prefer_alpha(bool value) {
+  _set_bit(2);
+  prefer_alpha_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// UserStats_Stats
+
+// optional uint32 good = 1;
+inline bool UserStats_Stats::has_good() const {
+  return _has_bit(0);
+}
+inline void UserStats_Stats::clear_good() {
+  good_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 UserStats_Stats::good() const {
+  return good_;
+}
+inline void UserStats_Stats::set_good(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  good_ = value;
+}
+
+// optional uint32 late = 2;
+inline bool UserStats_Stats::has_late() const {
+  return _has_bit(1);
+}
+inline void UserStats_Stats::clear_late() {
+  late_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 UserStats_Stats::late() const {
+  return late_;
+}
+inline void UserStats_Stats::set_late(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  late_ = value;
+}
+
+// optional uint32 lost = 3;
+inline bool UserStats_Stats::has_lost() const {
+  return _has_bit(2);
+}
+inline void UserStats_Stats::clear_lost() {
+  lost_ = 0u;
+  _clear_bit(2);
+}
+inline ::google::protobuf::uint32 UserStats_Stats::lost() const {
+  return lost_;
+}
+inline void UserStats_Stats::set_lost(::google::protobuf::uint32 value) {
+  _set_bit(2);
+  lost_ = value;
+}
+
+// optional uint32 resync = 4;
+inline bool UserStats_Stats::has_resync() const {
+  return _has_bit(3);
+}
+inline void UserStats_Stats::clear_resync() {
+  resync_ = 0u;
+  _clear_bit(3);
+}
+inline ::google::protobuf::uint32 UserStats_Stats::resync() const {
+  return resync_;
+}
+inline void UserStats_Stats::set_resync(::google::protobuf::uint32 value) {
+  _set_bit(3);
+  resync_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// UserStats
+
+// optional uint32 session = 1;
+inline bool UserStats::has_session() const {
+  return _has_bit(0);
+}
+inline void UserStats::clear_session() {
+  session_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 UserStats::session() const {
+  return session_;
+}
+inline void UserStats::set_session(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  session_ = value;
+}
+
+// optional bool stats_only = 2 [default = false];
+inline bool UserStats::has_stats_only() const {
+  return _has_bit(1);
+}
+inline void UserStats::clear_stats_only() {
+  stats_only_ = false;
+  _clear_bit(1);
+}
+inline bool UserStats::stats_only() const {
+  return stats_only_;
+}
+inline void UserStats::set_stats_only(bool value) {
+  _set_bit(1);
+  stats_only_ = value;
+}
+
+// repeated bytes certificates = 3;
+inline int UserStats::certificates_size() const {
+  return certificates_.size();
+}
+inline void UserStats::clear_certificates() {
+  certificates_.Clear();
+}
+inline const ::std::string& UserStats::certificates(int index) const {
+  return certificates_.Get(index);
+}
+inline ::std::string* UserStats::mutable_certificates(int index) {
+  return certificates_.Mutable(index);
+}
+inline void UserStats::set_certificates(int index, const ::std::string& value) {
+  certificates_.Mutable(index)->assign(value);
+}
+inline void UserStats::set_certificates(int index, const char* value) {
+  certificates_.Mutable(index)->assign(value);
+}
+inline void UserStats::set_certificates(int index, const void* value, size_t size) {
+  certificates_.Mutable(index)->assign(
+    reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserStats::add_certificates() {
+  return certificates_.Add();
+}
+inline void UserStats::add_certificates(const ::std::string& value) {
+  certificates_.Add()->assign(value);
+}
+inline void UserStats::add_certificates(const char* value) {
+  certificates_.Add()->assign(value);
+}
+inline void UserStats::add_certificates(const void* value, size_t size) {
+  certificates_.Add()->assign(reinterpret_cast<const char*>(value), size);
+}
+inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
+UserStats::certificates() const {
+  return certificates_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::std::string>*
+UserStats::mutable_certificates() {
+  return &certificates_;
+}
+
+// optional .MumbleProto.UserStats.Stats from_client = 4;
+inline bool UserStats::has_from_client() const {
+  return _has_bit(3);
+}
+inline void UserStats::clear_from_client() {
+  if (from_client_ != NULL) from_client_->::MumbleProto::UserStats_Stats::Clear();
+  _clear_bit(3);
+}
+inline const ::MumbleProto::UserStats_Stats& UserStats::from_client() const {
+  return from_client_ != NULL ? *from_client_ : *default_instance_->from_client_;
+}
+inline ::MumbleProto::UserStats_Stats* UserStats::mutable_from_client() {
+  _set_bit(3);
+  if (from_client_ == NULL) from_client_ = new ::MumbleProto::UserStats_Stats;
+  return from_client_;
+}
+
+// optional .MumbleProto.UserStats.Stats from_server = 5;
+inline bool UserStats::has_from_server() const {
+  return _has_bit(4);
+}
+inline void UserStats::clear_from_server() {
+  if (from_server_ != NULL) from_server_->::MumbleProto::UserStats_Stats::Clear();
+  _clear_bit(4);
+}
+inline const ::MumbleProto::UserStats_Stats& UserStats::from_server() const {
+  return from_server_ != NULL ? *from_server_ : *default_instance_->from_server_;
+}
+inline ::MumbleProto::UserStats_Stats* UserStats::mutable_from_server() {
+  _set_bit(4);
+  if (from_server_ == NULL) from_server_ = new ::MumbleProto::UserStats_Stats;
+  return from_server_;
+}
+
+// optional uint32 udp_packets = 6;
+inline bool UserStats::has_udp_packets() const {
+  return _has_bit(5);
+}
+inline void UserStats::clear_udp_packets() {
+  udp_packets_ = 0u;
+  _clear_bit(5);
+}
+inline ::google::protobuf::uint32 UserStats::udp_packets() const {
+  return udp_packets_;
+}
+inline void UserStats::set_udp_packets(::google::protobuf::uint32 value) {
+  _set_bit(5);
+  udp_packets_ = value;
+}
+
+// optional uint32 tcp_packets = 7;
+inline bool UserStats::has_tcp_packets() const {
+  return _has_bit(6);
+}
+inline void UserStats::clear_tcp_packets() {
+  tcp_packets_ = 0u;
+  _clear_bit(6);
+}
+inline ::google::protobuf::uint32 UserStats::tcp_packets() const {
+  return tcp_packets_;
+}
+inline void UserStats::set_tcp_packets(::google::protobuf::uint32 value) {
+  _set_bit(6);
+  tcp_packets_ = value;
+}
+
+// optional float udp_ping_avg = 8;
+inline bool UserStats::has_udp_ping_avg() const {
+  return _has_bit(7);
+}
+inline void UserStats::clear_udp_ping_avg() {
+  udp_ping_avg_ = 0;
+  _clear_bit(7);
+}
+inline float UserStats::udp_ping_avg() const {
+  return udp_ping_avg_;
+}
+inline void UserStats::set_udp_ping_avg(float value) {
+  _set_bit(7);
+  udp_ping_avg_ = value;
+}
+
+// optional float udp_ping_var = 9;
+inline bool UserStats::has_udp_ping_var() const {
+  return _has_bit(8);
+}
+inline void UserStats::clear_udp_ping_var() {
+  udp_ping_var_ = 0;
+  _clear_bit(8);
+}
+inline float UserStats::udp_ping_var() const {
+  return udp_ping_var_;
+}
+inline void UserStats::set_udp_ping_var(float value) {
+  _set_bit(8);
+  udp_ping_var_ = value;
+}
+
+// optional float tcp_ping_avg = 10;
+inline bool UserStats::has_tcp_ping_avg() const {
+  return _has_bit(9);
+}
+inline void UserStats::clear_tcp_ping_avg() {
+  tcp_ping_avg_ = 0;
+  _clear_bit(9);
+}
+inline float UserStats::tcp_ping_avg() const {
+  return tcp_ping_avg_;
+}
+inline void UserStats::set_tcp_ping_avg(float value) {
+  _set_bit(9);
+  tcp_ping_avg_ = value;
+}
+
+// optional float tcp_ping_var = 11;
+inline bool UserStats::has_tcp_ping_var() const {
+  return _has_bit(10);
+}
+inline void UserStats::clear_tcp_ping_var() {
+  tcp_ping_var_ = 0;
+  _clear_bit(10);
+}
+inline float UserStats::tcp_ping_var() const {
+  return tcp_ping_var_;
+}
+inline void UserStats::set_tcp_ping_var(float value) {
+  _set_bit(10);
+  tcp_ping_var_ = value;
+}
+
+// optional .MumbleProto.Version version = 12;
+inline bool UserStats::has_version() const {
+  return _has_bit(11);
+}
+inline void UserStats::clear_version() {
+  if (version_ != NULL) version_->::MumbleProto::Version::Clear();
+  _clear_bit(11);
+}
+inline const ::MumbleProto::Version& UserStats::version() const {
+  return version_ != NULL ? *version_ : *default_instance_->version_;
+}
+inline ::MumbleProto::Version* UserStats::mutable_version() {
+  _set_bit(11);
+  if (version_ == NULL) version_ = new ::MumbleProto::Version;
+  return version_;
+}
+
+// repeated int32 celt_versions = 13;
+inline int UserStats::celt_versions_size() const {
+  return celt_versions_.size();
+}
+inline void UserStats::clear_celt_versions() {
+  celt_versions_.Clear();
+}
+inline ::google::protobuf::int32 UserStats::celt_versions(int index) const {
+  return celt_versions_.Get(index);
+}
+inline void UserStats::set_celt_versions(int index, ::google::protobuf::int32 value) {
+  celt_versions_.Set(index, value);
+}
+inline void UserStats::add_celt_versions(::google::protobuf::int32 value) {
+  celt_versions_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
+UserStats::celt_versions() const {
+  return celt_versions_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
+UserStats::mutable_celt_versions() {
+  return &celt_versions_;
+}
+
+// optional bytes address = 14;
+inline bool UserStats::has_address() const {
+  return _has_bit(13);
+}
+inline void UserStats::clear_address() {
+  if (address_ != &_default_address_) {
+    address_->clear();
+  }
+  _clear_bit(13);
+}
+inline const ::std::string& UserStats::address() const {
+  return *address_;
+}
+inline void UserStats::set_address(const ::std::string& value) {
+  _set_bit(13);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  address_->assign(value);
+}
+inline void UserStats::set_address(const char* value) {
+  _set_bit(13);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  address_->assign(value);
+}
+inline void UserStats::set_address(const void* value, size_t size) {
+  _set_bit(13);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  address_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserStats::mutable_address() {
+  _set_bit(13);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  return address_;
+}
+
+// optional uint32 bandwidth = 15;
+inline bool UserStats::has_bandwidth() const {
+  return _has_bit(14);
+}
+inline void UserStats::clear_bandwidth() {
+  bandwidth_ = 0u;
+  _clear_bit(14);
+}
+inline ::google::protobuf::uint32 UserStats::bandwidth() const {
+  return bandwidth_;
+}
+inline void UserStats::set_bandwidth(::google::protobuf::uint32 value) {
+  _set_bit(14);
+  bandwidth_ = value;
+}
+
+// optional uint32 onlinesecs = 16;
+inline bool UserStats::has_onlinesecs() const {
+  return _has_bit(15);
+}
+inline void UserStats::clear_onlinesecs() {
+  onlinesecs_ = 0u;
+  _clear_bit(15);
+}
+inline ::google::protobuf::uint32 UserStats::onlinesecs() const {
+  return onlinesecs_;
+}
+inline void UserStats::set_onlinesecs(::google::protobuf::uint32 value) {
+  _set_bit(15);
+  onlinesecs_ = value;
+}
+
+// optional uint32 idlesecs = 17;
+inline bool UserStats::has_idlesecs() const {
+  return _has_bit(16);
+}
+inline void UserStats::clear_idlesecs() {
+  idlesecs_ = 0u;
+  _clear_bit(16);
+}
+inline ::google::protobuf::uint32 UserStats::idlesecs() const {
+  return idlesecs_;
+}
+inline void UserStats::set_idlesecs(::google::protobuf::uint32 value) {
+  _set_bit(16);
+  idlesecs_ = value;
+}
+
+// optional bool strong_certificate = 18 [default = false];
+inline bool UserStats::has_strong_certificate() const {
+  return _has_bit(17);
+}
+inline void UserStats::clear_strong_certificate() {
+  strong_certificate_ = false;
+  _clear_bit(17);
+}
+inline bool UserStats::strong_certificate() const {
+  return strong_certificate_;
+}
+inline void UserStats::set_strong_certificate(bool value) {
+  _set_bit(17);
+  strong_certificate_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// RequestBlob
+
+// repeated uint32 session_texture = 1;
+inline int RequestBlob::session_texture_size() const {
+  return session_texture_.size();
+}
+inline void RequestBlob::clear_session_texture() {
+  session_texture_.Clear();
+}
+inline ::google::protobuf::uint32 RequestBlob::session_texture(int index) const {
+  return session_texture_.Get(index);
+}
+inline void RequestBlob::set_session_texture(int index, ::google::protobuf::uint32 value) {
+  session_texture_.Set(index, value);
+}
+inline void RequestBlob::add_session_texture(::google::protobuf::uint32 value) {
+  session_texture_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+RequestBlob::session_texture() const {
+  return session_texture_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+RequestBlob::mutable_session_texture() {
+  return &session_texture_;
+}
+
+// repeated uint32 session_comment = 2;
+inline int RequestBlob::session_comment_size() const {
+  return session_comment_.size();
+}
+inline void RequestBlob::clear_session_comment() {
+  session_comment_.Clear();
+}
+inline ::google::protobuf::uint32 RequestBlob::session_comment(int index) const {
+  return session_comment_.Get(index);
+}
+inline void RequestBlob::set_session_comment(int index, ::google::protobuf::uint32 value) {
+  session_comment_.Set(index, value);
+}
+inline void RequestBlob::add_session_comment(::google::protobuf::uint32 value) {
+  session_comment_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+RequestBlob::session_comment() const {
+  return session_comment_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+RequestBlob::mutable_session_comment() {
+  return &session_comment_;
+}
+
+// repeated uint32 channel_description = 3;
+inline int RequestBlob::channel_description_size() const {
+  return channel_description_.size();
+}
+inline void RequestBlob::clear_channel_description() {
+  channel_description_.Clear();
+}
+inline ::google::protobuf::uint32 RequestBlob::channel_description(int index) const {
+  return channel_description_.Get(index);
+}
+inline void RequestBlob::set_channel_description(int index, ::google::protobuf::uint32 value) {
+  channel_description_.Set(index, value);
+}
+inline void RequestBlob::add_channel_description(::google::protobuf::uint32 value) {
+  channel_description_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+RequestBlob::channel_description() const {
+  return channel_description_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+RequestBlob::mutable_channel_description() {
+  return &channel_description_;
+}
+
+
+// @@protoc_insertion_point(namespace_scope)
+
+}  // namespace MumbleProto
+
+#ifndef SWIG
+namespace google {
+namespace protobuf {
+
+template <>
+inline const EnumDescriptor* GetEnumDescriptor< ::MumbleProto::Reject_RejectType>() {
+  return ::MumbleProto::Reject_RejectType_descriptor();
+}
+template <>
+inline const EnumDescriptor* GetEnumDescriptor< ::MumbleProto::PermissionDenied_DenyType>() {
+  return ::MumbleProto::PermissionDenied_DenyType_descriptor();
+}
+template <>
+inline const EnumDescriptor* GetEnumDescriptor< ::MumbleProto::ContextActionAdd_Context>() {
+  return ::MumbleProto::ContextActionAdd_Context_descriptor();
+}
+
+}  // namespace google
+}  // namespace protobuf
+#endif  // SWIG
+
+// @@protoc_insertion_point(global_scope)
+
+#endif  // PROTOBUF_Mumble_2eproto__INCLUDED
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/GlobalShortcut_win.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/GlobalShortcut_win.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ConfigDialog.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ConfigDialog.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -31,7 +31,9 @@
 #include "ConfigDialog.h"
 #include "AudioInput.h"
 #include "AudioOutput.h"
+#ifndef COMPAT_CLIENT
 #include "Overlay.h"
+#endif
 #include "Global.h"
 
 ConfigDialog::ConfigDialog(QWidget *p) : QDialog(p) {
@@ -73,7 +75,9 @@ ConfigDialog::ConfigDialog(QWidget *p) :
 	                              ));
 
 	if (! g.s.qbaConfigGeometry.isEmpty()) {
+#ifndef COMPAT_CLIENT
 		if (! g.ocIntercept)
+#endif
 			restoreGeometry(g.s.qbaConfigGeometry);
 	}
 }
@@ -225,7 +229,9 @@ void ConfigDialog::apply() {
 void ConfigDialog::accept() {
 	apply();
 
+#ifndef COMPAT_CLIENT
 	if (! g.ocIntercept)
+#endif
 		g.s.qbaConfigGeometry=saveGeometry();
 
 	QDialog::accept();
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/CoreAudio.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/CoreAudio.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/About.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/About.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ConnectDialog.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ConnectDialog.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -33,7 +33,7 @@
 #include "ServerHandler.h"
 #include "Channel.h"
 #include "Database.h"
-#include "WebFetch.h"
+#include "NetworkConfig.h"
 
 QMap<QString, QIcon> ServerItem::qmIcons;
 QList<PublicInfo> ConnectDialog::qlPublicServers;
@@ -75,6 +75,7 @@ ServerView::ServerView(QWidget *p) : QTr
 	siFavorite->setExpanded(true);
 	siFavorite->setHidden(true);
 
+#ifndef NDN_MUMBLE
 #ifdef USE_BONJOUR
 	siLAN = new ServerItem(tr("LAN"), ServerItem::LANType);
 	addTopLevelItem(siLAN);
@@ -96,12 +97,16 @@ ServerView::ServerView(QWidget *p) : QTr
 	qmContinentNames.insert(QLatin1String("sa"), tr("South America"));
 	qmContinentNames.insert(QLatin1String("eu"), tr("Europe"));
 	qmContinentNames.insert(QLatin1String("oc"), tr("Oceania"));
+
+#endif
 }
 
 ServerView::~ServerView() {
 	delete siFavorite;
+#ifndef NDN_MUMBLE
 	delete siLAN;
 	delete siPublic;
+#endif
 }
 
 QMimeData *ServerView::mimeData(const QList<QTreeWidgetItem *> mimeitems) const {
@@ -409,7 +414,7 @@ ServerItem *ServerItem::fromMimeData(con
 	if (! url.hasQueryItem(QLatin1String("title")))
 		url.addQueryItem(QLatin1String("title"), url.host());
 
-	ServerItem *si = new ServerItem(url.queryItemValue(QLatin1String("title")), url.host(), static_cast<unsigned short>(url.port(DEFAULT_MUMBLE_PORT)), url.userName(), url.password());
+	ServerItem *si = new ServerItem(url.queryItemValue(QLatin1String("title")), url.host(), static_cast<unsigned short>(url.port()), url.userName(), url.password());
 
 	if (url.hasQueryItem(QLatin1String("url")))
 		si->qsUrl = url.queryItemValue(QLatin1String("url"));
@@ -570,34 +575,14 @@ FavoriteServer ServerItem::toFavoriteSer
 	return fs;
 }
 
-
-/*!
-  \fn QMimeData *ServerItem::toMimeData() const
-  This function turns a ServerItem object into a QMimeData object holding a URL to the server.
-*/
 QMimeData *ServerItem::toMimeData() const {
-	QMimeData *mime = ServerItem::toMimeData(qsName, qsHostname, usPort);
-
-	if (itType == FavoriteType)
-		mime->setData(QLatin1String("OriginatedInMumble"), QByteArray());
-
-	return mime;
-}
-
-/*!
-  \fn QMimeData *ServerItem::toMimeData(const QString &name, const QString &host, unsigned short port, const QString &channel)
-  This function creates a QMimeData object containing a URL to the server at \a host and \a port. \a name is passed in the
-  query string as "title", which is used for adding a server to favorites. \a channel may be omitted, but if specified it
-  should be in the format of "/path/to/channel".
-*/
-QMimeData *ServerItem::toMimeData(const QString &name, const QString &host, unsigned short port, const QString &channel) {
 	QUrl url;
 	url.setScheme(QLatin1String("mumble"));
-	url.setHost(host);
-	if (port != DEFAULT_MUMBLE_PORT)
-		url.setPort(port);
-	url.setPath(channel);
-	url.addQueryItem(QLatin1String("title"), name);
+	url.setHost(qsHostname);
+	url.setPort(usPort);
+	url.addQueryItem(QLatin1String("title"), qsName);
+	if (! qsUrl.isEmpty())
+		url.addQueryItem(QLatin1String("url"), qsUrl);
 	url.addQueryItem(QLatin1String("version"), QLatin1String("1.2.0"));
 
 	QString qs = QLatin1String(url.toEncoded());
@@ -606,7 +591,7 @@ QMimeData *ServerItem::toMimeData(const
 
 #ifdef Q_OS_WIN
 	QString contents = QString::fromLatin1("[InternetShortcut]\r\nURL=%1\r\n").arg(qs);
-	QString urlname = QString::fromLatin1("%1.url").arg(name);
+	QString urlname = QString::fromLatin1("%1.url").arg(qsName);
 
 	FILEGROUPDESCRIPTORA fgda;
 	ZeroMemory(&fgda, sizeof(fgda));
@@ -642,7 +627,10 @@ QMimeData *ServerItem::toMimeData(const
 	mime->setUrls(urls);
 
 	mime->setText(qs);
-	mime->setHtml(QString::fromLatin1("<a href=\"%1\">%2</a>").arg(qs).arg(name));
+	mime->setHtml(QString::fromLatin1("<a href=\"%1\">%2</a>").arg(qs).arg(qsName));
+
+	if (itType == FavoriteType)
+		mime->setData(QLatin1String("OriginatedInMumble"), QByteArray());
 
 	return mime;
 }
@@ -767,18 +755,24 @@ ConnectDialog::ConnectDialog(QWidget *p,
 
 	siAutoConnect = NULL;
 
+#ifndef NDN_MUMBLE
 	if (tPublicServers.elapsed() >= 60 * 24 * 1000000ULL) {
 		qlPublicServers.clear();
 	}
+#else
+	bPublicInit = true;
+#endif
 
 	qdbbButtonBox->button(QDialogButtonBox::Ok)->setText(tr("&Connect"));
 
+#ifndef NDN_MUMBLE
 	QPushButton *qpb = new QPushButton(tr("&Add New..."), this);
 	qpb->setDefault(false);
 	qpb->setAutoDefault(false);
 	connect(qpb, SIGNAL(clicked()), qaFavoriteAddNew, SIGNAL(triggered()));
 	qdbbButtonBox->addButton(qpb, QDialogButtonBox::ActionRole);
 
+
 	qtwServers->sortItems(1, Qt::AscendingOrder);
 	qtwServers->header()->setResizeMode(0, QHeaderView::Stretch);
 	qtwServers->header()->setResizeMode(1, QHeaderView::ResizeToContents);
@@ -808,6 +802,7 @@ ConnectDialog::ConnectDialog(QWidget *p,
 	qagFilters->addAction(qaShowPopulated);
 
 	connect(qagFilters, SIGNAL(triggered(QAction *)), this, SLOT(onFiltersTriggered(QAction *)));
+#endif
 
 	qmPopup = new QMenu(this);
 	qmFilters = new QMenu(tr("&Filters"), this);
@@ -815,16 +810,39 @@ ConnectDialog::ConnectDialog(QWidget *p,
 	qmFilters->addAction(qaShowReachable);
 	qmFilters->addAction(qaShowPopulated);
 
-	QList<QTreeWidgetItem *> ql;
-	QList<FavoriteServer> favorites = Database::getFavorites();
 
+	QList<FavoriteServer> favorites = Database::getFavorites();
+	bool localServerExist = false;
 	foreach(const FavoriteServer &fs, favorites) {
+
 		ServerItem *si = new ServerItem(fs);
 		qlItems << si;
+		if (si->qsName != "NDN Mumble Server") 
+			continue;
 		startDns(si);
 		qtwServers->siFavorite->addServerItem(si);
+		localServerExist = true;
+		qtwServers->setCurrentItem(si);
+		break;
+
 	}
 
+	if (!localServerExist) {
+#ifdef NDN_MUMBLE
+	QString name = "NDN Mumble Server";
+	QString host = "127.0.0.1";
+	unsigned short port = 64738;
+	QString qsUsername, qsPassword;
+	ServerItem *si = new ServerItem(name, host, port, qsUsername, qsPassword);
+	QHostAddress qha(si->qsHostname);
+	si->qlAddresses.append(qha);
+	qlItems << si;
+	qtwServers->siFavorite->addServerItem(si);
+	qtwServers->setCurrentItem(si);
+#endif
+	}
+
+#ifndef NDN_MUMBLE
 #ifdef USE_BONJOUR
 	// Make sure the we got the objects we need, then wire them up
 	if (g.bc->bsbBrowser && g.bc->bsrResolver) {
@@ -856,10 +874,16 @@ ConnectDialog::ConnectDialog(QWidget *p,
 	iPingIndex = -1;
 	qtPingTick->start(50);
 
+
+
+
 	new QShortcut(QKeySequence(QKeySequence::Copy), this, SLOT(on_qaFavoriteCopy_triggered()));
 	new QShortcut(QKeySequence(QKeySequence::Paste), this, SLOT(on_qaFavoritePaste_triggered()));
+#endif
 
-	qtwServers->setCurrentItem(NULL);
+
+
+#ifndef NDN_MUMBLE
 	bLastFound = false;
 
 	qmPingCache = Database::getPingCache();
@@ -868,6 +892,7 @@ ConnectDialog::ConnectDialog(QWidget *p,
 		restoreGeometry(g.s.qbaConnectDialogGeometry);
 	if (! g.s.qbaConnectDialogHeader.isEmpty())
 		qtwServers->header()->restoreState(g.s.qbaConnectDialogHeader);
+#endif
 }
 
 ConnectDialog::~ConnectDialog() {
@@ -892,12 +917,15 @@ ConnectDialog::~ConnectDialog() {
 }
 
 void ConnectDialog::accept() {
+
 	ServerItem *si = static_cast<ServerItem *>(qtwServers->currentItem());
+
 	if (! si || si->qlAddresses.isEmpty() || si->qsHostname.isEmpty()) {
 		qWarning() << "Sad panda";
 		return;
 	}
 
+
 	qsPassword = si->qsPassword;
 	qsServer = si->qsHostname;
 	usPort = si->usPort;
@@ -942,7 +970,7 @@ void ConnectDialog::on_qaFavoriteAdd_tri
 void ConnectDialog::on_qaFavoriteAddNew_triggered() {
 	QString host, user, pw;
 	QString name;
-	unsigned short port = DEFAULT_MUMBLE_PORT;
+	unsigned short port = 64738;
 
 	// Try to fill out fields if possible
 	{
@@ -1084,7 +1112,9 @@ void ConnectDialog::on_qtwServers_custom
 
 	if (si && (si->itType == ServerItem::FavoriteType)) {
 		qmPopup->addAction(qaFavoriteEdit);
+#ifndef NDN_MUMBLE
 		qmPopup->addAction(qaFavoriteRemove);
+#endif
 	} else if (si) {
 		qmPopup->addAction(qaFavoriteAdd);
 	}
@@ -1093,7 +1123,9 @@ void ConnectDialog::on_qtwServers_custom
 
 	if (! qmPopup->isEmpty())
 		qmPopup->addSeparator();
+#ifndef NDN_MUMBLE
 	qmPopup->addMenu(qmFilters);
+#endif
 
 	qmPopup->popup(qtwServers->viewport()->mapToGlobal(mpos), NULL);
 }
@@ -1131,10 +1163,13 @@ void ConnectDialog::initList() {
 	bPublicInit = true;
 
 	QUrl url;
+	url.setScheme(QLatin1String("http"));
+	url.setHost(g.qsRegionalHost);
 	url.setPath(QLatin1String("/list2.cgi"));
 	url.addQueryItem(QLatin1String("version"), QLatin1String(MUMTEXT(MUMBLE_VERSION_STRING)));
 
-	WebFetch::fetch(url, this, SLOT(fetched(QByteArray,QUrl,QMap<QString,QString>)));
+	QNetworkReply *rep = Network::get(url);
+	connect(rep, SIGNAL(finished()), this, SLOT(finished()));
 }
 
 #ifdef USE_BONJOUR
@@ -1480,19 +1515,36 @@ void ConnectDialog::udpReply() {
 	}
 }
 
-void ConnectDialog::fetched(QByteArray data, QUrl url, QMap<QString, QString> headers) {
-	if (data.isNull()) {
+static QString fromUtf8(const QByteArray &qba) {
+	if (qba.isEmpty())
+		return QString();
+	return QString::fromUtf8(qba.constData(), qba.length());
+}
+
+void ConnectDialog::finished() {
+	QNetworkReply *rep = qobject_cast<QNetworkReply *>(sender());
+	if (rep->error() != QNetworkReply::NoError) {
+		QUrl url = rep->request().url();
+		if (url.host() == g.qsRegionalHost) {
+			url.setHost(QLatin1String("mumble.info"));
+			QNetworkReply *nrep = Network::get(url);
+			connect(nrep, SIGNAL(finished()), this, SLOT(finished()));
+
+			rep->deleteLater();
+			return;
+		}
+
 		QMessageBox::warning(this, QLatin1String("Mumble"), tr("Failed to fetch server list"), QMessageBox::Ok);
 		return;
 	}
 
 	QDomDocument doc;
-	doc.setContent(data);
+	doc.setContent(rep->readAll());
 
 	qlPublicServers.clear();
-	qsUserCountry = headers.value(QLatin1String("Geo-Country"));
-	qsUserCountryCode = headers.value(QLatin1String("Geo-Country-Code")).toLower();
-	qsUserContinentCode = headers.value(QLatin1String("Geo-Continent-Code")).toLower();
+	qsUserCountry = fromUtf8(rep->rawHeader("Geo-Country"));
+	qsUserCountryCode = fromUtf8(rep->rawHeader("Geo-Country-Code")).toLower();
+	qsUserContinentCode = fromUtf8(rep->rawHeader("Geo-Continent-Code")).toLower();
 
 	QDomElement root=doc.documentElement();
 	QDomNode n = root.firstChild();
@@ -1519,4 +1571,6 @@ void ConnectDialog::fetched(QByteArray d
 	tPublicServers.restart();
 
 	fillList();
+
+	rep->deleteLater();
 }
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/UserView.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/UserView.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/TextToSpeech_unix.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/TextToSpeech_unix.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/UserModel.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/UserModel.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ClientUser.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ClientUser.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -39,15 +39,13 @@ QReadWriteLock ClientUser::c_qrwlUsers;
 QList<ClientUser *> ClientUser::c_qlTalking;
 QReadWriteLock ClientUser::c_qrwlTalking;
 
-ClientUser::ClientUser(QObject *p) : QObject(p),
-		tsState(Settings::Passive),
-		bLocalMute(false),
-		fPowerMin(0.0f),
-		fPowerMax(0.0f),
-		fAverageAvailable(0.0f),
-		iFrames(0),
-		iSequence(0),
-		tLastTalkStateChange(false) {
+ClientUser::ClientUser(QObject *p) : QObject(p) {
+	tsState = Settings::Passive;
+	bLocalMute = false;
+	fPowerMin = fPowerMax = 0.0f;
+	fAverageAvailable = 0.0f;
+	iFrames = 0;
+	iSequence = 0;
 }
 
 ClientUser *ClientUser::get(unsigned int uiSession) {
@@ -73,16 +71,6 @@ QList<ClientUser *> ClientUser::getTalki
 	return c_qlTalking;
 }
 
-QList<ClientUser *> ClientUser::getActive() {
-	QReadLocker lock(&c_qrwlUsers);
-	QList<ClientUser *> activeUsers;
-	foreach(ClientUser *cu, c_qmUsers) {
-		if (cu->isActive())
-			activeUsers << cu;
-	}
-	return activeUsers;
-}
-
 bool ClientUser::isValid(unsigned int uiSession) {
 	QReadLocker lock(&c_qrwlUsers);
 
@@ -171,7 +159,6 @@ void ClientUser::setTalking(Settings::Ta
 		nstate = true;
 
 	tsState = ts;
-	tLastTalkStateChange.restart();
 	emit talkingChanged();
 
 	if (nstate && cChannel) {
@@ -242,35 +229,6 @@ void ClientUser::setRecording(bool recor
 }
 
 bool ClientUser::lessThanOverlay(const ClientUser *first, const ClientUser *second) {
-	if (g.s.os.osSort == OverlaySettings::LastStateChange) {
-		// Talkers above non-talkers
-		if (first->tsState != Settings::Passive && second->tsState == Settings::Passive)
-			return true;
-		if (first->tsState == Settings::Passive && second->tsState != Settings::Passive)
-			return false;
-
-		// Valid time above invalid time (possible when there wasn't a state-change yet)
-		if (first->tLastTalkStateChange.isStarted() && !second->tLastTalkStateChange.isStarted())
-			return true;
-		if (!first->tLastTalkStateChange.isStarted() && second->tLastTalkStateChange.isStarted())
-			return false;
-
-		// If both have a valid time
-		if (first->tLastTalkStateChange.isStarted() && second->tLastTalkStateChange.isStarted()) {
-			// Among talkers, long > short
-			// (if two clients are talking, the client that started first is above the other)
-			if (first->tsState != Settings::Passive && second->tsState != Settings::Passive)
-				return first->tLastTalkStateChange > second->tLastTalkStateChange;
-
-			// Among non-talkers, short -> long
-			// (if two clients are passive, the client that most recently stopped talking is above)
-			if (first->tsState == Settings::Passive && second->tsState == Settings::Passive)
-				return first->tLastTalkStateChange < second->tLastTalkStateChange;
-		}
-
-		// If both times are invalid, fall back to alphabetically (continuing below)
-	}
-
 	if (first->cChannel == second->cChannel || first->cChannel == NULL || second->cChannel == NULL)
 		return lessThan(first, second);
 
@@ -287,22 +245,14 @@ bool ClientUser::lessThanOverlay(const C
 	return Channel::lessThan(first->cChannel, second->cChannel);
 }
 
+
+
 void ClientUser::sortUsersOverlay(QList<ClientUser *> &list) {
 	QReadLocker lock(&c_qrwlUsers);
 
 	qSort(list.begin(), list.end(), ClientUser::lessThanOverlay);
 }
 
-bool ClientUser::isActive() {
-	if (tsState != Settings::Passive)
-		return true;
-
-	if (!tLastTalkStateChange.isStarted())
-		return false;
-
-	return tLastTalkStateChange.elapsed() < g.s.os.iActiveTime * 1000000;
-}
-
 /* From Channel.h
  */
 void Channel::addClientUser(ClientUser *p) {
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ConfigDialog_macx.mm
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ConfigDialog_macx.mm
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/SocketRPC.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/SocketRPC.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -33,7 +33,11 @@
 #include "MainWindow.h"
 #include "ServerHandler.h"
 #include "Channel.h"
+#ifdef COMPAT_CLIENT
+#include "Player.h"
+#else
 #include "ClientUser.h"
+#endif
 
 SocketRPCClient::SocketRPCClient(QLocalSocket *s, QObject *p) : QObject(p), qlsSocket(s), qbBuffer(NULL) {
 	qlsSocket->setParent(this);
@@ -157,7 +161,11 @@ void SocketRPCClient::processXml() {
 				u.setUserName(user);
 				u.addQueryItem(QLatin1String("version"), QLatin1String("1.2.0"));
 				QStringList path;
+#ifdef COMPAT_CLIENT
+				Channel *c = ClientPlayer::get(g.uiSession)->cChannel;
+#else
 				Channel *c = ClientUser::get(g.uiSession)->cChannel;
+#endif
 				while (c->cParent) {
 					path.prepend(c->qsName);
 					c = c->cParent;
@@ -170,8 +178,14 @@ void SocketRPCClient::processXml() {
 			if (iter != qmRequest.constEnd()) {
 				QUrl u = iter.value().toUrl();
 				if (u.isValid() && u.scheme() == QLatin1String("mumble")) {
+#ifdef COMPAT_CLIENT
+					if (u.userName().isEmpty())
+						u.setUserName(QLatin1String("Unknown"));
+					g.mw->openUrl(u);
+#else
 					OpenURLEvent *oue = new OpenURLEvent(u);
 					qApp->postEvent(g.mw, oue);
+#endif
 					ack = true;
 				}
 			} else {
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/TextToSpeech_win.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/TextToSpeech_win.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/RichTextEditor.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/RichTextEditor.cpp
@@ -1,4 +1,4 @@
-/* copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Overlay_macx.mm
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Overlay_macx.mm
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2010-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2010, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
@@ -40,6 +40,12 @@ extern "C" {
 #include <xar/xar.h>
 }
 
+// This is a temporary solution. We don't want the list of our trusted
+// intermediate certificates to be tampered with, and the easiest way
+// to achieve that is to embed them into the binary (since it gets
+// codesigned.)
+//#include "../../macx/overlay-installer/intermediate.h"
+
 static const NSString *MumbleOverlayLoaderBundle = @"/Library/ScriptingAdditions/MumbleOverlay.osax";
 static const NSString *MumbleOverlayLoaderBundleIdentifier = @"net.sourceforge.mumble.OverlayScriptingAddition";
 
@@ -201,7 +207,7 @@ void OverlayClient::updateMouse() {
 		for (int i = 0; i < [reps count]; i++) {
 			NSImageRep *rep = [reps objectAtIndex:i];
 			if ([rep class] == [NSBitmapImageRep class]) {
-				cgimg = [(NSBitmapImageRep *)rep CGImage];
+				//cgimg = [(NSBitmapImageRep *)rep CGImage];
 			}
 		}
 
@@ -468,7 +474,7 @@ static bool validateInstallerSignature(c
 	}
 
 	// Extract the TOC signed data
-	if (xar_signature_copy_signed_data(sig, &plaindata, &plainlen, &signdata, &signlen, NULL) != 0) {
+	if (xar_signature_copy_signed_data(sig, &plaindata, &plainlen, &signdata, &signlen) != 0) {
 		qWarning("validateInstallerSignature: Could not get signed data from XARchive.");
 		goto err;
 	}
@@ -511,6 +517,46 @@ err:
 	return ret;
 }
 
+// Get an NSArray of the system anchors + our bundled intermediate certs.
+static bool getAnchorCerts(NSArray **anchors) {
+	bool ret = false;
+	OSStatus err = noErr;
+	CFArrayRef systemAnchors = NULL;
+
+	if (anchors == NULL) {
+		qWarning("getAnchorCerts: Invalid argument.");
+		goto err;
+	}
+
+	err = SecTrustCopyAnchorCertificates(&systemAnchors);
+	if (err != noErr) {
+		qWarning("Unable to copy system anchor certificates");
+		goto err;
+	}
+
+	/*
+	*anchors = [[NSMutableArray alloc] initWithArray:(NSArray *)systemAnchors];
+	for (int i = 0; i < sizeof(intermediate_cas)/sizeof(intermediate_cas[0]); i++) {
+		QSslCertificate cert(intermediate_cas[i]);
+		QByteArray qbaIntermediate = cert.toDer();
+
+		SecCertificateRef tmp = NULL;
+		const CSSM_DATA crt = { (CSSM_SIZE) qbaIntermediate.length(), (uint8_t *) qbaIntermediate.constData() };
+		err = SecCertificateCreateFromData(&crt, CSSM_CERT_X_509v3, CSSM_CERT_ENCODING_DER, &tmp);
+		if (err != noErr) {
+			qWarning("getAnchorCerts: Couldn't SecCertificateCreateFromData(). Skipping.");
+			continue;
+		}
+
+		[(NSMutableArray *) *anchors addObject:(id)tmp];
+	}
+
+	ret = true;
+	*/
+err:
+	return ret;
+}
+
 // First, validate the signature of the installer XAR archive. Then, check
 // that the certificate chain is trusted by the system.
 bool validateInstaller(const char *path) {
@@ -553,6 +599,30 @@ bool validateInstaller(const char *path)
 		goto err;
 	}
 
+	if (QSysInfo::MacintoshVersion < QSysInfo::MV_SNOWLEOPARD) {
+		qWarning("validateInstaller: Non-Snow Leopard install detected. Including bundled intermediate certificates when "
+		         "verifying installer.");
+
+		// Get system anchors with our bundled intermediate certificates included.
+		if (! getAnchorCerts(&anchors)) {
+			qWarning("validateInstaller: Unable to fetch anchors.");
+			goto err;
+		}
+
+		// Set the anchors for the trust object
+		//
+		// Note: By doing this, we're actually circumventing the user trust settings for the system anchors.
+		//
+		// There's only really a way around this for Snow Leopard, where a `SecTrustSetAnchorCertificatesOnly'
+		// function was introduced. With this, you can trust the anchor certificates set for the trust object
+		// AND trust the system anchors using the user's *own* trust settings for them.
+		err = SecTrustSetAnchorCertificates(trust, (CFArrayRef)anchors);
+		if (err != noErr) {
+			qWarning("validateInstaller: Unable to set bundled anchor certificates.");
+			goto err;
+		}
+	}
+
 	// Do we trust this certificate?
 	err = SecTrustEvaluate(trust, &result);
 	if (err != noErr) {
@@ -576,6 +646,7 @@ bool validateInstaller(const char *path)
 
 err:
 	[certs release];
+	[anchors release];
 	if (search)
 		CFRelease(search);
 	if (policy)
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/SharedMemory.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/SharedMemory.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/CustomElements.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/CustomElements.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -38,10 +38,6 @@ class ChatbarTextEdit : public QTextEdit
 		Q_OBJECT
 		Q_DISABLE_COPY(ChatbarTextEdit)
 		void inFocus(bool);
-		QStringList qslHistory;
-		QString qsHistoryTemp;
-		int iHistoryIndex;
-		static const int MAX_HISTORY = 50;
 	protected:
 		QString qsDefaultText;
 		bool bDefaultVisible;
@@ -59,14 +55,10 @@ class ChatbarTextEdit : public QTextEdit
 	signals:
 		void tabPressed(void);
 		void ctrlSpacePressed(void);
-		void entered(QString);
 	public slots:
 		void pasteAndSend_triggered();
 		void doResize();
 		void doScrollbar();
-		void addToHistory(const QString &str);
-		void historyUp();
-		void historyDown();
 	public:
 		ChatbarTextEdit(QWidget *p = NULL);
 };
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/AudioConfigDialog.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/AudioConfigDialog.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/UserEdit.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/UserEdit.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/UserInformation.ui
+++ mumble-1.2.3-87-gf7d8711/src/mumble/UserInformation.ui
@@ -326,7 +326,7 @@
         </property>
        </widget>
       </item>
-      <item row="0" column="4">
+      <item row="0" column="3">
        <widget class="QLabel" name="qliLost">
         <property name="text">
          <string>Lost</string>
@@ -336,7 +336,7 @@
         </property>
        </widget>
       </item>
-      <item row="0" column="6">
+      <item row="0" column="4">
        <widget class="QLabel" name="qliResync">
         <property name="text">
          <string>Resync</string>
@@ -379,7 +379,7 @@
         </property>
        </widget>
       </item>
-      <item row="1" column="4">
+      <item row="1" column="3">
        <widget class="QLabel" name="qlFromLost">
         <property name="text">
          <string/>
@@ -392,7 +392,7 @@
         </property>
        </widget>
       </item>
-      <item row="1" column="6">
+      <item row="1" column="4">
        <widget class="QLabel" name="qlFromResync">
         <property name="text">
          <string/>
@@ -438,7 +438,7 @@
         </property>
        </widget>
       </item>
-      <item row="2" column="4">
+      <item row="2" column="3">
        <widget class="QLabel" name="qlToLost">
         <property name="text">
          <string/>
@@ -451,7 +451,7 @@
         </property>
        </widget>
       </item>
-      <item row="2" column="6">
+      <item row="2" column="4">
        <widget class="QLabel" name="qlToResync">
         <property name="text">
          <string/>
@@ -464,66 +464,6 @@
         </property>
        </widget>
       </item>
-      <item row="0" column="3">
-       <widget class="QLabel" name="qliLate_percent">
-        <property name="text">
-         <string notr="true">%</string>
-        </property>
-        <property name="alignment">
-         <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
-        </property>
-       </widget>
-      </item>
-      <item row="0" column="5">
-       <widget class="QLabel" name="qliLost_percent">
-        <property name="text">
-         <string notr="true">%</string>
-        </property>
-        <property name="alignment">
-         <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
-        </property>
-       </widget>
-      </item>
-      <item row="1" column="3">
-       <widget class="QLabel" name="qlFromLate_percent">
-        <property name="text">
-         <string notr="true">0.00</string>
-        </property>
-        <property name="alignment">
-         <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
-        </property>
-       </widget>
-      </item>
-      <item row="2" column="3">
-       <widget class="QLabel" name="qlToLate_percent">
-        <property name="text">
-         <string notr="true">0.00</string>
-        </property>
-        <property name="alignment">
-         <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
-        </property>
-       </widget>
-      </item>
-      <item row="1" column="5">
-       <widget class="QLabel" name="qlFromLost_percent">
-        <property name="text">
-         <string notr="true">0.00</string>
-        </property>
-        <property name="alignment">
-         <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
-        </property>
-       </widget>
-      </item>
-      <item row="2" column="5">
-       <widget class="QLabel" name="qlToLost_percent">
-        <property name="text">
-         <string notr="true">0.00</string>
-        </property>
-        <property name="alignment">
-         <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
-        </property>
-       </widget>
-      </item>
      </layout>
     </widget>
    </item>
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/G15LCDEngine_unix.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/G15LCDEngine_unix.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Settings.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Settings.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -76,9 +76,7 @@ Q_DECLARE_METATYPE(ShortcutTarget)
 struct OverlaySettings {
 	enum OverlayPresets { AvatarAndName, LargeSquareAvatar };
 
-	enum OverlayShow { Talking, Active, HomeChannel, LinkedChannels };
-
-	enum OverlaySort { Alphabetical, LastStateChange };
+	enum OverlayShow { Talking, HomeChannel, LinkedChannels };
 
 	bool bEnable;
 
@@ -86,8 +84,6 @@ struct OverlaySettings {
 
 	OverlayShow osShow;
 	bool bAlwaysSelf;
-	int iActiveTime; // Time in seconds for a user to stay active after talking
-	OverlaySort osSort;
 
 	float fX;
 	float fY;
@@ -173,7 +169,6 @@ struct Settings {
 	bool bTTS;
 	bool bUserTop;
 	bool bWhisperFriends;
-	bool bTTSMessageReadBack;
 	int iTTSVolume, iTTSThreshold;
 	int iQuality, iMinLoudness, iVoiceHold, iJitterBufferSize;
 	int iNoiseSuppress;
@@ -216,7 +211,6 @@ struct Settings {
 	QList<Shortcut> qlShortcuts;
 
 	enum MessageLog { LogNone = 0x00, LogConsole = 0x01, LogTTS = 0x02, LogBalloon = 0x04, LogSoundfile = 0x08};
-	int iMaxLogBlocks;
 	QMap<int, QString> qmMessageSounds;
 	QMap<int, quint32> qmMessages;
 
@@ -259,7 +253,6 @@ struct Settings {
 	ProxyType ptProxyType;
 	QString qsProxyHost, qsProxyUsername, qsProxyPassword;
 	unsigned short usProxyPort;
-	QString qsRegionalHost;
 
 	static const int ciDefaultMaxImageSize = 50 * 1024; // Restrict to 50KiB as a default
 	int iMaxImageSize;
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/UserView.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/UserView.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ALSAAudio.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ALSAAudio.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/OverlayEditor.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/OverlayEditor.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/MainWindow.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/MainWindow.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -84,7 +84,7 @@ class MainWindow : public QMainWindow, p
 
 		GlobalShortcut *gsPushTalk, *gsResetAudio, *gsMuteSelf, *gsDeafSelf;
 		GlobalShortcut *gsUnlink, *gsPushMute, *gsMetaChannel, *gsToggleOverlay;
-		GlobalShortcut *gsMinimal, *gsVolumeUp, *gsVolumeDown, *gsWhisper, *gsMetaLink;
+		GlobalShortcut *gsMinimal, *gsVolumeUp, *gsVolumeDown, *gsWhisper;
 		DockTitleBar *dtbLogDockTitle, *dtbChatDockTitle;
 
 		ACLEditor *aclEdit;
@@ -114,6 +114,7 @@ class MainWindow : public QMainWindow, p
 		void setOnTop(bool top);
 		void updateTrayIcon();
 		QPair<QByteArray, QImage> openImageFile();
+		void sendChatbarMessage();
 		static const QString defaultStyleSheet;
 
 		void openTextMessageDialog(ClientUser *p);
@@ -143,6 +144,7 @@ class MainWindow : public QMainWindow, p
 		void customEvent(QEvent *evt);
 		void findDesiredChannel();
 		void setupView(bool toggle_minimize = true);
+		bool launchCompatibilityClient(const QUrl &url);
 		virtual void closeEvent(QCloseEvent *e);
 		virtual void hideEvent(QHideEvent *e);
 
@@ -188,7 +190,6 @@ class MainWindow : public QMainWindow, p
 		void on_qaChannelUnlink_triggered();
 		void on_qaChannelUnlinkAll_triggered();
 		void on_qaChannelSendMessage_triggered();
-		void on_qaChannelCopyURL_triggered();
 		void on_qaAudioReset_triggered();
 		void on_qaAudioMute_triggered();
 		void on_qaAudioDeaf_triggered();
@@ -237,7 +238,6 @@ class MainWindow : public QMainWindow, p
 		void talkingChanged();
 		void destroyUserInformation();
 		void trayAboutToShow();
-		void sendChatbarMessage(QString msg);
 	public:
 		MainWindow(QWidget *parent);
 		~MainWindow();
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Log.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Log.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -110,11 +110,9 @@ void LogConfig::load(const Settings &r)
 		i->setCheckState(ColStaticSound, (ml & Settings::LogSoundfile) ? Qt::Checked : Qt::Unchecked);
 		i->setText(ColStaticSoundPath, r.qmMessageSounds.value(mt));
 	}
-	qsbMaxBlocks->setValue(r.iMaxLogBlocks);
 
 	loadSlider(qsVolume, r.iTTSVolume);
 	qsbThreshold->setValue(r.iTTSThreshold);
-	qcbReadBackOwn->setChecked(r.bTTSMessageReadBack);
 	qcbWhisperFriends->setChecked(r.bWhisperFriends);
 }
 
@@ -135,17 +133,14 @@ void LogConfig::save() const {
 		s.qmMessages[mt] = v;
 		s.qmMessageSounds[mt] = i->text(ColStaticSoundPath);
 	}
-	s.iMaxLogBlocks = qsbMaxBlocks->value();
 
 	s.iTTSVolume=qsVolume->value();
 	s.iTTSThreshold=qsbThreshold->value();
-	s.bTTSMessageReadBack = qcbReadBackOwn->isChecked();
 	s.bWhisperFriends = qcbWhisperFriends->isChecked();
 }
 
 void LogConfig::accept() const {
 	g.l->tts->setVolume(s.iTTSVolume);
-	g.mw->qteLog->document()->setMaximumBlockCount(s.iMaxLogBlocks);
 }
 
 bool LogConfig::expert(bool) {
@@ -204,17 +199,18 @@ Log::Log(QObject *p) : QObject(p) {
 	QStringList qslAllEvents;
 	for (int i = Log::firstMsgType; i <= Log::lastMsgType; ++i) {
 		Log::MsgType t = static_cast<Log::MsgType>(i);
-		qslAllEvents << QString::fromLatin1("\"%1\"").arg(g.l->msgName(t));
+		qslAllEvents << QString("\"%1\"").arg(g.l->msgName(t));
 	}
-	QString qsScript = QString::fromLatin1(
+	QString qsGrowlEvents = QString("{%1}").arg(qslAllEvents.join(","));
+	QString qsScript = QString(
 	                       "tell application \"GrowlHelperApp\"\n"
-	                       "	set the allNotificationsList to {%1}\n"
-	                       "	set the enabledNotificationsList to {%1}\n"
+	                       "	set the allNotificationsList to %1\n"
+	                       "	set the enabledNotificationsList to %1\n"
 	                       "	register as application \"Mumble\""
 	                       "		all notifications allNotificationsList"
 	                       "		default notifications enabledNotificationsList"
 	                       "		icon of application \"Mumble\"\n"
-	                       "end tell\n").arg(qslAllEvents.join(QLatin1String(",")));
+	                       "end tell\n").arg(qsGrowlEvents);
 	if (growl_available())
 		qt_mac_execute_apple_script(qsScript, NULL);
 #endif
@@ -264,11 +260,6 @@ const QStringList Log::allowedSchemes()
 	qslAllowedSchemeNames << QLatin1String("spotify");
 	qslAllowedSchemeNames << QLatin1String("steam");
 	qslAllowedSchemeNames << QLatin1String("irc");
-	qslAllowedSchemeNames << QLatin1String("gg"); // Gadu-Gadu http://gg.pl - Polish instant massager
-	qslAllowedSchemeNames << QLatin1String("mailto");
-	qslAllowedSchemeNames << QLatin1String("xmpp");
-	qslAllowedSchemeNames << QLatin1String("skype");
-
 	return qslAllowedSchemeNames;
 }
 
@@ -434,7 +425,7 @@ QString Log::validHtml(const QString &ht
 	}
 }
 
-void Log::log(MsgType mt, const QString &console, const QString &terse, bool ownMessage) {
+void Log::log(MsgType mt, const QString &console, const QString &terse, bool console_only) {
 	QDateTime dt = QDateTime::currentDateTime();
 
 	int ignore = qmIgnore.value(mt);
@@ -450,12 +441,7 @@ void Log::log(MsgType mt, const QString
 
 	// Message output on console
 	if ((flags & Settings::LogConsole)) {
-		QTextCursor tc = g.mw->qteLog->textCursor();
-
-		QScrollBar *vscroll = g.mw->qteLog->verticalScrollBar();
-		const int oldscrollvalue = vscroll->value();
-		const bool scroll = oldscrollvalue == vscroll->maximum();
-
+		QTextCursor tc=g.mw->qteLog->textCursor();
 		tc.movePosition(QTextCursor::End);
 
 		if (qdDate != dt.date()) {
@@ -478,14 +464,10 @@ void Log::log(MsgType mt, const QString
 		validHtml(console, true, &tc);
 		tc.movePosition(QTextCursor::End);
 		g.mw->qteLog->setTextCursor(tc);
-
-		if (scroll)
-			vscroll->setValue(vscroll->maximum());
-		else
-			vscroll->setValue(oldscrollvalue);
+		g.mw->qteLog->ensureCursorVisible();
 	}
 
-	if (!g.s.bTTSMessageReadBack && ownMessage)
+	if (console_only)
 		return;
 
 	// Message notification with balloon tooltips
@@ -563,7 +545,7 @@ void Log::log(MsgType mt, const QString
 			}
 		}
 #ifdef Q_OS_MAC
-		QString qsScript = QString::fromLatin1(
+		QString qsScript = QString(
 		                       "tell application \"GrowlHelperApp\"\n"
 		                       "	notify with name \"%1\" title \"%1\" description \"%2\" application name \"Mumble\"\n"
 		                       "end tell\n").arg(msgName(mt)).arg(plain);
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/AudioOutput.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/AudioOutput.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -228,6 +228,7 @@ class AudioOutput : public QThread {
 		bool mix(void *output, unsigned int nsamp);
 	public:
 		void wipe();
+		int getChannels() { return iChannels;}
 
 		AudioOutput();
 		~AudioOutput();
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Tokens.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Tokens.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/AudioInput.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/AudioInput.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -38,11 +38,34 @@
 #include "Global.h"
 #include "NetworkConfig.h"
 #include "VoiceRecorder.h"
+#include "wavlog.h"
+#include <sys/time.h>
 
 // Remember that we cannot use static member classes that are not pointers, as the constructor
 // for AudioInputRegistrar() might be called before they are initialized, as the constructor
 // is called from global initialization.
 // Hence, we allocate upon first call.
+#ifndef QT_NO_DEBUG
+CircularBuffer *micBuf;
+CircularBuffer *speakerBuf;
+CircularBuffer *cleanBuf;
+CircularBuffer *eventBuf;
+
+static long addEchoNum = 0;
+static long addMicNum = 0;
+static long takeNum = 0;
+static long appendNum = 0;
+
+void *CircularBufferIO(void *threadid) {
+	while(true) {
+		micBuf->readToFile();
+		speakerBuf->readToFile();
+		cleanBuf->readToFile();
+		eventBuf->readToFile();
+		usleep(20000);
+	}
+}
+#endif
 
 QMap<QString, AudioInputRegistrar *> *AudioInputRegistrar::qmNew;
 QString AudioInputRegistrar::current = QString();
@@ -55,6 +78,7 @@ AudioInputRegistrar::AudioInputRegistrar
 
 AudioInputRegistrar::~AudioInputRegistrar() {
 	qmNew->remove(name);
+
 }
 
 AudioInputPtr AudioInputRegistrar::newFromChoice(QString choice) {
@@ -88,6 +112,20 @@ bool AudioInputRegistrar::canExclusive()
 }
 
 AudioInput::AudioInput() {
+#ifndef QT_NO_DEBUG
+	micBuf = new CircularBuffer("/tmp/psMic");
+	speakerBuf = new CircularBuffer("/tmp/psSpeaker");
+	cleanBuf = new CircularBuffer("/tmp/psClean");
+	eventBuf = new CircularBuffer("/tmp/eventLog");
+
+	pthread_t logThread;
+	int rc = pthread_create(&logThread, NULL, CircularBufferIO, NULL);
+	if (rc) {
+		fprintf(stderr, "Logging thread failed to start\n");
+		abort();
+	}
+#endif
+
 	adjustBandwidth(g.iMaxBandwidth, iAudioQuality, iAudioFrames);
 
 	g.iAudioBandwidth = getNetworkBandwidth(iAudioQuality, iAudioFrames);
@@ -132,7 +170,7 @@ AudioInput::AudioInput() {
 		speex_encoder_ctl(esSpeex,SPEEX_SET_COMPLEXITY, &iArg);
 		qWarning("AudioInput: %d bits/s, %d hz, %d sample Speex-UWB", iAudioQuality, iSampleRate, iFrameSize);
 	}
-	iEchoFreq = iMicFreq = iSampleRate;
+	iMicFreq = iSampleRate;
 
 	iFrameCounter = 0;
 	iSilentFrames = 0;
@@ -154,6 +192,14 @@ AudioInput::AudioInput() {
 	psSpeaker = NULL;
 
 	iEchoChannels = iMicChannels = 0;
+	AudioOutputPtr ao = g.ao;
+	if (ao) {
+		iEchoChannels = ao->getChannels();
+		iEchoFreq = ao->getMixerFreq();
+	} else {
+		fprintf(stderr, "AudioOutput has not been initialized\n");
+		std::exit(1);
+	}
 	iEchoFilled = iMicFilled = 0;
 	eMicFormat = eEchoFormat = SampleFloat;
 	iMicSampleSize = iEchoSampleSize = 0;
@@ -198,6 +244,9 @@ AudioInput::~AudioInput() {
 	if (srsEcho)
 		speex_resampler_destroy(srsEcho);
 
+	appendWavHeader("psMic", 1, iSampleRate);
+	appendWavHeader("psSpeaker", 1, iSampleRate);
+	appendWavHeader("psClean", 1, iSampleRate);
 	delete [] psMic;
 	delete [] psClean;
 	delete [] psSpeaker;
@@ -367,6 +416,11 @@ void AudioInput::initializeMixer() {
 }
 
 void AudioInput::addMic(const void *data, unsigned int nsamp) {
+#ifndef QT_NO_DEBUG
+	char addBuf[200];
+	sprintf(addBuf, "Func: addMic, times: %ld\n", ++addMicNum);
+	eventBuf->log(addBuf);
+#endif
 	while (nsamp > 0) {
 		unsigned int left = qMin(nsamp, iMicLength - iMicFilled);
 
@@ -404,7 +458,13 @@ void AudioInput::addMic(const void *data
 					if (qlEchoFrames.isEmpty()) {
 						iJitterSeq = 0;
 						iMinBuffered = 1000;
+						playback = false;
 					} else {
+#ifndef QT_NO_DEBUG
+						char pbuf[200];
+						sprintf(pbuf, "Func: take first, list size: %d, times: %ld\n", qlEchoFrames.count(), ++takeNum);
+						eventBuf->log(pbuf);
+#endif
 						iMinBuffered = qMin(iMinBuffered, qlEchoFrames.count());
 
 						if ((iJitterSeq > 100) && (iMinBuffered > 1)) {
@@ -414,19 +474,29 @@ void AudioInput::addMic(const void *data
 						}
 						echo = qlEchoFrames.takeFirst();
 					}
+
 				}
 
-				if (echo) {
+				//if (echo) {
 					delete [] psSpeaker;
 					psSpeaker = echo;
-				}
+				//}
 			}
 			encodeAudioFrame();
 		}
 	}
 }
 
+void AudioInput::addInternalEcho(const void *data, unsigned int nsamp) {
+	addEcho(data, nsamp);
+}
+
 void AudioInput::addEcho(const void *data, unsigned int nsamp) {
+#ifndef QT_NO_DEBUG
+	char addBuf[200];
+	sprintf(addBuf, "Func: addEcho, times: %ld\n", ++addEchoNum);
+	eventBuf->log(addBuf);
+#endif
 	while (nsamp > 0) {
 		unsigned int left = qMin(nsamp, iEchoLength - iEchoFilled);
 
@@ -471,13 +541,30 @@ void AudioInput::addEcho(const void *dat
 			iJitterSeq = qMin(iJitterSeq+1,10000U);
 
 			QMutexLocker l(&qmEcho);
+			if (!playback) {
+				short *echo_delay = new short[iEchoFrameSize];
+				for (int k = 0; k < iEchoFrameSize; k++)
+					echo_delay[k] = 0;
+				qlEchoFrames.append(echo_delay);
+				playback = true;
+			}
 			qlEchoFrames.append(outbuff);
+#ifndef QT_NO_DEBUG
+			char pbuf[200];
+			sprintf(pbuf, "Func: append frame, list size: %d, times: %ld\n", qlEchoFrames.size(), ++appendNum);
+			eventBuf->log(pbuf);
+#endif
 		}
+			
 	}
 }
 
 bool AudioInput::preferCELT(int bitrate, int frames) {
+#ifdef NDN_MUMBLE
+	return false;
+#else
 	return ((bitrate >= 32000) || (frames == 1));
+#endif
 }
 
 void AudioInput::adjustBandwidth(int bitspersec, int &bitrate, int &frames) {
@@ -594,130 +681,6 @@ celt_int32_t celtBack(CELTEncoder *enc,
 }
  */
 
-void AudioInput::resetAudioProcessor() {
-	if (!bResetProcessor)
-		return;
-
-	int iArg;
-
-	if (sppPreprocess)
-		speex_preprocess_state_destroy(sppPreprocess);
-	if (sesEcho)
-		speex_echo_state_destroy(sesEcho);
-
-	sppPreprocess = speex_preprocess_state_init(iFrameSize, iSampleRate);
-
-	iArg = 1;
-	speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_VAD, &iArg);
-	speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_AGC, &iArg);
-	speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_DENOISE, &iArg);
-	speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_DEREVERB, &iArg);
-
-	iArg = 30000;
-	speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_AGC_TARGET, &iArg);
-
-	float v = 30000.0f / static_cast<float>(g.s.iMinLoudness);
-	iArg = iroundf(floorf(20.0f * log10f(v)));
-	speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_AGC_MAX_GAIN, &iArg);
-
-	iArg = -60;
-	speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_AGC_DECREMENT, &iArg);
-
-	iArg = g.s.iNoiseSuppress;
-	speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_NOISE_SUPPRESS, &iArg);
-
-	if (iEchoChannels > 0) {
-		sesEcho = speex_echo_state_init_mc(iFrameSize, iFrameSize * 10, 1, bEchoMulti ? iEchoChannels : 1);
-		iArg = iSampleRate;
-		speex_echo_ctl(sesEcho, SPEEX_ECHO_SET_SAMPLING_RATE, &iArg);
-		speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_ECHO_STATE, sesEcho);
-
-		qWarning("AudioInput: ECHO CANCELLER ACTIVE");
-	} else {
-		sesEcho = NULL;
-	}
-
-	bResetProcessor = false;
-}
-
-int AudioInput::encodeCELTFrame(short *psSource, unsigned char *buffer) {
-	CELTCodec *switchto = NULL;
-
-	if ((! g.uiSession || (g.s.lmLoopMode == Settings::Local)) && (! g.qmCodecs.isEmpty())) {
-		// Use latest for local loopback
-		QMap<int, CELTCodec *>::const_iterator i = g.qmCodecs.constEnd();
-		--i;
-		switchto = i.value();
-	} else {
-		if (cCodec && bPreviousVoice) {
-			// Currently talking, don't switch unless you must.
-			int v = cCodec->bitstreamVersion();
-			if ((v == g.iCodecAlpha) || (v == g.iCodecBeta))
-				switchto = cCodec;
-		}
-	}
-	if (! switchto) {
-		switchto = g.qmCodecs.value(g.bPreferAlpha ? g.iCodecAlpha : g.iCodecBeta);
-		if (! switchto) {
-			switchto = g.qmCodecs.value(g.bPreferAlpha ? g.iCodecBeta : g.iCodecAlpha);
-		}
-	}
-	if (switchto != cCodec) {
-		if (cCodec && ceEncoder) {
-			cCodec->celt_encoder_destroy(ceEncoder);
-			ceEncoder = NULL;
-		}
-		cCodec = switchto;
-		if (cCodec) {
-			ceEncoder = cCodec->encoderCreate();
-		}
-	} else if (cCodec && ! bPreviousVoice) {
-		cCodec->celt_encoder_ctl(ceEncoder, CELT_RESET_STATE);
-	}
-
-	if (! cCodec)
-		return 0;
-
-	if (g.uiSession && g.s.lmLoopMode != Settings::Local) {
-		int v = cCodec->bitstreamVersion();
-		if (v == g.iCodecAlpha)
-			umtType = MessageHandler::UDPVoiceCELTAlpha;
-		else if (v == g.iCodecBeta)
-			umtType = MessageHandler::UDPVoiceCELTBeta;
-		else {
-			qWarning() << "Couldn't find message type for codec version" << v;
-			return 0;
-		}
-	}
-
-	cCodec->celt_encoder_ctl(ceEncoder, CELT_SET_PREDICTION(0));
-
-	cCodec->celt_encoder_ctl(ceEncoder, CELT_SET_VBR_RATE(iAudioQuality));
-	int len = cCodec->encode(ceEncoder, psSource, buffer, qMin(iAudioQuality / (8 * 100), 127));
-	iBitrate = len * 100 * 8;
-
-	return len;
-}
-
-int AudioInput::encodeSpeexFrame(short *psSource, unsigned char *buffer) {
-	int vbr = 0;
-	speex_encoder_ctl(esSpeex, SPEEX_GET_VBR_MAX_BITRATE, &vbr);
-	if (vbr != iAudioQuality) {
-		vbr = iAudioQuality;
-		speex_encoder_ctl(esSpeex, SPEEX_SET_VBR_MAX_BITRATE, &vbr);
-	}
-
-	if (! bPreviousVoice)
-		speex_encoder_ctl(esSpeex, SPEEX_RESET_STATE, NULL);
-
-	speex_encode_int(esSpeex, psSource, &sbBits);
-	int len = speex_bits_write(&sbBits, reinterpret_cast<char *>(buffer), 127);
-	iBitrate = len * 50 * 8;
-	speex_bits_reset(&sbBits);
-
-	return len;
-}
-
 void AudioInput::encodeAudioFrame() {
 	int iArg;
 	ClientUser *p=ClientUser::get(g.uiSession);
@@ -752,20 +715,70 @@ void AudioInput::encodeAudioFrame() {
 	}
 
 	QMutexLocker l(&qmSpeex);
-	resetAudioProcessor();
+
+	if (bResetProcessor) {
+		if (sppPreprocess)
+			speex_preprocess_state_destroy(sppPreprocess);
+		if (sesEcho)
+			speex_echo_state_destroy(sesEcho);
+
+		sppPreprocess = speex_preprocess_state_init(iFrameSize, iSampleRate);
+
+		iArg = 1;
+		speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_VAD, &iArg);
+		speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_AGC, &iArg);
+		speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_DENOISE, &iArg);
+		speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_DEREVERB, &iArg);
+
+		iArg = 30000;
+		speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_AGC_TARGET, &iArg);
+
+		float v = 30000.0f / static_cast<float>(g.s.iMinLoudness);
+		iArg = iroundf(floorf(20.0f * log10f(v)));
+		speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_AGC_MAX_GAIN, &iArg);
+
+		iArg = -60;
+		speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_AGC_DECREMENT, &iArg);
+
+		iArg = g.s.iNoiseSuppress;
+		speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_NOISE_SUPPRESS, &iArg);
+
+		if (iEchoChannels > 0) {
+			sesEcho = speex_echo_state_init_mc(iFrameSize, iFrameSize*10, 1, bEchoMulti ? iEchoChannels : 1);
+			iArg = iSampleRate;
+			speex_echo_ctl(sesEcho, SPEEX_ECHO_SET_SAMPLING_RATE, &iArg);
+			speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_ECHO_STATE, sesEcho);
+
+			qWarning("AudioInput: ECHO CANCELLER ACTIVE");
+		} else {
+			sesEcho = NULL;
+		}
+
+		bResetProcessor = false;
+	}
 
 	speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_GET_AGC_GAIN, &iArg);
 	float gainValue = static_cast<float>(iArg);
 	iArg = g.s.iNoiseSuppress - iArg;
 	speex_preprocess_ctl(sppPreprocess, SPEEX_PREPROCESS_SET_NOISE_SUPPRESS, &iArg);
 
+
 	if (sesEcho && psSpeaker) {
 		speex_echo_cancellation(sesEcho, psMic, psSpeaker, psClean);
 		speex_preprocess_run(sppPreprocess, psClean);
 		psSource = psClean;
+#ifndef QT_NO_DEBUG
+		micBuf->writeToBuffer((char *)psMic, iFrameSize * sizeof(short));
+		speakerBuf->writeToBuffer((char *)psSpeaker, iFrameSize * sizeof(short));
+		cleanBuf->writeToBuffer((char *)psClean, iFrameSize * sizeof(short));
+#endif
+
 	} else {
 		speex_preprocess_run(sppPreprocess, psMic);
 		psSource = psMic;
+#ifndef QT_NO_DEBUG
+		eventBuf->log("echoAudioFrame called without echo\n");
+#endif
 	}
 
 	sum=1.0f;
@@ -856,11 +869,75 @@ void AudioInput::encodeAudioFrame() {
 	int len;
 
 	if (umtType != MessageHandler::UDPVoiceSpeex) {
-		len = encodeCELTFrame(psSource, buffer);
-		if (len == 0)
+		CELTCodec *switchto = NULL;
+
+		if ((! g.uiSession || (g.s.lmLoopMode == Settings::Local)) && (! g.qmCodecs.isEmpty())) {
+			// Use latest for local loopback
+			QMap<int, CELTCodec *>::const_iterator i = g.qmCodecs.constEnd();
+			--i;
+			switchto = i.value();
+		} else {
+			if (cCodec && bPreviousVoice) {
+				// Currently talking, don't switch unless you must.
+				int v = cCodec->bitstreamVersion();
+				if ((v == g.iCodecAlpha) || (v == g.iCodecBeta))
+					switchto = cCodec;
+			}
+		}
+		if (! switchto) {
+			switchto = g.qmCodecs.value(g.bPreferAlpha ? g.iCodecAlpha : g.iCodecBeta);
+			if (! switchto) {
+				switchto = g.qmCodecs.value(g.bPreferAlpha ? g.iCodecBeta : g.iCodecAlpha);
+			}
+		}
+		if (switchto != cCodec) {
+			if (cCodec && ceEncoder) {
+				cCodec->celt_encoder_destroy(ceEncoder);
+				ceEncoder = NULL;
+			}
+			cCodec = switchto;
+			if (cCodec) {
+				ceEncoder = cCodec->encoderCreate();
+			}
+		} else if (cCodec && ! bPreviousVoice) {
+			cCodec->celt_encoder_ctl(ceEncoder, CELT_RESET_STATE);
+		}
+
+		if (! cCodec)
 			return;
+
+		if (g.uiSession && g.s.lmLoopMode != Settings::Local) {
+			int v = cCodec->bitstreamVersion();
+			if (v == g.iCodecAlpha)
+				umtType = MessageHandler::UDPVoiceCELTAlpha;
+			else if (v == g.iCodecBeta)
+				umtType = MessageHandler::UDPVoiceCELTBeta;
+			else {
+				qWarning() << "Couldn't find message type for codec version" << v;
+				return;
+			}
+		}
+
+		cCodec->celt_encoder_ctl(ceEncoder, CELT_SET_PREDICTION(0));
+
+		cCodec->celt_encoder_ctl(ceEncoder,CELT_SET_VBR_RATE(iAudioQuality));
+		len = cCodec->encode(ceEncoder, psSource, buffer, qMin(iAudioQuality / 800, 127));
+		iBitrate = len * 100 * 8;
 	} else {
-		len = encodeSpeexFrame(psSource, buffer);
+		int vbr = 0;
+		speex_encoder_ctl(esSpeex, SPEEX_GET_VBR_MAX_BITRATE, &vbr);
+		if (vbr != iAudioQuality) {
+			vbr = iAudioQuality;
+			speex_encoder_ctl(esSpeex, SPEEX_SET_VBR_MAX_BITRATE, &vbr);
+		}
+
+		if (! bPreviousVoice)
+			speex_encoder_ctl(esSpeex, SPEEX_RESET_STATE, NULL);
+
+		speex_encode_int(esSpeex, psSource, &sbBits);
+		len = speex_bits_write(&sbBits, reinterpret_cast<char *>(buffer), 127);
+		iBitrate = len * 50 * 8;
+		speex_bits_reset(&sbBits);
 	}
 
 	flushCheck(QByteArray(reinterpret_cast<const char *>(buffer), len), ! bIsSpeech);
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/TaskList.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/TaskList.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Benjamin Jemlich <pcgod@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Benjamin Jemlich <pcgod@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/UserEdit.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/UserEdit.cpp
@@ -1,4 +1,4 @@
-/* copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/mumble.plist
+++ mumble-1.2.3-87-gf7d8711/src/mumble/mumble.plist
@@ -26,7 +26,7 @@
 		</dict>
 	</array>
 	<key>CFBundleVersion</key>
-	<string>1.2.4</string>
+	<string>1.2.3</string>
 	<key>NSHumanReadableCopyright</key>
 	<string>Copyright (c) 2005-2010 Thorvald Natvig &lt;slicer@users.sourceforge.net&gt;</string>
 </dict>
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Audio.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Audio.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -462,8 +462,9 @@ void Audio::stopInput() {
 }
 
 void Audio::start(const QString &input, const QString &output) {
-	startInput(input);
+	// swtich the start order of input and output
 	startOutput(output);
+	startInput(input);
 }
 
 void Audio::stop() {
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/SharedMemory_unix.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/SharedMemory_unix.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/OverlayUser.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/OverlayUser.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ServerHandler.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ServerHandler.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/os_macx.mm
+++ mumble-1.2.3-87-gf7d8711/src/mumble/os_macx.mm
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
@@ -31,9 +31,12 @@
 
 #include "mumble_pch.hpp"
 #include "Global.h"
+#ifndef COMPAT_CLIENT
 #include "Overlay.h"
+#endif
 #include "MainWindow.h"
 
+char *os_url = NULL; // fixme(mkrautz): Remove this when mumble11x is gone.
 char *os_lang = NULL;
 static FILE *fConsole = NULL;
 
@@ -125,7 +128,11 @@ static void crashhandler_signals_restore
 }
 
 static void crashhandler_init() {
+#ifdef COMPAT_CLIENT
+	QString dump = QDir::homePath() + QLatin1String("/Library/Preferences/Mumble/mumble11x.dmp");
+#else
 	QString dump = g.qdBasePath.filePath(QLatin1String("mumble.dmp"));
+#endif
 	if (strncpy(crashhandler_fn, dump.toUtf8().data(), PATH_MAX)) {
 		crashhandler_signals_setup();
 		/* todo: Change the behavior of the Apple crash dialog? Maybe? */
@@ -143,7 +150,11 @@ void os_init() {
 	crashhandler_init();
 
 	const char *home = getenv("HOME");
+#ifdef COMPAT_CLIENT
+	const char *logpath = "/Library/Logs/Mumble11x.log";
+#else
 	const char *logpath = "/Library/Logs/Mumble.log";
+#endif
 
 	if (home) {
 		size_t len = strlen(home) + strlen(logpath) + 1;
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/G15LCDEngine_lglcd.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/G15LCDEngine_lglcd.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/NetworkConfig.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/NetworkConfig.cpp
@@ -1,6 +1,6 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/GlobalShortcut_macx.mm
+++ mumble-1.2.3-87-gf7d8711/src/mumble/GlobalShortcut_macx.mm
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
@@ -30,13 +30,56 @@
 */
 
 #include "GlobalShortcut_macx.h"
+#ifndef COMPAT_CLIENT
 #include "Overlay.h"
+#endif
 
 #import <AppKit/AppKit.h>
 
 #define MOD_OFFSET   0x10000
 #define MOUSE_OFFSET 0x20000
 
+/*
+ * We use DeferInit in here to pop up a dialog box if their system isn't
+ * properly set up to receieve global keyboard/mouse events.
+ */
+
+GlobalShortcutMacInit::GlobalShortcutMacInit() : QObject(NULL) {
+}
+
+void GlobalShortcutMacInit::initialize() {
+#ifndef NDN_MUMBLE
+	if (!accessibilityApiEnabled())
+		accessibilityDialog();
+#endif
+}
+
+bool GlobalShortcutMacInit::accessibilityApiEnabled() const {
+	return QFile::exists("/private/var/db/.AccessibilityAPIEnabled");
+}
+
+void GlobalShortcutMacInit::openPrefsPane(const QString &) const {
+	system("open /Applications/System\\ Preferences.app/ /System/Library/PreferencePanes/UniversalAccessPref.prefPane/");
+}
+
+void GlobalShortcutMacInit::accessibilityDialog() const {
+	QMessageBox mb("Mumble",
+	               tr("Mumble has detected that it is unable to receive Global Shortcut events when it is in the background.<br /><br />"
+	                  "This is because the Universal Access feature called 'Enable access for assistive devices' is currently disabled.<br /><br />"
+	                  "Please <a href=\" \">enable this setting</a> and continue when done."),
+	               QMessageBox::Question, QMessageBox::Ok | QMessageBox::Default, QMessageBox::NoButton, QMessageBox::NoButton);
+
+	QLabel *label = mb.findChild<QLabel *>(QLatin1String("qt_msgbox_label"));
+	label->setOpenExternalLinks(false);
+	connect(label, SIGNAL(linkActivated(const QString &)), this, SLOT(openPrefsPane(const QString &)));
+
+	mb.exec();
+}
+
+static GlobalShortcutMacInit gsminit;
+
+/* --- */
+
 GlobalShortcutEngine *GlobalShortcutEngine::platformInit() {
 	return new GlobalShortcutMac();
 }
@@ -63,10 +106,13 @@ CGEventRef GlobalShortcutMac::callback(C
 			/* Suppressing "the" mouse button is probably not a good idea :-) */
 			if (keycode == 0)
 				suppress = false;
+#ifndef COMPAT_CLIENT
 			forward = !suppress;
+#endif
 			break;
 		}
 
+#ifndef COMPAT_CLIENT
 		case kCGEventMouseMoved:
 		case kCGEventLeftMouseDragged:
 		case kCGEventRightMouseDragged:
@@ -85,6 +131,7 @@ CGEventRef GlobalShortcutMac::callback(C
 		case kCGEventScrollWheel:
 			forward = true;
 			break;
+#endif
 
 		case kCGEventKeyDown:
 			down = true;
@@ -122,6 +169,7 @@ CGEventRef GlobalShortcutMac::callback(C
 			break;
 	}
 
+#ifndef COMPAT_CLIENT
 		if (forward && g.ocIntercept) {
 			NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
 			NSEvent *evt = [[NSEvent eventWithCGEvent:event] retain];
@@ -129,6 +177,7 @@ CGEventRef GlobalShortcutMac::callback(C
 			[pool release];
 			return NULL;
 		}
+#endif
 
 	return suppress ? NULL : event;
 }
@@ -319,30 +368,30 @@ bool GlobalShortcutMac::handleModButton(
 }
 
 QString GlobalShortcutMac::translateMouseButton(const unsigned int keycode) const {
-	return QString::fromLatin1("Mouse Button %1").arg(keycode-MOUSE_OFFSET+1);
+	return QString("Mouse Button %1").arg(keycode-MOUSE_OFFSET+1);
 }
 
 QString GlobalShortcutMac::translateModifierKey(const unsigned int keycode) const {
 	unsigned int key = keycode - MOD_OFFSET;
 	switch (key) {
 		case 0:
-			return QLatin1String("Caps Lock");
+			return QString("Caps Lock");
 		case 1:
-			return QLatin1String("Shift");
+			return QString("Shift");
 		case 2:
-			return QLatin1String("Control");
+			return QString("Control");
 		case 3:
-			return QLatin1String("Alt/Option");
+			return QString("Alt/Option");
 		case 4:
-			return QLatin1String("Command");
+			return QString("Command");
 		case 5:
-			return QLatin1String("Help");
+			return QString("Help");
 		case 6:
-			return QLatin1String("Fn");
+			return QString("Fn");
 		case 7:
-			return QLatin1String("Num Lock");
+			return QString("Num Lock");
 	}
-	return QString::fromLatin1("Modifier %1").arg(key);
+	return QString("Modifier %1").arg(key);
 }
 
 QString GlobalShortcutMac::translateKeyName(const unsigned int keycode) const {
@@ -363,23 +412,23 @@ QString GlobalShortcutMac::translateKeyN
 	if (len == 1) {
 		switch (unicodeString[0]) {
 			case '\t':
-				return QLatin1String("Tab");
+				return QString("Tab");
 			case '\r':
-				return QLatin1String("Enter");
+				return QString("Enter");
 			case '\b':
-				return QLatin1String("Backspace");
+				return QString("Backspace");
 			case '\e':
-				return QLatin1String("Escape");
+				return QString("Escape");
 			case ' ':
-				return QLatin1String("Space");
+				return QString("Space");
 			case 28:
-				return QLatin1String("Left");
+				return QString("Left");
 			case 29:
-				return QLatin1String("Right");
+				return QString("Right");
 			case 30:
-				return QLatin1String("Up");
+				return QString("Up");
 			case 31:
-				return QLatin1String("Down");
+				return QString("Down");
 		}
 
 		if (unicodeString[0] < ' ') {
@@ -388,7 +437,7 @@ QString GlobalShortcutMac::translateKeyN
 		}
 	}
 
-	return QString::fromRawData(reinterpret_cast<const QChar *>(unicodeString), len).toUpper();
+	return QString(reinterpret_cast<const QChar *>(unicodeString), len).toUpper();
 }
 
 QString GlobalShortcutMac::buttonName(const QVariant &v) {
@@ -407,7 +456,7 @@ QString GlobalShortcutMac::buttonName(co
 			return str;
 	}
 
-	return QString::fromLatin1("Keycode %1").arg(key);
+	return QString("Keycode %1").arg(key);
 }
 
 bool GlobalShortcutMac::canSuppress() {
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/UserModel.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/UserModel.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/BonjourClient.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/BonjourClient.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2009-2011, Stefan Hacker
+/* Copyright (C) 2009, Stefan Hacker
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/SharedMemory.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/SharedMemory.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/FileEngine.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/FileEngine.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/AudioOutput.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/AudioOutput.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -1174,6 +1174,13 @@ bool AudioOutput::mix(void *outbuff, uns
 		else
 			for (unsigned int i=0;i<nsamp*iChannels;i++)
 				reinterpret_cast<short *>(outbuff)[i] = static_cast<short>(32768.f * (output[i] < -1.0f ? -1.0f : (output[i] > 1.0f ? 1.0f : output[i])));
+
+		// feed output to echo buffer
+		AudioInputPtr ai = g.ai;
+		if (ai) {
+			ai->addInternalEcho(outbuff, nsamp);
+		}
+
 	}
 
 	qrwlOutputs.unlock();
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/VoiceRecorder.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/VoiceRecorder.cpp
@@ -1,6 +1,6 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2010-2011, Benjamin Jemlich <pcgod@users.sourceforge.net>
-   Copyright (C) 2010-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2010, Benjamin Jemlich <pcgod@users.sourceforge.net>
+   Copyright (C) 2010, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/mumble.rc
+++ mumble-1.2.3-87-gf7d8711/src/mumble/mumble.rc
@@ -8,15 +8,15 @@ IDI_ICON1               ICON    DISCARDA
 #define VER_DEBUG                   VS_FF_DEBUG
 #endif
 
-#ifdef SNAPSHOT_BUILD
+#ifndef RELEASE_BUILD
 #define	VER_RELEASE	VS_FF_SPECIALBUILD|VS_FF_PRERELEASE
 #else
 #define VER_RELEASE 0L
 #endif
 
 VS_VERSION_INFO VERSIONINFO
-	FILEVERSION		1,2,4,0
-	PRODUCTVERSION	1,2,4,0
+	FILEVERSION		1,2,3,0
+	PRODUCTVERSION	1,2,3,0
 	FILEFLAGSMASK	VS_FFI_FILEFLAGSMASK
 	FILEFLAGS		(VER_DEBUG|VER_RELEASE)
 	FILEOS			VOS_NT_WINDOWS32
@@ -29,12 +29,12 @@ VS_VERSION_INFO VERSIONINFO
 			BEGIN
 				VALUE "CompanyName", "Thorvald Natvig"
 				VALUE "FileDescription", "Mumble - Low-latency VoIP client"
-				VALUE "FileVersion", "1.2.4"
-				VALUE "ProductVersion", "1.2.4"
-				VALUE "LegalCopyright", "Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>"
+				VALUE "FileVersion", "1.2.3"
+				VALUE "ProductVersion", "1.2.3"
+				VALUE "LegalCopyright", "Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>"
 				VALUE "OriginalFilename", "mumble.exe"
 				VALUE "ProductName", "Mumble"
-#ifdef SNAPSHOT_BUILD
+#ifndef RELEASE_BUILD
 				VALUE "SpecialBuild", "Snapshot development release"
 #endif
 			END
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/DBus.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/DBus.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/OverlayText.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/OverlayText.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Log.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Log.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -93,7 +93,7 @@ class Log : public QObject {
 		static QString formatClientUser(ClientUser *cu, LogColorType t);
 		static QString formatChannel(::Channel *c);
 	public slots:
-		void log(MsgType t, const QString &console, const QString &terse=QString(), bool ownMessage = false);
+		void log(MsgType t, const QString &console, const QString &terse=QString(), bool console_only = false);
 };
 
 class ValidDocument : public QTextDocument {
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/OverlayConfig.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/OverlayConfig.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -107,7 +107,7 @@ void OverlayConfig::initDisplay() {
 }
 
 void OverlayConfig::refreshFpsDemo() {
-	bpFpsDemo = OverlayTextLine(QString::fromLatin1("%1").arg(42), s.os.qfFps).createPixmap(s.os.qcFps);
+	bpFpsDemo = OverlayTextLine(tr("FPS: %1").arg(42), s.os.qfFps).createPixmap(s.os.qcFps);
 	qgpiFpsDemo->setPixmap(bpFpsDemo);
 	qgvFpsPreview->centerOn(qgpiFpsDemo);
 }
@@ -230,7 +230,7 @@ QString OverlayConfig::applicationIdenti
 	CFDictionaryRef plist = NULL;
 	CFDataRef data = NULL;
 
-	QFile qfAppBundle(QString::fromLatin1("%1/Contents/Info.plist").arg(path));
+	QFile qfAppBundle(QString("%1/Contents/Info.plist").arg(path));
 	if (qfAppBundle.exists()) {
 		qfAppBundle.open(QIODevice::ReadOnly);
 		QByteArray qbaPlistData = qfAppBundle.readAll();
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Database.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Database.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/UserInformation.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/UserInformation.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/UserInformation.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/UserInformation.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -196,17 +196,6 @@ void UserInformation::update(const Mumbl
 		qlToLate->setText(QString::number(to.late()));
 		qlToLost->setText(QString::number(to.lost()));
 		qlToResync->setText(QString::number(to.resync()));
-
-		float allFromPackets = (from.good() + from.late() + from.lost());
-		float allToPackets = (to.good() + to.late() + to.lost());
-		if (allFromPackets != 0.0f) {
-			qlFromLate_percent->setText(QString::number(from.late() * 100.0f / allFromPackets, 'f', 2));
-			qlFromLost_percent->setText(QString::number(from.lost() * 100.0f / allFromPackets, 'f', 2));
-		}
-		if (allToPackets != 0.0f) {
-			qlToLate_percent->setText(QString::number(to.late() * 100.0f / allToPackets, 'f', 2));
-			qlToLost_percent->setText(QString::number(to.lost() * 100.0f / allToPackets, 'f', 2));
-		}
 	} else {
 		qgbUDP->setVisible(false);
 	}
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/OSS.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/OSS.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ACLEditor.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ACLEditor.cpp
@@ -1,5 +1,5 @@
-/* copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/AudioInput.ui
+++ mumble-1.2.3-87-gf7d8711/src/mumble/AudioInput.ui
@@ -549,9 +549,14 @@
         <property name="minimum">
          <number>8000</number>
         </property>
+		<!-- NDN MUMBLE CHANGED THIS
         <property name="maximum">
          <number>96000</number>
         </property>
+		-->
+        <property name="maximum">
+         <number>32000</number>
+        </property>
         <property name="singleStep">
          <number>1000</number>
         </property>
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/MainWindow.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/MainWindow.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -49,7 +49,6 @@
 #include "AudioStats.h"
 #include "Plugins.h"
 #include "Log.h"
-#include "Net.h"
 #include "Overlay.h"
 #include "Global.h"
 #include "Database.h"
@@ -200,7 +199,6 @@ MainWindow::MainWindow(QWidget *p) : QMa
 
 	connect(qmUser, SIGNAL(aboutToShow()), this, SLOT(qmUser_aboutToShow()));
 	connect(qmChannel, SIGNAL(aboutToShow()), this, SLOT(qmChannel_aboutToShow()));
-	connect(qteChat, SIGNAL(entered(QString)), this, SLOT(sendChatbarMessage(QString)));
 
 	// Fix context of all actions.
 	QList<QAction *> qla = findChildren<QAction *>();
@@ -274,9 +272,6 @@ void MainWindow::createActions() {
 	gsWhisper = new GlobalShortcut(this, idx++, tr("Whisper/Shout"), false, QVariant::fromValue(ShortcutTarget()));
 	gsWhisper->setObjectName(QLatin1String("gsWhisper"));
 
-	gsMetaLink=new GlobalShortcut(this, idx++, tr("Link Channel", "Global Shortcut"));
-	gsMetaLink->setObjectName(QLatin1String("MetaLink"));
-
 #ifndef Q_OS_MAC
 	qstiIcon->show();
 #endif
@@ -300,7 +295,6 @@ void MainWindow::setupGui()  {
 	LogDocument *ld = new LogDocument(qteLog);
 	qteLog->setDocument(ld);
 
-	qteLog->document()->setMaximumBlockCount(g.s.iMaxLogBlocks);
 	qteLog->document()->setDefaultStyleSheet(qApp->styleSheet());
 
 	pmModel = new UserModel(qtvUsers);
@@ -675,28 +669,26 @@ void MainWindow::openUrl(const QUrl &url
 	}
 
 	int major, minor, patch;
-	int thismajor, thisminor, thispatch;
-	MumbleVersion::get(&thismajor, &thisminor, &thispatch);
-
-	// With no version parameter given assume the link refers to our version
 	major = 1;
-	minor = 2;
+	minor = 1;
 	patch = 0;
 
 	QString version = url.queryItemValue(QLatin1String("version"));
 	MumbleVersion::get(&major, &minor, &patch, version);
 
-	if ((major < 1) || // No pre 1.2.0
-	        (major == 1 && minor <= 1) ||
-	        (major > thismajor) || // No future version
-	        (major == thismajor && minor > thisminor) ||
-	        (major == thismajor && minor == thisminor && patch > thispatch)) {
-		g.l->log(Log::Warning, tr("This version of Mumble can't handle URLs for Mumble version %1.%2.%3").arg(major).arg(minor).arg(patch));
+#ifdef Q_OS_MAC
+	if ((major == 1) && (minor == 1)) {
+		launchCompatibilityClient(url);
 		return;
-	}
+	} else
+#endif
+		if ((major != 1) || (minor != 2) || (patch > 3)) {
+			g.l->log(Log::Warning, tr("This version of Mumble can't handle URLs for Mumble version %1.%2.%3").arg(major).arg(minor).arg(patch));
+			return;
+		}
 
 	QString host = url.host();
-	unsigned short port = static_cast<unsigned short>(url.port(DEFAULT_MUMBLE_PORT));
+	unsigned short port = static_cast<unsigned short>(url.port(64738));
 	QString user = url.userName();
 	QString pw = url.password();
 	qsDesiredChannel = url.path();
@@ -915,6 +907,7 @@ void MainWindow::on_qaServerConnect_trig
 		g.sh->start(QThread::TimeCriticalPriority);
 	}
 	delete cd;
+
 }
 
 void MainWindow::on_Reconnect_timeout() {
@@ -1474,12 +1467,15 @@ void MainWindow::on_qaQuit_triggered() {
 	this->close();
 }
 
-void MainWindow::sendChatbarMessage(QString qsText) {
-	if (g.uiSession == 0) return; // Check if text & connection is available
+void MainWindow::sendChatbarMessage() {
+	if (qteChat->toPlainText().isEmpty() || g.uiSession == 0) return; // Check if text & connection is available
 
 	ClientUser *p = pmModel->getUser(qtvUsers->currentIndex());
 	Channel *c = pmModel->getChannel(qtvUsers->currentIndex());
 
+	QString qsText;
+
+	qsText = qteChat->toPlainText();
 	qsText = Qt::escape(qsText);
 	qsText = TextMessage::autoFormat(qsText);
 
@@ -1559,7 +1555,6 @@ void MainWindow::qmChannel_aboutToShow()
 	qmChannel->addAction(qaChannelUnlinkAll);
 	qmChannel->addSeparator();
 	qmChannel->addAction(qaChannelSendMessage);
-	qmChannel->addAction(qaChannelCopyURL);
 
 #ifndef Q_OS_MAC
 	if (g.s.bMinimalView) {
@@ -1731,26 +1726,6 @@ void MainWindow::on_qaChannelSendMessage
 	delete texm;
 }
 
-void MainWindow::on_qaChannelCopyURL_triggered() {
-	Channel *c = getContextMenuChannel();
-	QString host, uname, pw, channel;
-	unsigned short port;
-
-	if (!c)
-		return;
-
-	g.sh->getConnectionInfo(host, port, uname, pw);
-
-	// walk back up the channel list to build the URL.
-	while (c->cParent != NULL) {
-		channel.prepend(c->qsName);
-		channel.prepend(QLatin1String("/"));
-		c = c->cParent;
-	}
-
-	QApplication::clipboard()->setMimeData(ServerItem::toMimeData(c->qsName, host, port, channel), QClipboard::Clipboard);
-}
-
 void MainWindow::updateMenuPermissions() {
 	ClientUser *cu = NULL;
 	Channel *c = NULL;
@@ -1828,7 +1803,11 @@ void MainWindow::updateMenuPermissions()
 	qaChannelUnlinkAll->setEnabled(p & (ChanACL::Write | ChanACL::LinkChannel));
 
 	qaChannelSendMessage->setEnabled(p & (ChanACL::Write | ChanACL::TextMessage));
+#ifdef NDN_MUMBLE
+	qteChat->setEnabled(false);
+#else
 	qteChat->setEnabled(p & (ChanACL::Write | ChanACL::TextMessage));
+#endif
 }
 
 void MainWindow::talkingChanged() {
@@ -2205,21 +2184,6 @@ void MainWindow::on_gsWhisper_triggered(
 				return;
 			}
 		}
-		
-		if (gsMetaLink->active()) {
-			if (! st.bUsers) {
-				Channel *c = ClientUser::get(g.uiSession)->cChannel;
-				Channel *l = mapChannel(st.iChannel);
-				if (l) {
-					if (c->qsPermLinks.contains(l)) {
-						g.sh->removeChannelLink(c->iId, l->iId);
-					} else {
-						g.sh->addChannelLink(c->iId, l->iId);
-					}
-				}
-				return;
-			}
-		}
 
 		qsCurrentTargets.insert(st);
 		updateTarget();
@@ -2375,6 +2339,7 @@ void MainWindow::serverDisconnected(QAbs
 			g.l->log(Log::Warning, tr("SSL Verification failed: %1").arg(e.errorString()));
 		if (! g.sh->qscCert.isEmpty()) {
 			QSslCertificate c = g.sh->qscCert.at(0);
+#ifndef NDN_MUMBLE
 			QString basereason;
 			if (! Database::getDigest(host, port).isNull()) {
 				basereason = tr("<b>WARNING:</b> The server presented a certificate that was different from the stored one.");
@@ -2402,15 +2367,46 @@ void MainWindow::serverDisconnected(QAbs
 					vc.exec();
 					continue;
 				} else if (res == QMessageBox::Yes) {
+#endif
 					Database::setDigest(host, port, QString::fromLatin1(c.digest(QCryptographicHash::Sha1).toHex()));
 					qaServerDisconnect->setEnabled(true);
 					on_Reconnect_timeout();
+#ifndef NDN_MUMBLE
 				}
 				break;
 			}
+#endif
 		}
+
 	} else if (err == QAbstractSocket::SslHandshakeFailedError) {
-		QMessageBox::warning(this, tr("SSL Version mismatch"), tr("This server is using an older encryption standard, and is no longer supported by modern versions of Mumble."), QMessageBox::Ok);
+		if (QMessageBox::warning(this, tr("SSL Version mismatch"), tr("This server is using an older encryption standard. It might be an older 1.1 based Mumble server.<br />Would you like to launch the compatibility client to connect to it?"), QMessageBox::Yes | QMessageBox::No, QMessageBox::Yes) == QMessageBox::Yes) {
+
+			QString host, user, pw;
+			unsigned short port;
+			QUrl url;
+
+			g.sh->getConnectionInfo(host, port, user, pw);
+			url.setScheme(QLatin1String("mumble"));
+			url.setHost(host);
+			url.setPort(port);
+			url.setUserName(user);
+			url.addQueryItem(QLatin1String("version"), QLatin1String("1.1.8"));
+
+#ifdef USE_DBUS
+			QDBusInterface qdbi(QLatin1String("net.sourceforge.mumble.mumble11x"), QLatin1String("/"), QLatin1String("net.sourceforge.mumble.Mumble"));
+
+			QDBusMessage reply=qdbi.call(QLatin1String("openUrl"), QLatin1String(url.toEncoded()));
+			if (reply.type() == QDBusMessage::ReplyMessage) {
+				this->close();
+				return;
+			} else
+#endif
+			{
+				if (launchCompatibilityClient(url))
+					return;
+			}
+			QMessageBox::critical(this, tr("Failed to launch compatibility client"), tr("The compatibility client could not be found, or failed to start.<br />Note that the compatibility client is an optional component for most installations, and might not be installed."), QMessageBox::Ok, QMessageBox::Ok);
+		}
 	} else {
 		bool ok = false;
 		bool matched = false;
@@ -2531,6 +2527,11 @@ void MainWindow::qtvUserCurrentChanged(c
 
 	if (g.uiSession == 0) {
 		qteChat->setDefaultText(tr("<center>Not connected</center>"), true);
+#ifdef NDN_MUMBLE
+	} else {
+		qteChat->setDefaultText(tr("Connected"));
+	}
+#else
 	} else if (p == NULL || p->uiSession == g.uiSession) {
 		// Channel tree target
 		if (c == NULL) // If no channel selected fallback to current one
@@ -2541,6 +2542,7 @@ void MainWindow::qtvUserCurrentChanged(c
 		// User target
 		qteChat->setDefaultText(tr("<center>Type message to user '%1' here</center>").arg(p->qsName));
 	}
+#endif
 
 	updateMenuPermissions();
 }
@@ -2678,6 +2680,59 @@ QPair<QByteArray, QImage> MainWindow::op
 	return retval;
 }
 
+bool MainWindow::launchCompatibilityClient(const QUrl &url) {
+	Audio::stop();
+
+#ifdef Q_OS_MAC
+	FSRef fref;
+	OSStatus err;
+
+	err = LSFindApplicationForInfo(kLSUnknownCreator, CFSTR("net.sourceforge.mumble.Mumble11x"), CFSTR("Mumble11x.app"), &fref, NULL);
+	if (err == noErr) {
+		CFMutableArrayRef arguments = CFArrayCreateMutable(kCFAllocatorDefault, 2, &kCFTypeArrayCallBacks);
+		if (arguments) {
+			CFArrayAppendValue(arguments, CFSTR("Mumble11x"));
+			QString qsUrlString = url.toString();
+			CFStringRef urlString = CFStringCreateWithCharacters(kCFAllocatorDefault, reinterpret_cast<const UniChar *>(qsUrlString.unicode()), qsUrlString.length());
+			CFArrayAppendValue(arguments, urlString);
+			CFRelease(urlString);
+		}
+
+		LSApplicationParameters parm;
+		memset(&parm, 0, sizeof(LSApplicationParameters));
+		parm.flags = kLSLaunchDefaults;
+		parm.application = &fref;
+		parm.argv = arguments;
+		err = LSOpenApplication(&parm, NULL);
+
+		CFRelease(arguments);
+
+		if (err == noErr) {
+			this->close();
+			return true;
+		}
+	}
+#else
+	QString executable = QApplication::instance()->applicationFilePath();
+	int idx = executable.lastIndexOf(QLatin1String("mumble"));
+	if (idx >= 0) {
+		QStringList args;
+		args << url.toString();
+
+		executable.replace(idx, 6, QLatin1String("mumble11x"));
+		if (QProcess::startDetached(executable, args)) {
+			g.mw->bSuppressAskOnQuit = true;
+			qApp->closeAllWindows();
+		}
+		return true;
+	}
+#endif
+
+	Audio::start();
+
+	return false;
+}
+
 void MainWindow::destroyUserInformation() {
 	UserInformation *ui = static_cast<UserInformation *>(sender());
 	QMap<unsigned int, UserInformation *>::iterator i;
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/LookConfig.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/LookConfig.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/FileEngine.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/FileEngine.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/LookConfig.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/LookConfig.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ASIOInput.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ASIOInput.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Messages.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Messages.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -746,21 +746,3 @@ void MainWindow::msgUserStats(const Mumb
 
 void MainWindow::msgRequestBlob(const MumbleProto::RequestBlob &) {
 }
-
-void MainWindow::msgSuggestConfig(const MumbleProto::SuggestConfig &msg) {
-	if (msg.has_version() && (msg.version() > MumbleVersion::getRaw())) {
-		g.l->log(Log::Warning, tr("The server requests minimum client version %1").arg(MumbleVersion::toString(msg.version())));
-	}
-	if (msg.has_positional() && (msg.positional() != g.s.doPositionalAudio())) {
-		if (msg.positional())
-			g.l->log(Log::Warning, tr("The server requests positional audio be enabled."));
-		else
-			g.l->log(Log::Warning, tr("The server requests positional audio be disabled."));
-	}
-	if (msg.has_push_to_talk() && (msg.push_to_talk() != (g.s.atTransmit == Settings::PushToTalk))) {
-		if (msg.push_to_talk())
-			g.l->log(Log::Warning, tr("The server requests Push-to-Talk be enabled."));
-		else
-			g.l->log(Log::Warning, tr("The server requests Push-to-Talk be disabled."));
-	}
-}
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/main.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/main.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -54,6 +54,12 @@
 #include "CrashReporter.h"
 #include "FileEngine.h"
 #include "SocketRPC.h"
+#include <signal.h>
+#include <execinfo.h>
+#include <stdlib.h>
+#include <pthread.h>
+#include "wavlog.h"
+#include <sys/time.h>
 
 #ifdef BOOST_NO_EXCEPTIONS
 namespace boost {
@@ -122,17 +128,25 @@ bool QAppMumble::winEventFilter(MSG *msg
 }
 #endif
 
+void abort_handler(int sig) {
+	void *array[25];
+	size_t size;
+
+	size = backtrace(array, 25);
+
+	fprintf(stderr, "Error: signal %d:\n", sig);
+	backtrace_symbols_fd(array, size, 2);
+	exit(1);
+}
+
 int main(int argc, char **argv) {
+	signal(SIGABRT, abort_handler);
 	int res = 0;
 
 	QT_REQUIRE_VERSION(argc, argv, "4.4.0");
 
 #if defined(Q_OS_WIN)
 	SetDllDirectory(L"");
-#else
-#ifndef Q_OS_MAC
-	setenv("AVAHI_COMPAT_NOWARN", "1", 1);
-#endif
 #endif
 
 	// Initialize application object.
@@ -207,7 +221,31 @@ int main(int argc, char **argv) {
 #endif
 			MumbleVersion::get(&major, &minor, &patch, version);
 
-			if ((major == 1) && (minor == 2)) {
+			if ((major == 1) && (minor == 1)) {
+				bool sent = false;
+#ifdef USE_DBUS
+				QDBusInterface qdbi(QLatin1String("net.sourceforge.mumble.mumble11x"), QLatin1String("/"), QLatin1String("net.sourceforge.mumble.Mumble"));
+
+				QDBusMessage reply=qdbi.call(QLatin1String("openUrl"), QLatin1String(url.toEncoded()));
+				sent = (reply.type() == QDBusMessage::ReplyMessage);
+#else
+				sent = SocketRPC::send(QLatin1String("Mumble11x"), QLatin1String("url"), param);
+#endif
+				if (sent) {
+					return 0;
+				} else {
+					QString executable = a.applicationFilePath();
+					int idx = executable.lastIndexOf(QLatin1String("mumble"));
+					if (idx >= 0) {
+						QStringList args;
+						args << url.toString();
+
+						executable.replace(idx, 6, QLatin1String("mumble11x"));
+						if (QProcess::startDetached(executable, args))
+							return 0;
+					}
+				}
+			} else {
 				bool sent = false;
 #ifdef USE_DBUS
 				QDBusInterface qdbi(QLatin1String("net.sourceforge.mumble.mumble"), QLatin1String("/"), QLatin1String("net.sourceforge.mumble.Mumble"));
@@ -281,7 +319,7 @@ int main(int argc, char **argv) {
 #ifdef Q_OS_MAC
 	if (os_lang) {
 		qWarning("Using Mac OS X system langauge as locale name");
-		qsSystemLocale = QLatin1String(os_lang);
+		qsSystemLocale = QString(os_lang);
 	}
 #endif
 
@@ -303,10 +341,8 @@ int main(int argc, char **argv) {
 	else if (qttranslator.load(QLatin1String("translation:qt_") + locale))
 		a.installTranslator(&qttranslator);
 
-	if (g.s.qsRegionalHost.isEmpty()) {
-		g.s.qsRegionalHost = qsSystemLocale;
-		g.s.qsRegionalHost = g.s.qsRegionalHost.remove(QRegExp(QLatin1String("^.+_"))).toLower() + QLatin1String(".mumble.info");
-	}
+	g.qsRegionalHost = qsSystemLocale;
+	g.qsRegionalHost = g.qsRegionalHost.remove(QRegExp(QLatin1String("^.+_"))).toLower() + QLatin1String(".mumble.info");
 
 	// Initialize proxy settings
 	NetworkConfig::SetupProxy();
@@ -378,7 +414,7 @@ int main(int argc, char **argv) {
 	}
 
 	g.s.uiUpdateCounter = 1;
-
+#ifndef NDN_MUMBLE 
 	if (! CertWizard::validateCert(g.s.kpCertificate)) {
 		QDir qd(QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation));
 		QFile qf(qd.absoluteFilePath(QLatin1String("MumbleAutomaticCertificateBackup.p12")));
@@ -406,21 +442,26 @@ int main(int argc, char **argv) {
 	if (QDateTime::currentDateTime().daysTo(g.s.kpCertificate.first.first().expiryDate()) < 14)
 		g.l->log(Log::Warning, CertWizard::tr("<b>Certificate Expiry:</b> Your certificate is about to expire. You need to renew it, or you will no longer be able to connect to servers you are registered on."));
 
+
 #ifdef QT_NO_DEBUG
-#ifndef SNAPSHOT_BUILD
+#ifdef RELEASE_BUILD
 	if (g.s.bUpdateCheck)
+#endif
 		new VersionCheck(true, g.mw);
-#else
+
+#ifdef SNAPSHOT_BUILD
 	new VersionCheck(false, g.mw, true);
 #endif
 #else
-	g.mw->msgBox(MainWindow::tr("Skipping version check in debug mode."));
+	g.mw->msgBox(g.mw->tr("Skipping version check in debug mode."));
 #endif
 	if (g.s.bPluginOverlayCheck) {
 		g.p->checkUpdates();
 		g.o->checkUpdates();
 	}
 
+#endif // end NDN_MUMBLE
+
 	if (url.isValid()) {
 		OpenURLEvent *oue = new OpenURLEvent(url);
 		qApp->postEvent(g.mw, oue);
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/TextToSpeech.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/TextToSpeech.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/SocketRPC.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/SocketRPC.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/CoreAudio.cpp
+++ mumble-1.2.3-87-gf7d8711/src/mumble/CoreAudio.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009-2010, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/ConfigDialogDelegate.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/ConfigDialogDelegate.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2009-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/mumble/Cert.h
+++ mumble-1.2.3-87-gf7d8711/src/mumble/Cert.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/murmur.pro
+++ mumble-1.2.3-87-gf7d8711/src/murmur/murmur.pro
@@ -2,7 +2,7 @@ include(../mumble.pri)
 
 DEFINES *= MURMUR
 TEMPLATE	=app
-CONFIG  *= network
+CONFIG  *= network console
 CONFIG(static) {
 	QMAKE_LFLAGS *= -static
 }
@@ -13,12 +13,16 @@ TARGET = murmur
 DBFILE  = murmur.db
 LANGUAGE	= C++
 FORMS =
-HEADERS *= Server.h ServerUser.h Meta.h
-SOURCES *= main.cpp Server.cpp ServerUser.cpp ServerDB.cpp Register.cpp Cert.cpp Messages.cpp Meta.cpp RPC.cpp
+HEADERS *= Server.h ServerUser.h Meta.h GroupManager/RemoteUser.h GroupManager/GroupManager.h GroupManager/debugbox.h  GroupManager/aes_util.h MediaProcess/media_pro.h 
+SOURCES *= main.cpp Server.cpp ServerUser.cpp ServerDB.cpp Register.cpp Cert.cpp Messages.cpp Meta.cpp RPC.cpp GroupManager/RemoteUser.cpp GroupManager/GroupManager.cpp GroupManager/debugbox.cpp GroupManager/aes_util.cpp MediaProcess/media_pro.cpp
 
 DIST = DBus.h ServerDB.h ../../icons/murmur.ico Murmur.ice MurmurI.h MurmurIceWrapper.cpp murmur.plist
 PRECOMPILED_HEADER = murmur_pch.h
 
+INCLUDEPATH *= /usr/local/include
+QMAKE_LIBDIR *= /usr/local/lib
+LIBS *= -lccn 
+
 !CONFIG(no-ice) {
 	CONFIG *= ice
 }
@@ -65,18 +69,27 @@ dbus {
 }
 
 ice {
-	slice.target = Murmur.cpp
+	SLICEFILES = Murmur.ice
+
+	slice.output = ${QMAKE_FILE_BASE}.cpp
 	win32 {
-		slice.commands = slice2cpp --checksum -I\"$$ICE_PATH/slice\" Murmur.ice
+		slice.commands = slice2cpp --checksum -I\"$$ICE_PATH/slice\" ${QMAKE_FILE_NAME}
 	} else {
-		slice.commands = slice2cpp --checksum -I/usr/local/share/Ice -I/usr/share/Ice/slice -I/usr/share/slice -I/usr/share/Ice-3.4.1/slice/ -I/usr/share/Ice-3.3.1/slice/ Murmur.ice
+		slice.commands = slice2cpp --checksum -I/usr/local/share/Ice -I/usr/share/Ice/slice -I/usr/share/slice -I/usr/share/Ice-3.4.1/slice/ -I/usr/share/Ice-3.3.1/slice/ ${QMAKE_FILE_NAME}
 	}
+	slice.input = SLICEFILES
+	slice.CONFIG *= no_link explicit_dependencies
+	slice.variable_out = SOURCES
+
+	sliceh.output = ${QMAKE_FILE_BASE}.h
+	sliceh.depends = ${QMAKE_FILE_BASE}.cpp
+	sliceh.commands = $$escape_expand(\\n)
+	sliceh.input = SLICEFILES
+	sliceh.CONFIG *= no_link explicit_dependencies target_predeps
 
-	slice.depends = Murmur.ice
-	QMAKE_EXTRA_TARGETS *= slice
-	PRE_TARGETDEPS *= Murmur.cpp
+	QMAKE_EXTRA_COMPILERS *= slice sliceh
 
-	SOURCES *= Murmur.cpp MurmurIce.cpp
+	SOURCES *= MurmurIce.cpp
 	HEADERS *= MurmurIce.h
 	win32:CONFIG(debug, debug|release) {
 		LIBS *= -lIceD -lIceUtilD
@@ -108,8 +121,8 @@ ice {
 bonjour {
 	DEFINES *= USE_BONJOUR
 
-	HEADERS *= ../bonjour/bonjourrecord.h ../bonjour/bonjourserviceregister.h BonjourServer.h
-	SOURCES *= ../bonjour/bonjourserviceregister.cpp BonjourServer.cpp
+	HEADERS *= ../bonjour/BonjourRecord.h ../bonjour/BonjourServiceRegister.h BonjourServer.h
+	SOURCES *= ../bonjour/BonjourServiceRegister.cpp BonjourServer.cpp
 	INCLUDEPATH *= ../bonjour
 	win32 {
 		INCLUDEPATH *= "$$BONJOUR_PATH/include"
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/UnixMurmur.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/UnixMurmur.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -161,14 +161,12 @@ UnixMurmur::~UnixMurmur() {
 
 void UnixMurmur::hupSignalHandler(int) {
 	char a = 1;
-	ssize_t len = ::write(iHupFd[0], &a, sizeof(a));
-	Q_UNUSED(len);
+	::write(iHupFd[0], &a, sizeof(a));
 }
 
 void UnixMurmur::termSignalHandler(int) {
 	char a = 1;
-	ssize_t len = ::write(iTermFd[0], &a, sizeof(a));
-	Q_UNUSED(len);
+	::write(iTermFd[0], &a, sizeof(a));
 }
 
 
@@ -177,29 +175,25 @@ void UnixMurmur::termSignalHandler(int)
 void UnixMurmur::handleSigHup() {
 	qsnHup->setEnabled(false);
 	char tmp;
-	ssize_t len = ::read(iHupFd[1], &tmp, sizeof(tmp));
-	Q_UNUSED(len);
+	::read(iHupFd[1], &tmp, sizeof(tmp));
 
-	if (! qfLog) {
-		qWarning("Caught SIGHUP, but logfile not in use");
-	} else if (! qfLog->isOpen()) {
-		qWarning("Caught SIGHUP, but logfile not in use -- interpreting as hint to quit");
-		QCoreApplication::instance()->quit();
+	if (! qfLog || ! qfLog->isOpen()) {
+		if (qfLog) {
+			qWarning("Caught SIGHUP, but logfile not in use -- interpreting as hint to quit");
+			QCoreApplication::instance()->quit();
+		} else {
+			qWarning("Caught SIGHUP, but logfile not in use");
+		}
 	} else {
 		qWarning("Caught SIGHUP, will reopen %s", qPrintable(Meta::mp.qsLogfile));
-
-		QFile *newlog = new QFile(Meta::mp.qsLogfile);
-		bool result = newlog->open(QIODevice::WriteOnly | QIODevice::Append | QIODevice::Text);
+		qfLog->close();
+		qfLog->setFileName(Meta::mp.qsLogfile);
+		bool result = qfLog->open(QIODevice::WriteOnly | QIODevice::Append | QIODevice::Text);
 		if (! result) {
-			delete newlog;
-			qCritical("Failed to reopen logfile for writing, keeping old log");
+			delete qfLog;
+			qfLog = NULL;
 		} else {
-			QFile *oldlog = qfLog;
-
-			newlog->setTextModeEnabled(true);
-			qfLog = newlog;
-			oldlog->close();
-			delete oldlog;
+			qfLog->setTextModeEnabled(true);
 			qWarning("Log rotated successfully");
 		}
 	}
@@ -209,8 +203,7 @@ void UnixMurmur::handleSigHup() {
 void UnixMurmur::handleSigTerm() {
 	qsnTerm->setEnabled(false);
 	char tmp;
-	ssize_t len = ::read(iTermFd[1], &tmp, sizeof(tmp));
-	Q_UNUSED(len);
+	::read(iTermFd[1], &tmp, sizeof(tmp));
 
 	qCritical("Caught SIGTERM, exiting");
 
@@ -238,22 +231,14 @@ void UnixMurmur::setuid() {
 		} else
 			qFatal("Couldn't switch uid/gid.");
 #else
-		if (::initgroups(qPrintable(Meta::mp.qsName), Meta::mp.uiGid) != 0)
-			qCritical("Can't initialize supplementary groups");
-		if (::setgid(Meta::mp.uiGid) != 0)
+		if (setregid(Meta::mp.uiGid, Meta::mp.uiGid) != 0)
 			qCritical("Failed to switch to gid %d", Meta::mp.uiGid);
-		if (::setuid(Meta::mp.uiUid) != 0) {
+		if (setresuid(Meta::mp.uiUid, Meta::mp.uiUid, 0) != 0) {
 			qFatal("Failed to become uid %d", Meta::mp.uiUid);
 		} else {
 			qCritical("Successfully switched to uid %d", Meta::mp.uiUid);
 			initialcap();
 		}
-		if (!Meta::mp.qsHome.isEmpty()) {
-			// QDir::homePath is broken. It only looks at $HOME
-			// instead of getpwuid() so we have to set our home
-			// ourselves
-			::setenv("HOME", qPrintable(Meta::mp.qsHome), 1);
-		}
 #endif
 	} else if (bRoot) {
 		qCritical("WARNING: You are running murmurd as root, without setting a uname in the ini file. This might be a security risk.");
@@ -262,7 +247,7 @@ void UnixMurmur::setuid() {
 
 void UnixMurmur::initialcap() {
 #ifdef Q_OS_LINUX
-	cap_value_t caps[] = {CAP_NET_ADMIN, CAP_SETUID, CAP_SETGID, CAP_CHOWN, CAP_SYS_RESOURCE, CAP_DAC_OVERRIDE };
+	cap_value_t caps[] = {CAP_NET_ADMIN, CAP_SETUID, CAP_SETGID, CAP_SYS_RESOURCE, CAP_DAC_OVERRIDE };
 
 	if (! bRoot)
 		return;
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/Tray.h
+++ mumble-1.2.3-87-gf7d8711/src/murmur/Tray.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/murmur.plist
+++ mumble-1.2.3-87-gf7d8711/src/murmur/murmur.plist
@@ -13,7 +13,7 @@
 	<key>CFBundleSignature</key>
 	<string>MMUR</string>
 	<key>CFBundleVersion</key>
-	<string>1.2.4</string>
+	<string>1.2.3</string>
 	<key>NSHumanReadableCopyright</key>
 	<string>Copyright (c) 2005-2010 Thorvald Natvig &lt;slicer@users.sourceforge.net&gt;</string>
 </dict>
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/murmur.rc
+++ mumble-1.2.3-87-gf7d8711/src/murmur/murmur.rc
@@ -8,15 +8,15 @@ IDI_ICON1               ICON    DISCARDA
 #define VER_DEBUG                   VS_FF_DEBUG
 #endif
 
-#ifdef SNAPSHOT_BUILD
+#ifndef RELEASE_BUILD
 #define	VER_RELEASE	VS_FF_SPECIALBUILD|VS_FF_PRERELEASE
 #else
 #define VER_RELEASE 0L
 #endif
 
 VS_VERSION_INFO VERSIONINFO
-	FILEVERSION		1,2,4,0
-	PRODUCTVERSION	1,2,4,0
+	FILEVERSION		1,2,3,0
+	PRODUCTVERSION	1,2,3,0
 	FILEFLAGSMASK	VS_FFI_FILEFLAGSMASK
 	FILEFLAGS		(VER_DEBUG|VER_RELEASE)
 	FILEOS			VOS_NT_WINDOWS32
@@ -29,12 +29,12 @@ VS_VERSION_INFO VERSIONINFO
 			BEGIN
 				VALUE "CompanyName", "Thorvald Natvig"
 				VALUE "FileDescription", "Murmur - Low-latency VoIP server"
-				VALUE "FileVersion", "1.2.4"
-				VALUE "ProductVersion", "1.2.4"
-				VALUE "LegalCopyright", "Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>"
+				VALUE "FileVersion", "1.2.3"
+				VALUE "ProductVersion", "1.2.3"
+				VALUE "LegalCopyright", "Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>"
 				VALUE "OriginalFilename", "murmur.exe"
 				VALUE "ProductName", "Mumble"
-#ifdef SNAPSHOT_BUILD
+#ifndef RELEASE_BUILD
 				VALUE "SpecialBuild", "Snapshot development release"
 #endif
 			END
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/murmur_pch.h
+++ mumble-1.2.3-87-gf7d8711/src/murmur/murmur_pch.h
@@ -56,12 +56,10 @@ extern "C" {
 #include <sys/time.h>
 #include <sys/resource.h>
 #ifdef Q_OS_LINUX
-#include <linux/types.h> // needed to work around evil magic stuff in capability.h
 #include <sys/capability.h>
 #include <sys/prctl.h>
 #endif
 #include <pwd.h>
-#include <grp.h>
 #ifdef __FreeBSD__
 #include <netinet/in_systm.h>
 #endif
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/Cert.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/Cert.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/ServerUser.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/ServerUser.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/Murmur.ice
+++ mumble-1.2.3-87-gf7d8711/src/murmur/Murmur.ice
@@ -64,10 +64,6 @@ module Murmur
 		bool tcponly;
 		/** Idle time. This is how many seconds it is since the user last spoke. Other activity is not counted. */
 		int idlesecs;
-		/** UDP Ping Average. This is the average ping for the user via UDP over the duration of the connection. */
-		float udpPing;
-		/** TCP Ping Average. This is the average ping for the user via TCP over the duration of the connection. */
-		float tcpPing;
 	};
 
 	sequence<int> IntList;
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/Server.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/Server.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -46,6 +46,22 @@
 
 #define UDP_PACKET_SIZE 1024
 
+/* yangxu */
+void Server::newRemoteClient(RemoteUser *u) {
+    MumbleProto::UserState mpus;
+    mpus.set_session(u->uiSession);
+    mpus.set_name(u->qsName.toLocal8Bit().constData());
+
+    sendAll(mpus);
+}
+
+void Server::delRemoteClient(int uid) {
+    MumbleProto::UserRemove mpur;
+    mpur.set_session(uid);
+
+    sendAll(mpur);
+}
+
 LogEmitter::LogEmitter(QObject *p) : QObject(p) {
 };
 
@@ -199,6 +215,14 @@ Server::Server(int snum, QObject *p) : Q
 	readLinks();
 	initializeCert();
 
+    /* yangxu */
+    pGroupManager = new GroupManager(&ndnMediaPro);
+    connect(pGroupManager, SIGNAL(remoteUserJoin(RemoteUser *)), this, SLOT(newRemoteClient(RemoteUser *)));
+    connect(pGroupManager, SIGNAL(remoteUserLeave(int)), this, SLOT(delRemoteClient(int)));
+
+   connect(&ndnMediaPro.ndnState, SIGNAL(remoteMediaArrivalSig(QString)),
+        this, SLOT(receiveRemoteData(QString)));
+
 	int major, minor, patch;
 	QString release;
 	Meta::getVersion(major, minor, patch, release);
@@ -312,9 +336,6 @@ void Server::readParams() {
 	bCertRequired = Meta::mp.bCertRequired;
 	qrUserName = Meta::mp.qrUserName;
 	qrChannelName = Meta::mp.qrChannelName;
-	qvSuggestVersion = Meta::mp.qvSuggestVersion;
-	qvSuggestPositional = Meta::mp.qvSuggestPositional;
-	qvSuggestPushToTalk = Meta::mp.qvSuggestPushToTalk;
 
 	QString qsHost = getConf("host", QString()).toString();
 	if (! qsHost.isEmpty()) {
@@ -365,18 +386,6 @@ void Server::readParams() {
 	bAllowPing = getConf("allowping", bAllowPing).toBool();
 	bCertRequired = getConf("certrequired", bCertRequired).toBool();
 
-	qvSuggestVersion = getConf("suggestversion", qvSuggestVersion);
-	if (qvSuggestVersion.toUInt() == 0)
-		qvSuggestVersion = QVariant();
-
-	qvSuggestPositional = getConf("suggestpositional", qvSuggestPositional);
-	if (qvSuggestPositional.toString().trimmed().isEmpty())
-		qvSuggestPositional = QVariant();
-
-	qvSuggestPushToTalk = getConf("suggestpushtotalk", qvSuggestPushToTalk);
-	if (qvSuggestPushToTalk.toString().trimmed().isEmpty())
-		qvSuggestPushToTalk = QVariant();
-
 	qrUserName=QRegExp(getConf("username", qrUserName.pattern()).toString());
 	qrChannelName=QRegExp(getConf("channelname", qrChannelName.pattern()).toString());
 }
@@ -476,12 +485,6 @@ void Server::setLiveConf(const QString &
 		qrUserName=!v.isNull() ? QRegExp(v) : Meta::mp.qrUserName;
 	else if (key == "channelname")
 		qrChannelName=!v.isNull() ? QRegExp(v) : Meta::mp.qrChannelName;
-	else if (key == "suggestversion")
-		qvSuggestVersion = ! v.isNull() ? (v.isEmpty() ? QVariant() : v ) : Meta::mp.qvSuggestVersion;
-	else if (key == "suggestpositional")
-		qvSuggestPositional = ! v.isNull() ? (v.isEmpty() ? QVariant() : v ) : Meta::mp.qvSuggestPositional;
-	else if (key == "suggestpushtotalk")
-		qvSuggestPushToTalk = ! v.isNull() ? (v.isEmpty() ? QVariant() : v ) : Meta::mp.qvSuggestPushToTalk;
 }
 
 #ifdef USE_BONJOUR
@@ -815,6 +818,10 @@ void Server::processMsg(ServerUser *u, c
 		foreach(p, c->qlUsers) {
 			ServerUser *pDst = static_cast<ServerUser *>(p);
 			SENDTO;
+
+            /* senwang*/
+            //QString strFullName = pGroupManager->getFullLocalName();
+            ndnMediaPro.sendLocalMedia(buffer, len);
 		}
 
 		if (! c->qhLinks.isEmpty()) {
@@ -1118,6 +1125,16 @@ void Server::connectionClosed(QAbstractS
 
 	u->deleteLater();
 
+	/* zhenkai */
+	// send out leave notification
+	pGroupManager->sendLeaveInterest();
+
+	/* zhenkai */
+	// close murmurd after the call is finished
+	if (u->sState == ServerUser::Authenticated) {
+		std::exit(0);
+	}
+
 	if (qhUsers.isEmpty())
 		stopThread();
 }
@@ -1648,3 +1665,18 @@ bool Server::isTextAllowed(QString &text
 		return (length <= iMaxTextMessageLength);
 	}
 }
+
+/* senwang*/
+void Server::receiveRemoteData(QString strUserName) {
+
+    int res = 0;
+    QByteArray qba;
+    char buf[5000];
+    res = ndnMediaPro.getRemoteMedia(strUserName, buf, sizeof(buf));
+    if (res <= 0) return;
+    QHash<unsigned int, ServerUser *>::const_iterator i;
+    for (i = qhUsers.constBegin(); i != qhUsers.constEnd(); i++ ) {
+        sendMessage(i.value(), buf, res, qba, true);
+	}
+
+}
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/ServerDB.h
+++ mumble-1.2.3-87-gf7d8711/src/murmur/ServerDB.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/DBus.h
+++ mumble-1.2.3-87-gf7d8711/src/murmur/DBus.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/BonjourServer.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/BonjourServer.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2009-2011, Stefan Hacker
+/* Copyright (C) 2009, Stefan Hacker
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/Server.h
+++ mumble-1.2.3-87-gf7d8711/src/murmur/Server.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -40,6 +40,9 @@
 #include "Net.h"
 #include "ACL.h"
 #include "DBus.h"
+/* yangxu */
+#include "GroupManager/GroupManager.h"
+#include "MediaProcess/media_pro.h"
 
 #ifdef USE_BONJOUR
 #include "BonjourServer.h"
@@ -127,10 +130,6 @@ class Server : public QThread {
 		QRegExp qrUserName;
 		QRegExp qrChannelName;
 
-		QVariant qvSuggestVersion;
-		QVariant qvSuggestPositional;
-		QVariant qvSuggestPushToTalk;
-
 		QList<QSslCertificate> qlCA;
 		QSslCertificate qscCert;
 		QSslKey qskKey;
@@ -314,6 +313,22 @@ class Server : public QThread {
 		void setConf(const QString &key, const QVariant &value);
 		void dblog(const QString &str);
 
+        /* yangxu */
+    private:
+        GroupManager *pGroupManager;
+        NdnMediaProcess ndnMediaPro;
+
+    public slots:
+        // cheat localUsers to treat remotuser
+        void newRemoteClient(RemoteUser *);
+        void delRemoteClient(int);
+
+        /* senwang*/
+    public slots:
+        void receiveRemoteData(QString strUserName);
+	
+	public:
+		
 		// From msgHandler. Implementation in Messages.cpp
 #define MUMBLE_MH_MSG(x) void msg##x(ServerUser *, MumbleProto:: x &);
 		MUMBLE_MH_ALL
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/MurmurIce.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/MurmurIce.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -91,8 +91,6 @@ static void userToUser(const ::User *p,
 	mp.identity = u8(u->qsIdentity);
 	mp.context = u->ssContext;
 	mp.idlesecs = u->bwr.idleSeconds();
-	mp.udpPing = u->dUDPPingAvg;
-	mp.tcpPing = u->dTCPPingAvg;
 
 	mp.tcponly = ! u->bUdp;
 
@@ -831,7 +829,6 @@ static void impl_Server_getLog(const ::M
 	cb->ice_response(ll);
 }
 
-#define ACCESS_Server_getLogLen_READ
 static void impl_Server_getLogLen(const ::Murmur::AMD_Server_getLogLenPtr cb, int server_id) {
 	NEED_SERVER_EXISTS;
 
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/murmur/Mumble.pb.h
@@ -0,0 +1,8257 @@
+// Generated by the protocol buffer compiler.  DO NOT EDIT!
+// source: Mumble.proto
+
+#ifndef PROTOBUF_Mumble_2eproto__INCLUDED
+#define PROTOBUF_Mumble_2eproto__INCLUDED
+
+#include <string>
+
+#include <google/protobuf/stubs/common.h>
+
+#if GOOGLE_PROTOBUF_VERSION < 2003000
+#error This file was generated by a newer version of protoc which is
+#error incompatible with your Protocol Buffer headers.  Please update
+#error your headers.
+#endif
+#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
+#error This file was generated by an older version of protoc which is
+#error incompatible with your Protocol Buffer headers.  Please
+#error regenerate this file with a newer version of protoc.
+#endif
+
+#include <google/protobuf/generated_message_util.h>
+#include <google/protobuf/repeated_field.h>
+#include <google/protobuf/extension_set.h>
+#include <google/protobuf/generated_message_reflection.h>
+// @@protoc_insertion_point(includes)
+
+namespace MumbleProto {
+
+// Internal implementation detail -- do not call these.
+void  protobuf_AddDesc_Mumble_2eproto();
+void protobuf_AssignDesc_Mumble_2eproto();
+void protobuf_ShutdownFile_Mumble_2eproto();
+
+class Version;
+class UDPTunnel;
+class Authenticate;
+class Ping;
+class Reject;
+class ServerConfig;
+class ServerSync;
+class ChannelRemove;
+class ChannelState;
+class UserRemove;
+class UserState;
+class BanList;
+class BanList_BanEntry;
+class TextMessage;
+class PermissionDenied;
+class ACL;
+class ACL_ChanGroup;
+class ACL_ChanACL;
+class QueryUsers;
+class CryptSetup;
+class ContextActionAdd;
+class ContextAction;
+class UserList;
+class UserList_User;
+class VoiceTarget;
+class VoiceTarget_Target;
+class PermissionQuery;
+class CodecVersion;
+class UserStats;
+class UserStats_Stats;
+class RequestBlob;
+
+enum Reject_RejectType {
+  Reject_RejectType_None = 0,
+  Reject_RejectType_WrongVersion = 1,
+  Reject_RejectType_InvalidUsername = 2,
+  Reject_RejectType_WrongUserPW = 3,
+  Reject_RejectType_WrongServerPW = 4,
+  Reject_RejectType_UsernameInUse = 5,
+  Reject_RejectType_ServerFull = 6,
+  Reject_RejectType_NoCertificate = 7
+};
+bool Reject_RejectType_IsValid(int value);
+const Reject_RejectType Reject_RejectType_RejectType_MIN = Reject_RejectType_None;
+const Reject_RejectType Reject_RejectType_RejectType_MAX = Reject_RejectType_NoCertificate;
+const int Reject_RejectType_RejectType_ARRAYSIZE = Reject_RejectType_RejectType_MAX + 1;
+
+const ::google::protobuf::EnumDescriptor* Reject_RejectType_descriptor();
+inline const ::std::string& Reject_RejectType_Name(Reject_RejectType value) {
+  return ::google::protobuf::internal::NameOfEnum(
+    Reject_RejectType_descriptor(), value);
+}
+inline bool Reject_RejectType_Parse(
+    const ::std::string& name, Reject_RejectType* value) {
+  return ::google::protobuf::internal::ParseNamedEnum<Reject_RejectType>(
+    Reject_RejectType_descriptor(), name, value);
+}
+enum PermissionDenied_DenyType {
+  PermissionDenied_DenyType_Text = 0,
+  PermissionDenied_DenyType_Permission = 1,
+  PermissionDenied_DenyType_SuperUser = 2,
+  PermissionDenied_DenyType_ChannelName = 3,
+  PermissionDenied_DenyType_TextTooLong = 4,
+  PermissionDenied_DenyType_H9K = 5,
+  PermissionDenied_DenyType_TemporaryChannel = 6,
+  PermissionDenied_DenyType_MissingCertificate = 7,
+  PermissionDenied_DenyType_UserName = 8,
+  PermissionDenied_DenyType_ChannelFull = 9
+};
+bool PermissionDenied_DenyType_IsValid(int value);
+const PermissionDenied_DenyType PermissionDenied_DenyType_DenyType_MIN = PermissionDenied_DenyType_Text;
+const PermissionDenied_DenyType PermissionDenied_DenyType_DenyType_MAX = PermissionDenied_DenyType_ChannelFull;
+const int PermissionDenied_DenyType_DenyType_ARRAYSIZE = PermissionDenied_DenyType_DenyType_MAX + 1;
+
+const ::google::protobuf::EnumDescriptor* PermissionDenied_DenyType_descriptor();
+inline const ::std::string& PermissionDenied_DenyType_Name(PermissionDenied_DenyType value) {
+  return ::google::protobuf::internal::NameOfEnum(
+    PermissionDenied_DenyType_descriptor(), value);
+}
+inline bool PermissionDenied_DenyType_Parse(
+    const ::std::string& name, PermissionDenied_DenyType* value) {
+  return ::google::protobuf::internal::ParseNamedEnum<PermissionDenied_DenyType>(
+    PermissionDenied_DenyType_descriptor(), name, value);
+}
+enum ContextActionAdd_Context {
+  ContextActionAdd_Context_Server = 1,
+  ContextActionAdd_Context_Channel = 2,
+  ContextActionAdd_Context_User = 4
+};
+bool ContextActionAdd_Context_IsValid(int value);
+const ContextActionAdd_Context ContextActionAdd_Context_Context_MIN = ContextActionAdd_Context_Server;
+const ContextActionAdd_Context ContextActionAdd_Context_Context_MAX = ContextActionAdd_Context_User;
+const int ContextActionAdd_Context_Context_ARRAYSIZE = ContextActionAdd_Context_Context_MAX + 1;
+
+const ::google::protobuf::EnumDescriptor* ContextActionAdd_Context_descriptor();
+inline const ::std::string& ContextActionAdd_Context_Name(ContextActionAdd_Context value) {
+  return ::google::protobuf::internal::NameOfEnum(
+    ContextActionAdd_Context_descriptor(), value);
+}
+inline bool ContextActionAdd_Context_Parse(
+    const ::std::string& name, ContextActionAdd_Context* value) {
+  return ::google::protobuf::internal::ParseNamedEnum<ContextActionAdd_Context>(
+    ContextActionAdd_Context_descriptor(), name, value);
+}
+// ===================================================================
+
+class Version : public ::google::protobuf::Message {
+ public:
+  Version();
+  virtual ~Version();
+  
+  Version(const Version& from);
+  
+  inline Version& operator=(const Version& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const Version& default_instance();
+  
+  void Swap(Version* other);
+  
+  // implements Message ----------------------------------------------
+  
+  Version* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const Version& from);
+  void MergeFrom(const Version& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 version = 1;
+  inline bool has_version() const;
+  inline void clear_version();
+  static const int kVersionFieldNumber = 1;
+  inline ::google::protobuf::uint32 version() const;
+  inline void set_version(::google::protobuf::uint32 value);
+  
+  // optional string release = 2;
+  inline bool has_release() const;
+  inline void clear_release();
+  static const int kReleaseFieldNumber = 2;
+  inline const ::std::string& release() const;
+  inline void set_release(const ::std::string& value);
+  inline void set_release(const char* value);
+  inline void set_release(const char* value, size_t size);
+  inline ::std::string* mutable_release();
+  
+  // optional string os = 3;
+  inline bool has_os() const;
+  inline void clear_os();
+  static const int kOsFieldNumber = 3;
+  inline const ::std::string& os() const;
+  inline void set_os(const ::std::string& value);
+  inline void set_os(const char* value);
+  inline void set_os(const char* value, size_t size);
+  inline ::std::string* mutable_os();
+  
+  // optional string os_version = 4;
+  inline bool has_os_version() const;
+  inline void clear_os_version();
+  static const int kOsVersionFieldNumber = 4;
+  inline const ::std::string& os_version() const;
+  inline void set_os_version(const ::std::string& value);
+  inline void set_os_version(const char* value);
+  inline void set_os_version(const char* value, size_t size);
+  inline ::std::string* mutable_os_version();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.Version)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 version_;
+  ::std::string* release_;
+  static const ::std::string _default_release_;
+  ::std::string* os_;
+  static const ::std::string _default_os_;
+  ::std::string* os_version_;
+  static const ::std::string _default_os_version_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static Version* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UDPTunnel : public ::google::protobuf::Message {
+ public:
+  UDPTunnel();
+  virtual ~UDPTunnel();
+  
+  UDPTunnel(const UDPTunnel& from);
+  
+  inline UDPTunnel& operator=(const UDPTunnel& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UDPTunnel& default_instance();
+  
+  void Swap(UDPTunnel* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UDPTunnel* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UDPTunnel& from);
+  void MergeFrom(const UDPTunnel& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required bytes packet = 1;
+  inline bool has_packet() const;
+  inline void clear_packet();
+  static const int kPacketFieldNumber = 1;
+  inline const ::std::string& packet() const;
+  inline void set_packet(const ::std::string& value);
+  inline void set_packet(const char* value);
+  inline void set_packet(const void* value, size_t size);
+  inline ::std::string* mutable_packet();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UDPTunnel)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::std::string* packet_;
+  static const ::std::string _default_packet_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UDPTunnel* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class Authenticate : public ::google::protobuf::Message {
+ public:
+  Authenticate();
+  virtual ~Authenticate();
+  
+  Authenticate(const Authenticate& from);
+  
+  inline Authenticate& operator=(const Authenticate& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const Authenticate& default_instance();
+  
+  void Swap(Authenticate* other);
+  
+  // implements Message ----------------------------------------------
+  
+  Authenticate* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const Authenticate& from);
+  void MergeFrom(const Authenticate& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional string username = 1;
+  inline bool has_username() const;
+  inline void clear_username();
+  static const int kUsernameFieldNumber = 1;
+  inline const ::std::string& username() const;
+  inline void set_username(const ::std::string& value);
+  inline void set_username(const char* value);
+  inline void set_username(const char* value, size_t size);
+  inline ::std::string* mutable_username();
+  
+  // optional string password = 2;
+  inline bool has_password() const;
+  inline void clear_password();
+  static const int kPasswordFieldNumber = 2;
+  inline const ::std::string& password() const;
+  inline void set_password(const ::std::string& value);
+  inline void set_password(const char* value);
+  inline void set_password(const char* value, size_t size);
+  inline ::std::string* mutable_password();
+  
+  // repeated string tokens = 3;
+  inline int tokens_size() const;
+  inline void clear_tokens();
+  static const int kTokensFieldNumber = 3;
+  inline const ::std::string& tokens(int index) const;
+  inline ::std::string* mutable_tokens(int index);
+  inline void set_tokens(int index, const ::std::string& value);
+  inline void set_tokens(int index, const char* value);
+  inline void set_tokens(int index, const char* value, size_t size);
+  inline ::std::string* add_tokens();
+  inline void add_tokens(const ::std::string& value);
+  inline void add_tokens(const char* value);
+  inline void add_tokens(const char* value, size_t size);
+  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tokens() const;
+  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tokens();
+  
+  // repeated int32 celt_versions = 4;
+  inline int celt_versions_size() const;
+  inline void clear_celt_versions();
+  static const int kCeltVersionsFieldNumber = 4;
+  inline ::google::protobuf::int32 celt_versions(int index) const;
+  inline void set_celt_versions(int index, ::google::protobuf::int32 value);
+  inline void add_celt_versions(::google::protobuf::int32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
+      celt_versions() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
+      mutable_celt_versions();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.Authenticate)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::std::string* username_;
+  static const ::std::string _default_username_;
+  ::std::string* password_;
+  static const ::std::string _default_password_;
+  ::google::protobuf::RepeatedPtrField< ::std::string> tokens_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > celt_versions_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static Authenticate* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class Ping : public ::google::protobuf::Message {
+ public:
+  Ping();
+  virtual ~Ping();
+  
+  Ping(const Ping& from);
+  
+  inline Ping& operator=(const Ping& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const Ping& default_instance();
+  
+  void Swap(Ping* other);
+  
+  // implements Message ----------------------------------------------
+  
+  Ping* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const Ping& from);
+  void MergeFrom(const Ping& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint64 timestamp = 1;
+  inline bool has_timestamp() const;
+  inline void clear_timestamp();
+  static const int kTimestampFieldNumber = 1;
+  inline ::google::protobuf::uint64 timestamp() const;
+  inline void set_timestamp(::google::protobuf::uint64 value);
+  
+  // optional uint32 good = 2;
+  inline bool has_good() const;
+  inline void clear_good();
+  static const int kGoodFieldNumber = 2;
+  inline ::google::protobuf::uint32 good() const;
+  inline void set_good(::google::protobuf::uint32 value);
+  
+  // optional uint32 late = 3;
+  inline bool has_late() const;
+  inline void clear_late();
+  static const int kLateFieldNumber = 3;
+  inline ::google::protobuf::uint32 late() const;
+  inline void set_late(::google::protobuf::uint32 value);
+  
+  // optional uint32 lost = 4;
+  inline bool has_lost() const;
+  inline void clear_lost();
+  static const int kLostFieldNumber = 4;
+  inline ::google::protobuf::uint32 lost() const;
+  inline void set_lost(::google::protobuf::uint32 value);
+  
+  // optional uint32 resync = 5;
+  inline bool has_resync() const;
+  inline void clear_resync();
+  static const int kResyncFieldNumber = 5;
+  inline ::google::protobuf::uint32 resync() const;
+  inline void set_resync(::google::protobuf::uint32 value);
+  
+  // optional uint32 udp_packets = 6;
+  inline bool has_udp_packets() const;
+  inline void clear_udp_packets();
+  static const int kUdpPacketsFieldNumber = 6;
+  inline ::google::protobuf::uint32 udp_packets() const;
+  inline void set_udp_packets(::google::protobuf::uint32 value);
+  
+  // optional uint32 tcp_packets = 7;
+  inline bool has_tcp_packets() const;
+  inline void clear_tcp_packets();
+  static const int kTcpPacketsFieldNumber = 7;
+  inline ::google::protobuf::uint32 tcp_packets() const;
+  inline void set_tcp_packets(::google::protobuf::uint32 value);
+  
+  // optional float udp_ping_avg = 8;
+  inline bool has_udp_ping_avg() const;
+  inline void clear_udp_ping_avg();
+  static const int kUdpPingAvgFieldNumber = 8;
+  inline float udp_ping_avg() const;
+  inline void set_udp_ping_avg(float value);
+  
+  // optional float udp_ping_var = 9;
+  inline bool has_udp_ping_var() const;
+  inline void clear_udp_ping_var();
+  static const int kUdpPingVarFieldNumber = 9;
+  inline float udp_ping_var() const;
+  inline void set_udp_ping_var(float value);
+  
+  // optional float tcp_ping_avg = 10;
+  inline bool has_tcp_ping_avg() const;
+  inline void clear_tcp_ping_avg();
+  static const int kTcpPingAvgFieldNumber = 10;
+  inline float tcp_ping_avg() const;
+  inline void set_tcp_ping_avg(float value);
+  
+  // optional float tcp_ping_var = 11;
+  inline bool has_tcp_ping_var() const;
+  inline void clear_tcp_ping_var();
+  static const int kTcpPingVarFieldNumber = 11;
+  inline float tcp_ping_var() const;
+  inline void set_tcp_ping_var(float value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.Ping)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint64 timestamp_;
+  ::google::protobuf::uint32 good_;
+  ::google::protobuf::uint32 late_;
+  ::google::protobuf::uint32 lost_;
+  ::google::protobuf::uint32 resync_;
+  ::google::protobuf::uint32 udp_packets_;
+  ::google::protobuf::uint32 tcp_packets_;
+  float udp_ping_avg_;
+  float udp_ping_var_;
+  float tcp_ping_avg_;
+  float tcp_ping_var_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static Ping* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class Reject : public ::google::protobuf::Message {
+ public:
+  Reject();
+  virtual ~Reject();
+  
+  Reject(const Reject& from);
+  
+  inline Reject& operator=(const Reject& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const Reject& default_instance();
+  
+  void Swap(Reject* other);
+  
+  // implements Message ----------------------------------------------
+  
+  Reject* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const Reject& from);
+  void MergeFrom(const Reject& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef Reject_RejectType RejectType;
+  static const RejectType None = Reject_RejectType_None;
+  static const RejectType WrongVersion = Reject_RejectType_WrongVersion;
+  static const RejectType InvalidUsername = Reject_RejectType_InvalidUsername;
+  static const RejectType WrongUserPW = Reject_RejectType_WrongUserPW;
+  static const RejectType WrongServerPW = Reject_RejectType_WrongServerPW;
+  static const RejectType UsernameInUse = Reject_RejectType_UsernameInUse;
+  static const RejectType ServerFull = Reject_RejectType_ServerFull;
+  static const RejectType NoCertificate = Reject_RejectType_NoCertificate;
+  static inline bool RejectType_IsValid(int value) {
+    return Reject_RejectType_IsValid(value);
+  }
+  static const RejectType RejectType_MIN =
+    Reject_RejectType_RejectType_MIN;
+  static const RejectType RejectType_MAX =
+    Reject_RejectType_RejectType_MAX;
+  static const int RejectType_ARRAYSIZE =
+    Reject_RejectType_RejectType_ARRAYSIZE;
+  static inline const ::google::protobuf::EnumDescriptor*
+  RejectType_descriptor() {
+    return Reject_RejectType_descriptor();
+  }
+  static inline const ::std::string& RejectType_Name(RejectType value) {
+    return Reject_RejectType_Name(value);
+  }
+  static inline bool RejectType_Parse(const ::std::string& name,
+      RejectType* value) {
+    return Reject_RejectType_Parse(name, value);
+  }
+  
+  // accessors -------------------------------------------------------
+  
+  // optional .MumbleProto.Reject.RejectType type = 1;
+  inline bool has_type() const;
+  inline void clear_type();
+  static const int kTypeFieldNumber = 1;
+  inline ::MumbleProto::Reject_RejectType type() const;
+  inline void set_type(::MumbleProto::Reject_RejectType value);
+  
+  // optional string reason = 2;
+  inline bool has_reason() const;
+  inline void clear_reason();
+  static const int kReasonFieldNumber = 2;
+  inline const ::std::string& reason() const;
+  inline void set_reason(const ::std::string& value);
+  inline void set_reason(const char* value);
+  inline void set_reason(const char* value, size_t size);
+  inline ::std::string* mutable_reason();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.Reject)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  int type_;
+  ::std::string* reason_;
+  static const ::std::string _default_reason_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static Reject* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ServerConfig : public ::google::protobuf::Message {
+ public:
+  ServerConfig();
+  virtual ~ServerConfig();
+  
+  ServerConfig(const ServerConfig& from);
+  
+  inline ServerConfig& operator=(const ServerConfig& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ServerConfig& default_instance();
+  
+  void Swap(ServerConfig* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ServerConfig* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ServerConfig& from);
+  void MergeFrom(const ServerConfig& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 max_bandwidth = 1;
+  inline bool has_max_bandwidth() const;
+  inline void clear_max_bandwidth();
+  static const int kMaxBandwidthFieldNumber = 1;
+  inline ::google::protobuf::uint32 max_bandwidth() const;
+  inline void set_max_bandwidth(::google::protobuf::uint32 value);
+  
+  // optional string welcome_text = 2;
+  inline bool has_welcome_text() const;
+  inline void clear_welcome_text();
+  static const int kWelcomeTextFieldNumber = 2;
+  inline const ::std::string& welcome_text() const;
+  inline void set_welcome_text(const ::std::string& value);
+  inline void set_welcome_text(const char* value);
+  inline void set_welcome_text(const char* value, size_t size);
+  inline ::std::string* mutable_welcome_text();
+  
+  // optional bool allow_html = 3;
+  inline bool has_allow_html() const;
+  inline void clear_allow_html();
+  static const int kAllowHtmlFieldNumber = 3;
+  inline bool allow_html() const;
+  inline void set_allow_html(bool value);
+  
+  // optional uint32 message_length = 4;
+  inline bool has_message_length() const;
+  inline void clear_message_length();
+  static const int kMessageLengthFieldNumber = 4;
+  inline ::google::protobuf::uint32 message_length() const;
+  inline void set_message_length(::google::protobuf::uint32 value);
+  
+  // optional uint32 image_message_length = 5;
+  inline bool has_image_message_length() const;
+  inline void clear_image_message_length();
+  static const int kImageMessageLengthFieldNumber = 5;
+  inline ::google::protobuf::uint32 image_message_length() const;
+  inline void set_image_message_length(::google::protobuf::uint32 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ServerConfig)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 max_bandwidth_;
+  ::std::string* welcome_text_;
+  static const ::std::string _default_welcome_text_;
+  bool allow_html_;
+  ::google::protobuf::uint32 message_length_;
+  ::google::protobuf::uint32 image_message_length_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ServerConfig* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ServerSync : public ::google::protobuf::Message {
+ public:
+  ServerSync();
+  virtual ~ServerSync();
+  
+  ServerSync(const ServerSync& from);
+  
+  inline ServerSync& operator=(const ServerSync& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ServerSync& default_instance();
+  
+  void Swap(ServerSync* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ServerSync* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ServerSync& from);
+  void MergeFrom(const ServerSync& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 session = 1;
+  inline bool has_session() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 1;
+  inline ::google::protobuf::uint32 session() const;
+  inline void set_session(::google::protobuf::uint32 value);
+  
+  // optional uint32 max_bandwidth = 2;
+  inline bool has_max_bandwidth() const;
+  inline void clear_max_bandwidth();
+  static const int kMaxBandwidthFieldNumber = 2;
+  inline ::google::protobuf::uint32 max_bandwidth() const;
+  inline void set_max_bandwidth(::google::protobuf::uint32 value);
+  
+  // optional string welcome_text = 3;
+  inline bool has_welcome_text() const;
+  inline void clear_welcome_text();
+  static const int kWelcomeTextFieldNumber = 3;
+  inline const ::std::string& welcome_text() const;
+  inline void set_welcome_text(const ::std::string& value);
+  inline void set_welcome_text(const char* value);
+  inline void set_welcome_text(const char* value, size_t size);
+  inline ::std::string* mutable_welcome_text();
+  
+  // optional uint64 permissions = 4;
+  inline bool has_permissions() const;
+  inline void clear_permissions();
+  static const int kPermissionsFieldNumber = 4;
+  inline ::google::protobuf::uint64 permissions() const;
+  inline void set_permissions(::google::protobuf::uint64 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ServerSync)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 session_;
+  ::google::protobuf::uint32 max_bandwidth_;
+  ::std::string* welcome_text_;
+  static const ::std::string _default_welcome_text_;
+  ::google::protobuf::uint64 permissions_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ServerSync* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ChannelRemove : public ::google::protobuf::Message {
+ public:
+  ChannelRemove();
+  virtual ~ChannelRemove();
+  
+  ChannelRemove(const ChannelRemove& from);
+  
+  inline ChannelRemove& operator=(const ChannelRemove& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ChannelRemove& default_instance();
+  
+  void Swap(ChannelRemove* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ChannelRemove* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ChannelRemove& from);
+  void MergeFrom(const ChannelRemove& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required uint32 channel_id = 1;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 1;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ChannelRemove)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 channel_id_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ChannelRemove* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ChannelState : public ::google::protobuf::Message {
+ public:
+  ChannelState();
+  virtual ~ChannelState();
+  
+  ChannelState(const ChannelState& from);
+  
+  inline ChannelState& operator=(const ChannelState& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ChannelState& default_instance();
+  
+  void Swap(ChannelState* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ChannelState* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ChannelState& from);
+  void MergeFrom(const ChannelState& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 channel_id = 1;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 1;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // optional uint32 parent = 2;
+  inline bool has_parent() const;
+  inline void clear_parent();
+  static const int kParentFieldNumber = 2;
+  inline ::google::protobuf::uint32 parent() const;
+  inline void set_parent(::google::protobuf::uint32 value);
+  
+  // optional string name = 3;
+  inline bool has_name() const;
+  inline void clear_name();
+  static const int kNameFieldNumber = 3;
+  inline const ::std::string& name() const;
+  inline void set_name(const ::std::string& value);
+  inline void set_name(const char* value);
+  inline void set_name(const char* value, size_t size);
+  inline ::std::string* mutable_name();
+  
+  // repeated uint32 links = 4;
+  inline int links_size() const;
+  inline void clear_links();
+  static const int kLinksFieldNumber = 4;
+  inline ::google::protobuf::uint32 links(int index) const;
+  inline void set_links(int index, ::google::protobuf::uint32 value);
+  inline void add_links(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      links() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_links();
+  
+  // optional string description = 5;
+  inline bool has_description() const;
+  inline void clear_description();
+  static const int kDescriptionFieldNumber = 5;
+  inline const ::std::string& description() const;
+  inline void set_description(const ::std::string& value);
+  inline void set_description(const char* value);
+  inline void set_description(const char* value, size_t size);
+  inline ::std::string* mutable_description();
+  
+  // repeated uint32 links_add = 6;
+  inline int links_add_size() const;
+  inline void clear_links_add();
+  static const int kLinksAddFieldNumber = 6;
+  inline ::google::protobuf::uint32 links_add(int index) const;
+  inline void set_links_add(int index, ::google::protobuf::uint32 value);
+  inline void add_links_add(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      links_add() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_links_add();
+  
+  // repeated uint32 links_remove = 7;
+  inline int links_remove_size() const;
+  inline void clear_links_remove();
+  static const int kLinksRemoveFieldNumber = 7;
+  inline ::google::protobuf::uint32 links_remove(int index) const;
+  inline void set_links_remove(int index, ::google::protobuf::uint32 value);
+  inline void add_links_remove(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      links_remove() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_links_remove();
+  
+  // optional bool temporary = 8 [default = false];
+  inline bool has_temporary() const;
+  inline void clear_temporary();
+  static const int kTemporaryFieldNumber = 8;
+  inline bool temporary() const;
+  inline void set_temporary(bool value);
+  
+  // optional int32 position = 9 [default = 0];
+  inline bool has_position() const;
+  inline void clear_position();
+  static const int kPositionFieldNumber = 9;
+  inline ::google::protobuf::int32 position() const;
+  inline void set_position(::google::protobuf::int32 value);
+  
+  // optional bytes description_hash = 10;
+  inline bool has_description_hash() const;
+  inline void clear_description_hash();
+  static const int kDescriptionHashFieldNumber = 10;
+  inline const ::std::string& description_hash() const;
+  inline void set_description_hash(const ::std::string& value);
+  inline void set_description_hash(const char* value);
+  inline void set_description_hash(const void* value, size_t size);
+  inline ::std::string* mutable_description_hash();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ChannelState)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 channel_id_;
+  ::google::protobuf::uint32 parent_;
+  ::std::string* name_;
+  static const ::std::string _default_name_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > links_;
+  ::std::string* description_;
+  static const ::std::string _default_description_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > links_add_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > links_remove_;
+  bool temporary_;
+  ::google::protobuf::int32 position_;
+  ::std::string* description_hash_;
+  static const ::std::string _default_description_hash_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ChannelState* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UserRemove : public ::google::protobuf::Message {
+ public:
+  UserRemove();
+  virtual ~UserRemove();
+  
+  UserRemove(const UserRemove& from);
+  
+  inline UserRemove& operator=(const UserRemove& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UserRemove& default_instance();
+  
+  void Swap(UserRemove* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UserRemove* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UserRemove& from);
+  void MergeFrom(const UserRemove& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required uint32 session = 1;
+  inline bool has_session() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 1;
+  inline ::google::protobuf::uint32 session() const;
+  inline void set_session(::google::protobuf::uint32 value);
+  
+  // optional uint32 actor = 2;
+  inline bool has_actor() const;
+  inline void clear_actor();
+  static const int kActorFieldNumber = 2;
+  inline ::google::protobuf::uint32 actor() const;
+  inline void set_actor(::google::protobuf::uint32 value);
+  
+  // optional string reason = 3;
+  inline bool has_reason() const;
+  inline void clear_reason();
+  static const int kReasonFieldNumber = 3;
+  inline const ::std::string& reason() const;
+  inline void set_reason(const ::std::string& value);
+  inline void set_reason(const char* value);
+  inline void set_reason(const char* value, size_t size);
+  inline ::std::string* mutable_reason();
+  
+  // optional bool ban = 4;
+  inline bool has_ban() const;
+  inline void clear_ban();
+  static const int kBanFieldNumber = 4;
+  inline bool ban() const;
+  inline void set_ban(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UserRemove)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 session_;
+  ::google::protobuf::uint32 actor_;
+  ::std::string* reason_;
+  static const ::std::string _default_reason_;
+  bool ban_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UserRemove* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UserState : public ::google::protobuf::Message {
+ public:
+  UserState();
+  virtual ~UserState();
+  
+  UserState(const UserState& from);
+  
+  inline UserState& operator=(const UserState& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UserState& default_instance();
+  
+  void Swap(UserState* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UserState* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UserState& from);
+  void MergeFrom(const UserState& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 session = 1;
+  inline bool has_session() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 1;
+  inline ::google::protobuf::uint32 session() const;
+  inline void set_session(::google::protobuf::uint32 value);
+  
+  // optional uint32 actor = 2;
+  inline bool has_actor() const;
+  inline void clear_actor();
+  static const int kActorFieldNumber = 2;
+  inline ::google::protobuf::uint32 actor() const;
+  inline void set_actor(::google::protobuf::uint32 value);
+  
+  // optional string name = 3;
+  inline bool has_name() const;
+  inline void clear_name();
+  static const int kNameFieldNumber = 3;
+  inline const ::std::string& name() const;
+  inline void set_name(const ::std::string& value);
+  inline void set_name(const char* value);
+  inline void set_name(const char* value, size_t size);
+  inline ::std::string* mutable_name();
+  
+  // optional uint32 user_id = 4;
+  inline bool has_user_id() const;
+  inline void clear_user_id();
+  static const int kUserIdFieldNumber = 4;
+  inline ::google::protobuf::uint32 user_id() const;
+  inline void set_user_id(::google::protobuf::uint32 value);
+  
+  // optional uint32 channel_id = 5;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 5;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // optional bool mute = 6;
+  inline bool has_mute() const;
+  inline void clear_mute();
+  static const int kMuteFieldNumber = 6;
+  inline bool mute() const;
+  inline void set_mute(bool value);
+  
+  // optional bool deaf = 7;
+  inline bool has_deaf() const;
+  inline void clear_deaf();
+  static const int kDeafFieldNumber = 7;
+  inline bool deaf() const;
+  inline void set_deaf(bool value);
+  
+  // optional bool suppress = 8;
+  inline bool has_suppress() const;
+  inline void clear_suppress();
+  static const int kSuppressFieldNumber = 8;
+  inline bool suppress() const;
+  inline void set_suppress(bool value);
+  
+  // optional bool self_mute = 9;
+  inline bool has_self_mute() const;
+  inline void clear_self_mute();
+  static const int kSelfMuteFieldNumber = 9;
+  inline bool self_mute() const;
+  inline void set_self_mute(bool value);
+  
+  // optional bool self_deaf = 10;
+  inline bool has_self_deaf() const;
+  inline void clear_self_deaf();
+  static const int kSelfDeafFieldNumber = 10;
+  inline bool self_deaf() const;
+  inline void set_self_deaf(bool value);
+  
+  // optional bytes texture = 11;
+  inline bool has_texture() const;
+  inline void clear_texture();
+  static const int kTextureFieldNumber = 11;
+  inline const ::std::string& texture() const;
+  inline void set_texture(const ::std::string& value);
+  inline void set_texture(const char* value);
+  inline void set_texture(const void* value, size_t size);
+  inline ::std::string* mutable_texture();
+  
+  // optional bytes plugin_context = 12;
+  inline bool has_plugin_context() const;
+  inline void clear_plugin_context();
+  static const int kPluginContextFieldNumber = 12;
+  inline const ::std::string& plugin_context() const;
+  inline void set_plugin_context(const ::std::string& value);
+  inline void set_plugin_context(const char* value);
+  inline void set_plugin_context(const void* value, size_t size);
+  inline ::std::string* mutable_plugin_context();
+  
+  // optional string plugin_identity = 13;
+  inline bool has_plugin_identity() const;
+  inline void clear_plugin_identity();
+  static const int kPluginIdentityFieldNumber = 13;
+  inline const ::std::string& plugin_identity() const;
+  inline void set_plugin_identity(const ::std::string& value);
+  inline void set_plugin_identity(const char* value);
+  inline void set_plugin_identity(const char* value, size_t size);
+  inline ::std::string* mutable_plugin_identity();
+  
+  // optional string comment = 14;
+  inline bool has_comment() const;
+  inline void clear_comment();
+  static const int kCommentFieldNumber = 14;
+  inline const ::std::string& comment() const;
+  inline void set_comment(const ::std::string& value);
+  inline void set_comment(const char* value);
+  inline void set_comment(const char* value, size_t size);
+  inline ::std::string* mutable_comment();
+  
+  // optional string hash = 15;
+  inline bool has_hash() const;
+  inline void clear_hash();
+  static const int kHashFieldNumber = 15;
+  inline const ::std::string& hash() const;
+  inline void set_hash(const ::std::string& value);
+  inline void set_hash(const char* value);
+  inline void set_hash(const char* value, size_t size);
+  inline ::std::string* mutable_hash();
+  
+  // optional bytes comment_hash = 16;
+  inline bool has_comment_hash() const;
+  inline void clear_comment_hash();
+  static const int kCommentHashFieldNumber = 16;
+  inline const ::std::string& comment_hash() const;
+  inline void set_comment_hash(const ::std::string& value);
+  inline void set_comment_hash(const char* value);
+  inline void set_comment_hash(const void* value, size_t size);
+  inline ::std::string* mutable_comment_hash();
+  
+  // optional bytes texture_hash = 17;
+  inline bool has_texture_hash() const;
+  inline void clear_texture_hash();
+  static const int kTextureHashFieldNumber = 17;
+  inline const ::std::string& texture_hash() const;
+  inline void set_texture_hash(const ::std::string& value);
+  inline void set_texture_hash(const char* value);
+  inline void set_texture_hash(const void* value, size_t size);
+  inline ::std::string* mutable_texture_hash();
+  
+  // optional bool priority_speaker = 18;
+  inline bool has_priority_speaker() const;
+  inline void clear_priority_speaker();
+  static const int kPrioritySpeakerFieldNumber = 18;
+  inline bool priority_speaker() const;
+  inline void set_priority_speaker(bool value);
+  
+  // optional bool recording = 19;
+  inline bool has_recording() const;
+  inline void clear_recording();
+  static const int kRecordingFieldNumber = 19;
+  inline bool recording() const;
+  inline void set_recording(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UserState)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 session_;
+  ::google::protobuf::uint32 actor_;
+  ::std::string* name_;
+  static const ::std::string _default_name_;
+  ::google::protobuf::uint32 user_id_;
+  ::google::protobuf::uint32 channel_id_;
+  bool mute_;
+  bool deaf_;
+  bool suppress_;
+  bool self_mute_;
+  bool self_deaf_;
+  ::std::string* texture_;
+  static const ::std::string _default_texture_;
+  ::std::string* plugin_context_;
+  static const ::std::string _default_plugin_context_;
+  ::std::string* plugin_identity_;
+  static const ::std::string _default_plugin_identity_;
+  ::std::string* comment_;
+  static const ::std::string _default_comment_;
+  ::std::string* hash_;
+  static const ::std::string _default_hash_;
+  ::std::string* comment_hash_;
+  static const ::std::string _default_comment_hash_;
+  ::std::string* texture_hash_;
+  static const ::std::string _default_texture_hash_;
+  bool priority_speaker_;
+  bool recording_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UserState* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class BanList_BanEntry : public ::google::protobuf::Message {
+ public:
+  BanList_BanEntry();
+  virtual ~BanList_BanEntry();
+  
+  BanList_BanEntry(const BanList_BanEntry& from);
+  
+  inline BanList_BanEntry& operator=(const BanList_BanEntry& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const BanList_BanEntry& default_instance();
+  
+  void Swap(BanList_BanEntry* other);
+  
+  // implements Message ----------------------------------------------
+  
+  BanList_BanEntry* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const BanList_BanEntry& from);
+  void MergeFrom(const BanList_BanEntry& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required bytes address = 1;
+  inline bool has_address() const;
+  inline void clear_address();
+  static const int kAddressFieldNumber = 1;
+  inline const ::std::string& address() const;
+  inline void set_address(const ::std::string& value);
+  inline void set_address(const char* value);
+  inline void set_address(const void* value, size_t size);
+  inline ::std::string* mutable_address();
+  
+  // required uint32 mask = 2;
+  inline bool has_mask() const;
+  inline void clear_mask();
+  static const int kMaskFieldNumber = 2;
+  inline ::google::protobuf::uint32 mask() const;
+  inline void set_mask(::google::protobuf::uint32 value);
+  
+  // optional string name = 3;
+  inline bool has_name() const;
+  inline void clear_name();
+  static const int kNameFieldNumber = 3;
+  inline const ::std::string& name() const;
+  inline void set_name(const ::std::string& value);
+  inline void set_name(const char* value);
+  inline void set_name(const char* value, size_t size);
+  inline ::std::string* mutable_name();
+  
+  // optional string hash = 4;
+  inline bool has_hash() const;
+  inline void clear_hash();
+  static const int kHashFieldNumber = 4;
+  inline const ::std::string& hash() const;
+  inline void set_hash(const ::std::string& value);
+  inline void set_hash(const char* value);
+  inline void set_hash(const char* value, size_t size);
+  inline ::std::string* mutable_hash();
+  
+  // optional string reason = 5;
+  inline bool has_reason() const;
+  inline void clear_reason();
+  static const int kReasonFieldNumber = 5;
+  inline const ::std::string& reason() const;
+  inline void set_reason(const ::std::string& value);
+  inline void set_reason(const char* value);
+  inline void set_reason(const char* value, size_t size);
+  inline ::std::string* mutable_reason();
+  
+  // optional string start = 6;
+  inline bool has_start() const;
+  inline void clear_start();
+  static const int kStartFieldNumber = 6;
+  inline const ::std::string& start() const;
+  inline void set_start(const ::std::string& value);
+  inline void set_start(const char* value);
+  inline void set_start(const char* value, size_t size);
+  inline ::std::string* mutable_start();
+  
+  // optional uint32 duration = 7;
+  inline bool has_duration() const;
+  inline void clear_duration();
+  static const int kDurationFieldNumber = 7;
+  inline ::google::protobuf::uint32 duration() const;
+  inline void set_duration(::google::protobuf::uint32 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.BanList.BanEntry)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::std::string* address_;
+  static const ::std::string _default_address_;
+  ::google::protobuf::uint32 mask_;
+  ::std::string* name_;
+  static const ::std::string _default_name_;
+  ::std::string* hash_;
+  static const ::std::string _default_hash_;
+  ::std::string* reason_;
+  static const ::std::string _default_reason_;
+  ::std::string* start_;
+  static const ::std::string _default_start_;
+  ::google::protobuf::uint32 duration_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static BanList_BanEntry* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class BanList : public ::google::protobuf::Message {
+ public:
+  BanList();
+  virtual ~BanList();
+  
+  BanList(const BanList& from);
+  
+  inline BanList& operator=(const BanList& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const BanList& default_instance();
+  
+  void Swap(BanList* other);
+  
+  // implements Message ----------------------------------------------
+  
+  BanList* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const BanList& from);
+  void MergeFrom(const BanList& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef BanList_BanEntry BanEntry;
+  
+  // accessors -------------------------------------------------------
+  
+  // repeated .MumbleProto.BanList.BanEntry bans = 1;
+  inline int bans_size() const;
+  inline void clear_bans();
+  static const int kBansFieldNumber = 1;
+  inline const ::MumbleProto::BanList_BanEntry& bans(int index) const;
+  inline ::MumbleProto::BanList_BanEntry* mutable_bans(int index);
+  inline ::MumbleProto::BanList_BanEntry* add_bans();
+  inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::BanList_BanEntry >&
+      bans() const;
+  inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::BanList_BanEntry >*
+      mutable_bans();
+  
+  // optional bool query = 2 [default = false];
+  inline bool has_query() const;
+  inline void clear_query();
+  static const int kQueryFieldNumber = 2;
+  inline bool query() const;
+  inline void set_query(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.BanList)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::RepeatedPtrField< ::MumbleProto::BanList_BanEntry > bans_;
+  bool query_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static BanList* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class TextMessage : public ::google::protobuf::Message {
+ public:
+  TextMessage();
+  virtual ~TextMessage();
+  
+  TextMessage(const TextMessage& from);
+  
+  inline TextMessage& operator=(const TextMessage& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const TextMessage& default_instance();
+  
+  void Swap(TextMessage* other);
+  
+  // implements Message ----------------------------------------------
+  
+  TextMessage* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const TextMessage& from);
+  void MergeFrom(const TextMessage& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 actor = 1;
+  inline bool has_actor() const;
+  inline void clear_actor();
+  static const int kActorFieldNumber = 1;
+  inline ::google::protobuf::uint32 actor() const;
+  inline void set_actor(::google::protobuf::uint32 value);
+  
+  // repeated uint32 session = 2;
+  inline int session_size() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 2;
+  inline ::google::protobuf::uint32 session(int index) const;
+  inline void set_session(int index, ::google::protobuf::uint32 value);
+  inline void add_session(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      session() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_session();
+  
+  // repeated uint32 channel_id = 3;
+  inline int channel_id_size() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 3;
+  inline ::google::protobuf::uint32 channel_id(int index) const;
+  inline void set_channel_id(int index, ::google::protobuf::uint32 value);
+  inline void add_channel_id(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      channel_id() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_channel_id();
+  
+  // repeated uint32 tree_id = 4;
+  inline int tree_id_size() const;
+  inline void clear_tree_id();
+  static const int kTreeIdFieldNumber = 4;
+  inline ::google::protobuf::uint32 tree_id(int index) const;
+  inline void set_tree_id(int index, ::google::protobuf::uint32 value);
+  inline void add_tree_id(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      tree_id() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_tree_id();
+  
+  // required string message = 5;
+  inline bool has_message() const;
+  inline void clear_message();
+  static const int kMessageFieldNumber = 5;
+  inline const ::std::string& message() const;
+  inline void set_message(const ::std::string& value);
+  inline void set_message(const char* value);
+  inline void set_message(const char* value, size_t size);
+  inline ::std::string* mutable_message();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.TextMessage)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 actor_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > session_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > channel_id_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tree_id_;
+  ::std::string* message_;
+  static const ::std::string _default_message_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static TextMessage* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class PermissionDenied : public ::google::protobuf::Message {
+ public:
+  PermissionDenied();
+  virtual ~PermissionDenied();
+  
+  PermissionDenied(const PermissionDenied& from);
+  
+  inline PermissionDenied& operator=(const PermissionDenied& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const PermissionDenied& default_instance();
+  
+  void Swap(PermissionDenied* other);
+  
+  // implements Message ----------------------------------------------
+  
+  PermissionDenied* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const PermissionDenied& from);
+  void MergeFrom(const PermissionDenied& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef PermissionDenied_DenyType DenyType;
+  static const DenyType Text = PermissionDenied_DenyType_Text;
+  static const DenyType Permission = PermissionDenied_DenyType_Permission;
+  static const DenyType SuperUser = PermissionDenied_DenyType_SuperUser;
+  static const DenyType ChannelName = PermissionDenied_DenyType_ChannelName;
+  static const DenyType TextTooLong = PermissionDenied_DenyType_TextTooLong;
+  static const DenyType H9K = PermissionDenied_DenyType_H9K;
+  static const DenyType TemporaryChannel = PermissionDenied_DenyType_TemporaryChannel;
+  static const DenyType MissingCertificate = PermissionDenied_DenyType_MissingCertificate;
+  static const DenyType UserName = PermissionDenied_DenyType_UserName;
+  static const DenyType ChannelFull = PermissionDenied_DenyType_ChannelFull;
+  static inline bool DenyType_IsValid(int value) {
+    return PermissionDenied_DenyType_IsValid(value);
+  }
+  static const DenyType DenyType_MIN =
+    PermissionDenied_DenyType_DenyType_MIN;
+  static const DenyType DenyType_MAX =
+    PermissionDenied_DenyType_DenyType_MAX;
+  static const int DenyType_ARRAYSIZE =
+    PermissionDenied_DenyType_DenyType_ARRAYSIZE;
+  static inline const ::google::protobuf::EnumDescriptor*
+  DenyType_descriptor() {
+    return PermissionDenied_DenyType_descriptor();
+  }
+  static inline const ::std::string& DenyType_Name(DenyType value) {
+    return PermissionDenied_DenyType_Name(value);
+  }
+  static inline bool DenyType_Parse(const ::std::string& name,
+      DenyType* value) {
+    return PermissionDenied_DenyType_Parse(name, value);
+  }
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 permission = 1;
+  inline bool has_permission() const;
+  inline void clear_permission();
+  static const int kPermissionFieldNumber = 1;
+  inline ::google::protobuf::uint32 permission() const;
+  inline void set_permission(::google::protobuf::uint32 value);
+  
+  // optional uint32 channel_id = 2;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 2;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // optional uint32 session = 3;
+  inline bool has_session() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 3;
+  inline ::google::protobuf::uint32 session() const;
+  inline void set_session(::google::protobuf::uint32 value);
+  
+  // optional string reason = 4;
+  inline bool has_reason() const;
+  inline void clear_reason();
+  static const int kReasonFieldNumber = 4;
+  inline const ::std::string& reason() const;
+  inline void set_reason(const ::std::string& value);
+  inline void set_reason(const char* value);
+  inline void set_reason(const char* value, size_t size);
+  inline ::std::string* mutable_reason();
+  
+  // optional .MumbleProto.PermissionDenied.DenyType type = 5;
+  inline bool has_type() const;
+  inline void clear_type();
+  static const int kTypeFieldNumber = 5;
+  inline ::MumbleProto::PermissionDenied_DenyType type() const;
+  inline void set_type(::MumbleProto::PermissionDenied_DenyType value);
+  
+  // optional string name = 6;
+  inline bool has_name() const;
+  inline void clear_name();
+  static const int kNameFieldNumber = 6;
+  inline const ::std::string& name() const;
+  inline void set_name(const ::std::string& value);
+  inline void set_name(const char* value);
+  inline void set_name(const char* value, size_t size);
+  inline ::std::string* mutable_name();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.PermissionDenied)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 permission_;
+  ::google::protobuf::uint32 channel_id_;
+  ::google::protobuf::uint32 session_;
+  ::std::string* reason_;
+  static const ::std::string _default_reason_;
+  int type_;
+  ::std::string* name_;
+  static const ::std::string _default_name_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static PermissionDenied* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ACL_ChanGroup : public ::google::protobuf::Message {
+ public:
+  ACL_ChanGroup();
+  virtual ~ACL_ChanGroup();
+  
+  ACL_ChanGroup(const ACL_ChanGroup& from);
+  
+  inline ACL_ChanGroup& operator=(const ACL_ChanGroup& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ACL_ChanGroup& default_instance();
+  
+  void Swap(ACL_ChanGroup* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ACL_ChanGroup* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ACL_ChanGroup& from);
+  void MergeFrom(const ACL_ChanGroup& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required string name = 1;
+  inline bool has_name() const;
+  inline void clear_name();
+  static const int kNameFieldNumber = 1;
+  inline const ::std::string& name() const;
+  inline void set_name(const ::std::string& value);
+  inline void set_name(const char* value);
+  inline void set_name(const char* value, size_t size);
+  inline ::std::string* mutable_name();
+  
+  // optional bool inherited = 2 [default = true];
+  inline bool has_inherited() const;
+  inline void clear_inherited();
+  static const int kInheritedFieldNumber = 2;
+  inline bool inherited() const;
+  inline void set_inherited(bool value);
+  
+  // optional bool inherit = 3 [default = true];
+  inline bool has_inherit() const;
+  inline void clear_inherit();
+  static const int kInheritFieldNumber = 3;
+  inline bool inherit() const;
+  inline void set_inherit(bool value);
+  
+  // optional bool inheritable = 4 [default = true];
+  inline bool has_inheritable() const;
+  inline void clear_inheritable();
+  static const int kInheritableFieldNumber = 4;
+  inline bool inheritable() const;
+  inline void set_inheritable(bool value);
+  
+  // repeated uint32 add = 5;
+  inline int add_size() const;
+  inline void clear_add();
+  static const int kAddFieldNumber = 5;
+  inline ::google::protobuf::uint32 add(int index) const;
+  inline void set_add(int index, ::google::protobuf::uint32 value);
+  inline void add_add(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      add() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_add();
+  
+  // repeated uint32 remove = 6;
+  inline int remove_size() const;
+  inline void clear_remove();
+  static const int kRemoveFieldNumber = 6;
+  inline ::google::protobuf::uint32 remove(int index) const;
+  inline void set_remove(int index, ::google::protobuf::uint32 value);
+  inline void add_remove(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      remove() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_remove();
+  
+  // repeated uint32 inherited_members = 7;
+  inline int inherited_members_size() const;
+  inline void clear_inherited_members();
+  static const int kInheritedMembersFieldNumber = 7;
+  inline ::google::protobuf::uint32 inherited_members(int index) const;
+  inline void set_inherited_members(int index, ::google::protobuf::uint32 value);
+  inline void add_inherited_members(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      inherited_members() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_inherited_members();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ACL.ChanGroup)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::std::string* name_;
+  static const ::std::string _default_name_;
+  bool inherited_;
+  bool inherit_;
+  bool inheritable_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > add_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remove_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > inherited_members_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ACL_ChanGroup* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ACL_ChanACL : public ::google::protobuf::Message {
+ public:
+  ACL_ChanACL();
+  virtual ~ACL_ChanACL();
+  
+  ACL_ChanACL(const ACL_ChanACL& from);
+  
+  inline ACL_ChanACL& operator=(const ACL_ChanACL& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ACL_ChanACL& default_instance();
+  
+  void Swap(ACL_ChanACL* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ACL_ChanACL* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ACL_ChanACL& from);
+  void MergeFrom(const ACL_ChanACL& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional bool apply_here = 1 [default = true];
+  inline bool has_apply_here() const;
+  inline void clear_apply_here();
+  static const int kApplyHereFieldNumber = 1;
+  inline bool apply_here() const;
+  inline void set_apply_here(bool value);
+  
+  // optional bool apply_subs = 2 [default = true];
+  inline bool has_apply_subs() const;
+  inline void clear_apply_subs();
+  static const int kApplySubsFieldNumber = 2;
+  inline bool apply_subs() const;
+  inline void set_apply_subs(bool value);
+  
+  // optional bool inherited = 3 [default = true];
+  inline bool has_inherited() const;
+  inline void clear_inherited();
+  static const int kInheritedFieldNumber = 3;
+  inline bool inherited() const;
+  inline void set_inherited(bool value);
+  
+  // optional uint32 user_id = 4;
+  inline bool has_user_id() const;
+  inline void clear_user_id();
+  static const int kUserIdFieldNumber = 4;
+  inline ::google::protobuf::uint32 user_id() const;
+  inline void set_user_id(::google::protobuf::uint32 value);
+  
+  // optional string group = 5;
+  inline bool has_group() const;
+  inline void clear_group();
+  static const int kGroupFieldNumber = 5;
+  inline const ::std::string& group() const;
+  inline void set_group(const ::std::string& value);
+  inline void set_group(const char* value);
+  inline void set_group(const char* value, size_t size);
+  inline ::std::string* mutable_group();
+  
+  // optional uint32 grant = 6;
+  inline bool has_grant() const;
+  inline void clear_grant();
+  static const int kGrantFieldNumber = 6;
+  inline ::google::protobuf::uint32 grant() const;
+  inline void set_grant(::google::protobuf::uint32 value);
+  
+  // optional uint32 deny = 7;
+  inline bool has_deny() const;
+  inline void clear_deny();
+  static const int kDenyFieldNumber = 7;
+  inline ::google::protobuf::uint32 deny() const;
+  inline void set_deny(::google::protobuf::uint32 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ACL.ChanACL)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  bool apply_here_;
+  bool apply_subs_;
+  bool inherited_;
+  ::google::protobuf::uint32 user_id_;
+  ::std::string* group_;
+  static const ::std::string _default_group_;
+  ::google::protobuf::uint32 grant_;
+  ::google::protobuf::uint32 deny_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ACL_ChanACL* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ACL : public ::google::protobuf::Message {
+ public:
+  ACL();
+  virtual ~ACL();
+  
+  ACL(const ACL& from);
+  
+  inline ACL& operator=(const ACL& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ACL& default_instance();
+  
+  void Swap(ACL* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ACL* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ACL& from);
+  void MergeFrom(const ACL& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef ACL_ChanGroup ChanGroup;
+  typedef ACL_ChanACL ChanACL;
+  
+  // accessors -------------------------------------------------------
+  
+  // required uint32 channel_id = 1;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 1;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // optional bool inherit_acls = 2 [default = true];
+  inline bool has_inherit_acls() const;
+  inline void clear_inherit_acls();
+  static const int kInheritAclsFieldNumber = 2;
+  inline bool inherit_acls() const;
+  inline void set_inherit_acls(bool value);
+  
+  // repeated .MumbleProto.ACL.ChanGroup groups = 3;
+  inline int groups_size() const;
+  inline void clear_groups();
+  static const int kGroupsFieldNumber = 3;
+  inline const ::MumbleProto::ACL_ChanGroup& groups(int index) const;
+  inline ::MumbleProto::ACL_ChanGroup* mutable_groups(int index);
+  inline ::MumbleProto::ACL_ChanGroup* add_groups();
+  inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanGroup >&
+      groups() const;
+  inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanGroup >*
+      mutable_groups();
+  
+  // repeated .MumbleProto.ACL.ChanACL acls = 4;
+  inline int acls_size() const;
+  inline void clear_acls();
+  static const int kAclsFieldNumber = 4;
+  inline const ::MumbleProto::ACL_ChanACL& acls(int index) const;
+  inline ::MumbleProto::ACL_ChanACL* mutable_acls(int index);
+  inline ::MumbleProto::ACL_ChanACL* add_acls();
+  inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanACL >&
+      acls() const;
+  inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanACL >*
+      mutable_acls();
+  
+  // optional bool query = 5 [default = false];
+  inline bool has_query() const;
+  inline void clear_query();
+  static const int kQueryFieldNumber = 5;
+  inline bool query() const;
+  inline void set_query(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ACL)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 channel_id_;
+  bool inherit_acls_;
+  ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanGroup > groups_;
+  ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanACL > acls_;
+  bool query_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ACL* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class QueryUsers : public ::google::protobuf::Message {
+ public:
+  QueryUsers();
+  virtual ~QueryUsers();
+  
+  QueryUsers(const QueryUsers& from);
+  
+  inline QueryUsers& operator=(const QueryUsers& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const QueryUsers& default_instance();
+  
+  void Swap(QueryUsers* other);
+  
+  // implements Message ----------------------------------------------
+  
+  QueryUsers* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const QueryUsers& from);
+  void MergeFrom(const QueryUsers& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // repeated uint32 ids = 1;
+  inline int ids_size() const;
+  inline void clear_ids();
+  static const int kIdsFieldNumber = 1;
+  inline ::google::protobuf::uint32 ids(int index) const;
+  inline void set_ids(int index, ::google::protobuf::uint32 value);
+  inline void add_ids(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      ids() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_ids();
+  
+  // repeated string names = 2;
+  inline int names_size() const;
+  inline void clear_names();
+  static const int kNamesFieldNumber = 2;
+  inline const ::std::string& names(int index) const;
+  inline ::std::string* mutable_names(int index);
+  inline void set_names(int index, const ::std::string& value);
+  inline void set_names(int index, const char* value);
+  inline void set_names(int index, const char* value, size_t size);
+  inline ::std::string* add_names();
+  inline void add_names(const ::std::string& value);
+  inline void add_names(const char* value);
+  inline void add_names(const char* value, size_t size);
+  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& names() const;
+  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_names();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.QueryUsers)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ids_;
+  ::google::protobuf::RepeatedPtrField< ::std::string> names_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static QueryUsers* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class CryptSetup : public ::google::protobuf::Message {
+ public:
+  CryptSetup();
+  virtual ~CryptSetup();
+  
+  CryptSetup(const CryptSetup& from);
+  
+  inline CryptSetup& operator=(const CryptSetup& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const CryptSetup& default_instance();
+  
+  void Swap(CryptSetup* other);
+  
+  // implements Message ----------------------------------------------
+  
+  CryptSetup* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const CryptSetup& from);
+  void MergeFrom(const CryptSetup& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional bytes key = 1;
+  inline bool has_key() const;
+  inline void clear_key();
+  static const int kKeyFieldNumber = 1;
+  inline const ::std::string& key() const;
+  inline void set_key(const ::std::string& value);
+  inline void set_key(const char* value);
+  inline void set_key(const void* value, size_t size);
+  inline ::std::string* mutable_key();
+  
+  // optional bytes client_nonce = 2;
+  inline bool has_client_nonce() const;
+  inline void clear_client_nonce();
+  static const int kClientNonceFieldNumber = 2;
+  inline const ::std::string& client_nonce() const;
+  inline void set_client_nonce(const ::std::string& value);
+  inline void set_client_nonce(const char* value);
+  inline void set_client_nonce(const void* value, size_t size);
+  inline ::std::string* mutable_client_nonce();
+  
+  // optional bytes server_nonce = 3;
+  inline bool has_server_nonce() const;
+  inline void clear_server_nonce();
+  static const int kServerNonceFieldNumber = 3;
+  inline const ::std::string& server_nonce() const;
+  inline void set_server_nonce(const ::std::string& value);
+  inline void set_server_nonce(const char* value);
+  inline void set_server_nonce(const void* value, size_t size);
+  inline ::std::string* mutable_server_nonce();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.CryptSetup)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::std::string* key_;
+  static const ::std::string _default_key_;
+  ::std::string* client_nonce_;
+  static const ::std::string _default_client_nonce_;
+  ::std::string* server_nonce_;
+  static const ::std::string _default_server_nonce_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static CryptSetup* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ContextActionAdd : public ::google::protobuf::Message {
+ public:
+  ContextActionAdd();
+  virtual ~ContextActionAdd();
+  
+  ContextActionAdd(const ContextActionAdd& from);
+  
+  inline ContextActionAdd& operator=(const ContextActionAdd& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ContextActionAdd& default_instance();
+  
+  void Swap(ContextActionAdd* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ContextActionAdd* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ContextActionAdd& from);
+  void MergeFrom(const ContextActionAdd& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef ContextActionAdd_Context Context;
+  static const Context Server = ContextActionAdd_Context_Server;
+  static const Context Channel = ContextActionAdd_Context_Channel;
+  static const Context User = ContextActionAdd_Context_User;
+  static inline bool Context_IsValid(int value) {
+    return ContextActionAdd_Context_IsValid(value);
+  }
+  static const Context Context_MIN =
+    ContextActionAdd_Context_Context_MIN;
+  static const Context Context_MAX =
+    ContextActionAdd_Context_Context_MAX;
+  static const int Context_ARRAYSIZE =
+    ContextActionAdd_Context_Context_ARRAYSIZE;
+  static inline const ::google::protobuf::EnumDescriptor*
+  Context_descriptor() {
+    return ContextActionAdd_Context_descriptor();
+  }
+  static inline const ::std::string& Context_Name(Context value) {
+    return ContextActionAdd_Context_Name(value);
+  }
+  static inline bool Context_Parse(const ::std::string& name,
+      Context* value) {
+    return ContextActionAdd_Context_Parse(name, value);
+  }
+  
+  // accessors -------------------------------------------------------
+  
+  // required string action = 1;
+  inline bool has_action() const;
+  inline void clear_action();
+  static const int kActionFieldNumber = 1;
+  inline const ::std::string& action() const;
+  inline void set_action(const ::std::string& value);
+  inline void set_action(const char* value);
+  inline void set_action(const char* value, size_t size);
+  inline ::std::string* mutable_action();
+  
+  // required string text = 2;
+  inline bool has_text() const;
+  inline void clear_text();
+  static const int kTextFieldNumber = 2;
+  inline const ::std::string& text() const;
+  inline void set_text(const ::std::string& value);
+  inline void set_text(const char* value);
+  inline void set_text(const char* value, size_t size);
+  inline ::std::string* mutable_text();
+  
+  // optional uint32 context = 3;
+  inline bool has_context() const;
+  inline void clear_context();
+  static const int kContextFieldNumber = 3;
+  inline ::google::protobuf::uint32 context() const;
+  inline void set_context(::google::protobuf::uint32 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ContextActionAdd)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::std::string* action_;
+  static const ::std::string _default_action_;
+  ::std::string* text_;
+  static const ::std::string _default_text_;
+  ::google::protobuf::uint32 context_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ContextActionAdd* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class ContextAction : public ::google::protobuf::Message {
+ public:
+  ContextAction();
+  virtual ~ContextAction();
+  
+  ContextAction(const ContextAction& from);
+  
+  inline ContextAction& operator=(const ContextAction& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const ContextAction& default_instance();
+  
+  void Swap(ContextAction* other);
+  
+  // implements Message ----------------------------------------------
+  
+  ContextAction* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const ContextAction& from);
+  void MergeFrom(const ContextAction& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 session = 1;
+  inline bool has_session() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 1;
+  inline ::google::protobuf::uint32 session() const;
+  inline void set_session(::google::protobuf::uint32 value);
+  
+  // optional uint32 channel_id = 2;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 2;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // required string action = 3;
+  inline bool has_action() const;
+  inline void clear_action();
+  static const int kActionFieldNumber = 3;
+  inline const ::std::string& action() const;
+  inline void set_action(const ::std::string& value);
+  inline void set_action(const char* value);
+  inline void set_action(const char* value, size_t size);
+  inline ::std::string* mutable_action();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.ContextAction)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 session_;
+  ::google::protobuf::uint32 channel_id_;
+  ::std::string* action_;
+  static const ::std::string _default_action_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static ContextAction* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UserList_User : public ::google::protobuf::Message {
+ public:
+  UserList_User();
+  virtual ~UserList_User();
+  
+  UserList_User(const UserList_User& from);
+  
+  inline UserList_User& operator=(const UserList_User& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UserList_User& default_instance();
+  
+  void Swap(UserList_User* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UserList_User* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UserList_User& from);
+  void MergeFrom(const UserList_User& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required uint32 user_id = 1;
+  inline bool has_user_id() const;
+  inline void clear_user_id();
+  static const int kUserIdFieldNumber = 1;
+  inline ::google::protobuf::uint32 user_id() const;
+  inline void set_user_id(::google::protobuf::uint32 value);
+  
+  // optional string name = 2;
+  inline bool has_name() const;
+  inline void clear_name();
+  static const int kNameFieldNumber = 2;
+  inline const ::std::string& name() const;
+  inline void set_name(const ::std::string& value);
+  inline void set_name(const char* value);
+  inline void set_name(const char* value, size_t size);
+  inline ::std::string* mutable_name();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UserList.User)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 user_id_;
+  ::std::string* name_;
+  static const ::std::string _default_name_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UserList_User* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UserList : public ::google::protobuf::Message {
+ public:
+  UserList();
+  virtual ~UserList();
+  
+  UserList(const UserList& from);
+  
+  inline UserList& operator=(const UserList& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UserList& default_instance();
+  
+  void Swap(UserList* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UserList* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UserList& from);
+  void MergeFrom(const UserList& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef UserList_User User;
+  
+  // accessors -------------------------------------------------------
+  
+  // repeated .MumbleProto.UserList.User users = 1;
+  inline int users_size() const;
+  inline void clear_users();
+  static const int kUsersFieldNumber = 1;
+  inline const ::MumbleProto::UserList_User& users(int index) const;
+  inline ::MumbleProto::UserList_User* mutable_users(int index);
+  inline ::MumbleProto::UserList_User* add_users();
+  inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::UserList_User >&
+      users() const;
+  inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::UserList_User >*
+      mutable_users();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UserList)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::RepeatedPtrField< ::MumbleProto::UserList_User > users_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UserList* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class VoiceTarget_Target : public ::google::protobuf::Message {
+ public:
+  VoiceTarget_Target();
+  virtual ~VoiceTarget_Target();
+  
+  VoiceTarget_Target(const VoiceTarget_Target& from);
+  
+  inline VoiceTarget_Target& operator=(const VoiceTarget_Target& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const VoiceTarget_Target& default_instance();
+  
+  void Swap(VoiceTarget_Target* other);
+  
+  // implements Message ----------------------------------------------
+  
+  VoiceTarget_Target* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const VoiceTarget_Target& from);
+  void MergeFrom(const VoiceTarget_Target& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // repeated uint32 session = 1;
+  inline int session_size() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 1;
+  inline ::google::protobuf::uint32 session(int index) const;
+  inline void set_session(int index, ::google::protobuf::uint32 value);
+  inline void add_session(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      session() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_session();
+  
+  // optional uint32 channel_id = 2;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 2;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // optional string group = 3;
+  inline bool has_group() const;
+  inline void clear_group();
+  static const int kGroupFieldNumber = 3;
+  inline const ::std::string& group() const;
+  inline void set_group(const ::std::string& value);
+  inline void set_group(const char* value);
+  inline void set_group(const char* value, size_t size);
+  inline ::std::string* mutable_group();
+  
+  // optional bool links = 4 [default = false];
+  inline bool has_links() const;
+  inline void clear_links();
+  static const int kLinksFieldNumber = 4;
+  inline bool links() const;
+  inline void set_links(bool value);
+  
+  // optional bool children = 5 [default = false];
+  inline bool has_children() const;
+  inline void clear_children();
+  static const int kChildrenFieldNumber = 5;
+  inline bool children() const;
+  inline void set_children(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.VoiceTarget.Target)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > session_;
+  ::google::protobuf::uint32 channel_id_;
+  ::std::string* group_;
+  static const ::std::string _default_group_;
+  bool links_;
+  bool children_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static VoiceTarget_Target* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class VoiceTarget : public ::google::protobuf::Message {
+ public:
+  VoiceTarget();
+  virtual ~VoiceTarget();
+  
+  VoiceTarget(const VoiceTarget& from);
+  
+  inline VoiceTarget& operator=(const VoiceTarget& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const VoiceTarget& default_instance();
+  
+  void Swap(VoiceTarget* other);
+  
+  // implements Message ----------------------------------------------
+  
+  VoiceTarget* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const VoiceTarget& from);
+  void MergeFrom(const VoiceTarget& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef VoiceTarget_Target Target;
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 id = 1;
+  inline bool has_id() const;
+  inline void clear_id();
+  static const int kIdFieldNumber = 1;
+  inline ::google::protobuf::uint32 id() const;
+  inline void set_id(::google::protobuf::uint32 value);
+  
+  // repeated .MumbleProto.VoiceTarget.Target targets = 2;
+  inline int targets_size() const;
+  inline void clear_targets();
+  static const int kTargetsFieldNumber = 2;
+  inline const ::MumbleProto::VoiceTarget_Target& targets(int index) const;
+  inline ::MumbleProto::VoiceTarget_Target* mutable_targets(int index);
+  inline ::MumbleProto::VoiceTarget_Target* add_targets();
+  inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::VoiceTarget_Target >&
+      targets() const;
+  inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::VoiceTarget_Target >*
+      mutable_targets();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.VoiceTarget)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 id_;
+  ::google::protobuf::RepeatedPtrField< ::MumbleProto::VoiceTarget_Target > targets_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static VoiceTarget* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class PermissionQuery : public ::google::protobuf::Message {
+ public:
+  PermissionQuery();
+  virtual ~PermissionQuery();
+  
+  PermissionQuery(const PermissionQuery& from);
+  
+  inline PermissionQuery& operator=(const PermissionQuery& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const PermissionQuery& default_instance();
+  
+  void Swap(PermissionQuery* other);
+  
+  // implements Message ----------------------------------------------
+  
+  PermissionQuery* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const PermissionQuery& from);
+  void MergeFrom(const PermissionQuery& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 channel_id = 1;
+  inline bool has_channel_id() const;
+  inline void clear_channel_id();
+  static const int kChannelIdFieldNumber = 1;
+  inline ::google::protobuf::uint32 channel_id() const;
+  inline void set_channel_id(::google::protobuf::uint32 value);
+  
+  // optional uint32 permissions = 2;
+  inline bool has_permissions() const;
+  inline void clear_permissions();
+  static const int kPermissionsFieldNumber = 2;
+  inline ::google::protobuf::uint32 permissions() const;
+  inline void set_permissions(::google::protobuf::uint32 value);
+  
+  // optional bool flush = 3 [default = false];
+  inline bool has_flush() const;
+  inline void clear_flush();
+  static const int kFlushFieldNumber = 3;
+  inline bool flush() const;
+  inline void set_flush(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.PermissionQuery)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 channel_id_;
+  ::google::protobuf::uint32 permissions_;
+  bool flush_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static PermissionQuery* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class CodecVersion : public ::google::protobuf::Message {
+ public:
+  CodecVersion();
+  virtual ~CodecVersion();
+  
+  CodecVersion(const CodecVersion& from);
+  
+  inline CodecVersion& operator=(const CodecVersion& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const CodecVersion& default_instance();
+  
+  void Swap(CodecVersion* other);
+  
+  // implements Message ----------------------------------------------
+  
+  CodecVersion* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const CodecVersion& from);
+  void MergeFrom(const CodecVersion& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // required int32 alpha = 1;
+  inline bool has_alpha() const;
+  inline void clear_alpha();
+  static const int kAlphaFieldNumber = 1;
+  inline ::google::protobuf::int32 alpha() const;
+  inline void set_alpha(::google::protobuf::int32 value);
+  
+  // required int32 beta = 2;
+  inline bool has_beta() const;
+  inline void clear_beta();
+  static const int kBetaFieldNumber = 2;
+  inline ::google::protobuf::int32 beta() const;
+  inline void set_beta(::google::protobuf::int32 value);
+  
+  // required bool prefer_alpha = 3 [default = true];
+  inline bool has_prefer_alpha() const;
+  inline void clear_prefer_alpha();
+  static const int kPreferAlphaFieldNumber = 3;
+  inline bool prefer_alpha() const;
+  inline void set_prefer_alpha(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.CodecVersion)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::int32 alpha_;
+  ::google::protobuf::int32 beta_;
+  bool prefer_alpha_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static CodecVersion* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UserStats_Stats : public ::google::protobuf::Message {
+ public:
+  UserStats_Stats();
+  virtual ~UserStats_Stats();
+  
+  UserStats_Stats(const UserStats_Stats& from);
+  
+  inline UserStats_Stats& operator=(const UserStats_Stats& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UserStats_Stats& default_instance();
+  
+  void Swap(UserStats_Stats* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UserStats_Stats* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UserStats_Stats& from);
+  void MergeFrom(const UserStats_Stats& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 good = 1;
+  inline bool has_good() const;
+  inline void clear_good();
+  static const int kGoodFieldNumber = 1;
+  inline ::google::protobuf::uint32 good() const;
+  inline void set_good(::google::protobuf::uint32 value);
+  
+  // optional uint32 late = 2;
+  inline bool has_late() const;
+  inline void clear_late();
+  static const int kLateFieldNumber = 2;
+  inline ::google::protobuf::uint32 late() const;
+  inline void set_late(::google::protobuf::uint32 value);
+  
+  // optional uint32 lost = 3;
+  inline bool has_lost() const;
+  inline void clear_lost();
+  static const int kLostFieldNumber = 3;
+  inline ::google::protobuf::uint32 lost() const;
+  inline void set_lost(::google::protobuf::uint32 value);
+  
+  // optional uint32 resync = 4;
+  inline bool has_resync() const;
+  inline void clear_resync();
+  static const int kResyncFieldNumber = 4;
+  inline ::google::protobuf::uint32 resync() const;
+  inline void set_resync(::google::protobuf::uint32 value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UserStats.Stats)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 good_;
+  ::google::protobuf::uint32 late_;
+  ::google::protobuf::uint32 lost_;
+  ::google::protobuf::uint32 resync_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UserStats_Stats* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class UserStats : public ::google::protobuf::Message {
+ public:
+  UserStats();
+  virtual ~UserStats();
+  
+  UserStats(const UserStats& from);
+  
+  inline UserStats& operator=(const UserStats& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const UserStats& default_instance();
+  
+  void Swap(UserStats* other);
+  
+  // implements Message ----------------------------------------------
+  
+  UserStats* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const UserStats& from);
+  void MergeFrom(const UserStats& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  typedef UserStats_Stats Stats;
+  
+  // accessors -------------------------------------------------------
+  
+  // optional uint32 session = 1;
+  inline bool has_session() const;
+  inline void clear_session();
+  static const int kSessionFieldNumber = 1;
+  inline ::google::protobuf::uint32 session() const;
+  inline void set_session(::google::protobuf::uint32 value);
+  
+  // optional bool stats_only = 2 [default = false];
+  inline bool has_stats_only() const;
+  inline void clear_stats_only();
+  static const int kStatsOnlyFieldNumber = 2;
+  inline bool stats_only() const;
+  inline void set_stats_only(bool value);
+  
+  // repeated bytes certificates = 3;
+  inline int certificates_size() const;
+  inline void clear_certificates();
+  static const int kCertificatesFieldNumber = 3;
+  inline const ::std::string& certificates(int index) const;
+  inline ::std::string* mutable_certificates(int index);
+  inline void set_certificates(int index, const ::std::string& value);
+  inline void set_certificates(int index, const char* value);
+  inline void set_certificates(int index, const void* value, size_t size);
+  inline ::std::string* add_certificates();
+  inline void add_certificates(const ::std::string& value);
+  inline void add_certificates(const char* value);
+  inline void add_certificates(const void* value, size_t size);
+  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& certificates() const;
+  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_certificates();
+  
+  // optional .MumbleProto.UserStats.Stats from_client = 4;
+  inline bool has_from_client() const;
+  inline void clear_from_client();
+  static const int kFromClientFieldNumber = 4;
+  inline const ::MumbleProto::UserStats_Stats& from_client() const;
+  inline ::MumbleProto::UserStats_Stats* mutable_from_client();
+  
+  // optional .MumbleProto.UserStats.Stats from_server = 5;
+  inline bool has_from_server() const;
+  inline void clear_from_server();
+  static const int kFromServerFieldNumber = 5;
+  inline const ::MumbleProto::UserStats_Stats& from_server() const;
+  inline ::MumbleProto::UserStats_Stats* mutable_from_server();
+  
+  // optional uint32 udp_packets = 6;
+  inline bool has_udp_packets() const;
+  inline void clear_udp_packets();
+  static const int kUdpPacketsFieldNumber = 6;
+  inline ::google::protobuf::uint32 udp_packets() const;
+  inline void set_udp_packets(::google::protobuf::uint32 value);
+  
+  // optional uint32 tcp_packets = 7;
+  inline bool has_tcp_packets() const;
+  inline void clear_tcp_packets();
+  static const int kTcpPacketsFieldNumber = 7;
+  inline ::google::protobuf::uint32 tcp_packets() const;
+  inline void set_tcp_packets(::google::protobuf::uint32 value);
+  
+  // optional float udp_ping_avg = 8;
+  inline bool has_udp_ping_avg() const;
+  inline void clear_udp_ping_avg();
+  static const int kUdpPingAvgFieldNumber = 8;
+  inline float udp_ping_avg() const;
+  inline void set_udp_ping_avg(float value);
+  
+  // optional float udp_ping_var = 9;
+  inline bool has_udp_ping_var() const;
+  inline void clear_udp_ping_var();
+  static const int kUdpPingVarFieldNumber = 9;
+  inline float udp_ping_var() const;
+  inline void set_udp_ping_var(float value);
+  
+  // optional float tcp_ping_avg = 10;
+  inline bool has_tcp_ping_avg() const;
+  inline void clear_tcp_ping_avg();
+  static const int kTcpPingAvgFieldNumber = 10;
+  inline float tcp_ping_avg() const;
+  inline void set_tcp_ping_avg(float value);
+  
+  // optional float tcp_ping_var = 11;
+  inline bool has_tcp_ping_var() const;
+  inline void clear_tcp_ping_var();
+  static const int kTcpPingVarFieldNumber = 11;
+  inline float tcp_ping_var() const;
+  inline void set_tcp_ping_var(float value);
+  
+  // optional .MumbleProto.Version version = 12;
+  inline bool has_version() const;
+  inline void clear_version();
+  static const int kVersionFieldNumber = 12;
+  inline const ::MumbleProto::Version& version() const;
+  inline ::MumbleProto::Version* mutable_version();
+  
+  // repeated int32 celt_versions = 13;
+  inline int celt_versions_size() const;
+  inline void clear_celt_versions();
+  static const int kCeltVersionsFieldNumber = 13;
+  inline ::google::protobuf::int32 celt_versions(int index) const;
+  inline void set_celt_versions(int index, ::google::protobuf::int32 value);
+  inline void add_celt_versions(::google::protobuf::int32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
+      celt_versions() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
+      mutable_celt_versions();
+  
+  // optional bytes address = 14;
+  inline bool has_address() const;
+  inline void clear_address();
+  static const int kAddressFieldNumber = 14;
+  inline const ::std::string& address() const;
+  inline void set_address(const ::std::string& value);
+  inline void set_address(const char* value);
+  inline void set_address(const void* value, size_t size);
+  inline ::std::string* mutable_address();
+  
+  // optional uint32 bandwidth = 15;
+  inline bool has_bandwidth() const;
+  inline void clear_bandwidth();
+  static const int kBandwidthFieldNumber = 15;
+  inline ::google::protobuf::uint32 bandwidth() const;
+  inline void set_bandwidth(::google::protobuf::uint32 value);
+  
+  // optional uint32 onlinesecs = 16;
+  inline bool has_onlinesecs() const;
+  inline void clear_onlinesecs();
+  static const int kOnlinesecsFieldNumber = 16;
+  inline ::google::protobuf::uint32 onlinesecs() const;
+  inline void set_onlinesecs(::google::protobuf::uint32 value);
+  
+  // optional uint32 idlesecs = 17;
+  inline bool has_idlesecs() const;
+  inline void clear_idlesecs();
+  static const int kIdlesecsFieldNumber = 17;
+  inline ::google::protobuf::uint32 idlesecs() const;
+  inline void set_idlesecs(::google::protobuf::uint32 value);
+  
+  // optional bool strong_certificate = 18 [default = false];
+  inline bool has_strong_certificate() const;
+  inline void clear_strong_certificate();
+  static const int kStrongCertificateFieldNumber = 18;
+  inline bool strong_certificate() const;
+  inline void set_strong_certificate(bool value);
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.UserStats)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::uint32 session_;
+  bool stats_only_;
+  ::google::protobuf::RepeatedPtrField< ::std::string> certificates_;
+  ::MumbleProto::UserStats_Stats* from_client_;
+  ::MumbleProto::UserStats_Stats* from_server_;
+  ::google::protobuf::uint32 udp_packets_;
+  ::google::protobuf::uint32 tcp_packets_;
+  float udp_ping_avg_;
+  float udp_ping_var_;
+  float tcp_ping_avg_;
+  float tcp_ping_var_;
+  ::MumbleProto::Version* version_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > celt_versions_;
+  ::std::string* address_;
+  static const ::std::string _default_address_;
+  ::google::protobuf::uint32 bandwidth_;
+  ::google::protobuf::uint32 onlinesecs_;
+  ::google::protobuf::uint32 idlesecs_;
+  bool strong_certificate_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static UserStats* default_instance_;
+};
+// -------------------------------------------------------------------
+
+class RequestBlob : public ::google::protobuf::Message {
+ public:
+  RequestBlob();
+  virtual ~RequestBlob();
+  
+  RequestBlob(const RequestBlob& from);
+  
+  inline RequestBlob& operator=(const RequestBlob& from) {
+    CopyFrom(from);
+    return *this;
+  }
+  
+  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
+    return _unknown_fields_;
+  }
+  
+  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
+    return &_unknown_fields_;
+  }
+  
+  static const ::google::protobuf::Descriptor* descriptor();
+  static const RequestBlob& default_instance();
+  
+  void Swap(RequestBlob* other);
+  
+  // implements Message ----------------------------------------------
+  
+  RequestBlob* New() const;
+  void CopyFrom(const ::google::protobuf::Message& from);
+  void MergeFrom(const ::google::protobuf::Message& from);
+  void CopyFrom(const RequestBlob& from);
+  void MergeFrom(const RequestBlob& from);
+  void Clear();
+  bool IsInitialized() const;
+  
+  int ByteSize() const;
+  bool MergePartialFromCodedStream(
+      ::google::protobuf::io::CodedInputStream* input);
+  void SerializeWithCachedSizes(
+      ::google::protobuf::io::CodedOutputStream* output) const;
+  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
+  int GetCachedSize() const { return _cached_size_; }
+  private:
+  void SharedCtor();
+  void SharedDtor();
+  void SetCachedSize(int size) const;
+  public:
+  
+  ::google::protobuf::Metadata GetMetadata() const;
+  
+  // nested types ----------------------------------------------------
+  
+  // accessors -------------------------------------------------------
+  
+  // repeated uint32 session_texture = 1;
+  inline int session_texture_size() const;
+  inline void clear_session_texture();
+  static const int kSessionTextureFieldNumber = 1;
+  inline ::google::protobuf::uint32 session_texture(int index) const;
+  inline void set_session_texture(int index, ::google::protobuf::uint32 value);
+  inline void add_session_texture(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      session_texture() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_session_texture();
+  
+  // repeated uint32 session_comment = 2;
+  inline int session_comment_size() const;
+  inline void clear_session_comment();
+  static const int kSessionCommentFieldNumber = 2;
+  inline ::google::protobuf::uint32 session_comment(int index) const;
+  inline void set_session_comment(int index, ::google::protobuf::uint32 value);
+  inline void add_session_comment(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      session_comment() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_session_comment();
+  
+  // repeated uint32 channel_description = 3;
+  inline int channel_description_size() const;
+  inline void clear_channel_description();
+  static const int kChannelDescriptionFieldNumber = 3;
+  inline ::google::protobuf::uint32 channel_description(int index) const;
+  inline void set_channel_description(int index, ::google::protobuf::uint32 value);
+  inline void add_channel_description(::google::protobuf::uint32 value);
+  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+      channel_description() const;
+  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+      mutable_channel_description();
+  
+  // @@protoc_insertion_point(class_scope:MumbleProto.RequestBlob)
+ private:
+  ::google::protobuf::UnknownFieldSet _unknown_fields_;
+  mutable int _cached_size_;
+  
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > session_texture_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > session_comment_;
+  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > channel_description_;
+  friend void  protobuf_AddDesc_Mumble_2eproto();
+  friend void protobuf_AssignDesc_Mumble_2eproto();
+  friend void protobuf_ShutdownFile_Mumble_2eproto();
+  
+  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
+  
+  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
+  inline bool _has_bit(int index) const {
+    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
+  }
+  inline void _set_bit(int index) {
+    _has_bits_[index / 32] |= (1u << (index % 32));
+  }
+  inline void _clear_bit(int index) {
+    _has_bits_[index / 32] &= ~(1u << (index % 32));
+  }
+  
+  void InitAsDefaultInstance();
+  static RequestBlob* default_instance_;
+};
+// ===================================================================
+
+
+// ===================================================================
+
+// Version
+
+// optional uint32 version = 1;
+inline bool Version::has_version() const {
+  return _has_bit(0);
+}
+inline void Version::clear_version() {
+  version_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 Version::version() const {
+  return version_;
+}
+inline void Version::set_version(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  version_ = value;
+}
+
+// optional string release = 2;
+inline bool Version::has_release() const {
+  return _has_bit(1);
+}
+inline void Version::clear_release() {
+  if (release_ != &_default_release_) {
+    release_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& Version::release() const {
+  return *release_;
+}
+inline void Version::set_release(const ::std::string& value) {
+  _set_bit(1);
+  if (release_ == &_default_release_) {
+    release_ = new ::std::string;
+  }
+  release_->assign(value);
+}
+inline void Version::set_release(const char* value) {
+  _set_bit(1);
+  if (release_ == &_default_release_) {
+    release_ = new ::std::string;
+  }
+  release_->assign(value);
+}
+inline void Version::set_release(const char* value, size_t size) {
+  _set_bit(1);
+  if (release_ == &_default_release_) {
+    release_ = new ::std::string;
+  }
+  release_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Version::mutable_release() {
+  _set_bit(1);
+  if (release_ == &_default_release_) {
+    release_ = new ::std::string;
+  }
+  return release_;
+}
+
+// optional string os = 3;
+inline bool Version::has_os() const {
+  return _has_bit(2);
+}
+inline void Version::clear_os() {
+  if (os_ != &_default_os_) {
+    os_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& Version::os() const {
+  return *os_;
+}
+inline void Version::set_os(const ::std::string& value) {
+  _set_bit(2);
+  if (os_ == &_default_os_) {
+    os_ = new ::std::string;
+  }
+  os_->assign(value);
+}
+inline void Version::set_os(const char* value) {
+  _set_bit(2);
+  if (os_ == &_default_os_) {
+    os_ = new ::std::string;
+  }
+  os_->assign(value);
+}
+inline void Version::set_os(const char* value, size_t size) {
+  _set_bit(2);
+  if (os_ == &_default_os_) {
+    os_ = new ::std::string;
+  }
+  os_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Version::mutable_os() {
+  _set_bit(2);
+  if (os_ == &_default_os_) {
+    os_ = new ::std::string;
+  }
+  return os_;
+}
+
+// optional string os_version = 4;
+inline bool Version::has_os_version() const {
+  return _has_bit(3);
+}
+inline void Version::clear_os_version() {
+  if (os_version_ != &_default_os_version_) {
+    os_version_->clear();
+  }
+  _clear_bit(3);
+}
+inline const ::std::string& Version::os_version() const {
+  return *os_version_;
+}
+inline void Version::set_os_version(const ::std::string& value) {
+  _set_bit(3);
+  if (os_version_ == &_default_os_version_) {
+    os_version_ = new ::std::string;
+  }
+  os_version_->assign(value);
+}
+inline void Version::set_os_version(const char* value) {
+  _set_bit(3);
+  if (os_version_ == &_default_os_version_) {
+    os_version_ = new ::std::string;
+  }
+  os_version_->assign(value);
+}
+inline void Version::set_os_version(const char* value, size_t size) {
+  _set_bit(3);
+  if (os_version_ == &_default_os_version_) {
+    os_version_ = new ::std::string;
+  }
+  os_version_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Version::mutable_os_version() {
+  _set_bit(3);
+  if (os_version_ == &_default_os_version_) {
+    os_version_ = new ::std::string;
+  }
+  return os_version_;
+}
+
+// -------------------------------------------------------------------
+
+// UDPTunnel
+
+// required bytes packet = 1;
+inline bool UDPTunnel::has_packet() const {
+  return _has_bit(0);
+}
+inline void UDPTunnel::clear_packet() {
+  if (packet_ != &_default_packet_) {
+    packet_->clear();
+  }
+  _clear_bit(0);
+}
+inline const ::std::string& UDPTunnel::packet() const {
+  return *packet_;
+}
+inline void UDPTunnel::set_packet(const ::std::string& value) {
+  _set_bit(0);
+  if (packet_ == &_default_packet_) {
+    packet_ = new ::std::string;
+  }
+  packet_->assign(value);
+}
+inline void UDPTunnel::set_packet(const char* value) {
+  _set_bit(0);
+  if (packet_ == &_default_packet_) {
+    packet_ = new ::std::string;
+  }
+  packet_->assign(value);
+}
+inline void UDPTunnel::set_packet(const void* value, size_t size) {
+  _set_bit(0);
+  if (packet_ == &_default_packet_) {
+    packet_ = new ::std::string;
+  }
+  packet_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UDPTunnel::mutable_packet() {
+  _set_bit(0);
+  if (packet_ == &_default_packet_) {
+    packet_ = new ::std::string;
+  }
+  return packet_;
+}
+
+// -------------------------------------------------------------------
+
+// Authenticate
+
+// optional string username = 1;
+inline bool Authenticate::has_username() const {
+  return _has_bit(0);
+}
+inline void Authenticate::clear_username() {
+  if (username_ != &_default_username_) {
+    username_->clear();
+  }
+  _clear_bit(0);
+}
+inline const ::std::string& Authenticate::username() const {
+  return *username_;
+}
+inline void Authenticate::set_username(const ::std::string& value) {
+  _set_bit(0);
+  if (username_ == &_default_username_) {
+    username_ = new ::std::string;
+  }
+  username_->assign(value);
+}
+inline void Authenticate::set_username(const char* value) {
+  _set_bit(0);
+  if (username_ == &_default_username_) {
+    username_ = new ::std::string;
+  }
+  username_->assign(value);
+}
+inline void Authenticate::set_username(const char* value, size_t size) {
+  _set_bit(0);
+  if (username_ == &_default_username_) {
+    username_ = new ::std::string;
+  }
+  username_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Authenticate::mutable_username() {
+  _set_bit(0);
+  if (username_ == &_default_username_) {
+    username_ = new ::std::string;
+  }
+  return username_;
+}
+
+// optional string password = 2;
+inline bool Authenticate::has_password() const {
+  return _has_bit(1);
+}
+inline void Authenticate::clear_password() {
+  if (password_ != &_default_password_) {
+    password_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& Authenticate::password() const {
+  return *password_;
+}
+inline void Authenticate::set_password(const ::std::string& value) {
+  _set_bit(1);
+  if (password_ == &_default_password_) {
+    password_ = new ::std::string;
+  }
+  password_->assign(value);
+}
+inline void Authenticate::set_password(const char* value) {
+  _set_bit(1);
+  if (password_ == &_default_password_) {
+    password_ = new ::std::string;
+  }
+  password_->assign(value);
+}
+inline void Authenticate::set_password(const char* value, size_t size) {
+  _set_bit(1);
+  if (password_ == &_default_password_) {
+    password_ = new ::std::string;
+  }
+  password_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Authenticate::mutable_password() {
+  _set_bit(1);
+  if (password_ == &_default_password_) {
+    password_ = new ::std::string;
+  }
+  return password_;
+}
+
+// repeated string tokens = 3;
+inline int Authenticate::tokens_size() const {
+  return tokens_.size();
+}
+inline void Authenticate::clear_tokens() {
+  tokens_.Clear();
+}
+inline const ::std::string& Authenticate::tokens(int index) const {
+  return tokens_.Get(index);
+}
+inline ::std::string* Authenticate::mutable_tokens(int index) {
+  return tokens_.Mutable(index);
+}
+inline void Authenticate::set_tokens(int index, const ::std::string& value) {
+  tokens_.Mutable(index)->assign(value);
+}
+inline void Authenticate::set_tokens(int index, const char* value) {
+  tokens_.Mutable(index)->assign(value);
+}
+inline void Authenticate::set_tokens(int index, const char* value, size_t size) {
+  tokens_.Mutable(index)->assign(
+    reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Authenticate::add_tokens() {
+  return tokens_.Add();
+}
+inline void Authenticate::add_tokens(const ::std::string& value) {
+  tokens_.Add()->assign(value);
+}
+inline void Authenticate::add_tokens(const char* value) {
+  tokens_.Add()->assign(value);
+}
+inline void Authenticate::add_tokens(const char* value, size_t size) {
+  tokens_.Add()->assign(reinterpret_cast<const char*>(value), size);
+}
+inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
+Authenticate::tokens() const {
+  return tokens_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::std::string>*
+Authenticate::mutable_tokens() {
+  return &tokens_;
+}
+
+// repeated int32 celt_versions = 4;
+inline int Authenticate::celt_versions_size() const {
+  return celt_versions_.size();
+}
+inline void Authenticate::clear_celt_versions() {
+  celt_versions_.Clear();
+}
+inline ::google::protobuf::int32 Authenticate::celt_versions(int index) const {
+  return celt_versions_.Get(index);
+}
+inline void Authenticate::set_celt_versions(int index, ::google::protobuf::int32 value) {
+  celt_versions_.Set(index, value);
+}
+inline void Authenticate::add_celt_versions(::google::protobuf::int32 value) {
+  celt_versions_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
+Authenticate::celt_versions() const {
+  return celt_versions_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
+Authenticate::mutable_celt_versions() {
+  return &celt_versions_;
+}
+
+// -------------------------------------------------------------------
+
+// Ping
+
+// optional uint64 timestamp = 1;
+inline bool Ping::has_timestamp() const {
+  return _has_bit(0);
+}
+inline void Ping::clear_timestamp() {
+  timestamp_ = GOOGLE_ULONGLONG(0);
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint64 Ping::timestamp() const {
+  return timestamp_;
+}
+inline void Ping::set_timestamp(::google::protobuf::uint64 value) {
+  _set_bit(0);
+  timestamp_ = value;
+}
+
+// optional uint32 good = 2;
+inline bool Ping::has_good() const {
+  return _has_bit(1);
+}
+inline void Ping::clear_good() {
+  good_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 Ping::good() const {
+  return good_;
+}
+inline void Ping::set_good(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  good_ = value;
+}
+
+// optional uint32 late = 3;
+inline bool Ping::has_late() const {
+  return _has_bit(2);
+}
+inline void Ping::clear_late() {
+  late_ = 0u;
+  _clear_bit(2);
+}
+inline ::google::protobuf::uint32 Ping::late() const {
+  return late_;
+}
+inline void Ping::set_late(::google::protobuf::uint32 value) {
+  _set_bit(2);
+  late_ = value;
+}
+
+// optional uint32 lost = 4;
+inline bool Ping::has_lost() const {
+  return _has_bit(3);
+}
+inline void Ping::clear_lost() {
+  lost_ = 0u;
+  _clear_bit(3);
+}
+inline ::google::protobuf::uint32 Ping::lost() const {
+  return lost_;
+}
+inline void Ping::set_lost(::google::protobuf::uint32 value) {
+  _set_bit(3);
+  lost_ = value;
+}
+
+// optional uint32 resync = 5;
+inline bool Ping::has_resync() const {
+  return _has_bit(4);
+}
+inline void Ping::clear_resync() {
+  resync_ = 0u;
+  _clear_bit(4);
+}
+inline ::google::protobuf::uint32 Ping::resync() const {
+  return resync_;
+}
+inline void Ping::set_resync(::google::protobuf::uint32 value) {
+  _set_bit(4);
+  resync_ = value;
+}
+
+// optional uint32 udp_packets = 6;
+inline bool Ping::has_udp_packets() const {
+  return _has_bit(5);
+}
+inline void Ping::clear_udp_packets() {
+  udp_packets_ = 0u;
+  _clear_bit(5);
+}
+inline ::google::protobuf::uint32 Ping::udp_packets() const {
+  return udp_packets_;
+}
+inline void Ping::set_udp_packets(::google::protobuf::uint32 value) {
+  _set_bit(5);
+  udp_packets_ = value;
+}
+
+// optional uint32 tcp_packets = 7;
+inline bool Ping::has_tcp_packets() const {
+  return _has_bit(6);
+}
+inline void Ping::clear_tcp_packets() {
+  tcp_packets_ = 0u;
+  _clear_bit(6);
+}
+inline ::google::protobuf::uint32 Ping::tcp_packets() const {
+  return tcp_packets_;
+}
+inline void Ping::set_tcp_packets(::google::protobuf::uint32 value) {
+  _set_bit(6);
+  tcp_packets_ = value;
+}
+
+// optional float udp_ping_avg = 8;
+inline bool Ping::has_udp_ping_avg() const {
+  return _has_bit(7);
+}
+inline void Ping::clear_udp_ping_avg() {
+  udp_ping_avg_ = 0;
+  _clear_bit(7);
+}
+inline float Ping::udp_ping_avg() const {
+  return udp_ping_avg_;
+}
+inline void Ping::set_udp_ping_avg(float value) {
+  _set_bit(7);
+  udp_ping_avg_ = value;
+}
+
+// optional float udp_ping_var = 9;
+inline bool Ping::has_udp_ping_var() const {
+  return _has_bit(8);
+}
+inline void Ping::clear_udp_ping_var() {
+  udp_ping_var_ = 0;
+  _clear_bit(8);
+}
+inline float Ping::udp_ping_var() const {
+  return udp_ping_var_;
+}
+inline void Ping::set_udp_ping_var(float value) {
+  _set_bit(8);
+  udp_ping_var_ = value;
+}
+
+// optional float tcp_ping_avg = 10;
+inline bool Ping::has_tcp_ping_avg() const {
+  return _has_bit(9);
+}
+inline void Ping::clear_tcp_ping_avg() {
+  tcp_ping_avg_ = 0;
+  _clear_bit(9);
+}
+inline float Ping::tcp_ping_avg() const {
+  return tcp_ping_avg_;
+}
+inline void Ping::set_tcp_ping_avg(float value) {
+  _set_bit(9);
+  tcp_ping_avg_ = value;
+}
+
+// optional float tcp_ping_var = 11;
+inline bool Ping::has_tcp_ping_var() const {
+  return _has_bit(10);
+}
+inline void Ping::clear_tcp_ping_var() {
+  tcp_ping_var_ = 0;
+  _clear_bit(10);
+}
+inline float Ping::tcp_ping_var() const {
+  return tcp_ping_var_;
+}
+inline void Ping::set_tcp_ping_var(float value) {
+  _set_bit(10);
+  tcp_ping_var_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// Reject
+
+// optional .MumbleProto.Reject.RejectType type = 1;
+inline bool Reject::has_type() const {
+  return _has_bit(0);
+}
+inline void Reject::clear_type() {
+  type_ = 0;
+  _clear_bit(0);
+}
+inline ::MumbleProto::Reject_RejectType Reject::type() const {
+  return static_cast< ::MumbleProto::Reject_RejectType >(type_);
+}
+inline void Reject::set_type(::MumbleProto::Reject_RejectType value) {
+  GOOGLE_DCHECK(::MumbleProto::Reject_RejectType_IsValid(value));
+  _set_bit(0);
+  type_ = value;
+}
+
+// optional string reason = 2;
+inline bool Reject::has_reason() const {
+  return _has_bit(1);
+}
+inline void Reject::clear_reason() {
+  if (reason_ != &_default_reason_) {
+    reason_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& Reject::reason() const {
+  return *reason_;
+}
+inline void Reject::set_reason(const ::std::string& value) {
+  _set_bit(1);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void Reject::set_reason(const char* value) {
+  _set_bit(1);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void Reject::set_reason(const char* value, size_t size) {
+  _set_bit(1);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* Reject::mutable_reason() {
+  _set_bit(1);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  return reason_;
+}
+
+// -------------------------------------------------------------------
+
+// ServerConfig
+
+// optional uint32 max_bandwidth = 1;
+inline bool ServerConfig::has_max_bandwidth() const {
+  return _has_bit(0);
+}
+inline void ServerConfig::clear_max_bandwidth() {
+  max_bandwidth_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 ServerConfig::max_bandwidth() const {
+  return max_bandwidth_;
+}
+inline void ServerConfig::set_max_bandwidth(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  max_bandwidth_ = value;
+}
+
+// optional string welcome_text = 2;
+inline bool ServerConfig::has_welcome_text() const {
+  return _has_bit(1);
+}
+inline void ServerConfig::clear_welcome_text() {
+  if (welcome_text_ != &_default_welcome_text_) {
+    welcome_text_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& ServerConfig::welcome_text() const {
+  return *welcome_text_;
+}
+inline void ServerConfig::set_welcome_text(const ::std::string& value) {
+  _set_bit(1);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  welcome_text_->assign(value);
+}
+inline void ServerConfig::set_welcome_text(const char* value) {
+  _set_bit(1);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  welcome_text_->assign(value);
+}
+inline void ServerConfig::set_welcome_text(const char* value, size_t size) {
+  _set_bit(1);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  welcome_text_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ServerConfig::mutable_welcome_text() {
+  _set_bit(1);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  return welcome_text_;
+}
+
+// optional bool allow_html = 3;
+inline bool ServerConfig::has_allow_html() const {
+  return _has_bit(2);
+}
+inline void ServerConfig::clear_allow_html() {
+  allow_html_ = false;
+  _clear_bit(2);
+}
+inline bool ServerConfig::allow_html() const {
+  return allow_html_;
+}
+inline void ServerConfig::set_allow_html(bool value) {
+  _set_bit(2);
+  allow_html_ = value;
+}
+
+// optional uint32 message_length = 4;
+inline bool ServerConfig::has_message_length() const {
+  return _has_bit(3);
+}
+inline void ServerConfig::clear_message_length() {
+  message_length_ = 0u;
+  _clear_bit(3);
+}
+inline ::google::protobuf::uint32 ServerConfig::message_length() const {
+  return message_length_;
+}
+inline void ServerConfig::set_message_length(::google::protobuf::uint32 value) {
+  _set_bit(3);
+  message_length_ = value;
+}
+
+// optional uint32 image_message_length = 5;
+inline bool ServerConfig::has_image_message_length() const {
+  return _has_bit(4);
+}
+inline void ServerConfig::clear_image_message_length() {
+  image_message_length_ = 0u;
+  _clear_bit(4);
+}
+inline ::google::protobuf::uint32 ServerConfig::image_message_length() const {
+  return image_message_length_;
+}
+inline void ServerConfig::set_image_message_length(::google::protobuf::uint32 value) {
+  _set_bit(4);
+  image_message_length_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// ServerSync
+
+// optional uint32 session = 1;
+inline bool ServerSync::has_session() const {
+  return _has_bit(0);
+}
+inline void ServerSync::clear_session() {
+  session_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 ServerSync::session() const {
+  return session_;
+}
+inline void ServerSync::set_session(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  session_ = value;
+}
+
+// optional uint32 max_bandwidth = 2;
+inline bool ServerSync::has_max_bandwidth() const {
+  return _has_bit(1);
+}
+inline void ServerSync::clear_max_bandwidth() {
+  max_bandwidth_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 ServerSync::max_bandwidth() const {
+  return max_bandwidth_;
+}
+inline void ServerSync::set_max_bandwidth(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  max_bandwidth_ = value;
+}
+
+// optional string welcome_text = 3;
+inline bool ServerSync::has_welcome_text() const {
+  return _has_bit(2);
+}
+inline void ServerSync::clear_welcome_text() {
+  if (welcome_text_ != &_default_welcome_text_) {
+    welcome_text_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& ServerSync::welcome_text() const {
+  return *welcome_text_;
+}
+inline void ServerSync::set_welcome_text(const ::std::string& value) {
+  _set_bit(2);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  welcome_text_->assign(value);
+}
+inline void ServerSync::set_welcome_text(const char* value) {
+  _set_bit(2);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  welcome_text_->assign(value);
+}
+inline void ServerSync::set_welcome_text(const char* value, size_t size) {
+  _set_bit(2);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  welcome_text_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ServerSync::mutable_welcome_text() {
+  _set_bit(2);
+  if (welcome_text_ == &_default_welcome_text_) {
+    welcome_text_ = new ::std::string;
+  }
+  return welcome_text_;
+}
+
+// optional uint64 permissions = 4;
+inline bool ServerSync::has_permissions() const {
+  return _has_bit(3);
+}
+inline void ServerSync::clear_permissions() {
+  permissions_ = GOOGLE_ULONGLONG(0);
+  _clear_bit(3);
+}
+inline ::google::protobuf::uint64 ServerSync::permissions() const {
+  return permissions_;
+}
+inline void ServerSync::set_permissions(::google::protobuf::uint64 value) {
+  _set_bit(3);
+  permissions_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// ChannelRemove
+
+// required uint32 channel_id = 1;
+inline bool ChannelRemove::has_channel_id() const {
+  return _has_bit(0);
+}
+inline void ChannelRemove::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 ChannelRemove::channel_id() const {
+  return channel_id_;
+}
+inline void ChannelRemove::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  channel_id_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// ChannelState
+
+// optional uint32 channel_id = 1;
+inline bool ChannelState::has_channel_id() const {
+  return _has_bit(0);
+}
+inline void ChannelState::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 ChannelState::channel_id() const {
+  return channel_id_;
+}
+inline void ChannelState::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  channel_id_ = value;
+}
+
+// optional uint32 parent = 2;
+inline bool ChannelState::has_parent() const {
+  return _has_bit(1);
+}
+inline void ChannelState::clear_parent() {
+  parent_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 ChannelState::parent() const {
+  return parent_;
+}
+inline void ChannelState::set_parent(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  parent_ = value;
+}
+
+// optional string name = 3;
+inline bool ChannelState::has_name() const {
+  return _has_bit(2);
+}
+inline void ChannelState::clear_name() {
+  if (name_ != &_default_name_) {
+    name_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& ChannelState::name() const {
+  return *name_;
+}
+inline void ChannelState::set_name(const ::std::string& value) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void ChannelState::set_name(const char* value) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void ChannelState::set_name(const char* value, size_t size) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ChannelState::mutable_name() {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  return name_;
+}
+
+// repeated uint32 links = 4;
+inline int ChannelState::links_size() const {
+  return links_.size();
+}
+inline void ChannelState::clear_links() {
+  links_.Clear();
+}
+inline ::google::protobuf::uint32 ChannelState::links(int index) const {
+  return links_.Get(index);
+}
+inline void ChannelState::set_links(int index, ::google::protobuf::uint32 value) {
+  links_.Set(index, value);
+}
+inline void ChannelState::add_links(::google::protobuf::uint32 value) {
+  links_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+ChannelState::links() const {
+  return links_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+ChannelState::mutable_links() {
+  return &links_;
+}
+
+// optional string description = 5;
+inline bool ChannelState::has_description() const {
+  return _has_bit(4);
+}
+inline void ChannelState::clear_description() {
+  if (description_ != &_default_description_) {
+    description_->clear();
+  }
+  _clear_bit(4);
+}
+inline const ::std::string& ChannelState::description() const {
+  return *description_;
+}
+inline void ChannelState::set_description(const ::std::string& value) {
+  _set_bit(4);
+  if (description_ == &_default_description_) {
+    description_ = new ::std::string;
+  }
+  description_->assign(value);
+}
+inline void ChannelState::set_description(const char* value) {
+  _set_bit(4);
+  if (description_ == &_default_description_) {
+    description_ = new ::std::string;
+  }
+  description_->assign(value);
+}
+inline void ChannelState::set_description(const char* value, size_t size) {
+  _set_bit(4);
+  if (description_ == &_default_description_) {
+    description_ = new ::std::string;
+  }
+  description_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ChannelState::mutable_description() {
+  _set_bit(4);
+  if (description_ == &_default_description_) {
+    description_ = new ::std::string;
+  }
+  return description_;
+}
+
+// repeated uint32 links_add = 6;
+inline int ChannelState::links_add_size() const {
+  return links_add_.size();
+}
+inline void ChannelState::clear_links_add() {
+  links_add_.Clear();
+}
+inline ::google::protobuf::uint32 ChannelState::links_add(int index) const {
+  return links_add_.Get(index);
+}
+inline void ChannelState::set_links_add(int index, ::google::protobuf::uint32 value) {
+  links_add_.Set(index, value);
+}
+inline void ChannelState::add_links_add(::google::protobuf::uint32 value) {
+  links_add_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+ChannelState::links_add() const {
+  return links_add_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+ChannelState::mutable_links_add() {
+  return &links_add_;
+}
+
+// repeated uint32 links_remove = 7;
+inline int ChannelState::links_remove_size() const {
+  return links_remove_.size();
+}
+inline void ChannelState::clear_links_remove() {
+  links_remove_.Clear();
+}
+inline ::google::protobuf::uint32 ChannelState::links_remove(int index) const {
+  return links_remove_.Get(index);
+}
+inline void ChannelState::set_links_remove(int index, ::google::protobuf::uint32 value) {
+  links_remove_.Set(index, value);
+}
+inline void ChannelState::add_links_remove(::google::protobuf::uint32 value) {
+  links_remove_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+ChannelState::links_remove() const {
+  return links_remove_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+ChannelState::mutable_links_remove() {
+  return &links_remove_;
+}
+
+// optional bool temporary = 8 [default = false];
+inline bool ChannelState::has_temporary() const {
+  return _has_bit(7);
+}
+inline void ChannelState::clear_temporary() {
+  temporary_ = false;
+  _clear_bit(7);
+}
+inline bool ChannelState::temporary() const {
+  return temporary_;
+}
+inline void ChannelState::set_temporary(bool value) {
+  _set_bit(7);
+  temporary_ = value;
+}
+
+// optional int32 position = 9 [default = 0];
+inline bool ChannelState::has_position() const {
+  return _has_bit(8);
+}
+inline void ChannelState::clear_position() {
+  position_ = 0;
+  _clear_bit(8);
+}
+inline ::google::protobuf::int32 ChannelState::position() const {
+  return position_;
+}
+inline void ChannelState::set_position(::google::protobuf::int32 value) {
+  _set_bit(8);
+  position_ = value;
+}
+
+// optional bytes description_hash = 10;
+inline bool ChannelState::has_description_hash() const {
+  return _has_bit(9);
+}
+inline void ChannelState::clear_description_hash() {
+  if (description_hash_ != &_default_description_hash_) {
+    description_hash_->clear();
+  }
+  _clear_bit(9);
+}
+inline const ::std::string& ChannelState::description_hash() const {
+  return *description_hash_;
+}
+inline void ChannelState::set_description_hash(const ::std::string& value) {
+  _set_bit(9);
+  if (description_hash_ == &_default_description_hash_) {
+    description_hash_ = new ::std::string;
+  }
+  description_hash_->assign(value);
+}
+inline void ChannelState::set_description_hash(const char* value) {
+  _set_bit(9);
+  if (description_hash_ == &_default_description_hash_) {
+    description_hash_ = new ::std::string;
+  }
+  description_hash_->assign(value);
+}
+inline void ChannelState::set_description_hash(const void* value, size_t size) {
+  _set_bit(9);
+  if (description_hash_ == &_default_description_hash_) {
+    description_hash_ = new ::std::string;
+  }
+  description_hash_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ChannelState::mutable_description_hash() {
+  _set_bit(9);
+  if (description_hash_ == &_default_description_hash_) {
+    description_hash_ = new ::std::string;
+  }
+  return description_hash_;
+}
+
+// -------------------------------------------------------------------
+
+// UserRemove
+
+// required uint32 session = 1;
+inline bool UserRemove::has_session() const {
+  return _has_bit(0);
+}
+inline void UserRemove::clear_session() {
+  session_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 UserRemove::session() const {
+  return session_;
+}
+inline void UserRemove::set_session(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  session_ = value;
+}
+
+// optional uint32 actor = 2;
+inline bool UserRemove::has_actor() const {
+  return _has_bit(1);
+}
+inline void UserRemove::clear_actor() {
+  actor_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 UserRemove::actor() const {
+  return actor_;
+}
+inline void UserRemove::set_actor(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  actor_ = value;
+}
+
+// optional string reason = 3;
+inline bool UserRemove::has_reason() const {
+  return _has_bit(2);
+}
+inline void UserRemove::clear_reason() {
+  if (reason_ != &_default_reason_) {
+    reason_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& UserRemove::reason() const {
+  return *reason_;
+}
+inline void UserRemove::set_reason(const ::std::string& value) {
+  _set_bit(2);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void UserRemove::set_reason(const char* value) {
+  _set_bit(2);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void UserRemove::set_reason(const char* value, size_t size) {
+  _set_bit(2);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserRemove::mutable_reason() {
+  _set_bit(2);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  return reason_;
+}
+
+// optional bool ban = 4;
+inline bool UserRemove::has_ban() const {
+  return _has_bit(3);
+}
+inline void UserRemove::clear_ban() {
+  ban_ = false;
+  _clear_bit(3);
+}
+inline bool UserRemove::ban() const {
+  return ban_;
+}
+inline void UserRemove::set_ban(bool value) {
+  _set_bit(3);
+  ban_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// UserState
+
+// optional uint32 session = 1;
+inline bool UserState::has_session() const {
+  return _has_bit(0);
+}
+inline void UserState::clear_session() {
+  session_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 UserState::session() const {
+  return session_;
+}
+inline void UserState::set_session(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  session_ = value;
+}
+
+// optional uint32 actor = 2;
+inline bool UserState::has_actor() const {
+  return _has_bit(1);
+}
+inline void UserState::clear_actor() {
+  actor_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 UserState::actor() const {
+  return actor_;
+}
+inline void UserState::set_actor(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  actor_ = value;
+}
+
+// optional string name = 3;
+inline bool UserState::has_name() const {
+  return _has_bit(2);
+}
+inline void UserState::clear_name() {
+  if (name_ != &_default_name_) {
+    name_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& UserState::name() const {
+  return *name_;
+}
+inline void UserState::set_name(const ::std::string& value) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void UserState::set_name(const char* value) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void UserState::set_name(const char* value, size_t size) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_name() {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  return name_;
+}
+
+// optional uint32 user_id = 4;
+inline bool UserState::has_user_id() const {
+  return _has_bit(3);
+}
+inline void UserState::clear_user_id() {
+  user_id_ = 0u;
+  _clear_bit(3);
+}
+inline ::google::protobuf::uint32 UserState::user_id() const {
+  return user_id_;
+}
+inline void UserState::set_user_id(::google::protobuf::uint32 value) {
+  _set_bit(3);
+  user_id_ = value;
+}
+
+// optional uint32 channel_id = 5;
+inline bool UserState::has_channel_id() const {
+  return _has_bit(4);
+}
+inline void UserState::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(4);
+}
+inline ::google::protobuf::uint32 UserState::channel_id() const {
+  return channel_id_;
+}
+inline void UserState::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(4);
+  channel_id_ = value;
+}
+
+// optional bool mute = 6;
+inline bool UserState::has_mute() const {
+  return _has_bit(5);
+}
+inline void UserState::clear_mute() {
+  mute_ = false;
+  _clear_bit(5);
+}
+inline bool UserState::mute() const {
+  return mute_;
+}
+inline void UserState::set_mute(bool value) {
+  _set_bit(5);
+  mute_ = value;
+}
+
+// optional bool deaf = 7;
+inline bool UserState::has_deaf() const {
+  return _has_bit(6);
+}
+inline void UserState::clear_deaf() {
+  deaf_ = false;
+  _clear_bit(6);
+}
+inline bool UserState::deaf() const {
+  return deaf_;
+}
+inline void UserState::set_deaf(bool value) {
+  _set_bit(6);
+  deaf_ = value;
+}
+
+// optional bool suppress = 8;
+inline bool UserState::has_suppress() const {
+  return _has_bit(7);
+}
+inline void UserState::clear_suppress() {
+  suppress_ = false;
+  _clear_bit(7);
+}
+inline bool UserState::suppress() const {
+  return suppress_;
+}
+inline void UserState::set_suppress(bool value) {
+  _set_bit(7);
+  suppress_ = value;
+}
+
+// optional bool self_mute = 9;
+inline bool UserState::has_self_mute() const {
+  return _has_bit(8);
+}
+inline void UserState::clear_self_mute() {
+  self_mute_ = false;
+  _clear_bit(8);
+}
+inline bool UserState::self_mute() const {
+  return self_mute_;
+}
+inline void UserState::set_self_mute(bool value) {
+  _set_bit(8);
+  self_mute_ = value;
+}
+
+// optional bool self_deaf = 10;
+inline bool UserState::has_self_deaf() const {
+  return _has_bit(9);
+}
+inline void UserState::clear_self_deaf() {
+  self_deaf_ = false;
+  _clear_bit(9);
+}
+inline bool UserState::self_deaf() const {
+  return self_deaf_;
+}
+inline void UserState::set_self_deaf(bool value) {
+  _set_bit(9);
+  self_deaf_ = value;
+}
+
+// optional bytes texture = 11;
+inline bool UserState::has_texture() const {
+  return _has_bit(10);
+}
+inline void UserState::clear_texture() {
+  if (texture_ != &_default_texture_) {
+    texture_->clear();
+  }
+  _clear_bit(10);
+}
+inline const ::std::string& UserState::texture() const {
+  return *texture_;
+}
+inline void UserState::set_texture(const ::std::string& value) {
+  _set_bit(10);
+  if (texture_ == &_default_texture_) {
+    texture_ = new ::std::string;
+  }
+  texture_->assign(value);
+}
+inline void UserState::set_texture(const char* value) {
+  _set_bit(10);
+  if (texture_ == &_default_texture_) {
+    texture_ = new ::std::string;
+  }
+  texture_->assign(value);
+}
+inline void UserState::set_texture(const void* value, size_t size) {
+  _set_bit(10);
+  if (texture_ == &_default_texture_) {
+    texture_ = new ::std::string;
+  }
+  texture_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_texture() {
+  _set_bit(10);
+  if (texture_ == &_default_texture_) {
+    texture_ = new ::std::string;
+  }
+  return texture_;
+}
+
+// optional bytes plugin_context = 12;
+inline bool UserState::has_plugin_context() const {
+  return _has_bit(11);
+}
+inline void UserState::clear_plugin_context() {
+  if (plugin_context_ != &_default_plugin_context_) {
+    plugin_context_->clear();
+  }
+  _clear_bit(11);
+}
+inline const ::std::string& UserState::plugin_context() const {
+  return *plugin_context_;
+}
+inline void UserState::set_plugin_context(const ::std::string& value) {
+  _set_bit(11);
+  if (plugin_context_ == &_default_plugin_context_) {
+    plugin_context_ = new ::std::string;
+  }
+  plugin_context_->assign(value);
+}
+inline void UserState::set_plugin_context(const char* value) {
+  _set_bit(11);
+  if (plugin_context_ == &_default_plugin_context_) {
+    plugin_context_ = new ::std::string;
+  }
+  plugin_context_->assign(value);
+}
+inline void UserState::set_plugin_context(const void* value, size_t size) {
+  _set_bit(11);
+  if (plugin_context_ == &_default_plugin_context_) {
+    plugin_context_ = new ::std::string;
+  }
+  plugin_context_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_plugin_context() {
+  _set_bit(11);
+  if (plugin_context_ == &_default_plugin_context_) {
+    plugin_context_ = new ::std::string;
+  }
+  return plugin_context_;
+}
+
+// optional string plugin_identity = 13;
+inline bool UserState::has_plugin_identity() const {
+  return _has_bit(12);
+}
+inline void UserState::clear_plugin_identity() {
+  if (plugin_identity_ != &_default_plugin_identity_) {
+    plugin_identity_->clear();
+  }
+  _clear_bit(12);
+}
+inline const ::std::string& UserState::plugin_identity() const {
+  return *plugin_identity_;
+}
+inline void UserState::set_plugin_identity(const ::std::string& value) {
+  _set_bit(12);
+  if (plugin_identity_ == &_default_plugin_identity_) {
+    plugin_identity_ = new ::std::string;
+  }
+  plugin_identity_->assign(value);
+}
+inline void UserState::set_plugin_identity(const char* value) {
+  _set_bit(12);
+  if (plugin_identity_ == &_default_plugin_identity_) {
+    plugin_identity_ = new ::std::string;
+  }
+  plugin_identity_->assign(value);
+}
+inline void UserState::set_plugin_identity(const char* value, size_t size) {
+  _set_bit(12);
+  if (plugin_identity_ == &_default_plugin_identity_) {
+    plugin_identity_ = new ::std::string;
+  }
+  plugin_identity_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_plugin_identity() {
+  _set_bit(12);
+  if (plugin_identity_ == &_default_plugin_identity_) {
+    plugin_identity_ = new ::std::string;
+  }
+  return plugin_identity_;
+}
+
+// optional string comment = 14;
+inline bool UserState::has_comment() const {
+  return _has_bit(13);
+}
+inline void UserState::clear_comment() {
+  if (comment_ != &_default_comment_) {
+    comment_->clear();
+  }
+  _clear_bit(13);
+}
+inline const ::std::string& UserState::comment() const {
+  return *comment_;
+}
+inline void UserState::set_comment(const ::std::string& value) {
+  _set_bit(13);
+  if (comment_ == &_default_comment_) {
+    comment_ = new ::std::string;
+  }
+  comment_->assign(value);
+}
+inline void UserState::set_comment(const char* value) {
+  _set_bit(13);
+  if (comment_ == &_default_comment_) {
+    comment_ = new ::std::string;
+  }
+  comment_->assign(value);
+}
+inline void UserState::set_comment(const char* value, size_t size) {
+  _set_bit(13);
+  if (comment_ == &_default_comment_) {
+    comment_ = new ::std::string;
+  }
+  comment_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_comment() {
+  _set_bit(13);
+  if (comment_ == &_default_comment_) {
+    comment_ = new ::std::string;
+  }
+  return comment_;
+}
+
+// optional string hash = 15;
+inline bool UserState::has_hash() const {
+  return _has_bit(14);
+}
+inline void UserState::clear_hash() {
+  if (hash_ != &_default_hash_) {
+    hash_->clear();
+  }
+  _clear_bit(14);
+}
+inline const ::std::string& UserState::hash() const {
+  return *hash_;
+}
+inline void UserState::set_hash(const ::std::string& value) {
+  _set_bit(14);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  hash_->assign(value);
+}
+inline void UserState::set_hash(const char* value) {
+  _set_bit(14);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  hash_->assign(value);
+}
+inline void UserState::set_hash(const char* value, size_t size) {
+  _set_bit(14);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  hash_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_hash() {
+  _set_bit(14);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  return hash_;
+}
+
+// optional bytes comment_hash = 16;
+inline bool UserState::has_comment_hash() const {
+  return _has_bit(15);
+}
+inline void UserState::clear_comment_hash() {
+  if (comment_hash_ != &_default_comment_hash_) {
+    comment_hash_->clear();
+  }
+  _clear_bit(15);
+}
+inline const ::std::string& UserState::comment_hash() const {
+  return *comment_hash_;
+}
+inline void UserState::set_comment_hash(const ::std::string& value) {
+  _set_bit(15);
+  if (comment_hash_ == &_default_comment_hash_) {
+    comment_hash_ = new ::std::string;
+  }
+  comment_hash_->assign(value);
+}
+inline void UserState::set_comment_hash(const char* value) {
+  _set_bit(15);
+  if (comment_hash_ == &_default_comment_hash_) {
+    comment_hash_ = new ::std::string;
+  }
+  comment_hash_->assign(value);
+}
+inline void UserState::set_comment_hash(const void* value, size_t size) {
+  _set_bit(15);
+  if (comment_hash_ == &_default_comment_hash_) {
+    comment_hash_ = new ::std::string;
+  }
+  comment_hash_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_comment_hash() {
+  _set_bit(15);
+  if (comment_hash_ == &_default_comment_hash_) {
+    comment_hash_ = new ::std::string;
+  }
+  return comment_hash_;
+}
+
+// optional bytes texture_hash = 17;
+inline bool UserState::has_texture_hash() const {
+  return _has_bit(16);
+}
+inline void UserState::clear_texture_hash() {
+  if (texture_hash_ != &_default_texture_hash_) {
+    texture_hash_->clear();
+  }
+  _clear_bit(16);
+}
+inline const ::std::string& UserState::texture_hash() const {
+  return *texture_hash_;
+}
+inline void UserState::set_texture_hash(const ::std::string& value) {
+  _set_bit(16);
+  if (texture_hash_ == &_default_texture_hash_) {
+    texture_hash_ = new ::std::string;
+  }
+  texture_hash_->assign(value);
+}
+inline void UserState::set_texture_hash(const char* value) {
+  _set_bit(16);
+  if (texture_hash_ == &_default_texture_hash_) {
+    texture_hash_ = new ::std::string;
+  }
+  texture_hash_->assign(value);
+}
+inline void UserState::set_texture_hash(const void* value, size_t size) {
+  _set_bit(16);
+  if (texture_hash_ == &_default_texture_hash_) {
+    texture_hash_ = new ::std::string;
+  }
+  texture_hash_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserState::mutable_texture_hash() {
+  _set_bit(16);
+  if (texture_hash_ == &_default_texture_hash_) {
+    texture_hash_ = new ::std::string;
+  }
+  return texture_hash_;
+}
+
+// optional bool priority_speaker = 18;
+inline bool UserState::has_priority_speaker() const {
+  return _has_bit(17);
+}
+inline void UserState::clear_priority_speaker() {
+  priority_speaker_ = false;
+  _clear_bit(17);
+}
+inline bool UserState::priority_speaker() const {
+  return priority_speaker_;
+}
+inline void UserState::set_priority_speaker(bool value) {
+  _set_bit(17);
+  priority_speaker_ = value;
+}
+
+// optional bool recording = 19;
+inline bool UserState::has_recording() const {
+  return _has_bit(18);
+}
+inline void UserState::clear_recording() {
+  recording_ = false;
+  _clear_bit(18);
+}
+inline bool UserState::recording() const {
+  return recording_;
+}
+inline void UserState::set_recording(bool value) {
+  _set_bit(18);
+  recording_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// BanList_BanEntry
+
+// required bytes address = 1;
+inline bool BanList_BanEntry::has_address() const {
+  return _has_bit(0);
+}
+inline void BanList_BanEntry::clear_address() {
+  if (address_ != &_default_address_) {
+    address_->clear();
+  }
+  _clear_bit(0);
+}
+inline const ::std::string& BanList_BanEntry::address() const {
+  return *address_;
+}
+inline void BanList_BanEntry::set_address(const ::std::string& value) {
+  _set_bit(0);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  address_->assign(value);
+}
+inline void BanList_BanEntry::set_address(const char* value) {
+  _set_bit(0);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  address_->assign(value);
+}
+inline void BanList_BanEntry::set_address(const void* value, size_t size) {
+  _set_bit(0);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  address_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* BanList_BanEntry::mutable_address() {
+  _set_bit(0);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  return address_;
+}
+
+// required uint32 mask = 2;
+inline bool BanList_BanEntry::has_mask() const {
+  return _has_bit(1);
+}
+inline void BanList_BanEntry::clear_mask() {
+  mask_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 BanList_BanEntry::mask() const {
+  return mask_;
+}
+inline void BanList_BanEntry::set_mask(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  mask_ = value;
+}
+
+// optional string name = 3;
+inline bool BanList_BanEntry::has_name() const {
+  return _has_bit(2);
+}
+inline void BanList_BanEntry::clear_name() {
+  if (name_ != &_default_name_) {
+    name_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& BanList_BanEntry::name() const {
+  return *name_;
+}
+inline void BanList_BanEntry::set_name(const ::std::string& value) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void BanList_BanEntry::set_name(const char* value) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void BanList_BanEntry::set_name(const char* value, size_t size) {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* BanList_BanEntry::mutable_name() {
+  _set_bit(2);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  return name_;
+}
+
+// optional string hash = 4;
+inline bool BanList_BanEntry::has_hash() const {
+  return _has_bit(3);
+}
+inline void BanList_BanEntry::clear_hash() {
+  if (hash_ != &_default_hash_) {
+    hash_->clear();
+  }
+  _clear_bit(3);
+}
+inline const ::std::string& BanList_BanEntry::hash() const {
+  return *hash_;
+}
+inline void BanList_BanEntry::set_hash(const ::std::string& value) {
+  _set_bit(3);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  hash_->assign(value);
+}
+inline void BanList_BanEntry::set_hash(const char* value) {
+  _set_bit(3);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  hash_->assign(value);
+}
+inline void BanList_BanEntry::set_hash(const char* value, size_t size) {
+  _set_bit(3);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  hash_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* BanList_BanEntry::mutable_hash() {
+  _set_bit(3);
+  if (hash_ == &_default_hash_) {
+    hash_ = new ::std::string;
+  }
+  return hash_;
+}
+
+// optional string reason = 5;
+inline bool BanList_BanEntry::has_reason() const {
+  return _has_bit(4);
+}
+inline void BanList_BanEntry::clear_reason() {
+  if (reason_ != &_default_reason_) {
+    reason_->clear();
+  }
+  _clear_bit(4);
+}
+inline const ::std::string& BanList_BanEntry::reason() const {
+  return *reason_;
+}
+inline void BanList_BanEntry::set_reason(const ::std::string& value) {
+  _set_bit(4);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void BanList_BanEntry::set_reason(const char* value) {
+  _set_bit(4);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void BanList_BanEntry::set_reason(const char* value, size_t size) {
+  _set_bit(4);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* BanList_BanEntry::mutable_reason() {
+  _set_bit(4);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  return reason_;
+}
+
+// optional string start = 6;
+inline bool BanList_BanEntry::has_start() const {
+  return _has_bit(5);
+}
+inline void BanList_BanEntry::clear_start() {
+  if (start_ != &_default_start_) {
+    start_->clear();
+  }
+  _clear_bit(5);
+}
+inline const ::std::string& BanList_BanEntry::start() const {
+  return *start_;
+}
+inline void BanList_BanEntry::set_start(const ::std::string& value) {
+  _set_bit(5);
+  if (start_ == &_default_start_) {
+    start_ = new ::std::string;
+  }
+  start_->assign(value);
+}
+inline void BanList_BanEntry::set_start(const char* value) {
+  _set_bit(5);
+  if (start_ == &_default_start_) {
+    start_ = new ::std::string;
+  }
+  start_->assign(value);
+}
+inline void BanList_BanEntry::set_start(const char* value, size_t size) {
+  _set_bit(5);
+  if (start_ == &_default_start_) {
+    start_ = new ::std::string;
+  }
+  start_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* BanList_BanEntry::mutable_start() {
+  _set_bit(5);
+  if (start_ == &_default_start_) {
+    start_ = new ::std::string;
+  }
+  return start_;
+}
+
+// optional uint32 duration = 7;
+inline bool BanList_BanEntry::has_duration() const {
+  return _has_bit(6);
+}
+inline void BanList_BanEntry::clear_duration() {
+  duration_ = 0u;
+  _clear_bit(6);
+}
+inline ::google::protobuf::uint32 BanList_BanEntry::duration() const {
+  return duration_;
+}
+inline void BanList_BanEntry::set_duration(::google::protobuf::uint32 value) {
+  _set_bit(6);
+  duration_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// BanList
+
+// repeated .MumbleProto.BanList.BanEntry bans = 1;
+inline int BanList::bans_size() const {
+  return bans_.size();
+}
+inline void BanList::clear_bans() {
+  bans_.Clear();
+}
+inline const ::MumbleProto::BanList_BanEntry& BanList::bans(int index) const {
+  return bans_.Get(index);
+}
+inline ::MumbleProto::BanList_BanEntry* BanList::mutable_bans(int index) {
+  return bans_.Mutable(index);
+}
+inline ::MumbleProto::BanList_BanEntry* BanList::add_bans() {
+  return bans_.Add();
+}
+inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::BanList_BanEntry >&
+BanList::bans() const {
+  return bans_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::BanList_BanEntry >*
+BanList::mutable_bans() {
+  return &bans_;
+}
+
+// optional bool query = 2 [default = false];
+inline bool BanList::has_query() const {
+  return _has_bit(1);
+}
+inline void BanList::clear_query() {
+  query_ = false;
+  _clear_bit(1);
+}
+inline bool BanList::query() const {
+  return query_;
+}
+inline void BanList::set_query(bool value) {
+  _set_bit(1);
+  query_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// TextMessage
+
+// optional uint32 actor = 1;
+inline bool TextMessage::has_actor() const {
+  return _has_bit(0);
+}
+inline void TextMessage::clear_actor() {
+  actor_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 TextMessage::actor() const {
+  return actor_;
+}
+inline void TextMessage::set_actor(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  actor_ = value;
+}
+
+// repeated uint32 session = 2;
+inline int TextMessage::session_size() const {
+  return session_.size();
+}
+inline void TextMessage::clear_session() {
+  session_.Clear();
+}
+inline ::google::protobuf::uint32 TextMessage::session(int index) const {
+  return session_.Get(index);
+}
+inline void TextMessage::set_session(int index, ::google::protobuf::uint32 value) {
+  session_.Set(index, value);
+}
+inline void TextMessage::add_session(::google::protobuf::uint32 value) {
+  session_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+TextMessage::session() const {
+  return session_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+TextMessage::mutable_session() {
+  return &session_;
+}
+
+// repeated uint32 channel_id = 3;
+inline int TextMessage::channel_id_size() const {
+  return channel_id_.size();
+}
+inline void TextMessage::clear_channel_id() {
+  channel_id_.Clear();
+}
+inline ::google::protobuf::uint32 TextMessage::channel_id(int index) const {
+  return channel_id_.Get(index);
+}
+inline void TextMessage::set_channel_id(int index, ::google::protobuf::uint32 value) {
+  channel_id_.Set(index, value);
+}
+inline void TextMessage::add_channel_id(::google::protobuf::uint32 value) {
+  channel_id_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+TextMessage::channel_id() const {
+  return channel_id_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+TextMessage::mutable_channel_id() {
+  return &channel_id_;
+}
+
+// repeated uint32 tree_id = 4;
+inline int TextMessage::tree_id_size() const {
+  return tree_id_.size();
+}
+inline void TextMessage::clear_tree_id() {
+  tree_id_.Clear();
+}
+inline ::google::protobuf::uint32 TextMessage::tree_id(int index) const {
+  return tree_id_.Get(index);
+}
+inline void TextMessage::set_tree_id(int index, ::google::protobuf::uint32 value) {
+  tree_id_.Set(index, value);
+}
+inline void TextMessage::add_tree_id(::google::protobuf::uint32 value) {
+  tree_id_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+TextMessage::tree_id() const {
+  return tree_id_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+TextMessage::mutable_tree_id() {
+  return &tree_id_;
+}
+
+// required string message = 5;
+inline bool TextMessage::has_message() const {
+  return _has_bit(4);
+}
+inline void TextMessage::clear_message() {
+  if (message_ != &_default_message_) {
+    message_->clear();
+  }
+  _clear_bit(4);
+}
+inline const ::std::string& TextMessage::message() const {
+  return *message_;
+}
+inline void TextMessage::set_message(const ::std::string& value) {
+  _set_bit(4);
+  if (message_ == &_default_message_) {
+    message_ = new ::std::string;
+  }
+  message_->assign(value);
+}
+inline void TextMessage::set_message(const char* value) {
+  _set_bit(4);
+  if (message_ == &_default_message_) {
+    message_ = new ::std::string;
+  }
+  message_->assign(value);
+}
+inline void TextMessage::set_message(const char* value, size_t size) {
+  _set_bit(4);
+  if (message_ == &_default_message_) {
+    message_ = new ::std::string;
+  }
+  message_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* TextMessage::mutable_message() {
+  _set_bit(4);
+  if (message_ == &_default_message_) {
+    message_ = new ::std::string;
+  }
+  return message_;
+}
+
+// -------------------------------------------------------------------
+
+// PermissionDenied
+
+// optional uint32 permission = 1;
+inline bool PermissionDenied::has_permission() const {
+  return _has_bit(0);
+}
+inline void PermissionDenied::clear_permission() {
+  permission_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 PermissionDenied::permission() const {
+  return permission_;
+}
+inline void PermissionDenied::set_permission(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  permission_ = value;
+}
+
+// optional uint32 channel_id = 2;
+inline bool PermissionDenied::has_channel_id() const {
+  return _has_bit(1);
+}
+inline void PermissionDenied::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 PermissionDenied::channel_id() const {
+  return channel_id_;
+}
+inline void PermissionDenied::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  channel_id_ = value;
+}
+
+// optional uint32 session = 3;
+inline bool PermissionDenied::has_session() const {
+  return _has_bit(2);
+}
+inline void PermissionDenied::clear_session() {
+  session_ = 0u;
+  _clear_bit(2);
+}
+inline ::google::protobuf::uint32 PermissionDenied::session() const {
+  return session_;
+}
+inline void PermissionDenied::set_session(::google::protobuf::uint32 value) {
+  _set_bit(2);
+  session_ = value;
+}
+
+// optional string reason = 4;
+inline bool PermissionDenied::has_reason() const {
+  return _has_bit(3);
+}
+inline void PermissionDenied::clear_reason() {
+  if (reason_ != &_default_reason_) {
+    reason_->clear();
+  }
+  _clear_bit(3);
+}
+inline const ::std::string& PermissionDenied::reason() const {
+  return *reason_;
+}
+inline void PermissionDenied::set_reason(const ::std::string& value) {
+  _set_bit(3);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void PermissionDenied::set_reason(const char* value) {
+  _set_bit(3);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(value);
+}
+inline void PermissionDenied::set_reason(const char* value, size_t size) {
+  _set_bit(3);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  reason_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* PermissionDenied::mutable_reason() {
+  _set_bit(3);
+  if (reason_ == &_default_reason_) {
+    reason_ = new ::std::string;
+  }
+  return reason_;
+}
+
+// optional .MumbleProto.PermissionDenied.DenyType type = 5;
+inline bool PermissionDenied::has_type() const {
+  return _has_bit(4);
+}
+inline void PermissionDenied::clear_type() {
+  type_ = 0;
+  _clear_bit(4);
+}
+inline ::MumbleProto::PermissionDenied_DenyType PermissionDenied::type() const {
+  return static_cast< ::MumbleProto::PermissionDenied_DenyType >(type_);
+}
+inline void PermissionDenied::set_type(::MumbleProto::PermissionDenied_DenyType value) {
+  GOOGLE_DCHECK(::MumbleProto::PermissionDenied_DenyType_IsValid(value));
+  _set_bit(4);
+  type_ = value;
+}
+
+// optional string name = 6;
+inline bool PermissionDenied::has_name() const {
+  return _has_bit(5);
+}
+inline void PermissionDenied::clear_name() {
+  if (name_ != &_default_name_) {
+    name_->clear();
+  }
+  _clear_bit(5);
+}
+inline const ::std::string& PermissionDenied::name() const {
+  return *name_;
+}
+inline void PermissionDenied::set_name(const ::std::string& value) {
+  _set_bit(5);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void PermissionDenied::set_name(const char* value) {
+  _set_bit(5);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void PermissionDenied::set_name(const char* value, size_t size) {
+  _set_bit(5);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* PermissionDenied::mutable_name() {
+  _set_bit(5);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  return name_;
+}
+
+// -------------------------------------------------------------------
+
+// ACL_ChanGroup
+
+// required string name = 1;
+inline bool ACL_ChanGroup::has_name() const {
+  return _has_bit(0);
+}
+inline void ACL_ChanGroup::clear_name() {
+  if (name_ != &_default_name_) {
+    name_->clear();
+  }
+  _clear_bit(0);
+}
+inline const ::std::string& ACL_ChanGroup::name() const {
+  return *name_;
+}
+inline void ACL_ChanGroup::set_name(const ::std::string& value) {
+  _set_bit(0);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void ACL_ChanGroup::set_name(const char* value) {
+  _set_bit(0);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void ACL_ChanGroup::set_name(const char* value, size_t size) {
+  _set_bit(0);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ACL_ChanGroup::mutable_name() {
+  _set_bit(0);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  return name_;
+}
+
+// optional bool inherited = 2 [default = true];
+inline bool ACL_ChanGroup::has_inherited() const {
+  return _has_bit(1);
+}
+inline void ACL_ChanGroup::clear_inherited() {
+  inherited_ = true;
+  _clear_bit(1);
+}
+inline bool ACL_ChanGroup::inherited() const {
+  return inherited_;
+}
+inline void ACL_ChanGroup::set_inherited(bool value) {
+  _set_bit(1);
+  inherited_ = value;
+}
+
+// optional bool inherit = 3 [default = true];
+inline bool ACL_ChanGroup::has_inherit() const {
+  return _has_bit(2);
+}
+inline void ACL_ChanGroup::clear_inherit() {
+  inherit_ = true;
+  _clear_bit(2);
+}
+inline bool ACL_ChanGroup::inherit() const {
+  return inherit_;
+}
+inline void ACL_ChanGroup::set_inherit(bool value) {
+  _set_bit(2);
+  inherit_ = value;
+}
+
+// optional bool inheritable = 4 [default = true];
+inline bool ACL_ChanGroup::has_inheritable() const {
+  return _has_bit(3);
+}
+inline void ACL_ChanGroup::clear_inheritable() {
+  inheritable_ = true;
+  _clear_bit(3);
+}
+inline bool ACL_ChanGroup::inheritable() const {
+  return inheritable_;
+}
+inline void ACL_ChanGroup::set_inheritable(bool value) {
+  _set_bit(3);
+  inheritable_ = value;
+}
+
+// repeated uint32 add = 5;
+inline int ACL_ChanGroup::add_size() const {
+  return add_.size();
+}
+inline void ACL_ChanGroup::clear_add() {
+  add_.Clear();
+}
+inline ::google::protobuf::uint32 ACL_ChanGroup::add(int index) const {
+  return add_.Get(index);
+}
+inline void ACL_ChanGroup::set_add(int index, ::google::protobuf::uint32 value) {
+  add_.Set(index, value);
+}
+inline void ACL_ChanGroup::add_add(::google::protobuf::uint32 value) {
+  add_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+ACL_ChanGroup::add() const {
+  return add_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+ACL_ChanGroup::mutable_add() {
+  return &add_;
+}
+
+// repeated uint32 remove = 6;
+inline int ACL_ChanGroup::remove_size() const {
+  return remove_.size();
+}
+inline void ACL_ChanGroup::clear_remove() {
+  remove_.Clear();
+}
+inline ::google::protobuf::uint32 ACL_ChanGroup::remove(int index) const {
+  return remove_.Get(index);
+}
+inline void ACL_ChanGroup::set_remove(int index, ::google::protobuf::uint32 value) {
+  remove_.Set(index, value);
+}
+inline void ACL_ChanGroup::add_remove(::google::protobuf::uint32 value) {
+  remove_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+ACL_ChanGroup::remove() const {
+  return remove_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+ACL_ChanGroup::mutable_remove() {
+  return &remove_;
+}
+
+// repeated uint32 inherited_members = 7;
+inline int ACL_ChanGroup::inherited_members_size() const {
+  return inherited_members_.size();
+}
+inline void ACL_ChanGroup::clear_inherited_members() {
+  inherited_members_.Clear();
+}
+inline ::google::protobuf::uint32 ACL_ChanGroup::inherited_members(int index) const {
+  return inherited_members_.Get(index);
+}
+inline void ACL_ChanGroup::set_inherited_members(int index, ::google::protobuf::uint32 value) {
+  inherited_members_.Set(index, value);
+}
+inline void ACL_ChanGroup::add_inherited_members(::google::protobuf::uint32 value) {
+  inherited_members_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+ACL_ChanGroup::inherited_members() const {
+  return inherited_members_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+ACL_ChanGroup::mutable_inherited_members() {
+  return &inherited_members_;
+}
+
+// -------------------------------------------------------------------
+
+// ACL_ChanACL
+
+// optional bool apply_here = 1 [default = true];
+inline bool ACL_ChanACL::has_apply_here() const {
+  return _has_bit(0);
+}
+inline void ACL_ChanACL::clear_apply_here() {
+  apply_here_ = true;
+  _clear_bit(0);
+}
+inline bool ACL_ChanACL::apply_here() const {
+  return apply_here_;
+}
+inline void ACL_ChanACL::set_apply_here(bool value) {
+  _set_bit(0);
+  apply_here_ = value;
+}
+
+// optional bool apply_subs = 2 [default = true];
+inline bool ACL_ChanACL::has_apply_subs() const {
+  return _has_bit(1);
+}
+inline void ACL_ChanACL::clear_apply_subs() {
+  apply_subs_ = true;
+  _clear_bit(1);
+}
+inline bool ACL_ChanACL::apply_subs() const {
+  return apply_subs_;
+}
+inline void ACL_ChanACL::set_apply_subs(bool value) {
+  _set_bit(1);
+  apply_subs_ = value;
+}
+
+// optional bool inherited = 3 [default = true];
+inline bool ACL_ChanACL::has_inherited() const {
+  return _has_bit(2);
+}
+inline void ACL_ChanACL::clear_inherited() {
+  inherited_ = true;
+  _clear_bit(2);
+}
+inline bool ACL_ChanACL::inherited() const {
+  return inherited_;
+}
+inline void ACL_ChanACL::set_inherited(bool value) {
+  _set_bit(2);
+  inherited_ = value;
+}
+
+// optional uint32 user_id = 4;
+inline bool ACL_ChanACL::has_user_id() const {
+  return _has_bit(3);
+}
+inline void ACL_ChanACL::clear_user_id() {
+  user_id_ = 0u;
+  _clear_bit(3);
+}
+inline ::google::protobuf::uint32 ACL_ChanACL::user_id() const {
+  return user_id_;
+}
+inline void ACL_ChanACL::set_user_id(::google::protobuf::uint32 value) {
+  _set_bit(3);
+  user_id_ = value;
+}
+
+// optional string group = 5;
+inline bool ACL_ChanACL::has_group() const {
+  return _has_bit(4);
+}
+inline void ACL_ChanACL::clear_group() {
+  if (group_ != &_default_group_) {
+    group_->clear();
+  }
+  _clear_bit(4);
+}
+inline const ::std::string& ACL_ChanACL::group() const {
+  return *group_;
+}
+inline void ACL_ChanACL::set_group(const ::std::string& value) {
+  _set_bit(4);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  group_->assign(value);
+}
+inline void ACL_ChanACL::set_group(const char* value) {
+  _set_bit(4);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  group_->assign(value);
+}
+inline void ACL_ChanACL::set_group(const char* value, size_t size) {
+  _set_bit(4);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  group_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ACL_ChanACL::mutable_group() {
+  _set_bit(4);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  return group_;
+}
+
+// optional uint32 grant = 6;
+inline bool ACL_ChanACL::has_grant() const {
+  return _has_bit(5);
+}
+inline void ACL_ChanACL::clear_grant() {
+  grant_ = 0u;
+  _clear_bit(5);
+}
+inline ::google::protobuf::uint32 ACL_ChanACL::grant() const {
+  return grant_;
+}
+inline void ACL_ChanACL::set_grant(::google::protobuf::uint32 value) {
+  _set_bit(5);
+  grant_ = value;
+}
+
+// optional uint32 deny = 7;
+inline bool ACL_ChanACL::has_deny() const {
+  return _has_bit(6);
+}
+inline void ACL_ChanACL::clear_deny() {
+  deny_ = 0u;
+  _clear_bit(6);
+}
+inline ::google::protobuf::uint32 ACL_ChanACL::deny() const {
+  return deny_;
+}
+inline void ACL_ChanACL::set_deny(::google::protobuf::uint32 value) {
+  _set_bit(6);
+  deny_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// ACL
+
+// required uint32 channel_id = 1;
+inline bool ACL::has_channel_id() const {
+  return _has_bit(0);
+}
+inline void ACL::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 ACL::channel_id() const {
+  return channel_id_;
+}
+inline void ACL::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  channel_id_ = value;
+}
+
+// optional bool inherit_acls = 2 [default = true];
+inline bool ACL::has_inherit_acls() const {
+  return _has_bit(1);
+}
+inline void ACL::clear_inherit_acls() {
+  inherit_acls_ = true;
+  _clear_bit(1);
+}
+inline bool ACL::inherit_acls() const {
+  return inherit_acls_;
+}
+inline void ACL::set_inherit_acls(bool value) {
+  _set_bit(1);
+  inherit_acls_ = value;
+}
+
+// repeated .MumbleProto.ACL.ChanGroup groups = 3;
+inline int ACL::groups_size() const {
+  return groups_.size();
+}
+inline void ACL::clear_groups() {
+  groups_.Clear();
+}
+inline const ::MumbleProto::ACL_ChanGroup& ACL::groups(int index) const {
+  return groups_.Get(index);
+}
+inline ::MumbleProto::ACL_ChanGroup* ACL::mutable_groups(int index) {
+  return groups_.Mutable(index);
+}
+inline ::MumbleProto::ACL_ChanGroup* ACL::add_groups() {
+  return groups_.Add();
+}
+inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanGroup >&
+ACL::groups() const {
+  return groups_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanGroup >*
+ACL::mutable_groups() {
+  return &groups_;
+}
+
+// repeated .MumbleProto.ACL.ChanACL acls = 4;
+inline int ACL::acls_size() const {
+  return acls_.size();
+}
+inline void ACL::clear_acls() {
+  acls_.Clear();
+}
+inline const ::MumbleProto::ACL_ChanACL& ACL::acls(int index) const {
+  return acls_.Get(index);
+}
+inline ::MumbleProto::ACL_ChanACL* ACL::mutable_acls(int index) {
+  return acls_.Mutable(index);
+}
+inline ::MumbleProto::ACL_ChanACL* ACL::add_acls() {
+  return acls_.Add();
+}
+inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanACL >&
+ACL::acls() const {
+  return acls_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::ACL_ChanACL >*
+ACL::mutable_acls() {
+  return &acls_;
+}
+
+// optional bool query = 5 [default = false];
+inline bool ACL::has_query() const {
+  return _has_bit(4);
+}
+inline void ACL::clear_query() {
+  query_ = false;
+  _clear_bit(4);
+}
+inline bool ACL::query() const {
+  return query_;
+}
+inline void ACL::set_query(bool value) {
+  _set_bit(4);
+  query_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// QueryUsers
+
+// repeated uint32 ids = 1;
+inline int QueryUsers::ids_size() const {
+  return ids_.size();
+}
+inline void QueryUsers::clear_ids() {
+  ids_.Clear();
+}
+inline ::google::protobuf::uint32 QueryUsers::ids(int index) const {
+  return ids_.Get(index);
+}
+inline void QueryUsers::set_ids(int index, ::google::protobuf::uint32 value) {
+  ids_.Set(index, value);
+}
+inline void QueryUsers::add_ids(::google::protobuf::uint32 value) {
+  ids_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+QueryUsers::ids() const {
+  return ids_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+QueryUsers::mutable_ids() {
+  return &ids_;
+}
+
+// repeated string names = 2;
+inline int QueryUsers::names_size() const {
+  return names_.size();
+}
+inline void QueryUsers::clear_names() {
+  names_.Clear();
+}
+inline const ::std::string& QueryUsers::names(int index) const {
+  return names_.Get(index);
+}
+inline ::std::string* QueryUsers::mutable_names(int index) {
+  return names_.Mutable(index);
+}
+inline void QueryUsers::set_names(int index, const ::std::string& value) {
+  names_.Mutable(index)->assign(value);
+}
+inline void QueryUsers::set_names(int index, const char* value) {
+  names_.Mutable(index)->assign(value);
+}
+inline void QueryUsers::set_names(int index, const char* value, size_t size) {
+  names_.Mutable(index)->assign(
+    reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* QueryUsers::add_names() {
+  return names_.Add();
+}
+inline void QueryUsers::add_names(const ::std::string& value) {
+  names_.Add()->assign(value);
+}
+inline void QueryUsers::add_names(const char* value) {
+  names_.Add()->assign(value);
+}
+inline void QueryUsers::add_names(const char* value, size_t size) {
+  names_.Add()->assign(reinterpret_cast<const char*>(value), size);
+}
+inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
+QueryUsers::names() const {
+  return names_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::std::string>*
+QueryUsers::mutable_names() {
+  return &names_;
+}
+
+// -------------------------------------------------------------------
+
+// CryptSetup
+
+// optional bytes key = 1;
+inline bool CryptSetup::has_key() const {
+  return _has_bit(0);
+}
+inline void CryptSetup::clear_key() {
+  if (key_ != &_default_key_) {
+    key_->clear();
+  }
+  _clear_bit(0);
+}
+inline const ::std::string& CryptSetup::key() const {
+  return *key_;
+}
+inline void CryptSetup::set_key(const ::std::string& value) {
+  _set_bit(0);
+  if (key_ == &_default_key_) {
+    key_ = new ::std::string;
+  }
+  key_->assign(value);
+}
+inline void CryptSetup::set_key(const char* value) {
+  _set_bit(0);
+  if (key_ == &_default_key_) {
+    key_ = new ::std::string;
+  }
+  key_->assign(value);
+}
+inline void CryptSetup::set_key(const void* value, size_t size) {
+  _set_bit(0);
+  if (key_ == &_default_key_) {
+    key_ = new ::std::string;
+  }
+  key_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* CryptSetup::mutable_key() {
+  _set_bit(0);
+  if (key_ == &_default_key_) {
+    key_ = new ::std::string;
+  }
+  return key_;
+}
+
+// optional bytes client_nonce = 2;
+inline bool CryptSetup::has_client_nonce() const {
+  return _has_bit(1);
+}
+inline void CryptSetup::clear_client_nonce() {
+  if (client_nonce_ != &_default_client_nonce_) {
+    client_nonce_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& CryptSetup::client_nonce() const {
+  return *client_nonce_;
+}
+inline void CryptSetup::set_client_nonce(const ::std::string& value) {
+  _set_bit(1);
+  if (client_nonce_ == &_default_client_nonce_) {
+    client_nonce_ = new ::std::string;
+  }
+  client_nonce_->assign(value);
+}
+inline void CryptSetup::set_client_nonce(const char* value) {
+  _set_bit(1);
+  if (client_nonce_ == &_default_client_nonce_) {
+    client_nonce_ = new ::std::string;
+  }
+  client_nonce_->assign(value);
+}
+inline void CryptSetup::set_client_nonce(const void* value, size_t size) {
+  _set_bit(1);
+  if (client_nonce_ == &_default_client_nonce_) {
+    client_nonce_ = new ::std::string;
+  }
+  client_nonce_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* CryptSetup::mutable_client_nonce() {
+  _set_bit(1);
+  if (client_nonce_ == &_default_client_nonce_) {
+    client_nonce_ = new ::std::string;
+  }
+  return client_nonce_;
+}
+
+// optional bytes server_nonce = 3;
+inline bool CryptSetup::has_server_nonce() const {
+  return _has_bit(2);
+}
+inline void CryptSetup::clear_server_nonce() {
+  if (server_nonce_ != &_default_server_nonce_) {
+    server_nonce_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& CryptSetup::server_nonce() const {
+  return *server_nonce_;
+}
+inline void CryptSetup::set_server_nonce(const ::std::string& value) {
+  _set_bit(2);
+  if (server_nonce_ == &_default_server_nonce_) {
+    server_nonce_ = new ::std::string;
+  }
+  server_nonce_->assign(value);
+}
+inline void CryptSetup::set_server_nonce(const char* value) {
+  _set_bit(2);
+  if (server_nonce_ == &_default_server_nonce_) {
+    server_nonce_ = new ::std::string;
+  }
+  server_nonce_->assign(value);
+}
+inline void CryptSetup::set_server_nonce(const void* value, size_t size) {
+  _set_bit(2);
+  if (server_nonce_ == &_default_server_nonce_) {
+    server_nonce_ = new ::std::string;
+  }
+  server_nonce_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* CryptSetup::mutable_server_nonce() {
+  _set_bit(2);
+  if (server_nonce_ == &_default_server_nonce_) {
+    server_nonce_ = new ::std::string;
+  }
+  return server_nonce_;
+}
+
+// -------------------------------------------------------------------
+
+// ContextActionAdd
+
+// required string action = 1;
+inline bool ContextActionAdd::has_action() const {
+  return _has_bit(0);
+}
+inline void ContextActionAdd::clear_action() {
+  if (action_ != &_default_action_) {
+    action_->clear();
+  }
+  _clear_bit(0);
+}
+inline const ::std::string& ContextActionAdd::action() const {
+  return *action_;
+}
+inline void ContextActionAdd::set_action(const ::std::string& value) {
+  _set_bit(0);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  action_->assign(value);
+}
+inline void ContextActionAdd::set_action(const char* value) {
+  _set_bit(0);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  action_->assign(value);
+}
+inline void ContextActionAdd::set_action(const char* value, size_t size) {
+  _set_bit(0);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  action_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ContextActionAdd::mutable_action() {
+  _set_bit(0);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  return action_;
+}
+
+// required string text = 2;
+inline bool ContextActionAdd::has_text() const {
+  return _has_bit(1);
+}
+inline void ContextActionAdd::clear_text() {
+  if (text_ != &_default_text_) {
+    text_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& ContextActionAdd::text() const {
+  return *text_;
+}
+inline void ContextActionAdd::set_text(const ::std::string& value) {
+  _set_bit(1);
+  if (text_ == &_default_text_) {
+    text_ = new ::std::string;
+  }
+  text_->assign(value);
+}
+inline void ContextActionAdd::set_text(const char* value) {
+  _set_bit(1);
+  if (text_ == &_default_text_) {
+    text_ = new ::std::string;
+  }
+  text_->assign(value);
+}
+inline void ContextActionAdd::set_text(const char* value, size_t size) {
+  _set_bit(1);
+  if (text_ == &_default_text_) {
+    text_ = new ::std::string;
+  }
+  text_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ContextActionAdd::mutable_text() {
+  _set_bit(1);
+  if (text_ == &_default_text_) {
+    text_ = new ::std::string;
+  }
+  return text_;
+}
+
+// optional uint32 context = 3;
+inline bool ContextActionAdd::has_context() const {
+  return _has_bit(2);
+}
+inline void ContextActionAdd::clear_context() {
+  context_ = 0u;
+  _clear_bit(2);
+}
+inline ::google::protobuf::uint32 ContextActionAdd::context() const {
+  return context_;
+}
+inline void ContextActionAdd::set_context(::google::protobuf::uint32 value) {
+  _set_bit(2);
+  context_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// ContextAction
+
+// optional uint32 session = 1;
+inline bool ContextAction::has_session() const {
+  return _has_bit(0);
+}
+inline void ContextAction::clear_session() {
+  session_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 ContextAction::session() const {
+  return session_;
+}
+inline void ContextAction::set_session(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  session_ = value;
+}
+
+// optional uint32 channel_id = 2;
+inline bool ContextAction::has_channel_id() const {
+  return _has_bit(1);
+}
+inline void ContextAction::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 ContextAction::channel_id() const {
+  return channel_id_;
+}
+inline void ContextAction::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  channel_id_ = value;
+}
+
+// required string action = 3;
+inline bool ContextAction::has_action() const {
+  return _has_bit(2);
+}
+inline void ContextAction::clear_action() {
+  if (action_ != &_default_action_) {
+    action_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& ContextAction::action() const {
+  return *action_;
+}
+inline void ContextAction::set_action(const ::std::string& value) {
+  _set_bit(2);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  action_->assign(value);
+}
+inline void ContextAction::set_action(const char* value) {
+  _set_bit(2);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  action_->assign(value);
+}
+inline void ContextAction::set_action(const char* value, size_t size) {
+  _set_bit(2);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  action_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* ContextAction::mutable_action() {
+  _set_bit(2);
+  if (action_ == &_default_action_) {
+    action_ = new ::std::string;
+  }
+  return action_;
+}
+
+// -------------------------------------------------------------------
+
+// UserList_User
+
+// required uint32 user_id = 1;
+inline bool UserList_User::has_user_id() const {
+  return _has_bit(0);
+}
+inline void UserList_User::clear_user_id() {
+  user_id_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 UserList_User::user_id() const {
+  return user_id_;
+}
+inline void UserList_User::set_user_id(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  user_id_ = value;
+}
+
+// optional string name = 2;
+inline bool UserList_User::has_name() const {
+  return _has_bit(1);
+}
+inline void UserList_User::clear_name() {
+  if (name_ != &_default_name_) {
+    name_->clear();
+  }
+  _clear_bit(1);
+}
+inline const ::std::string& UserList_User::name() const {
+  return *name_;
+}
+inline void UserList_User::set_name(const ::std::string& value) {
+  _set_bit(1);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void UserList_User::set_name(const char* value) {
+  _set_bit(1);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(value);
+}
+inline void UserList_User::set_name(const char* value, size_t size) {
+  _set_bit(1);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  name_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserList_User::mutable_name() {
+  _set_bit(1);
+  if (name_ == &_default_name_) {
+    name_ = new ::std::string;
+  }
+  return name_;
+}
+
+// -------------------------------------------------------------------
+
+// UserList
+
+// repeated .MumbleProto.UserList.User users = 1;
+inline int UserList::users_size() const {
+  return users_.size();
+}
+inline void UserList::clear_users() {
+  users_.Clear();
+}
+inline const ::MumbleProto::UserList_User& UserList::users(int index) const {
+  return users_.Get(index);
+}
+inline ::MumbleProto::UserList_User* UserList::mutable_users(int index) {
+  return users_.Mutable(index);
+}
+inline ::MumbleProto::UserList_User* UserList::add_users() {
+  return users_.Add();
+}
+inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::UserList_User >&
+UserList::users() const {
+  return users_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::UserList_User >*
+UserList::mutable_users() {
+  return &users_;
+}
+
+// -------------------------------------------------------------------
+
+// VoiceTarget_Target
+
+// repeated uint32 session = 1;
+inline int VoiceTarget_Target::session_size() const {
+  return session_.size();
+}
+inline void VoiceTarget_Target::clear_session() {
+  session_.Clear();
+}
+inline ::google::protobuf::uint32 VoiceTarget_Target::session(int index) const {
+  return session_.Get(index);
+}
+inline void VoiceTarget_Target::set_session(int index, ::google::protobuf::uint32 value) {
+  session_.Set(index, value);
+}
+inline void VoiceTarget_Target::add_session(::google::protobuf::uint32 value) {
+  session_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+VoiceTarget_Target::session() const {
+  return session_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+VoiceTarget_Target::mutable_session() {
+  return &session_;
+}
+
+// optional uint32 channel_id = 2;
+inline bool VoiceTarget_Target::has_channel_id() const {
+  return _has_bit(1);
+}
+inline void VoiceTarget_Target::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 VoiceTarget_Target::channel_id() const {
+  return channel_id_;
+}
+inline void VoiceTarget_Target::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  channel_id_ = value;
+}
+
+// optional string group = 3;
+inline bool VoiceTarget_Target::has_group() const {
+  return _has_bit(2);
+}
+inline void VoiceTarget_Target::clear_group() {
+  if (group_ != &_default_group_) {
+    group_->clear();
+  }
+  _clear_bit(2);
+}
+inline const ::std::string& VoiceTarget_Target::group() const {
+  return *group_;
+}
+inline void VoiceTarget_Target::set_group(const ::std::string& value) {
+  _set_bit(2);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  group_->assign(value);
+}
+inline void VoiceTarget_Target::set_group(const char* value) {
+  _set_bit(2);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  group_->assign(value);
+}
+inline void VoiceTarget_Target::set_group(const char* value, size_t size) {
+  _set_bit(2);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  group_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* VoiceTarget_Target::mutable_group() {
+  _set_bit(2);
+  if (group_ == &_default_group_) {
+    group_ = new ::std::string;
+  }
+  return group_;
+}
+
+// optional bool links = 4 [default = false];
+inline bool VoiceTarget_Target::has_links() const {
+  return _has_bit(3);
+}
+inline void VoiceTarget_Target::clear_links() {
+  links_ = false;
+  _clear_bit(3);
+}
+inline bool VoiceTarget_Target::links() const {
+  return links_;
+}
+inline void VoiceTarget_Target::set_links(bool value) {
+  _set_bit(3);
+  links_ = value;
+}
+
+// optional bool children = 5 [default = false];
+inline bool VoiceTarget_Target::has_children() const {
+  return _has_bit(4);
+}
+inline void VoiceTarget_Target::clear_children() {
+  children_ = false;
+  _clear_bit(4);
+}
+inline bool VoiceTarget_Target::children() const {
+  return children_;
+}
+inline void VoiceTarget_Target::set_children(bool value) {
+  _set_bit(4);
+  children_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// VoiceTarget
+
+// optional uint32 id = 1;
+inline bool VoiceTarget::has_id() const {
+  return _has_bit(0);
+}
+inline void VoiceTarget::clear_id() {
+  id_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 VoiceTarget::id() const {
+  return id_;
+}
+inline void VoiceTarget::set_id(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  id_ = value;
+}
+
+// repeated .MumbleProto.VoiceTarget.Target targets = 2;
+inline int VoiceTarget::targets_size() const {
+  return targets_.size();
+}
+inline void VoiceTarget::clear_targets() {
+  targets_.Clear();
+}
+inline const ::MumbleProto::VoiceTarget_Target& VoiceTarget::targets(int index) const {
+  return targets_.Get(index);
+}
+inline ::MumbleProto::VoiceTarget_Target* VoiceTarget::mutable_targets(int index) {
+  return targets_.Mutable(index);
+}
+inline ::MumbleProto::VoiceTarget_Target* VoiceTarget::add_targets() {
+  return targets_.Add();
+}
+inline const ::google::protobuf::RepeatedPtrField< ::MumbleProto::VoiceTarget_Target >&
+VoiceTarget::targets() const {
+  return targets_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::MumbleProto::VoiceTarget_Target >*
+VoiceTarget::mutable_targets() {
+  return &targets_;
+}
+
+// -------------------------------------------------------------------
+
+// PermissionQuery
+
+// optional uint32 channel_id = 1;
+inline bool PermissionQuery::has_channel_id() const {
+  return _has_bit(0);
+}
+inline void PermissionQuery::clear_channel_id() {
+  channel_id_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 PermissionQuery::channel_id() const {
+  return channel_id_;
+}
+inline void PermissionQuery::set_channel_id(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  channel_id_ = value;
+}
+
+// optional uint32 permissions = 2;
+inline bool PermissionQuery::has_permissions() const {
+  return _has_bit(1);
+}
+inline void PermissionQuery::clear_permissions() {
+  permissions_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 PermissionQuery::permissions() const {
+  return permissions_;
+}
+inline void PermissionQuery::set_permissions(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  permissions_ = value;
+}
+
+// optional bool flush = 3 [default = false];
+inline bool PermissionQuery::has_flush() const {
+  return _has_bit(2);
+}
+inline void PermissionQuery::clear_flush() {
+  flush_ = false;
+  _clear_bit(2);
+}
+inline bool PermissionQuery::flush() const {
+  return flush_;
+}
+inline void PermissionQuery::set_flush(bool value) {
+  _set_bit(2);
+  flush_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// CodecVersion
+
+// required int32 alpha = 1;
+inline bool CodecVersion::has_alpha() const {
+  return _has_bit(0);
+}
+inline void CodecVersion::clear_alpha() {
+  alpha_ = 0;
+  _clear_bit(0);
+}
+inline ::google::protobuf::int32 CodecVersion::alpha() const {
+  return alpha_;
+}
+inline void CodecVersion::set_alpha(::google::protobuf::int32 value) {
+  _set_bit(0);
+  alpha_ = value;
+}
+
+// required int32 beta = 2;
+inline bool CodecVersion::has_beta() const {
+  return _has_bit(1);
+}
+inline void CodecVersion::clear_beta() {
+  beta_ = 0;
+  _clear_bit(1);
+}
+inline ::google::protobuf::int32 CodecVersion::beta() const {
+  return beta_;
+}
+inline void CodecVersion::set_beta(::google::protobuf::int32 value) {
+  _set_bit(1);
+  beta_ = value;
+}
+
+// required bool prefer_alpha = 3 [default = true];
+inline bool CodecVersion::has_prefer_alpha() const {
+  return _has_bit(2);
+}
+inline void CodecVersion::clear_prefer_alpha() {
+  prefer_alpha_ = true;
+  _clear_bit(2);
+}
+inline bool CodecVersion::prefer_alpha() const {
+  return prefer_alpha_;
+}
+inline void CodecVersion::set_prefer_alpha(bool value) {
+  _set_bit(2);
+  prefer_alpha_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// UserStats_Stats
+
+// optional uint32 good = 1;
+inline bool UserStats_Stats::has_good() const {
+  return _has_bit(0);
+}
+inline void UserStats_Stats::clear_good() {
+  good_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 UserStats_Stats::good() const {
+  return good_;
+}
+inline void UserStats_Stats::set_good(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  good_ = value;
+}
+
+// optional uint32 late = 2;
+inline bool UserStats_Stats::has_late() const {
+  return _has_bit(1);
+}
+inline void UserStats_Stats::clear_late() {
+  late_ = 0u;
+  _clear_bit(1);
+}
+inline ::google::protobuf::uint32 UserStats_Stats::late() const {
+  return late_;
+}
+inline void UserStats_Stats::set_late(::google::protobuf::uint32 value) {
+  _set_bit(1);
+  late_ = value;
+}
+
+// optional uint32 lost = 3;
+inline bool UserStats_Stats::has_lost() const {
+  return _has_bit(2);
+}
+inline void UserStats_Stats::clear_lost() {
+  lost_ = 0u;
+  _clear_bit(2);
+}
+inline ::google::protobuf::uint32 UserStats_Stats::lost() const {
+  return lost_;
+}
+inline void UserStats_Stats::set_lost(::google::protobuf::uint32 value) {
+  _set_bit(2);
+  lost_ = value;
+}
+
+// optional uint32 resync = 4;
+inline bool UserStats_Stats::has_resync() const {
+  return _has_bit(3);
+}
+inline void UserStats_Stats::clear_resync() {
+  resync_ = 0u;
+  _clear_bit(3);
+}
+inline ::google::protobuf::uint32 UserStats_Stats::resync() const {
+  return resync_;
+}
+inline void UserStats_Stats::set_resync(::google::protobuf::uint32 value) {
+  _set_bit(3);
+  resync_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// UserStats
+
+// optional uint32 session = 1;
+inline bool UserStats::has_session() const {
+  return _has_bit(0);
+}
+inline void UserStats::clear_session() {
+  session_ = 0u;
+  _clear_bit(0);
+}
+inline ::google::protobuf::uint32 UserStats::session() const {
+  return session_;
+}
+inline void UserStats::set_session(::google::protobuf::uint32 value) {
+  _set_bit(0);
+  session_ = value;
+}
+
+// optional bool stats_only = 2 [default = false];
+inline bool UserStats::has_stats_only() const {
+  return _has_bit(1);
+}
+inline void UserStats::clear_stats_only() {
+  stats_only_ = false;
+  _clear_bit(1);
+}
+inline bool UserStats::stats_only() const {
+  return stats_only_;
+}
+inline void UserStats::set_stats_only(bool value) {
+  _set_bit(1);
+  stats_only_ = value;
+}
+
+// repeated bytes certificates = 3;
+inline int UserStats::certificates_size() const {
+  return certificates_.size();
+}
+inline void UserStats::clear_certificates() {
+  certificates_.Clear();
+}
+inline const ::std::string& UserStats::certificates(int index) const {
+  return certificates_.Get(index);
+}
+inline ::std::string* UserStats::mutable_certificates(int index) {
+  return certificates_.Mutable(index);
+}
+inline void UserStats::set_certificates(int index, const ::std::string& value) {
+  certificates_.Mutable(index)->assign(value);
+}
+inline void UserStats::set_certificates(int index, const char* value) {
+  certificates_.Mutable(index)->assign(value);
+}
+inline void UserStats::set_certificates(int index, const void* value, size_t size) {
+  certificates_.Mutable(index)->assign(
+    reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserStats::add_certificates() {
+  return certificates_.Add();
+}
+inline void UserStats::add_certificates(const ::std::string& value) {
+  certificates_.Add()->assign(value);
+}
+inline void UserStats::add_certificates(const char* value) {
+  certificates_.Add()->assign(value);
+}
+inline void UserStats::add_certificates(const void* value, size_t size) {
+  certificates_.Add()->assign(reinterpret_cast<const char*>(value), size);
+}
+inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
+UserStats::certificates() const {
+  return certificates_;
+}
+inline ::google::protobuf::RepeatedPtrField< ::std::string>*
+UserStats::mutable_certificates() {
+  return &certificates_;
+}
+
+// optional .MumbleProto.UserStats.Stats from_client = 4;
+inline bool UserStats::has_from_client() const {
+  return _has_bit(3);
+}
+inline void UserStats::clear_from_client() {
+  if (from_client_ != NULL) from_client_->::MumbleProto::UserStats_Stats::Clear();
+  _clear_bit(3);
+}
+inline const ::MumbleProto::UserStats_Stats& UserStats::from_client() const {
+  return from_client_ != NULL ? *from_client_ : *default_instance_->from_client_;
+}
+inline ::MumbleProto::UserStats_Stats* UserStats::mutable_from_client() {
+  _set_bit(3);
+  if (from_client_ == NULL) from_client_ = new ::MumbleProto::UserStats_Stats;
+  return from_client_;
+}
+
+// optional .MumbleProto.UserStats.Stats from_server = 5;
+inline bool UserStats::has_from_server() const {
+  return _has_bit(4);
+}
+inline void UserStats::clear_from_server() {
+  if (from_server_ != NULL) from_server_->::MumbleProto::UserStats_Stats::Clear();
+  _clear_bit(4);
+}
+inline const ::MumbleProto::UserStats_Stats& UserStats::from_server() const {
+  return from_server_ != NULL ? *from_server_ : *default_instance_->from_server_;
+}
+inline ::MumbleProto::UserStats_Stats* UserStats::mutable_from_server() {
+  _set_bit(4);
+  if (from_server_ == NULL) from_server_ = new ::MumbleProto::UserStats_Stats;
+  return from_server_;
+}
+
+// optional uint32 udp_packets = 6;
+inline bool UserStats::has_udp_packets() const {
+  return _has_bit(5);
+}
+inline void UserStats::clear_udp_packets() {
+  udp_packets_ = 0u;
+  _clear_bit(5);
+}
+inline ::google::protobuf::uint32 UserStats::udp_packets() const {
+  return udp_packets_;
+}
+inline void UserStats::set_udp_packets(::google::protobuf::uint32 value) {
+  _set_bit(5);
+  udp_packets_ = value;
+}
+
+// optional uint32 tcp_packets = 7;
+inline bool UserStats::has_tcp_packets() const {
+  return _has_bit(6);
+}
+inline void UserStats::clear_tcp_packets() {
+  tcp_packets_ = 0u;
+  _clear_bit(6);
+}
+inline ::google::protobuf::uint32 UserStats::tcp_packets() const {
+  return tcp_packets_;
+}
+inline void UserStats::set_tcp_packets(::google::protobuf::uint32 value) {
+  _set_bit(6);
+  tcp_packets_ = value;
+}
+
+// optional float udp_ping_avg = 8;
+inline bool UserStats::has_udp_ping_avg() const {
+  return _has_bit(7);
+}
+inline void UserStats::clear_udp_ping_avg() {
+  udp_ping_avg_ = 0;
+  _clear_bit(7);
+}
+inline float UserStats::udp_ping_avg() const {
+  return udp_ping_avg_;
+}
+inline void UserStats::set_udp_ping_avg(float value) {
+  _set_bit(7);
+  udp_ping_avg_ = value;
+}
+
+// optional float udp_ping_var = 9;
+inline bool UserStats::has_udp_ping_var() const {
+  return _has_bit(8);
+}
+inline void UserStats::clear_udp_ping_var() {
+  udp_ping_var_ = 0;
+  _clear_bit(8);
+}
+inline float UserStats::udp_ping_var() const {
+  return udp_ping_var_;
+}
+inline void UserStats::set_udp_ping_var(float value) {
+  _set_bit(8);
+  udp_ping_var_ = value;
+}
+
+// optional float tcp_ping_avg = 10;
+inline bool UserStats::has_tcp_ping_avg() const {
+  return _has_bit(9);
+}
+inline void UserStats::clear_tcp_ping_avg() {
+  tcp_ping_avg_ = 0;
+  _clear_bit(9);
+}
+inline float UserStats::tcp_ping_avg() const {
+  return tcp_ping_avg_;
+}
+inline void UserStats::set_tcp_ping_avg(float value) {
+  _set_bit(9);
+  tcp_ping_avg_ = value;
+}
+
+// optional float tcp_ping_var = 11;
+inline bool UserStats::has_tcp_ping_var() const {
+  return _has_bit(10);
+}
+inline void UserStats::clear_tcp_ping_var() {
+  tcp_ping_var_ = 0;
+  _clear_bit(10);
+}
+inline float UserStats::tcp_ping_var() const {
+  return tcp_ping_var_;
+}
+inline void UserStats::set_tcp_ping_var(float value) {
+  _set_bit(10);
+  tcp_ping_var_ = value;
+}
+
+// optional .MumbleProto.Version version = 12;
+inline bool UserStats::has_version() const {
+  return _has_bit(11);
+}
+inline void UserStats::clear_version() {
+  if (version_ != NULL) version_->::MumbleProto::Version::Clear();
+  _clear_bit(11);
+}
+inline const ::MumbleProto::Version& UserStats::version() const {
+  return version_ != NULL ? *version_ : *default_instance_->version_;
+}
+inline ::MumbleProto::Version* UserStats::mutable_version() {
+  _set_bit(11);
+  if (version_ == NULL) version_ = new ::MumbleProto::Version;
+  return version_;
+}
+
+// repeated int32 celt_versions = 13;
+inline int UserStats::celt_versions_size() const {
+  return celt_versions_.size();
+}
+inline void UserStats::clear_celt_versions() {
+  celt_versions_.Clear();
+}
+inline ::google::protobuf::int32 UserStats::celt_versions(int index) const {
+  return celt_versions_.Get(index);
+}
+inline void UserStats::set_celt_versions(int index, ::google::protobuf::int32 value) {
+  celt_versions_.Set(index, value);
+}
+inline void UserStats::add_celt_versions(::google::protobuf::int32 value) {
+  celt_versions_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
+UserStats::celt_versions() const {
+  return celt_versions_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
+UserStats::mutable_celt_versions() {
+  return &celt_versions_;
+}
+
+// optional bytes address = 14;
+inline bool UserStats::has_address() const {
+  return _has_bit(13);
+}
+inline void UserStats::clear_address() {
+  if (address_ != &_default_address_) {
+    address_->clear();
+  }
+  _clear_bit(13);
+}
+inline const ::std::string& UserStats::address() const {
+  return *address_;
+}
+inline void UserStats::set_address(const ::std::string& value) {
+  _set_bit(13);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  address_->assign(value);
+}
+inline void UserStats::set_address(const char* value) {
+  _set_bit(13);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  address_->assign(value);
+}
+inline void UserStats::set_address(const void* value, size_t size) {
+  _set_bit(13);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  address_->assign(reinterpret_cast<const char*>(value), size);
+}
+inline ::std::string* UserStats::mutable_address() {
+  _set_bit(13);
+  if (address_ == &_default_address_) {
+    address_ = new ::std::string;
+  }
+  return address_;
+}
+
+// optional uint32 bandwidth = 15;
+inline bool UserStats::has_bandwidth() const {
+  return _has_bit(14);
+}
+inline void UserStats::clear_bandwidth() {
+  bandwidth_ = 0u;
+  _clear_bit(14);
+}
+inline ::google::protobuf::uint32 UserStats::bandwidth() const {
+  return bandwidth_;
+}
+inline void UserStats::set_bandwidth(::google::protobuf::uint32 value) {
+  _set_bit(14);
+  bandwidth_ = value;
+}
+
+// optional uint32 onlinesecs = 16;
+inline bool UserStats::has_onlinesecs() const {
+  return _has_bit(15);
+}
+inline void UserStats::clear_onlinesecs() {
+  onlinesecs_ = 0u;
+  _clear_bit(15);
+}
+inline ::google::protobuf::uint32 UserStats::onlinesecs() const {
+  return onlinesecs_;
+}
+inline void UserStats::set_onlinesecs(::google::protobuf::uint32 value) {
+  _set_bit(15);
+  onlinesecs_ = value;
+}
+
+// optional uint32 idlesecs = 17;
+inline bool UserStats::has_idlesecs() const {
+  return _has_bit(16);
+}
+inline void UserStats::clear_idlesecs() {
+  idlesecs_ = 0u;
+  _clear_bit(16);
+}
+inline ::google::protobuf::uint32 UserStats::idlesecs() const {
+  return idlesecs_;
+}
+inline void UserStats::set_idlesecs(::google::protobuf::uint32 value) {
+  _set_bit(16);
+  idlesecs_ = value;
+}
+
+// optional bool strong_certificate = 18 [default = false];
+inline bool UserStats::has_strong_certificate() const {
+  return _has_bit(17);
+}
+inline void UserStats::clear_strong_certificate() {
+  strong_certificate_ = false;
+  _clear_bit(17);
+}
+inline bool UserStats::strong_certificate() const {
+  return strong_certificate_;
+}
+inline void UserStats::set_strong_certificate(bool value) {
+  _set_bit(17);
+  strong_certificate_ = value;
+}
+
+// -------------------------------------------------------------------
+
+// RequestBlob
+
+// repeated uint32 session_texture = 1;
+inline int RequestBlob::session_texture_size() const {
+  return session_texture_.size();
+}
+inline void RequestBlob::clear_session_texture() {
+  session_texture_.Clear();
+}
+inline ::google::protobuf::uint32 RequestBlob::session_texture(int index) const {
+  return session_texture_.Get(index);
+}
+inline void RequestBlob::set_session_texture(int index, ::google::protobuf::uint32 value) {
+  session_texture_.Set(index, value);
+}
+inline void RequestBlob::add_session_texture(::google::protobuf::uint32 value) {
+  session_texture_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+RequestBlob::session_texture() const {
+  return session_texture_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+RequestBlob::mutable_session_texture() {
+  return &session_texture_;
+}
+
+// repeated uint32 session_comment = 2;
+inline int RequestBlob::session_comment_size() const {
+  return session_comment_.size();
+}
+inline void RequestBlob::clear_session_comment() {
+  session_comment_.Clear();
+}
+inline ::google::protobuf::uint32 RequestBlob::session_comment(int index) const {
+  return session_comment_.Get(index);
+}
+inline void RequestBlob::set_session_comment(int index, ::google::protobuf::uint32 value) {
+  session_comment_.Set(index, value);
+}
+inline void RequestBlob::add_session_comment(::google::protobuf::uint32 value) {
+  session_comment_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+RequestBlob::session_comment() const {
+  return session_comment_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+RequestBlob::mutable_session_comment() {
+  return &session_comment_;
+}
+
+// repeated uint32 channel_description = 3;
+inline int RequestBlob::channel_description_size() const {
+  return channel_description_.size();
+}
+inline void RequestBlob::clear_channel_description() {
+  channel_description_.Clear();
+}
+inline ::google::protobuf::uint32 RequestBlob::channel_description(int index) const {
+  return channel_description_.Get(index);
+}
+inline void RequestBlob::set_channel_description(int index, ::google::protobuf::uint32 value) {
+  channel_description_.Set(index, value);
+}
+inline void RequestBlob::add_channel_description(::google::protobuf::uint32 value) {
+  channel_description_.Add(value);
+}
+inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
+RequestBlob::channel_description() const {
+  return channel_description_;
+}
+inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
+RequestBlob::mutable_channel_description() {
+  return &channel_description_;
+}
+
+
+// @@protoc_insertion_point(namespace_scope)
+
+}  // namespace MumbleProto
+
+#ifndef SWIG
+namespace google {
+namespace protobuf {
+
+template <>
+inline const EnumDescriptor* GetEnumDescriptor< ::MumbleProto::Reject_RejectType>() {
+  return ::MumbleProto::Reject_RejectType_descriptor();
+}
+template <>
+inline const EnumDescriptor* GetEnumDescriptor< ::MumbleProto::PermissionDenied_DenyType>() {
+  return ::MumbleProto::PermissionDenied_DenyType_descriptor();
+}
+template <>
+inline const EnumDescriptor* GetEnumDescriptor< ::MumbleProto::ContextActionAdd_Context>() {
+  return ::MumbleProto::ContextActionAdd_Context_descriptor();
+}
+
+}  // namespace google
+}  // namespace protobuf
+#endif  // SWIG
+
+// @@protoc_insertion_point(global_scope)
+
+#endif  // PROTOBUF_Mumble_2eproto__INCLUDED
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/Meta.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/Meta.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -31,10 +31,8 @@
 #include "ServerDB.h"
 #include "Server.h"
 #include "Meta.h"
-#include "Net.h"
 #include "DBus.h"
 #include "OSInfo.h"
-#include "Version.h"
 
 MetaParams Meta::mp;
 
@@ -44,7 +42,7 @@ HANDLE Meta::hQoS = NULL;
 
 MetaParams::MetaParams() {
 	qsPassword = QString();
-	usPort = DEFAULT_MUMBLE_PORT;
+	usPort = 64738;
 	iTimeout = 30;
 	iMaxBandwidth = 72000;
 	iMaxUsers = 1000;
@@ -73,9 +71,7 @@ MetaParams::MetaParams() {
 	iBanTimeframe = 120;
 	iBanTime = 300;
 
-#ifdef Q_OS_UNIX
 	uiUid = uiGid = 0;
-#endif
 
 	qrUserName = QRegExp(QLatin1String("[-=\\w\\[\\]\\{\\}\\(\\)\\@\\|\\.]+"));
 	qrChannelName = QRegExp(QLatin1String("[ \\-=\\w\\#\\[\\]\\{\\}\\(\\)\\@\\|]+"));
@@ -267,35 +263,16 @@ void MetaParams::read(QString fname) {
 	iBanTimeframe = qsSettings->value("autobanTimeframe", iBanTimeframe).toInt();
 	iBanTime = qsSettings->value("autobanTime", iBanTime).toInt();
 
-	qvSuggestVersion = MumbleVersion::getRaw(qsSettings->value("suggestVersion").toString());
-	if (qvSuggestVersion.toUInt() == 0)
-		qvSuggestVersion = QVariant();
-
-	qvSuggestPositional = qsSettings->value("suggestPositional");
-	if (qvSuggestPositional.toString().trimmed().isEmpty())
-		qvSuggestPositional = QVariant();
-
-	qvSuggestPushToTalk = qsSettings->value("suggestPushToTalk");
-	if (qvSuggestPushToTalk.toString().trimmed().isEmpty())
-		qvSuggestPushToTalk = QVariant();
-
 #ifdef Q_OS_UNIX
-	qsName = qsSettings->value("uname").toString();
-	if (geteuid() == 0) {
-		// TODO: remove this silent fallback to enforce running as non-root
-		bool requested = true;
-		if (qsName.isEmpty()) {
-			// default server user name
-			qsName = "mumble-server";
-			requested = false;
-		}
-		struct passwd *pw = getpwnam(qPrintable(qsName));
+	const QString uname = qsSettings->value("uname").toString();
+	if (! uname.isEmpty() && (geteuid() == 0)) {
+		struct passwd *pw = getpwnam(qPrintable(uname));
 		if (pw) {
 			uiUid = pw->pw_uid;
 			uiGid = pw->pw_gid;
-			qsHome = pw->pw_dir;
-		} else if (requested) {
-			qFatal("Cannot find username %s", qPrintable(qsName));
+		}
+		if (uiUid == 0) {
+			qFatal("Cannot find username %s", qPrintable(uname));
 		}
 		endpwent();
 	}
@@ -434,9 +411,6 @@ void MetaParams::read(QString fname) {
 	qmConfig.insert(QLatin1String("username"),qrUserName.pattern());
 	qmConfig.insert(QLatin1String("channelname"),qrChannelName.pattern());
 	qmConfig.insert(QLatin1String("certrequired"), bCertRequired ? QLatin1String("true") : QLatin1String("false"));
-	qmConfig.insert(QLatin1String("suggestversion"), qvSuggestVersion.isNull() ? QString() : qvSuggestVersion.toString());
-	qmConfig.insert(QLatin1String("suggestpositional"), qvSuggestPositional.isNull() ? QString() : qvSuggestPositional.toString());
-	qmConfig.insert(QLatin1String("suggestpushtotalk"), qvSuggestPushToTalk.isNull() ? QString() : qvSuggestPushToTalk.toString());
 }
 
 Meta::Meta() {
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/RPC.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/RPC.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/Tray.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/Tray.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/Register.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/Register.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/UnixMurmur.h
+++ mumble-1.2.3-87-gf7d8711/src/murmur/UnixMurmur.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/ServerDB.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/ServerDB.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/DBus.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/DBus.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/ServerUser.h
+++ mumble-1.2.3-87-gf7d8711/src/murmur/ServerUser.h
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/Meta.h
+++ mumble-1.2.3-87-gf7d8711/src/murmur/Meta.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -96,15 +96,7 @@ struct MetaParams {
 
 	QMap<QString, QString> qmConfig;
 
-#ifdef Q_OS_UNIX
 	unsigned int uiUid, uiGid;
-	QString qsHome;
-	QString qsName;
-#endif
-
-	QVariant qvSuggestVersion;
-	QVariant qvSuggestPositional;
-	QVariant qvSuggestPushToTalk;
 
 	QSettings *qsSettings;
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/Messages.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/Messages.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2009-2011, Stefan Hacker <dd0t@users.sourceforge.net>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009, Stefan Hacker <dd0t@users.sourceforge.net>
 
    All rights reserved.
 
@@ -379,18 +379,11 @@ void Server::msgAuthenticate(ServerUser
 	mpsc.set_image_message_length(iMaxImageMessageLength);
 	sendMessage(uSource, mpsc);
 
-	MumbleProto::SuggestConfig mpsug;
-	if (! qvSuggestVersion.isNull())
-		mpsug.set_version(qvSuggestVersion.toUInt());
-	if (! qvSuggestPositional.isNull())
-		mpsug.set_positional(qvSuggestPositional.toBool());
-	if (! qvSuggestPushToTalk.isNull())
-		mpsug.set_push_to_talk(qvSuggestPushToTalk.toBool());
-	sendMessage(uSource, mpsug);
-
 	log(uSource, "Authenticated");
 
 	emit userConnected(uSource);
+/* yangxu */
+pGroupManager->setLocalUser(uSource);
 }
 
 void Server::msgBanList(ServerUser *uSource, MumbleProto::BanList &msg) {
@@ -1625,6 +1618,3 @@ void Server::msgRequestBlob(ServerUser *
 
 void Server::msgServerConfig(ServerUser *, MumbleProto::ServerConfig &) {
 }
-
-void Server::msgSuggestConfig(ServerUser *, MumbleProto::SuggestConfig &) {
-}
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/main.cpp
+++ mumble-1.2.3-87-gf7d8711/src/murmur/main.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -40,6 +40,7 @@
 #include "Meta.h"
 #include "Version.h"
 #include "SSL.h"
+#include <signal.h>
 
 #ifdef Q_OS_UNIX
 #include "UnixMurmur.h"
@@ -129,7 +130,22 @@ void IceStart();
 void IceStop();
 #endif
 
+
+// zhenkai
+static void abortHandler(int sig) {
+	char buf[1024];
+	fprintf(stderr, "Caught signal %i, trying to call debugger..\n", sig);
+	snprintf(buf, 1023, "gdb -n -batch -x debug_script -p %i", getpid());
+	system(buf);
+	if (sig != SIGABRT) {
+		signal(SIGABRT, SIG_DFL);
+		abort();
+	}
+}
+
 int main(int argc, char **argv) {
+	signal(SIGABRT, abortHandler);
+
 	// Check for SSE and MMX, but only in the windows binaries
 #ifdef Q_OS_WIN
 	int cpuinfo[4];
@@ -208,23 +224,15 @@ int main(int argc, char **argv) {
 	for (int i=1;i<argc;i++) {
 		bool bLast = false;
 		QString arg = QString(argv[i]).toLower();
-		if ((arg == "-supw")) {
+		if ((arg == "-supw") && (i+1 < argc)) {
+			i++;
+			supw = argv[i];
 			detach = false;
 			if (i+1 < argc) {
 				i++;
-				supw = argv[i];
-				if (i+1 < argc) {
-					i++;
-					sunum = QString::fromLatin1(argv[i]).toInt();
-				}
-				bLast = true;
-			} else {
-#ifdef Q_OS_UNIX
-				qFatal("-supw expects the password on the command line - maybe you meant -readsupw?");
-#else
-				qFatal("-supw expects the password on the command line");
-#endif			
+				sunum = QString::fromLatin1(argv[i]).toInt();
 			}
+			bLast = true;
 #ifdef Q_OS_UNIX
 		} else if ((arg == "-readsupw")) {
 			detach = false;
@@ -280,40 +288,11 @@ int main(int argc, char **argv) {
 
 
 	Meta::mp.read(inifile);
-
-	// need to open log file early so log dir can be root owned:
-	// http://article.gmane.org/gmane.comp.security.oss.general/4404
-	if (detach && ! Meta::mp.qsLogfile.isEmpty()) {
-		qfLog = new QFile(Meta::mp.qsLogfile);
-		if (! qfLog->open(QIODevice::WriteOnly | QIODevice::Append | QIODevice::Text)) {
-			delete qfLog;
-			qfLog = NULL;
-#ifdef Q_OS_UNIX
-			fprintf(stderr, "murmurd: failed to open logfile %s: no logging will be done\n",qPrintable(Meta::mp.qsLogfile));
-#else
-			qWarning("Failed to open logfile %s. Will not detach.",qPrintable(Meta::mp.qsLogfile));
-			detach = false;
-#endif
-		} else {
-			qfLog->setTextModeEnabled(true);
-			QFileInfo qfi(*qfLog);
-			Meta::mp.qsLogfile = qfi.absoluteFilePath();
-#ifdef Q_OS_UNIX
-			if (Meta::mp.uiUid != 0 && fchown(qfLog->handle(), Meta::mp.uiUid, Meta::mp.uiGid) == -1) {
-				qFatal("can't change log file owner to %d %d:%d - %s", qfLog->handle(), Meta::mp.uiUid, Meta::mp.uiGid, strerror(errno));
-			}
-#endif
-		}
-	} else {
-		detach = false;
-	}
+	MumbleSSL::addSystemCA();
 
 #ifdef Q_OS_UNIX
 	unixhandler.setuid();
 #endif
-
-	MumbleSSL::addSystemCA();
-
 	ServerDB db;
 
 	meta = new Meta();
@@ -353,6 +332,25 @@ int main(int argc, char **argv) {
 		}
 	}
 
+	if (detach && ! Meta::mp.qsLogfile.isEmpty()) {
+		qfLog = new QFile(Meta::mp.qsLogfile);
+		if (! qfLog->open(QIODevice::WriteOnly | QIODevice::Append | QIODevice::Text)) {
+			delete qfLog;
+			qfLog = NULL;
+#ifdef Q_OS_UNIX
+			fprintf(stderr, "murmurd: failed to open logfile %s: no logging will be done\n",qPrintable(Meta::mp.qsLogfile));
+#else
+			qWarning("Failed to open logfile %s. Will not detach.",qPrintable(Meta::mp.qsLogfile));
+			detach = false;
+#endif
+		} else {
+			qfLog->setTextModeEnabled(true);
+			QFileInfo qfi(*qfLog);
+			Meta::mp.qsLogfile = qfi.absoluteFilePath();
+		}
+	} else {
+		detach = false;
+	}
 #ifdef Q_OS_UNIX
 	if (detach) {
 		if (fork() != 0) {
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/MurmurIce.h
+++ mumble-1.2.3-87-gf7d8711/src/murmur/MurmurIce.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/src/murmur/BonjourServer.h
+++ mumble-1.2.3-87-gf7d8711/src/murmur/BonjourServer.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2009-2011, Stefan Hacker
+/* Copyright (C) 2009, Stefan Hacker
 
    All rights reserved.
 
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/murmur/MediaProcess/media_pro.cpp
@@ -0,0 +1,843 @@
+/* Copyright (C) 2010-present, Zhenkai Zhu <zhenkai@cs.ucla.edu>, Sen Wang <swangfly@qq.vip.com>
+
+   All rights reserved.
+
+   Redistribution and use in source and binary forms, with or without
+   modification, are permitted provided that the following conditions
+   are met:
+
+   - Redistributions of source code must retain the above copyright notice,
+     this list of conditions and the following disclaimer.
+   - Redistributions in binary form must reproduce the above copyright notice,
+     this list of conditions and the following disclaimer in the documentation
+     and/or other materials provided with the distribution.
+   - Neither the name of the Mumble Developers nor the names of its
+     contributors may be used to endorse or promote products derived from this
+     software without specific prior written permission.
+
+   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
+   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+*/
+#include "media_pro.h"
+#include <sstream>
+
+#define FRESHNESS 10 
+
+static void append_lifetime(ccn_charbuf *templ) {
+	unsigned int nonce = rand() % MAXNONCE;
+	unsigned int lifetime = INTEREST_LIFETIME * 4096 + nonce;
+	unsigned char buf[3] = {0};
+	for (int i = sizeof(buf) - 1; i >= 0; i--, lifetime >>=8) {
+		buf[i] = lifetime & 0xff;
+	}
+	ccnb_append_tagged_blob(templ, CCN_DTAG_InterestLifetime, buf, sizeof(buf));
+}
+
+/*
+static ccn_charbuf *make_default_templ() {
+	ccn_charbuf *templ = ccn_charbuf_create();
+	ccn_charbuf_append_tt(templ, CCN_DTAG_Interest, CCN_DTAG); // <interest>
+	ccn_charbuf_append_tt(templ, CCN_DTAG_Name, CCN_DTAG); // <name>
+	ccn_charbuf_append_closer(templ); // </name>
+	append_lifetime(templ); // <lifetime></lifetime>
+	ccn_charbuf_append_closer(templ); // </interest>
+	return templ;
+}
+*/
+
+
+UserDataBuf::UserDataBuf() {
+	interested = 0;    
+	iNeedDestroy = 0;
+	/*allocate memory for ccn_closure, we don't need to free it, for the ccn stuff will do that*/
+	data_buf.callback = (struct ccn_closure *)malloc(sizeof(struct ccn_closure));
+	data_buf.sync_callback = (struct ccn_closure *)malloc(sizeof(struct ccn_closure));
+	seq = -1;
+}
+
+UserDataBuf::~UserDataBuf() { 
+   struct buf_list *p = NULL, *pBuf = data_buf.buflist;
+   while (pBuf != NULL) {
+		p = pBuf->link;
+		free(pBuf->buf);
+		free(pBuf);
+		pBuf = p;
+   }
+};
+
+void need_fresh_interest(UserDataBuf *userBuf)
+{
+    if (userBuf != NULL)
+        userBuf->interested = 0;
+}
+
+enum ccn_upcall_res 
+seq_sync_handler(struct ccn_closure *selfp,
+				enum ccn_upcall_kind kind,
+				struct ccn_upcall_info *info)
+{
+	switch (kind) {
+	case CCN_UPCALL_INTEREST_TIMED_OUT: {
+		// no need to re-express
+		return (CCN_UPCALL_RESULT_OK);
+	}
+	case CCN_UPCALL_CONTENT_UNVERIFIED:
+		fprintf(stderr, "unverified content received\n");
+		return CCN_UPCALL_RESULT_OK;
+	case CCN_UPCALL_FINAL:
+        return CCN_UPCALL_RESULT_OK;
+	case CCN_UPCALL_CONTENT:
+		break;
+	default:
+		return CCN_UPCALL_RESULT_OK;
+	}
+
+    UserDataBuf *userBuf  = (UserDataBuf *)selfp->data;
+
+    if (userBuf == NULL) {
+        return CCN_UPCALL_RESULT_OK;
+    }
+	
+	const unsigned char *ccnb = info->content_ccnb;
+	struct ccn_indexbuf *comps = info->content_comps;
+
+	long seq;
+	const unsigned char *seqptr = NULL;
+	char *endptr = NULL;
+	size_t seq_size = 0;
+	int k = comps->n - 2;
+
+	seq = ccn_ref_tagged_BLOB(CCN_DTAG_Component, ccnb,
+				comps->buf[k], comps->buf[k + 1],
+				&seqptr, &seq_size);
+	if (seq >= 0) {
+		seq = strtol((const char *)seqptr, &endptr, 10);
+		if (endptr != ((const char *)seqptr) + seq_size)
+			seq = -1;
+	}
+
+	if (seq > 0 && userBuf->seq > 0) {
+		if (seq > userBuf->seq || userBuf->seq - seq > SEQ_DIFF_THRES) {
+			fprintf(stderr, "+++++++++++++++++++++++++++++++++++++++++++++++ userBuf->seq: %d, seq: %d\n", userBuf->seq, seq);
+			userBuf->seq = seq;
+			NdnMediaProcess::initPipe(selfp, info, userBuf);
+
+		}
+	}
+	return CCN_UPCALL_RESULT_OK;
+
+}
+
+enum ccn_upcall_res
+ccn_content_handler(struct ccn_closure *selfp,
+		    enum ccn_upcall_kind kind,
+		    struct ccn_upcall_info *info)
+{
+    UserDataBuf *userBuf  = (UserDataBuf *)selfp->data;
+	switch (kind) {
+	case CCN_UPCALL_INTEREST_TIMED_OUT: {
+		// if it's short Interest without seq, reexpress
+		if (userBuf != NULL && userBuf->seq < 0)
+			return (CCN_UPCALL_RESULT_REEXPRESS);
+
+		return (CCN_UPCALL_RESULT_OK);
+		
+	}
+	case CCN_UPCALL_CONTENT_UNVERIFIED:
+		fprintf(stderr, "unverified content received\n");
+		return CCN_UPCALL_RESULT_OK;
+	case CCN_UPCALL_FINAL:
+        return CCN_UPCALL_RESULT_OK;
+	case CCN_UPCALL_CONTENT:
+		break;
+	default:
+		return CCN_UPCALL_RESULT_OK;
+
+	}
+
+    if (userBuf == NULL || userBuf->iNeedDestroy) {
+        if (userBuf != NULL) delete userBuf;
+        selfp->data = NULL;
+        return CCN_UPCALL_RESULT_OK;
+    }
+
+	if (userBuf->seq < 0) {
+		NdnMediaProcess::initPipe(selfp, info, userBuf);
+		fprintf(stderr, "initializing pipe");
+	}
+
+    struct data_buffer *buffer = &userBuf->data_buf;
+    const unsigned char *content_value;
+    NDNState *state = buffer->state;
+
+	const unsigned char *ccnb = info->content_ccnb;
+	size_t ccnb_size = info->pco->offset[CCN_PCO_E];
+	struct ccn_indexbuf *comps = info->content_comps;
+
+	/* Append it to the queue */
+	struct buf_list *b;
+	b = (struct buf_list *)calloc(1, sizeof(*b));
+	b->link = NULL;
+	ccn_content_get_value(ccnb, ccnb_size, info->pco,
+			&content_value, &b->len);
+	b->buf = malloc(b->len);
+	memcpy(b->buf, content_value, b->len);
+	if (buffer->buflist == NULL)
+		buffer->buflist = b;
+	else {
+		struct buf_list *p = buffer->buflist;
+		while (p->link != NULL)
+			p = p->link;
+		p->link = b;
+	}
+	/*emit the signal for get the data out of the buffer*/
+	state->emitSignal(userBuf->user_name);
+
+    return CCN_UPCALL_RESULT_OK;
+}
+
+void 
+data_buffer_init(NDNState *state, UserDataBuf *userBuf, const char *direction)
+{
+    struct data_buffer *db = &userBuf->data_buf;
+    db->callback->data = userBuf;
+	db->sync_callback->data = userBuf;
+    db->state = state;
+    db->buflist = NULL;
+    strncpy(db->direction, direction, sizeof(db->direction));
+    if (db->direction[0] == 'r') {
+        db->callback->p = &ccn_content_handler;
+		db->sync_callback->p = &seq_sync_handler;
+	}
+    need_fresh_interest(userBuf);
+}
+
+static struct ccn_keystore *cached_keystore = NULL;
+
+void
+init_cached_keystore(void)
+{
+    struct ccn_keystore *keystore = cached_keystore;
+    int res;
+
+    if (keystore == NULL) {
+	struct ccn_charbuf *temp = ccn_charbuf_create();
+	keystore = ccn_keystore_create();
+	ccn_charbuf_putf(temp, "%s/.ccnx/.ccnx_keystore", getenv("HOME"));
+	res = ccn_keystore_init(keystore,
+				ccn_charbuf_as_string(temp),
+				"Th1s1sn0t8g00dp8ssw0rd.");
+	if (res != 0) {
+	    printf("Failed to initialize keystore %s\n", ccn_charbuf_as_string(temp));
+	    exit(1);
+	}
+	ccn_charbuf_destroy(&temp);
+	cached_keystore = keystore;
+    }
+}
+
+static int
+ccn_create_keylocator(ccn_charbuf *c, const ccn_pkey *k)
+{
+    int res;
+    ccn_charbuf_append_tt(c, CCN_DTAG_KeyLocator, CCN_DTAG);
+    ccn_charbuf_append_tt(c, CCN_DTAG_Key, CCN_DTAG);
+    res = ccn_append_pubkey_blob(c, k);
+    if (res < 0)
+        return (res);
+    else {
+        ccn_charbuf_append_closer(c); /* </Key> */
+        ccn_charbuf_append_closer(c); /* </KeyLocator> */
+    }
+    return (0);
+}
+
+const struct ccn_pkey *
+get_my_private_key(void)
+{
+    if (cached_keystore == NULL) init_cached_keystore();
+    return (ccn_keystore_private_key(cached_keystore));
+}
+
+const struct ccn_certificate *
+get_my_certificate(void)
+{
+    if (cached_keystore == NULL) init_cached_keystore();
+    return (ccn_keystore_certificate(cached_keystore));
+}
+
+const unsigned char *
+get_my_publisher_key_id(void)
+{
+    if (cached_keystore == NULL) init_cached_keystore();
+    return (ccn_keystore_public_key_digest(cached_keystore));
+}
+
+
+ssize_t
+get_my_publisher_key_id_length(void)
+{
+    if (cached_keystore == NULL) init_cached_keystore();
+    return (ccn_keystore_public_key_digest_length(cached_keystore));
+}
+
+NDNState::NDNState() {
+	active = false;
+	ccn = NULL;
+    signed_info = ccn_charbuf_create();
+	if (cached_keystore == NULL)
+		init_cached_keystore(); 
+	ccn_charbuf *keylocator = ccn_charbuf_create();
+	ccn_create_keylocator(keylocator, ccn_keystore_public_key(cached_keystore));
+    /* Create signed_info */
+    int res = ccn_signed_info_create(signed_info,
+                                 /* pubkeyid */ get_my_publisher_key_id(),
+                                 /* publisher_key_id_size */ get_my_publisher_key_id_length(),
+                                 /* datetime */ NULL,
+                                 /* type */ CCN_CONTENT_DATA,
+                                 /* freshness */ FRESHNESS,
+				                 /* finalblockid */ NULL,
+                                 /* keylocator */ keylocator);
+    if (res != 0) {
+	    fprintf(stderr, "signed_info_create failed %d (line %d)\n", res, __LINE__);
+    }
+}
+
+NdnMediaProcess::NdnMediaProcess()
+{
+
+	localSeq = 0;
+	isPrivate = false;
+}
+
+int NdnMediaProcess::hint_ahead = 100;
+
+void NdnMediaProcess::tick() {
+	localSeq++;
+	counter ++;
+	if (counter % SEQ_SYNC_INTERVAL == 0) {
+		publish_local_seq();
+		sync_tick();
+	}
+	// send new interest for every speaker
+	ruMutex.lock();
+	QHash<QString, UserDataBuf *>::const_iterator it = qhRemoteUser.constBegin(); 	
+	while (it != qhRemoteUser.constEnd()) {
+		QString userName = it.key();
+		UserDataBuf *udb = it.value();
+		if (udb != NULL && udb->seq >= 0) {
+			udb->seq++;
+			struct ccn_charbuf *pathbuf = ccn_charbuf_create();
+			ccn_name_from_uri(pathbuf, userName.toLocal8Bit().constData());
+			ccn_name_append_str(pathbuf, "audio");
+			struct ccn_charbuf *temp = ccn_charbuf_create();
+			ccn_charbuf_putf(temp, "%ld", udb->seq);
+			ccn_name_append(pathbuf, temp->buf, temp->length);
+			int res = ccn_express_interest(ndnState.ccn, pathbuf, udb->data_buf.callback, NULL);
+			if (res < 0) {
+				fprintf(stderr, "Sending interest failed at normal processor\n");
+				exit(1);
+			}
+			ccn_charbuf_destroy(&pathbuf);
+			ccn_charbuf_destroy(&temp);
+		}
+		it++;	
+	}
+	ruMutex.unlock();
+}
+
+void NdnMediaProcess::sync_tick() {
+	// sync with every speaker about their seq	
+	ruMutex.lock();
+	QHash<QString, UserDataBuf *>::const_iterator it = qhRemoteUser.constBegin();
+	while(it != qhRemoteUser.constEnd()) {
+		QString userName = it.key();
+		UserDataBuf *udb = it.value();
+		if (udb != NULL) {
+			struct ccn_charbuf *pathbuf = ccn_charbuf_create();
+			ccn_name_from_uri(pathbuf, userName.toLocal8Bit().constData());
+			ccn_name_append_str(pathbuf, "seq_sync");
+			ccn_name_append_str(pathbuf, "audio");
+			int res = ccn_express_interest(ndnState.ccn, pathbuf, udb->data_buf.sync_callback, NULL);
+			if (res < 0) {
+				fprintf(stderr, "Sending interest failed at sync process\n");
+				std::exit(1);
+			}
+			ccn_charbuf_destroy(&pathbuf);
+			fprintf(stderr, "Sending interest sync interest to %s\n", userName.toLocal8Bit().constData());
+		}
+		it++;
+	}
+	ruMutex.unlock();
+}
+
+void NdnMediaProcess::initPipe(struct ccn_closure *selfp, struct ccn_upcall_info *info, UserDataBuf *userBuf) {
+	// get seq
+	const unsigned char *ccnb = info->content_ccnb;
+	size_t ccnb_size = info->pco->offset[CCN_PCO_E];
+	struct ccn_indexbuf *comps = info->content_comps;
+
+	long seq;
+	const unsigned char *seqptr = NULL;
+	char *endptr = NULL;
+	size_t seq_size = 0;
+	int k = comps->n - 2;
+
+	// not the case of resetting seq
+	if (userBuf->seq < 0) {
+		seq = ccn_ref_tagged_BLOB(CCN_DTAG_Component, ccnb,
+				comps->buf[k], comps->buf[k + 1],
+				&seqptr, &seq_size);
+		if (seq >= 0) {
+			seq = strtol((const char *)seqptr, &endptr, 10);
+			if (endptr != ((const char *)seqptr) + seq_size)
+				seq = -1;
+		}
+		if (seq >= 0) {
+			userBuf->seq = seq;
+		}
+		else {
+			return;
+		}
+	}	
+
+	// send hint-ahead interests
+	for (int i = 0; i < hint_ahead; i ++) {
+		userBuf->seq++;
+		struct ccn_charbuf *pathbuf = ccn_charbuf_create();
+		ccn_name_init(pathbuf);
+		ccn_name_append_components(pathbuf, ccnb, comps->buf[0], comps->buf[k]);
+		struct ccn_charbuf *temp = ccn_charbuf_create();
+		ccn_charbuf_putf(temp, "%ld", userBuf->seq);
+		ccn_name_append(pathbuf, temp->buf, temp->length);
+		int res = ccn_express_interest(info->h, pathbuf, selfp, NULL);
+		if (res < 0) {
+			fprintf(stderr, "Sending interest failed at normal processor\n");
+			std::exit(1);
+		}
+		ccn_charbuf_destroy(&pathbuf);
+		ccn_charbuf_destroy(&temp);
+	}
+}
+
+NdnMediaProcess::~NdnMediaProcess()
+{
+    QHash<QString,UserDataBuf *>::iterator it; 
+	ruMutex.lock();
+    for ( it = qhRemoteUser.begin(); it != qhRemoteUser.end(); ++it ) {
+        delete it.value();
+    }
+	ruMutex.unlock();
+}
+
+void NdnMediaProcess::setSK(QByteArray sk) {
+	memcpy(sessionKey, sk.data(), sk.size());
+}
+
+void NdnMediaProcess::addRemoteUser(QString strUserName)
+{
+    UserDataBuf *rUser = new UserDataBuf(); 
+    data_buffer_init(&ndnState, rUser, "recv");
+    rUser->user_name = strUserName;
+    rUser->user_type = REMOTE_USER;
+	ruMutex.lock();
+    qhRemoteUser.insert(strUserName, rUser); 
+	ruMutex.unlock();
+}
+
+void NdnMediaProcess::deleteRemoteUser(QString strUserName)
+{
+	ruMutex.lock();
+    UserDataBuf *p =  qhRemoteUser.value(strUserName);
+    if (p == NULL) {
+        return;
+    }
+    qhRemoteUser.remove(strUserName); 
+    if (p->interested == 0) delete p;
+    else p->iNeedDestroy = 1;
+	
+	ruMutex.unlock();
+}
+
+void NdnMediaProcess::addLocalUser(QString strUserName)
+{
+
+    localUdb = new UserDataBuf; 
+    data_buffer_init(&ndnState, localUdb, "send");
+    localUdb->user_name = strUserName;
+    localUdb->user_type = LOCAL_USER;
+}
+
+void NdnMediaProcess::deleteLocalUser(QString strUserName)
+{
+	delete localUdb;
+	localUdb = NULL;
+}
+
+void NdnMediaProcess::publish_local_seq() {
+	struct ccn_charbuf *pathbuf = ccn_charbuf_create();
+	ccn_name_from_uri(pathbuf, localUdb->user_name.toLocal8Bit().constData());
+	ccn_name_append_str(pathbuf, "seq_sync");
+	ccn_name_append_str(pathbuf, "audio");
+	struct ccn_charbuf *seqbuf = ccn_charbuf_create();
+    ccn_charbuf_putf(seqbuf, "%ld", localSeq);
+    ccn_name_append(pathbuf, seqbuf->buf, seqbuf->length);
+    struct ccn_charbuf *message = ccn_charbuf_create();
+	struct ccn_charbuf *seq_signed_info = ccn_charbuf_create();
+	if (cached_keystore == NULL)
+		init_cached_keystore(); 
+	ccn_charbuf *keylocator = ccn_charbuf_create();
+	ccn_create_keylocator(keylocator, ccn_keystore_public_key(cached_keystore));
+    /* Create signed_info */
+    int res = ccn_signed_info_create(seq_signed_info,
+                                 /* pubkeyid */ get_my_publisher_key_id(),
+                                 /* publisher_key_id_size */ get_my_publisher_key_id_length(),
+                                 /* datetime */ NULL,
+                                 /* type */ CCN_CONTENT_DATA,
+                                 /* freshness */ 1,
+				                 /* finalblockid */ NULL,
+                                 /* keylocator */ keylocator);
+
+	res = ccn_encode_ContentObject( /* out */ message,
+				   pathbuf,
+				   seq_signed_info,
+					seqbuf->buf, seqbuf->length, 
+				   /* keyLocator */ NULL, get_my_private_key());
+	ccn_put(ndnState.ccn, message->buf, message->length);
+	ccn_charbuf_destroy(&pathbuf);
+	ccn_charbuf_destroy(&seq_signed_info);
+	ccn_charbuf_destroy(&keylocator);
+	ccn_charbuf_destroy(&message);
+	ccn_charbuf_destroy(&seqbuf);
+}
+
+int NdnMediaProcess::ndnDataSend(const void *buf, size_t len)
+{
+
+#define CHARBUF_DESTROY \
+    ccn_charbuf_destroy(&message);\
+    ccn_charbuf_destroy(&path); \
+    ccn_charbuf_destroy(&seq);
+
+    UserDataBuf *userBuf = localUdb; 
+	if (userBuf == NULL)
+		return -1;
+    int res = 0;
+    int seq_num = -1;
+    struct ccn_charbuf *message = ccn_charbuf_create();
+    struct ccn_charbuf *path = ccn_charbuf_create();
+
+    struct ccn_charbuf *seq = ccn_charbuf_create();
+    unsigned char *ccn_msg = NULL;
+    size_t ccn_msg_size = 0;
+    
+    ccn_name_init(path);
+    
+   // if (ndnState.active){
+        seq_num = localSeq;
+		ccn_name_from_uri(path, localUdb->user_name.toLocal8Bit().constData());
+		ccn_name_append_str(path, "audio");
+    //}
+    
+    if (seq_num < 0) {
+        res = -1;
+        CHARBUF_DESTROY;
+        return res;
+    }
+    
+    ccn_charbuf_putf(seq, "%ld", seq_num);
+    ccn_name_append(path, seq->buf, seq->length);
+
+
+	if (isPrivate) {
+		unsigned char *enc_buf = NULL;
+		size_t enc_len = 0;
+		res = symEncrypt(sessionKey, NULL, (const unsigned char *)buf, len, &enc_buf, &enc_len, AES_BLOCK_SIZE);
+		if (res != 0) {
+			fprintf(stderr, "can not decrypt audio\n");
+			std::exit(1);
+		}
+
+		res = ccn_encode_ContentObject( /* out */ message,
+					   path,
+					   ndnState.signed_info,
+					   enc_buf, enc_len,
+					   /* keyLocator */ NULL, get_my_private_key());
+		if (enc_buf != NULL) {
+			free(enc_buf);
+			enc_buf = NULL;
+		}
+		
+	} else {
+		res = ccn_encode_ContentObject( /* out */ message,
+					   path,
+					   ndnState.signed_info,
+					   buf, len,
+					   /* keyLocator */ NULL, get_my_private_key());
+	}
+
+    if (res != 0) {
+        fprintf(stderr, "encode_ContentObject failed %d (line %d)\n", res, __LINE__);
+        CHARBUF_DESTROY;
+        return res;
+    }
+    
+    ccn_msg = (unsigned char *)calloc(1, message->length);
+    ccn_msg_size = message->length;
+    memcpy(ccn_msg, message->buf, message->length);
+    { struct ccn_parsed_ContentObject o = {0};
+        res = ccn_parse_ContentObject(ccn_msg, ccn_msg_size, &o, NULL);
+        if (res < 0) {
+            fprintf(stderr, "created bad ContentObject, res = %d\n", res);
+            abort();
+        }
+    }
+
+    
+    struct buf_list *p = NULL, *b = userBuf->data_buf.buflist;
+    while (b != NULL) { p = b; b = b->link; }
+    b = (struct buf_list*)calloc(1, sizeof(struct buf_list));
+    if (b == NULL) {
+        CHARBUF_DESTROY;
+        return -1;
+    }
+    if (p != NULL)
+        p->link = b;
+    else userBuf->data_buf.buflist = b;
+    
+    b->buf = ccn_msg;
+    b->len = ccn_msg_size;
+    b->link = NULL;
+
+    CHARBUF_DESTROY;
+    return res;
+}
+
+int NdnMediaProcess::doPendingSend()
+{
+    int res = 0;
+
+	struct buf_list  *p;
+	struct buf_list *b = localUdb->data_buf.buflist;
+	if (b != NULL) {
+		p = b->link;
+		if (b != NULL && b->buf != NULL) {
+			res = ccn_put(ndnState.ccn, b->buf, b->len);
+			free(b->buf);
+			b->len = 0;
+			b->buf = NULL;
+		}
+		free(b);
+		localUdb->data_buf.buflist = p;
+	}
+    return res;
+}
+
+int NdnMediaProcess::checkInterest()
+{
+    int res = 0;
+    QHash<QString,UserDataBuf *>::iterator it; 
+	ruMutex.lock();
+    for ( it = qhRemoteUser.begin(); it != qhRemoteUser.end(); ++it ) {
+        if (!it.value()->interested) {
+            /* Use a template to express our order preference for the first packet. */
+            struct ccn_charbuf *templ = ccn_charbuf_create();
+            struct ccn_charbuf *path = ccn_charbuf_create();
+            ccn_charbuf_append_tt(templ, CCN_DTAG_Interest, CCN_DTAG);
+            ccn_charbuf_append_tt(templ, CCN_DTAG_Name, CCN_DTAG);
+            ccn_charbuf_append_closer(templ);
+            ccn_charbuf_append_tt(templ, CCN_DTAG_ChildSelector, CCN_DTAG);
+            ccn_charbuf_append_tt(templ, 1, CCN_UDATA);
+            ccn_charbuf_append(templ, "1", 1);	/* low bit 1: rightmost */
+            ccn_charbuf_append_closer(templ); /*<ChildSelector>*/
+            ccn_charbuf_append_closer(templ);
+			ccn_name_from_uri(path, it.key().toLocal8Bit().constData());
+			ccn_name_append_str(path, "audio");
+            if (res >= 0) {
+                if (it.value()->data_buf.callback->p == NULL) {fprintf(stderr, "data_buf.callback is NULL!\n"); exit(1); }
+                res = ccn_express_interest(ndnState.ccn, path, it.value()->data_buf.callback, templ);
+                it.value()->interested = 1;
+            }
+            if (res < 0) {
+				fprintf(stderr, "sending the first interest failed\n");
+				exit(1);
+			}
+            ccn_charbuf_destroy(&path);
+            ccn_charbuf_destroy(&templ);
+        }
+    }
+	ruMutex.unlock();
+    return res;
+}
+
+int NdnMediaProcess::ndn_wait_message(UserDataBuf *userBuf, char *buf, int len)
+{
+    if (ndnState.ccn == NULL || userBuf == NULL) {
+        errno = 9; //EBADFD;
+        return(-1);
+    }
+    if (userBuf->data_buf.buflist == NULL) {
+        errno = EAGAIN;
+        len = -1;
+    }
+    else {
+        struct buf_list *b = userBuf->data_buf.buflist;
+        userBuf->data_buf.buflist = b->link;
+		if (isPrivate) {
+			unsigned char *plain_data = NULL;
+			size_t plain_len = 0;
+			int res = symDecrypt(sessionKey, NULL, (const unsigned char *) b->buf, b->len, &plain_data, &plain_len, AES_BLOCK_SIZE);
+			if (res != 0)  {
+				fprintf(stderr, "can not decrypt audio\n");
+				std::exit(1);
+			}
+			len = plain_len;
+			memcpy(buf, plain_data, len);
+			if (plain_data != NULL) {
+				free(plain_data);
+				plain_data = NULL;
+			}
+		} else
+		{
+			if (b->len < len)
+				len = b->len;
+			memcpy(buf, b->buf, len);
+		}
+        free(b->buf);
+        b->buf = NULL;
+        b->len = 0;
+        free(b);
+        b = NULL;
+    }
+    return(len);
+}
+
+int NdnMediaProcess::startThread() {
+    struct ccn *h;
+
+    /* Shut down any lingering session */
+    while (ndnState.ccn != NULL) {
+        ndnState.active = 0;
+        printf("waiting for old session to die\n");
+    }
+    h = ccn_create();
+    if (ccn_connect(h, NULL) == -1) {
+        ccn_perror(h, "Failed to contact ccnd");
+        ccn_destroy(&h);
+        return (-1);
+    }
+     
+    ndnState.ccn = h; 
+	clock = new QTimer(this);
+	connect(clock, SIGNAL(timeout()), this, SLOT(tick()));
+	clock->start(PER_PACKET_LEN);
+	
+	counter = 0;
+
+    if (! isRunning()) {
+        fprintf(stderr, "Starting voice thread in media_pro\n"); 
+        ndnState.active = true;
+
+        start(QThread::HighestPriority);
+#ifdef Q_OS_LINUX
+        int policy;
+        struct sched_param param;
+        if (pthread_getschedparam(pthread_self(), &policy, &param) == 0) {
+            if (policy == SCHED_OTHER) {
+                policy = SCHED_FIFO;
+                param.sched_priority = 1;
+                pthread_setschedparam(pthread_self(), policy, &param);
+            }
+        }
+#endif
+    }
+	else
+		fprintf(stderr, "what the hell\n");
+    return 0;
+}
+
+int NdnMediaProcess::stopThread() {
+
+    /* Shut down any lingering session */
+    while (ndnState.ccn != NULL) {
+        ndnState.active = false;
+        printf("waiting for old session to die\n");
+    }
+
+    ndnState.active = false;
+    if (isRunning()) {
+        printf("Ending voice thread");
+
+    }
+}
+
+void NdnMediaProcess::run() {
+    int res = 0;
+
+    for(;;) {
+        if (ndnState.active != 0) {
+            
+            /* check each local user's buffer to find out if there are some packets 
+             * to be sent.If have, send it. */ 
+            doPendingSend();
+
+            /* find the new or resetted remote user in the remote user list,send the 
+             * first interest for the user.*/
+            checkInterest();
+        }
+        else /* other module has stopped this thread */
+            res = -1;
+
+        if (res >= 0) {
+            res = ccn_run(ndnState.ccn, 5);
+        }
+        if (res < 0)
+            break;
+    }
+    
+    ccn_destroy(&ndnState.ccn);
+    ndnState.ccn = NULL;
+}
+
+int NdnMediaProcess::sendLocalMedia(char *msg, int msg_len)
+{
+    int len, res;
+
+    res = ndnDataSend(msg, msg_len);
+
+    if (res >= 0) {
+        res = len;
+    }
+    else {
+        errno = EAGAIN;
+        res = -1;
+    }
+    return(res);
+}
+
+int NdnMediaProcess::getRemoteMedia(QString strUserName,char* msg, int msg_len)
+{
+    int res;
+
+	ruMutex.lock();
+    UserDataBuf *p = qhRemoteUser.value(strUserName); 
+    res = ndn_wait_message(p, msg, msg_len);
+	ruMutex.unlock();
+
+    if (res < 0) {
+        errno = EAGAIN;
+    } 
+
+    return(res);
+}
+
+
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/murmur/MediaProcess/media_pro.h
@@ -0,0 +1,216 @@
+/* Copyright (C) 2010-present, Zhenkai Zhu <zhenkai@cs.ucla.edu>, Sen Wang <swangfly@qq.vip.com>
+
+   All rights reserved.
+
+   Redistribution and use in source and binary forms, with or without
+   modification, are permitted provided that the following conditions
+   are met:
+
+   - Redistributions of source code must retain the above copyright notice,
+     this list of conditions and the following disclaimer.
+   - Redistributions in binary form must reproduce the above copyright notice,
+     this list of conditions and the following disclaimer in the documentation
+     and/or other materials provided with the distribution.
+   - Neither the name of the Mumble Developers nor the names of its
+     contributors may be used to endorse or promote products derived from this
+     software without specific prior written permission.
+
+   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
+   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+*/
+#ifndef MEDIA_PRO_H
+#define MEDIA_PRO_H
+
+#include "murmur_pch.h"
+#include <QTimer>
+
+#ifdef   __cplusplus 
+extern "C" { 
+#endif 
+#include "pthread.h"
+#include <openssl/evp.h>
+#include <openssl/rand.h>
+#include <openssl/x509.h>
+#include <openssl/aes.h>
+#include <openssl/hmac.h>
+#include <ccn/ccn.h>
+#include <ccn/uri.h>
+#include <ccn/bloom.h>
+#include <ccn/charbuf.h>
+#include <ccn/keystore.h>
+#include <ccn/signing.h>
+#ifdef   __cplusplus 
+#include <time.h>
+#include <stdlib.h>
+} 
+#endif 
+#include "../GroupManager/aes_util.h"
+
+#define INTEREST_LIFETIME 4
+#define MAXNONCE 512 
+#define PER_PACKET_LEN 20
+#define SEQ_SYNC_INTERVAL 200 
+#define SEQ_DIFF_THRES 400 
+
+struct buf_list {
+    void *buf;
+    size_t len;
+    struct buf_list *link;
+};
+
+class NDNState;
+struct data_buffer {
+    struct ccn_closure *callback;
+	struct ccn_closure *sync_callback;
+    NDNState *state;
+    char direction[5];
+    struct buf_list *buflist;
+};
+
+enum UserType{REMOTE_USER, LOCAL_USER};
+
+class UserDataBuf:public QObject{
+    private:
+        Q_OBJECT;
+        Q_DISABLE_COPY(UserDataBuf);
+
+    private:   
+
+    public:
+    UserDataBuf();
+    ~UserDataBuf();
+		
+    public:
+
+    /*the owner name of this buffer*/
+    QString user_name;
+    /*data buffer for caching the ongoing/incoming packet*/
+    struct data_buffer data_buf;
+    /*user type: REMOTE_USER, LOCAL_USER*/
+    int user_type;
+    /*the flag for identifying whether this user is a newcomer*/
+    int interested;
+    /* flag to indicate this buf has detached with a user */
+    int iNeedDestroy;
+	long seq;
+};
+
+class NDNState:public QObject{
+    private:
+        Q_OBJECT;
+        Q_DISABLE_COPY(NDNState);
+
+    public:
+    /*flag indicating whether the ccn connection is alive*/
+    int active;
+    /*signal for notifying other module changes of ccn connection*/
+    pthread_cond_t changed;
+    /*CCN(NDN) connection*/
+    struct ccn *ccn;
+	struct ccn_charbuf *signed_info;
+
+    public:
+    NDNState();
+
+
+    ~NDNState() {};
+
+    void emitSignal(QString strUserName) {
+        emit remoteMediaArrivalSig(strUserName);
+    };
+
+    signals:
+    void remoteMediaArrivalSig(QString); 
+    /* after receiving a media packet of remote users, this signal will be emitted to notify
+     * other module to get it.
+     */
+
+};
+
+class NdnMediaProcess:public QThread {
+    private:
+        Q_OBJECT;
+        Q_DISABLE_COPY(NdnMediaProcess);
+
+    public: 
+    /* the data structure for maintaining ccn API related stuff*/
+    NDNState ndnState; 
+    
+    private:
+    /* the remote user map */
+	QMutex ruMutex;
+    QHash<QString, UserDataBuf *> qhRemoteUser;
+    QHash<QString, UserDataBuf *> qhLocalUser;
+    
+	bool isPrivate;
+	unsigned char sessionKey[512/8];
+	long localSeq;
+	QString localUsername;
+	UserDataBuf *localUdb;
+	// clock for media process 
+	QTimer *clock;
+
+	long counter;
+
+    static int hint_ahead;                                                                  
+
+    private:
+    /* cache the packet in buffer waiting for working thread sending*/
+    int ndnDataSend(const void *buf, size_t len);
+
+    /*get the data from the buffer, do not block if there are no data actually*/
+    int ndn_wait_message(UserDataBuf *userBuf, char *msg, int msg_len);
+
+    /* check each local user's buffer to find out if there are some packets 
+     * to be sent.If have, send it.
+     */
+    int doPendingSend();
+
+    /* find the new or resetted remote user in the remote user list,send the 
+     * first interest for the user.
+     */
+    int checkInterest();
+	void sync_tick();
+	void publish_local_seq();
+
+
+	private slots:
+	void tick();
+
+
+    public:
+    NdnMediaProcess();
+    ~NdnMediaProcess();
+	static void initPipe(struct ccn_closure *selfp, struct ccn_upcall_info *info, UserDataBuf *userBuf);
+	void setPrivate() { isPrivate = true; }
+	void setSK(QByteArray sk);
+    void run();
+    int startThread();
+    int stopThread();
+    void addRemoteUser(QString strUserName);
+    void deleteRemoteUser(QString strUserName);
+    void addLocalUser(QString strUserName);
+    void deleteLocalUser(QString strUserName);
+    /* this function stores the media data of local users to the buffer,then 
+     * the caller of this function can return. the work thread is in charge of sending 
+     * the data actually.
+     */
+    int sendLocalMedia(char *msg, int msg_len);
+
+    /* get a media packet of some remote user, this function will get a oldest data packet from 
+     * the remote user's buffer. the caller will not be blocked, because before calling this 
+     * funtion, it must have received the remodeMediaArrivalSig signal
+     */  
+    int getRemoteMedia(QString strUserName, char *msg, int msg_len);
+
+};
+#endif 
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/murmur/GroupManager/aes_util.cpp
@@ -0,0 +1,153 @@
+#include "aes_util.h"
+
+int symDecrypt(const unsigned char *key,
+							const unsigned char *iv,
+							const unsigned char *ciphertext, 
+							size_t ciphertext_length,
+							unsigned char **plaintext, 
+							size_t *plaintext_length, 
+							size_t plaintext_padding) {
+
+    EVP_CIPHER_CTX ctx;
+    unsigned char *pptr = *plaintext;
+    const unsigned char *dptr = NULL;
+    size_t plaintext_buf_len = ciphertext_length + plaintext_padding;
+    size_t decrypt_len = 0;
+
+    if ((NULL == ciphertext) || (NULL == plaintext_length) || (NULL == key) || (NULL == plaintext))
+        return EINVAL;
+
+    if (NULL == iv) {
+        plaintext_buf_len -= AES_BLOCK_SIZE;
+    }
+
+    if ((NULL != *plaintext) && (*plaintext_length < plaintext_buf_len))
+        return ENOBUFS;
+
+    if (NULL == pptr) {
+        pptr = (unsigned char *)calloc(1, plaintext_buf_len);
+        if (NULL == pptr)
+            return ENOMEM;
+    }
+
+    if (NULL == iv) {
+        iv = ciphertext;
+        dptr = ciphertext + AES_BLOCK_SIZE;
+        ciphertext_length -= AES_BLOCK_SIZE;
+    } else {
+        dptr = ciphertext;
+    }
+
+    /*
+      print_block("ccn_decrypt: key:", key, AES_BLOCK_SIZE);
+      print_block("ccn_decrypt: iv:", iv, AES_BLOCK_SIZE);
+      print_block("ccn_decrypt: ciphertext:", dptr, ciphertext_length);
+    */
+    if (1 != EVP_DecryptInit(&ctx, EVP_aes_128_cbc(),
+                             key, iv)) {
+        if (NULL == *plaintext)
+            free(pptr);
+        return -128;
+    }
+
+    if (1 != EVP_DecryptUpdate(&ctx, pptr, (int *)&decrypt_len, dptr, ciphertext_length)) {
+        if (NULL == *plaintext)
+            free(pptr);
+        return -127;
+    }
+    *plaintext_length = decrypt_len + plaintext_padding;
+    if (1 != EVP_DecryptFinal(&ctx, pptr+decrypt_len, (int *)&decrypt_len)) {
+        if (NULL == *plaintext)
+            free(pptr);
+        return -126;
+    }
+    *plaintext_length += decrypt_len;
+    *plaintext = pptr;
+    /* this is supposed to happen automatically, but sometimes we seem to be running over the end... */
+    memset(*plaintext + *plaintext_length - plaintext_padding, 0, plaintext_padding);
+    return 0;
+}
+
+
+int symEncrypt(const unsigned char *key,
+							const unsigned char *iv,
+							const unsigned char *plaintext, 
+							size_t plaintext_length,
+							unsigned char **ciphertext, 
+							size_t *ciphertext_length,
+							size_t ciphertext_padding) {
+    EVP_CIPHER_CTX ctx;
+    unsigned char *cptr = *ciphertext;
+    unsigned char *eptr = NULL;
+    /* maximum length of ciphertext plus user-requested extra */
+    size_t ciphertext_buf_len = plaintext_length + AES_BLOCK_SIZE-1 + ciphertext_padding;
+    size_t encrypt_len = 0;
+    size_t alloc_buf_len = ciphertext_buf_len;
+    size_t alloc_iv_len = 0;
+
+    if ((NULL == ciphertext) || (NULL == ciphertext_length) || (NULL == key) || (NULL == plaintext))
+        return EINVAL;
+
+    if (NULL == iv) {
+        alloc_buf_len += AES_BLOCK_SIZE;
+    }
+
+    if ((NULL != *ciphertext) && (*ciphertext_length < alloc_buf_len))
+        return ENOBUFS;
+
+    if (NULL == cptr) {
+        cptr = (unsigned char *)calloc(1, alloc_buf_len);
+        if (NULL == cptr)
+            return ENOMEM;
+    }
+    *ciphertext_length = 0;
+
+    if (NULL == iv) {
+        iv = cptr;
+        eptr = cptr + AES_BLOCK_SIZE; /* put iv at start of block */
+
+        if (1 != RAND_bytes((unsigned char *)iv, AES_BLOCK_SIZE)) {
+            if (NULL == *ciphertext)
+                free(cptr);
+            return -1;
+        }
+
+        alloc_iv_len = AES_BLOCK_SIZE;
+        fprintf(stderr, "ccn_encrypt: Generated IV\n");
+    } else {
+        eptr = cptr;
+    }
+
+    if (1 != EVP_EncryptInit(&ctx, EVP_aes_128_cbc(),
+                             key, iv)) {
+        if (NULL == *ciphertext)
+            free(cptr);
+        return -128;
+    }
+
+    if (1 != EVP_EncryptUpdate(&ctx, eptr, (int *)&encrypt_len, plaintext, plaintext_length)) {
+        if (NULL == *ciphertext)
+            free(cptr);
+        return -127;
+    }
+    *ciphertext_length += encrypt_len;
+
+    if (1 != EVP_EncryptFinal(&ctx, eptr+encrypt_len, (int *)&encrypt_len)) {
+        if (NULL == *ciphertext)
+            free(cptr);
+        return -126;
+    }
+
+    /* don't include padding length in ciphertext length, caller knows its there. */
+    *ciphertext_length += encrypt_len;
+    *ciphertext = cptr;							   
+
+    /*
+      print_block("ccn_encrypt: key:", key, AES_BLOCK_SIZE);
+      print_block("ccn_encrypt: iv:", iv, AES_BLOCK_SIZE);
+      print_block("ccn_encrypt: ciphertext:", eptr, *ciphertext_length);
+    */
+    /* now add in any generated iv */
+    *ciphertext_length += alloc_iv_len;
+    return 0;
+}
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/murmur/GroupManager/debugbox.cpp
@@ -0,0 +1,19 @@
+#include "debugbox.h"
+
+#ifdef QT_NO_DEBUG
+void debug(QString msg) {
+}
+
+void critical (QString msg) {
+}
+
+#else
+void debug(QString msg) {
+	qWarning() << "+++++Debug: "<<  msg << "\n";
+}
+
+void critical (QString msg) {
+	debug(msg);
+	exit(1);
+}
+#endif
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/murmur/GroupManager/GroupManager.h
@@ -0,0 +1,141 @@
+/* Copyright (C) 2010-present, Zhenkai Zhu <zhenkai@cs.ucla.edu>, Yang Xu <yangxu.5661@yahoo.com.cn>
+
+   All rights reserved.
+
+   Redistribution and use in source and binary forms, with or without
+   modification, are permitted provided that the following conditions
+   are met:
+
+   - Redistributions of source code must retain the above copyright notice,
+     this list of conditions and the following disclaimer.
+   - Redistributions in binary form must reproduce the above copyright notice,
+     this list of conditions and the following disclaimer in the documentation
+     and/or other materials provided with the distribution.
+   - Neither the name of the Mumble Developers nor the names of its
+     contributors may be used to endorse or promote products derived from this
+     software without specific prior written permission.
+
+   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
+   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+*/
+#ifndef _GROUPMANAGER_H
+#define _GROUPMANAGER_H
+
+
+
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+#include <openssl/evp.h>
+#include <openssl/rand.h>
+#include <openssl/x509.h>
+#include <openssl/aes.h>
+#include <openssl/hmac.h>
+#include <ccn/ccn.h>
+#include <ccn/uri.h>
+#include <ccn/bloom.h>
+#include <ccn/charbuf.h>
+#include <ccn/keystore.h>
+#include <ccn/signing.h>
+#ifdef __cplusplus
+}
+#endif
+
+#include "murmur_pch.h"
+#include "ServerUser.h"
+#include "RemoteUser.h"
+
+#include "../MediaProcess/media_pro.h"
+#include "aes_util.h"
+
+class GroupManager: public QThread {
+    private:
+        Q_OBJECT
+        Q_DISABLE_COPY(GroupManager)
+
+    public:
+        void ndnContext();
+        int get_public_key(struct ccn_pkey **pkeyp, const char *, const char *);
+		void handleLeave(struct ccn_upcall_info *info);
+		void incomingInterest(struct ccn_upcall_info *info);
+		void incomingContent(struct ccn_upcall_info *info);
+
+    private:
+        int ccn_init();
+        int ccn_open();
+        int ccn_free();
+        int ccn_publish_key(const char *, const char *);
+
+    private:
+        struct ccn *ccn;
+        struct ccn_closure *join_closure;
+        struct ccn_closure *req_closure;
+		struct ccn_closure *leave_closure;
+
+    protected:
+        bool bRunning;
+
+        void StartThread();
+        void StopThread();
+    public:
+        void run();
+        void log(const QString &msg);
+		void testBug();
+        GroupManager(NdnMediaProcess* pNdnMediaPro);
+        ~GroupManager();
+        QHash<QString, RemoteUser *> getRemoteUsers() { return qhRemoteUsers; };
+        RemoteUser *getRemoteUser(QString user) { return qhRemoteUsers[user]; };
+        void setLocalUser(ServerUser *u);
+        int addRemoteUser(QString prefix, QString userName);
+		void deleteRemoteUser(QString remoteUser);
+        bool remoteUserExist(QString prefix, QString name);
+		void userLeft(RemoteUser *ru);
+        int userListtoXml(const char **);
+        int parseXmlUserList(const unsigned char *incoming_data, size_t len);
+		void sendLeaveInterest();
+		QString getFullLocalName() { return (prefix + "/" + userName); }
+
+    signals:
+        void remoteUserJoin(RemoteUser *);
+        void remoteUserLeave(int);
+
+    public slots:
+        void enumerate();
+		void checkAlive();
+
+    public:
+        /* senwang*/
+        NdnMediaProcess *pNdnMediaPro;  
+		unsigned char conferenceKey[512/8];
+        QHash<QString, RemoteUser *> qhRemoteUsers;
+
+    private:
+        /* the connection information about the local user
+         * this is needed to notify the local user about the
+         * status of remote users
+         */
+        ServerUser *localUser;
+		QString prefix;
+		QString confName;
+		QString userName;
+		bool isPrivate;
+		QMutex ruMutex;
+
+        QTimer *enumTimer;
+		QTimer *aliveTimer;
+        QQueue<int> qqRSesIds;
+};
+        
+#else
+class GroupManager;
+#endif
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/murmur/GroupManager/RemoteUser.h
@@ -0,0 +1,58 @@
+/* Copyright (C) 2010-present, Zhenkai Zhu <zhenkai@cs.ucla.edu>
+
+   All rights reserved.
+
+   Redistribution and use in source and binary forms, with or without
+   modification, are permitted provided that the following conditions
+   are met:
+
+   - Redistributions of source code must retain the above copyright notice,
+     this list of conditions and the following disclaimer.
+   - Redistributions in binary form must reproduce the above copyright notice,
+     this list of conditions and the following disclaimer in the documentation
+     and/or other materials provided with the distribution.
+   - Neither the name of the Mumble Developers nor the names of its
+     contributors may be used to endorse or promote products derived from this
+     software without specific prior written permission.
+
+   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
+   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+*/
+#ifndef _REMOTEUSER_H
+#define _REMOTEUSER_H
+
+#include <QString>
+#include <QDateTime>
+#include "User.h"
+
+class RemoteUser: public User {
+    public:
+        RemoteUser(QString prefix, QString name);
+
+        const QString getPrefix() const {return remoteUserPrefix;}
+        const QString getName() const {return qsName;}
+
+		void refreshReceived();
+		void setLeft(){ left = true; }
+
+		bool needRefresh();
+		bool isStaled();
+		bool hasLeft() {return left;}
+
+    private:
+        QString remoteUserPrefix;
+        QDateTime timestamp;
+		bool left;
+};
+#else
+class RemoteUser;
+#endif
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/murmur/GroupManager/GroupManager.cpp
@@ -0,0 +1,837 @@
+/* Copyright (C) 2010-present, Zhenkai Zhu <zhenkai@cs.ucla.edu>, Yang Xu <yangxu.5661@yahoo.com.cn>
+
+  All rights reserved.
+
+  Redistribution and use in source and binary forms, with or without
+  modification, are permitted provided that the following conditions
+  are met:
+
+  - Redistributions of source code must retain the above copyright notice,
+    this list of conditions and the following disclaimer.
+  - Redistributions in binary form must reproduce the above copyright notice,
+    this list of conditions and the following disclaimer in the documentation
+    and/or other materials provided with the distribution.
+  - Neither the name of the Mumble Developers nor the names of its
+    contributors may be used to endorse or promote products derived from this
+    software without specific prior written permission.
+
+  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+  A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
+  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+*/
+#include <cstring>
+#include <ctime>
+#include <QString>
+#include "murmur_pch.h"
+#include "GroupManager.h"
+#include "Server.h"
+#include <QSettings>
+#include "debugbox.h"
+
+#define  BROADCAST_PREFIX ("/ndn/broadcast/conference")
+
+#define DEBUG
+
+#define FRESHNESS 10 
+
+#ifdef DEBUG
+#define DPRINT(fmt, ...)                                          \
+                                                                 \
+   fprintf(stderr, "[%s:%d:%s] ", __FILE__, __LINE__, __func__); \
+   fprintf(stderr, fmt, ##__VA_ARGS__);                          \
+   fprintf(stderr, "\n");                                        \
+
+#else
+#define DPRINT(fmt, ...)                                          \
+                                                                 \
+   fprintf(stderr, fmt, ##__VA_ARGS__);                          \
+   fprintf(stderr, "\n");                                        \
+
+#endif
+
+
+struct ccn_bloom {
+   int n;
+   struct ccn_bloom_wire *wire;
+};
+
+const int ESTUSERS = 20;
+const unsigned char SEED[] = "1412";
+
+static ccn_keystore *cached_keystore = NULL;
+static GroupManager *pGroupManager = NULL;
+
+static enum ccn_upcall_res incoming_content(ccn_closure *selfp, 
+                           ccn_upcall_kind kind, 
+                           ccn_upcall_info *info);
+static enum ccn_upcall_res incoming_interest(ccn_closure *selfp, 
+                           ccn_upcall_kind kind, 
+                           ccn_upcall_info *info);
+static enum ccn_upcall_res handle_leave(ccn_closure *selfp,
+										ccn_upcall_kind kind,
+										ccn_upcall_info *info);
+
+static void append_bloom_filter(ccn_charbuf *templ, ccn_bloom *b);
+
+static char *ccn_name_comp_to_str(const unsigned char *ccnb,
+								  const struct ccn_indexbuf *comps,
+								  int index);
+
+static void init_cached_keystore();
+static const ccn_pkey *get_my_private_key();
+static const ccn_pkey *get_my_public_key();
+static const unsigned char *get_my_publisher_key_id();
+static ssize_t get_my_publisher_key_id_length();
+static ccn_charbuf *make_interest_template(struct ccn_bloom *exclusive_filter);
+
+static int ccn_create_keylocator(ccn_charbuf *c, const ccn_pkey *k);
+
+static char *ccn_name_comp_to_str(const unsigned char *ccnb,
+								  const struct ccn_indexbuf *comps,
+								  int index) {
+	size_t comp_size;
+	const unsigned char *comp_ptr;
+	char *str;
+	if (ccn_name_comp_get(ccnb, comps, index, &comp_ptr, &comp_size) == 0) {
+		str = (char *)malloc(sizeof(char) *(comp_size + 1));
+		strncpy(str, (const char *)comp_ptr, comp_size);
+		str[comp_size] = '\0';
+		return str;
+	}
+	else {
+		debug("can not get name comp");
+		return NULL;
+	}
+}
+
+
+static void init_cached_keystore() {
+    ccn_keystore *keystore = cached_keystore;
+    int res;
+    if (keystore == NULL) {
+	ccn_charbuf *temp = ccn_charbuf_create();
+	keystore = ccn_keystore_create();
+	ccn_charbuf_putf(temp, "%s/.ccnx/.ccnx_keystore", getenv("HOME"));
+	res = ccn_keystore_init(keystore,
+				ccn_charbuf_as_string(temp),
+				(char *)"Th1s1sn0t8g00dp8ssw0rd.");
+	if (res != 0) {
+	    printf("Failed to initialize keystore %s\n", ccn_charbuf_as_string(temp));
+	    exit(1);
+	}
+	ccn_charbuf_destroy(&temp);
+	cached_keystore = keystore;
+    }
+}
+
+static void append_bloom_filter(ccn_charbuf *templ, ccn_bloom *b) {
+    ccn_charbuf_append_tt(templ, CCN_DTAG_Exclude, CCN_DTAG);
+    ccn_charbuf_append_tt(templ, CCN_DTAG_Bloom, CCN_DTAG);
+    int wireSize = ccn_bloom_wiresize(b);
+    ccn_charbuf_append_tt(templ, wireSize, CCN_BLOB);
+    ccn_bloom_store_wire(b, ccn_charbuf_reserve(templ, wireSize), wireSize);
+    templ->length += wireSize;
+    ccn_charbuf_append_closer(templ);
+    ccn_charbuf_append_closer(templ);
+}
+
+
+GroupManager::GroupManager(NdnMediaProcess *pNdnMediaPro) {
+
+    pGroupManager = this;
+
+    this->pNdnMediaPro = pNdnMediaPro;
+
+	QDomDocument settings;
+	QString configFileName = QDir::homePath() + "/" + \
+							".actd" + "/" + ".config";
+	QFile config(configFileName);
+	if (!config.exists()) 
+		critical("Config file does not exist!");
+	
+	if (!config.open(QIODevice::ReadOnly))
+		critical("Can not open config file!");
+	
+	if (!settings.setContent(&config)) {
+		config.close();
+		critical("can not parse config file!");
+	}
+	config.close();
+	
+	QDomElement docElem = settings.documentElement(); //<config>
+	QDomNode n = docElem.firstChild();
+
+	isPrivate = false;
+	QString qsConfKey;
+	QString qsSessionKey;
+	QByteArray qbaSK;
+	while(!n.isNull()) {
+		if (n.nodeName() == "prefix") {
+			prefix = n.toElement().text();
+		} else if (n.nodeName() == "confName") {
+			confName = n.toElement().text();
+		} else if (n.nodeName() == "private") {
+			QString p = n.toElement().text();
+			if (p == "true")
+				isPrivate = true;
+			else
+				isPrivate = false;
+		} else if (n.nodeName() == "confKey" && isPrivate) {
+			qsConfKey = n.toElement().text();
+			QByteArray qbaCK = \
+				QByteArray::fromBase64(qsConfKey.toLocal8Bit()); 
+			memcpy(conferenceKey, qbaCK.data(), qbaCK.size());
+		} else if (n.nodeName() == "sessionKey" && isPrivate) {
+			qsSessionKey = n.toElement().text();
+			qbaSK = \
+				QByteArray::fromBase64(qsSessionKey.toLocal8Bit());
+
+		} else {
+			debug("unknown atrribute in config file!");
+		}
+		n = n.nextSibling();
+
+	}
+
+	if (confName.isEmpty())
+		critical("no confName in config!");
+	
+	if (isPrivate && (qsConfKey.isEmpty() || qsSessionKey.isEmpty()))
+		isPrivate = false;
+	
+	if (isPrivate) {
+		pNdnMediaPro->setPrivate();
+		pNdnMediaPro->setSK(qbaSK);
+	}
+
+	ndnContext();
+	
+    localUser = NULL;
+
+    // ui_session id for remoteUsers
+	// 5000 at maximum
+    for (int i = 5001; i < 10000; ++i)
+        qqRSesIds.enqueue(i);
+
+}
+
+GroupManager::~GroupManager() {
+
+	ccn_free();
+    pGroupManager = NULL;
+    StopThread();
+}
+
+void GroupManager::StopThread() {
+    bRunning = false;
+    if (isRunning()) {
+		debug("Ending Userlist Handling thread");
+		wait();
+    }
+}
+
+void GroupManager::StartThread() {
+	if (! isRunning()) {
+		debug("Starting Userlist Handling thread");
+		bRunning = true;
+		start(QThread::HighestPriority);
+#ifdef Q_OS_LINUX
+		// QThread::HighestPriority == Same as everything else...
+		int policy;
+		sched_param param;
+		if (pthread_getschedparam(pthread_self(), &policy, &param) == 0) {
+			if (policy == SCHED_OTHER) {
+				policy = SCHED_FIFO;
+				param.sched_priority = 1;
+				pthread_setschedparam(pthread_self(), policy, &param);
+			}
+		}
+#endif
+	}
+}
+
+void GroupManager::run() {
+    int res = 0;
+    while (bRunning) {
+        if (res >= 0) {
+            res = ccn_run(ccn, 20);
+        }
+    }
+}
+
+void GroupManager::setLocalUser(ServerUser *u) {
+    localUser = u;
+	userName = u->qsName;
+    QString temp = prefix + "/" + userName;
+    pNdnMediaPro->addLocalUser(temp);
+
+    enumTimer = new QTimer(this);
+    connect(enumTimer, SIGNAL(timeout()), this, SLOT(enumerate()));  
+	enumTimer->start(4000);
+
+	aliveTimer = new QTimer(this);
+	connect(aliveTimer, SIGNAL(timeout()), this, SLOT(checkAlive()));
+	aliveTimer->start(25000);
+
+    StartThread();
+	enumerate();
+	pNdnMediaPro->startThread();
+
+}
+
+int GroupManager::addRemoteUser(QString qPrefix, QString username) {
+
+	if( remoteUserExist(qPrefix, username))  // already add remoteUser
+        return 0;
+	
+    QString temp =qPrefix + "/" + username;
+    pNdnMediaPro->addRemoteUser(temp);
+
+    debug(QString("addRemoteUser(%1, %2)").arg(qPrefix).arg(username));
+    RemoteUser *u = new RemoteUser(qPrefix, username);
+    u->uiSession = qqRSesIds.dequeue();
+    u->cChannel = localUser->cChannel;
+
+	ruMutex.lock();
+    qhRemoteUsers.insert(username, u);
+	ruMutex.unlock();
+    
+    // fire a signal to notify other modules that a new user joins the call
+    emit remoteUserJoin(u);
+    return 0;
+}
+
+// set timestamp of the existed remote user record in this call
+bool GroupManager::remoteUserExist(QString qPrefix, QString remoteUser) {
+
+	ruMutex.lock();
+	bool bExist = true;
+	QHash<QString, RemoteUser *>::const_iterator it = qhRemoteUsers.find(remoteUser);
+	
+	if (it == qhRemoteUsers.constEnd()) {
+		bExist = false;
+	}
+	else {
+		debug("refresh received from " + remoteUser);
+		RemoteUser *u = it.value();
+		if (qPrefix != u->getPrefix())
+			bExist = false;
+		else
+			u->refreshReceived();
+	}
+	ruMutex.unlock();
+    return bExist;
+}
+
+void GroupManager::deleteRemoteUser(QString remoteUser) {
+    debug(QString("deleteRemoteUser(%1)").arg(remoteUser));
+    RemoteUser *u = NULL;
+	ruMutex.lock();
+    u = qhRemoteUsers[remoteUser];
+    if (u == NULL) {
+        return; 
+    }
+    qhRemoteUsers.remove(remoteUser);
+	ruMutex.unlock();
+
+    QString temp = QString(u->getPrefix()) + "/" + u->qsName;
+    pNdnMediaPro->deleteRemoteUser(temp);
+
+    qqRSesIds.enqueue(u->uiSession);
+    emit remoteUserLeave(u->uiSession);
+    delete u;
+}
+
+void GroupManager::userLeft(RemoteUser *ru) {
+	QString temp = QString(ru->getPrefix()) + "/" + ru->qsName;
+	pNdnMediaPro->deleteRemoteUser(temp);
+	qqRSesIds.enqueue(ru->uiSession);
+	emit remoteUserLeave(ru->uiSession);
+	debug("check alive: remote user left:" + temp);
+}
+
+void GroupManager::checkAlive() {
+	ruMutex.lock();
+	QHash<QString, RemoteUser *>::iterator i = qhRemoteUsers.begin();
+	debug("check alive timer triggered");
+	while (i != qhRemoteUsers.end()) {
+		RemoteUser * ru = i.value();
+		if (ru->isStaled()) {
+			if (!ru->hasLeft()) {
+				ruMutex.unlock();
+				userLeft(ru);
+				ruMutex.lock();
+			}
+			delete ru;
+			i = qhRemoteUsers.erase(i); 
+			debug("check alive: remote user staled:");
+
+		} else {
+			debug("check alive: nothing yet");
+			i++;
+		}
+
+	}
+	ruMutex.unlock();
+}
+
+
+static inline void xmlEncoding(QString &qsData, const QString username, const QString qPrefix) {
+    qsData.append("<user>");
+    qsData.append("<username>");
+    qsData.append(username);
+    qsData.append("</username>");
+    qsData.append("<prefix>");
+    qsData.append(qPrefix);
+    qsData.append("</prefix>");
+    qsData.append("</user>");
+}
+
+int GroupManager::userListtoXml(const char **data) {
+    QString qsData;
+	xmlEncoding(qsData, userName, prefix);
+    QByteArray qba = qsData.toLocal8Bit();
+    char *buffer = static_cast<char *>(calloc(qba.size() + 1, sizeof(char)));
+    memcpy(buffer, qba.constData(), qba.size());
+    buffer[qba.size()] = '\0';
+	if (isPrivate) {
+		unsigned char *enc_data = NULL;
+		size_t enc_len = 0;
+		int res = symEncrypt(conferenceKey, NULL, (const unsigned char *) buffer, strlen(buffer), &enc_data, &enc_len, AES_BLOCK_SIZE);
+		if (res != 0)
+			critical("can not encrypt speaker info");
+		
+		free(buffer);
+		buffer = NULL;
+
+		*data = (const char *)enc_data;
+		return enc_len;
+
+	} else {
+		*data = buffer;
+		return strlen(buffer);
+	}
+}
+
+int GroupManager::parseXmlUserList(const unsigned char *incoming_data, size_t len) {
+	unsigned char *list = NULL;
+	size_t ulen = 0;
+	if (isPrivate) {
+		int res = symDecrypt(conferenceKey, NULL, incoming_data, len, &list, &ulen, AES_BLOCK_SIZE);
+		if (res != 0 )
+			critical("can not decryption speaker info");
+	}else {
+		list = (unsigned char *) incoming_data;
+	}
+
+    QByteArray buffer((const char *)(list));
+    QDomDocument doc;
+    if (!doc.setContent(buffer)) {
+        debug("Cannot convert data to xml\n");
+        return -1;
+    }
+   
+    QString username, qPrefix;
+    QDomElement docElem = doc.documentElement();  // <user> 
+    QDomNode node = docElem.firstChild();  // <username>
+    while (!node.isNull()) {
+        if (node.nodeName() == "username") {
+			username = node.toElement().text();
+		} else
+        if (node.nodeName() == "prefix") {
+			qPrefix = node.toElement().text();
+		} else {
+			critical("Unknown xml attribute");
+		}
+
+        node = node.nextSibling();
+    }
+
+	if (username == "" || prefix == "")
+		return -1;
+	
+	if (isPrivate && list != NULL) {
+		free(list);
+		list = NULL;
+	}
+
+	addRemoteUser(qPrefix, username);
+    return 0;
+}
+
+
+void GroupManager::ndnContext() { 
+    ccn_init();
+    ccn_open();
+    assert(ccn);
+}
+
+int GroupManager::ccn_init() {
+    ccn = NULL;
+    ccn = ccn_create();
+    if (ccn == NULL || ccn_connect(ccn, NULL) == -1) {
+        DPRINT("Failed to initialize ccn agent connection");
+        return -1;
+    }
+    req_closure = NULL;
+    join_closure = NULL;
+    cached_keystore = NULL;
+	init_cached_keystore();
+	leave_closure = NULL;
+
+	leave_closure = (struct ccn_closure *)calloc(1, sizeof(struct ccn_closure));
+	leave_closure->p = &handle_leave;
+
+	join_closure = (struct ccn_closure *)calloc(1, sizeof(struct ccn_closure));
+	join_closure->p = &incoming_content;
+
+	req_closure = (struct ccn_closure *)calloc(1, sizeof(struct ccn_closure));
+	req_closure->p = &incoming_interest;
+
+    return 0;
+}    
+
+int GroupManager::ccn_free() {
+
+    if (ccn != NULL) {
+        ccn_disconnect(ccn);
+        ccn_destroy(&ccn);
+    }
+    if (cached_keystore != NULL) ccn_keystore_destroy(&cached_keystore);
+    if (join_closure != NULL) {
+        free(join_closure);
+        join_closure = NULL;
+    }
+    if (req_closure != NULL) {
+        free(req_closure);
+        req_closure = NULL;
+    }
+	if (leave_closure != NULL) {
+		free(leave_closure);
+		leave_closure = NULL;
+	}
+    return 0;
+}
+
+int GroupManager::ccn_open() {
+    ccn_charbuf *interest_filter_path;
+    interest_filter_path = ccn_charbuf_create();
+    if (interest_filter_path == NULL ) {
+        DPRINT("Failed to allocate or initialize interest filter path");
+        return -1;
+    }
+	ccn_name_from_uri(interest_filter_path, (const char *) BROADCAST_PREFIX);
+	ccn_name_append_str(interest_filter_path, confName.toLocal8Bit().constData());
+	ccn_name_append_str(interest_filter_path, "speaker-list");
+    ccn_set_interest_filter(ccn, interest_filter_path, req_closure);
+    ccn_charbuf_destroy(&interest_filter_path);
+
+	ccn_charbuf *leave_filter = ccn_charbuf_create();
+	ccn_name_from_uri(leave_filter, (const char *) BROADCAST_PREFIX);
+	ccn_name_append_str(leave_filter, confName.toLocal8Bit().constData());
+	ccn_name_append_str(leave_filter, "leave");
+    ccn_set_interest_filter(ccn, leave_filter, leave_closure);
+    ccn_charbuf_destroy(&leave_filter);
+    return 0;
+}
+
+void GroupManager::enumerate() {
+    ccn_charbuf *interest_path = NULL;
+    ccn_charbuf *templ = NULL;
+    interest_path = ccn_charbuf_create();
+    if (interest_path == NULL ) {
+        return;
+    }
+	ccn_name_from_uri(interest_path, BROADCAST_PREFIX);
+    ccn_name_append_str(interest_path, confName.toLocal8Bit().constData());
+	ccn_name_append_str(interest_path, "speaker-list");
+
+    struct ccn_bloom *exclusive_filter = ccn_bloom_create(ESTUSERS, SEED);
+    if (exclusive_filter == NULL) {
+        DPRINT("Failed to initialize ccn bloom filter");
+    }
+	
+    unsigned char *bloom = exclusive_filter->wire->bloom;
+    memset(bloom, 0, 1024);
+
+	// TODO: get rid of the bloom filter
+    // update exclusive filter according to recently known remote users
+	ruMutex.lock();
+    QHash<QString, RemoteUser *>::const_iterator it = (pGroupManager->qhRemoteUsers).constBegin();
+    while (it != (pGroupManager->qhRemoteUsers).constEnd())
+    {
+		RemoteUser *ru = it.value();
+		if (!ru->needRefresh()) {
+			QByteArray qba = it.key().toLocal8Bit();
+			ccn_bloom_insert(exclusive_filter, qba.constData(), qba.size());
+		}
+		++it;
+    }
+	ruMutex.unlock();
+
+	// exclude self
+	if (pGroupManager->userName.isEmpty())
+		pGroupManager->userName = "murmur-debug-test";
+
+	QByteArray qba = pGroupManager->userName.toLocal8Bit();
+	ccn_bloom_insert(exclusive_filter, qba.constData(), qba.size());
+	//fprintf(stderr, "user name is %s\n", pGroupManager->userName.toLocal8Bit().constData());
+
+
+    templ = make_interest_template(exclusive_filter);
+	QByteArray x((char *)templ->buf, (int)templ->length);
+	QString y = QString(x.toBase64());
+	//fprintf(stderr, "templ is %s\n", y.toStdString().c_str());
+
+    ccn_express_interest(ccn, interest_path, join_closure, templ);
+    ccn_charbuf_destroy(&templ);
+    ccn_charbuf_destroy(&interest_path);
+    if (exclusive_filter != NULL) ccn_bloom_destroy(&exclusive_filter);
+}
+
+/* send optional leave notification before actually leaves
+ */
+void GroupManager::sendLeaveInterest() {
+	ccn_charbuf *interest_path = ccn_charbuf_create();
+	if (interest_path == NULL ) {
+		return;
+	}
+	ccn_name_from_uri(interest_path, (const char*)BROADCAST_PREFIX);
+	ccn_name_append_str(interest_path, confName.toLocal8Bit().constData());
+	ccn_name_append_str(interest_path, "leave");
+	ccn_name_append_str(interest_path, userName.toLocal8Bit().constData());
+	static ccn_charbuf *templ = NULL;
+    ccn_express_interest(ccn, interest_path, leave_closure, NULL);
+    ccn_charbuf_destroy(&interest_path);
+	templ = NULL;
+}
+
+void GroupManager::handleLeave(ccn_upcall_info *info) {
+	debug("leave interest received");
+	// /ndn/broadcast/conference/conference-name/leave/username
+	 char *leaver = NULL;
+	 leaver = ccn_name_comp_to_str(info->interest_ccnb, info->interest_comps, 5);
+	 // get leaver
+	 QString user = leaver;
+	 //pGroupManager->deleteRemoteUser(user);
+	 ruMutex.lock();
+	 RemoteUser *rmUser = qhRemoteUsers[user];
+	 if (rmUser == NULL)
+		 return;
+	 rmUser->setLeft();
+	 ruMutex.unlock();
+	 userLeft(rmUser);
+	 debug(QString("remote user %1 left\n").arg(user));
+	 if (leaver != NULL) {
+		 free((void *)leaver);
+		 leaver = NULL;
+	 }
+}
+
+void GroupManager::incomingInterest(ccn_upcall_info *info) {
+    int res;
+
+    const char *data = NULL;
+    const unsigned char *requester = NULL;
+    const unsigned char *refresher = NULL;
+    const unsigned char *filter = NULL;
+    size_t filter_len = 0;
+
+    ccn_charbuf *signed_info = NULL;
+    ccn_charbuf *name = NULL;
+    ccn_charbuf *content = NULL;
+
+    RemoteUser *refreshUser = NULL;
+
+    // requesterPrefix starts from index 4 to (info->interest_comps->n - 2)
+    int nameEnd = 0;
+	nameEnd = (info->interest_comps)->n - 2;
+
+	/* construct reply data
+	 * name format:
+	 *   /ndn/broadcast/conference/conference-name/speaker-list/username
+	 */
+	signed_info = ccn_charbuf_create();
+	struct ccn_charbuf *keylocator = ccn_charbuf_create();
+	ccn_create_keylocator(keylocator, ccn_keystore_public_key(cached_keystore));
+	res = ccn_signed_info_create(signed_info,
+			/*pubkeyid*/ get_my_publisher_key_id(),
+			/*publisher_key_id_size*/ get_my_publisher_key_id_length(),
+			/*datetime*/ NULL,
+			/*type*/ CCN_CONTENT_DATA,
+			///*freshness*/ -1,
+			/*freshness*/ FRESHNESS,
+			/*finalblockid*/ NULL,
+			/*keylocator*/ keylocator);
+	if (res < 0) {
+		DPRINT("FAILED TO CREATE signed_info (res == %d)", res);
+	}
+
+	name = ccn_charbuf_create();
+	content = ccn_charbuf_create();
+	ccn_name_init(name);
+	ccn_name_append_components(name, info->interest_ccnb,
+			info->interest_comps->buf[0], info->interest_comps->buf[nameEnd + 1]);
+	// append own  username
+	ccn_name_append_str(name, userName.toLocal8Bit().constData());
+	// get user list, the caller need to free the data buffer allocated 
+	int dlen = userListtoXml(&data);
+	ccn_encode_ContentObject(content, name, signed_info,
+			data, dlen, 
+			NULL, get_my_private_key());
+	ccn_put(info->h, content->buf, content->length);
+	ccn_charbuf_destroy(&signed_info);
+	ccn_charbuf_destroy(&name);
+	ccn_charbuf_destroy(&content);
+	if (data != NULL) {
+		free((void *)data);
+		data = NULL;
+	}
+}
+
+void GroupManager::incomingContent(ccn_upcall_info *info) {
+    size_t len = 0;
+    unsigned char *valuep = NULL;
+    ccn_content_get_value(info->content_ccnb, info->pco->offset[CCN_PCO_E],
+                          info->pco,
+                          (const unsigned char **)&valuep, &len);
+
+    if (-1 == parseXmlUserList(valuep, len)) {
+        debug("Invalid user list format received"); 
+    }
+	
+	// TODO: weird bug, can not free valuep
+	if (valuep != NULL) {
+	//	free(valuep);
+		valuep = NULL;
+	}
+
+	enumerate();
+}
+
+static enum ccn_upcall_res handle_leave(ccn_closure *selfp,
+										ccn_upcall_kind kind,
+										ccn_upcall_info *info) {
+	switch(kind) {
+    case CCN_UPCALL_FINAL:
+        return (CCN_UPCALL_RESULT_OK);
+
+    case CCN_UPCALL_INTEREST_TIMED_OUT:
+
+        return (CCN_UPCALL_RESULT_OK);
+
+    case CCN_UPCALL_INTEREST: {
+		pGroupManager->handleLeave(info);
+		return (CCN_UPCALL_RESULT_OK);
+	}
+
+	default:
+		return (CCN_UPCALL_RESULT_OK);
+			
+	}
+}
+
+static enum ccn_upcall_res incoming_interest(ccn_closure *selfp,
+                                ccn_upcall_kind kind,
+                                ccn_upcall_info *info)
+{
+    assert(pGroupManager);
+    switch (kind) {
+    case CCN_UPCALL_FINAL:
+        return (CCN_UPCALL_RESULT_OK);
+
+    case CCN_UPCALL_INTEREST_TIMED_OUT:
+
+        return (CCN_UPCALL_RESULT_OK);
+
+    case CCN_UPCALL_INTEREST: {
+		pGroupManager->incomingInterest(info);
+        return (CCN_UPCALL_RESULT_OK);
+	}
+
+    default:
+        return (CCN_UPCALL_RESULT_OK);
+    }
+}
+
+
+static enum ccn_upcall_res incoming_content(ccn_closure *selfp,
+                                  ccn_upcall_kind kind,
+                                  ccn_upcall_info *info)
+{
+    assert(pGroupManager);
+
+    switch (kind) {
+    case CCN_UPCALL_FINAL:
+    case CCN_UPCALL_INTEREST_TIMED_OUT:
+    case CCN_UPCALL_CONTENT_UNVERIFIED:
+        return (CCN_UPCALL_RESULT_OK);
+
+    case CCN_UPCALL_CONTENT:
+        /* Incoming content responses to previously expressed interests */ 
+        break;
+    default:
+        return (CCN_UPCALL_RESULT_ERR);
+    }
+
+	pGroupManager->incomingContent(info);
+    return (CCN_UPCALL_RESULT_OK);   
+}
+
+static ccn_charbuf *make_interest_template(struct ccn_bloom *exclusive_filter) {
+
+    ccn_charbuf *templ = ccn_charbuf_create();
+
+    ccn_charbuf_append_tt(templ, CCN_DTAG_Interest, CCN_DTAG);
+    ccn_charbuf_append_tt(templ, CCN_DTAG_Name, CCN_DTAG);
+    ccn_charbuf_append_closer(templ); /* </Name> */
+	append_bloom_filter(templ, exclusive_filter);
+    ccn_charbuf_append_closer(templ); /* </Interest> */
+    return (templ);
+}
+
+
+static const ccn_pkey *get_my_private_key() {
+    if (cached_keystore == NULL) init_cached_keystore();
+    return (ccn_keystore_private_key(cached_keystore));
+}
+
+static const ccn_pkey *get_my_public_key() {
+    if (cached_keystore == NULL) init_cached_keystore();
+    return (ccn_keystore_public_key(cached_keystore));
+}
+
+static const unsigned char *get_my_publisher_key_id() {
+    if (cached_keystore == NULL) init_cached_keystore();
+    return (ccn_keystore_public_key_digest(cached_keystore));
+}
+
+static ssize_t get_my_publisher_key_id_length() {
+    if (cached_keystore == NULL) init_cached_keystore();
+    return (ccn_keystore_public_key_digest_length(cached_keystore));
+}
+
+static int
+ccn_create_keylocator(ccn_charbuf *c, const ccn_pkey *k)
+{
+    int res;
+    ccn_charbuf_append_tt(c, CCN_DTAG_KeyLocator, CCN_DTAG);
+    ccn_charbuf_append_tt(c, CCN_DTAG_Key, CCN_DTAG);
+    res = ccn_append_pubkey_blob(c, k);
+    if (res < 0)
+        return (res);
+    else {
+        ccn_charbuf_append_closer(c); /* </Key> */
+        ccn_charbuf_append_closer(c); /* </KeyLocator> */
+    }
+    return (0);
+}
+
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/murmur/GroupManager/aes_util.h
@@ -0,0 +1,29 @@
+#ifndef AES_UTIL_H
+#define AES_UTIL_H
+#ifdef __cplusplus
+extern "C" {
+#endif
+#include <openssl/evp.h>
+#include <openssl/rand.h>
+#include <openssl/x509.h>
+#include <openssl/aes.h>
+#include <openssl/hmac.h>
+#include <openssl/pem.h>
+#include <ccn/ccn.h>
+#include <ccn/bloom.h>
+#include <ccn/charbuf.h>
+#include <ccn/keystore.h>
+#include <ccn/signing.h>
+#include <ccn/uri.h>
+#include <errno.h>
+#ifdef __cplusplus
+}
+#endif
+int symDecrypt(const unsigned char *key, const unsigned char *iv, const unsigned char *ciphertext, 
+						   size_t ciphertext_length, unsigned char **plaintext, size_t *plaintext_length, 
+						   size_t plaintext_padding);
+
+int symEncrypt(const unsigned char *key, const unsigned char *iv, const unsigned char *plaintext, 
+						   size_t plaintext_length, unsigned char **ciphertext, size_t *ciphertext_length,
+						   size_t padding); 
+#endif
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/murmur/GroupManager/RemoteUser.cpp
@@ -0,0 +1,64 @@
+/* Copyright (C) 2010-present, Zhenkai Zhu <zhenkai@cs.ucla.edu>
+
+   All rights reserved.
+
+   Redistribution and use in source and binary forms, with or without
+   modification, are permitted provided that the following conditions
+   are met:
+
+   - Redistributions of source code must retain the above copyright notice,
+     this list of conditions and the following disclaimer.
+   - Redistributions in binary form must reproduce the above copyright notice,
+     this list of conditions and the following disclaimer in the documentation
+     and/or other materials provided with the distribution.
+   - Neither the name of the Mumble Developers nor the names of its
+     contributors may be used to endorse or promote products derived from this
+     software without specific prior written permission.
+
+   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
+   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+*/
+#include "murmur_pch.h"
+#include "RemoteUser.h"
+#define REFRESH_INTERVAL 15
+#define REMOVE_INTERVAL 50
+
+RemoteUser::RemoteUser(QString prefix, QString name) : remoteUserPrefix(prefix) {
+    qsName = name;
+    timestamp = QDateTime::currentDateTime();
+	left = false;
+}
+
+
+void RemoteUser::refreshReceived() {
+    timestamp = QDateTime::currentDateTime();
+}
+
+bool RemoteUser::needRefresh() {
+	QDateTime now = QDateTime::currentDateTime();
+	if (timestamp.secsTo(now) > REFRESH_INTERVAL) {
+		return true;
+	}
+	return false;
+}
+
+bool RemoteUser::isStaled() {
+	if (left)
+		return true;
+
+	QDateTime now = QDateTime::currentDateTime();
+	if (timestamp.secsTo(now) > REMOVE_INTERVAL) {
+		return true;
+	}
+	return false;
+}
+
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/src/murmur/GroupManager/debugbox.h
@@ -0,0 +1,7 @@
+#ifndef DEBUGBOX_H
+#define DEBUGBOX_H
+#include <QString>
+#include <QDebug>
+void debug(QString msg);
+void critical(QString msg);
+#endif
--- mumble-1.2.3-87-gf7d8711.orig/speexbuild/speexbuild.pro
+++ mumble-1.2.3-87-gf7d8711/speexbuild/speexbuild.pro
@@ -48,9 +48,9 @@ win32 {
   !CONFIG(intelcpp) {
     DEFINES+=USE_SMALLFT
   } else {
-    LIBS	*= -l"\\Program Files (x86)\\Intel/Compiler\\11.1\\054\\ipp\\ia32\\lib\\ippsemerged"
-    LIBS	*= -l"\\Program Files (x86)\\Intel/Compiler\\11.1\\054\\ipp\\ia32\\lib\\ippsmerged"
-    LIBS	*= -l"\\Program Files (x86)\\Intel/Compiler\\11.1\\054\\ipp\\ia32\\lib\\ippcorel"
+    LIBS	*= -l"\Program Files (x86)\Intel/Compiler\11.1\054\ipp\ia32\lib\ippsemerged"
+    LIBS	*= -l"\Program Files (x86)\Intel/Compiler\11.1\054\ipp\ia32\lib\ippsmerged"
+    LIBS	*= -l"\Program Files (x86)\Intel/Compiler\11.1\054\ipp\ia32\lib\ippcorel"
   }
 } else {
   CONFIG += staticlib
--- mumble-1.2.3-87-gf7d8711.orig/speexbuild/mumble_speex_init.c
+++ mumble-1.2.3-87-gf7d8711/speexbuild/mumble_speex_init.c
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/overlay_gl/overlay_gl.pro
+++ mumble-1.2.3-87-gf7d8711/overlay_gl/overlay_gl.pro
@@ -5,7 +5,7 @@ TEMPLATE = lib
 CONFIG -= qt
 CONFIG *= debug_and_release
 TARGET = mumble$(TARGET_ADD)
-VERSION = 1.2.4
+VERSION = 1.2.3
 SOURCES = overlay.c
 LIBS *= -lrt -ldl
 QMAKE_CFLAGS *= -fvisibility=hidden $(CFLAGS_ADD)
--- mumble-1.2.3-87-gf7d8711.orig/overlay_gl/overlay.c
+++ mumble-1.2.3-87-gf7d8711/overlay_gl/overlay.c
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/plugins.pro
+++ mumble-1.2.3-87-gf7d8711/plugins/plugins.pro
@@ -5,5 +5,5 @@ SUBDIRS = link manual
 DIST = plugins.pri
 
 win32 {
-	SUBDIRS += aoc arma2 bf1942 bf2 bf2142 bfbc2 bfheroes borderlands breach cod2 cod4 cod5 codmw2 codmw2so cs css dods dys etqw tf2 gmod gtaiv hl2dm insurgency l4d l4d2 lotro sto ut2004 ut3 wolfet wow
+	SUBDIRS += aoc arma2 bf1942 bf2 bf2142 bfbc2 bfheroes borderlands cod2 cod4 cod5 codmw2 codmw2so cs css dods dys etqw tf2 gmod hl2dm insurgency l4d l4d2 lotro sto ut2004 ut3 wolfet wow
 }
--- mumble-1.2.3-87-gf7d8711.orig/plugins/mumble_plugin.h
+++ mumble-1.2.3-87-gf7d8711/plugins/mumble_plugin.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/borderlands/borderlands.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/borderlands/borderlands.cpp
@@ -1,5 +1,5 @@
 /* Copyright (C) 2010, Mark-Willem Jansen <rawnar@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/insurgency/insurgency.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/insurgency/insurgency.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/dods/dods.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/dods/dods.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/l4d/l4d.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/l4d/l4d.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -71,8 +71,8 @@ static int trylock(const std::multimap<s
 	if (! initialize(pids, L"left4dead.exe", L"client.dll"))
 		return false;
 
-	posptr = pModule + 0x596E30;
-	rotptr = pModule + 0x596E3C;
+	posptr = pModule + 0x6F8340;
+	rotptr = pModule + 0x640A08;
 
 	float pos[3];
 	float rot[3];
@@ -119,10 +119,10 @@ static int fetch(float *avatar_pos, floa
 }
 
 static const std::wstring longdesc() {
-	return std::wstring(L"Supports L4D version 4440 only. Supports no fancy stuff.");
+	return std::wstring(L"Supports L4D version 4448 only. Supports no fancy stuff.");
 }
 
-static std::wstring description(L"Left 4 Dead (Build 4440)");
+static std::wstring description(L"Left 4 Dead (Build 4448)");
 static std::wstring shortname(L"Left 4 Dead");
 
 static int trylock1() {
--- mumble-1.2.3-87-gf7d8711.orig/plugins/aoc/aoc.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/aoc/aoc.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/etqw/etqw.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/etqw/etqw.cpp
@@ -1,6 +1,6 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2009-2011, Stefan Hacker <dD0t@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2009-2010, Stefan Hacker <dD0t@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/tf2/tf2.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/tf2/tf2.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -31,20 +31,13 @@
 
 #include "../mumble_plugin_win32.h"
 
-BYTE *posrotptr;
+using namespace std;
+
+BYTE *posptr;
+BYTE *rotptr;
 BYTE *stateptr;
 BYTE *hostptr;
 
-/*
-	note that these are just examples of memory values, and may not be updated or correct
-	position tuple:		client.dll+0x6F76C0  (x,y,z, float)
-	orientation tuple:	client.dll+0x6F76CC  (v,h float)
-	spawn state:        client.dll+0x607C64  (0 when at main menu, 1 when spectator, 3 when at team selection menu, and 6 or 9 when on a team (depending on the team side and gamemode), byte)
-	host string: 		engine.dll+0x3D3E94  (ip:port zero-terminated string; localhost:27015 if create a server ingame)
-	ID string:			engine.dll+0x54E668 = "DemomanTaunts" (13 characters, text)
-	note that memory addresses in this comment are for example only; the real ones are defined below
-*/
-
 static bool calcout(float *pos, float *rot, float *opos, float *front, float *top) {
 	float h = rot[0];
 	float v = rot[1];
@@ -60,55 +53,62 @@ static bool calcout(float *pos, float *r
 	opos[1] = pos[2] / 39.37f;
 	opos[2] = pos[1] / 39.37f;
 
-	// h rotation angle up-down, positive in down direction starting from x-axis
-	// v rotation angle left-right, positive to the left starting from x-axis
-	front[0] = cosf(h) * cosf(v);
-	front[1] = -sinf(h);
-	front[2] = cosf(h) * sinf(v);
-	// sin(h - 1/2pi) = -cos(h) and cos(h - 1/2pi) = sin(h)
-	top[0] = sinf(h) * cosf(v);
-	top[1] = cosf(h);
-	top[2] = sinf(h) * sinf(v);
+	front[0] = cos(v) * cos(h);
+	front[1] = -sin(h);
+	front[2] = sin(v) * cos(h);
+
+	h -= static_cast<float>(M_PI / 2.0f);
+
+	top[0] = cos(v) * cos(h);
+	top[1] = -sin(h);
+	top[2] = sin(v) * cos(h);
 
 	return true;
 }
 
-static int fetch(float *avatar_pos, float *avatar_front, float *avatar_top, float *camera_pos, float *camera_front, float *camera_top, std::string &context, std::wstring &) {
+static int fetch(float *avatar_pos, float *avatar_front, float *avatar_top, float *camera_pos, float *camera_front, float *camera_top, string &context, wstring &) {
 	for (int i=0;i<3;i++)
 		avatar_pos[i] = avatar_front[i] = avatar_top[i] = camera_pos[i] = camera_front[i] = camera_top[i] = 0.0f;
 
+	float ipos[3], rot[3];
 	bool ok;
-	float posrot[5];
 	char state;
 	char chHostStr[40];
-
-	ok = peekProc(posrotptr, posrot) &&
-	     peekProc(stateptr, state) &&
-	     peekProc(hostptr, chHostStr);
+	string sHost;
+	wostringstream new_identity;
+	ostringstream new_context;
+
+	ok = peekProc(posptr, ipos, 12) &&
+	     peekProc(rotptr, rot, 12) &&
+	     peekProc(stateptr, &state, 1) &&
+	     peekProc(hostptr, chHostStr, 40);
 
 	if (!ok)
 		return false;
 
 	chHostStr[39] = 0;
 
-	std::string sHost;
 	sHost.assign(chHostStr);
-	if (!sHost.empty()) {
-		if (sHost.find(':') == std::string::npos)
-			sHost.append(":27015");
-
-		std::ostringstream new_context;
-		new_context << "{ \"ipport\": \"" << sHost << "\"}";
-		context = new_context.str();
-	}
+	if (sHost.find(':')==string::npos)
+		sHost.append(":27015");
 
-	//TODO: Implement identity
+	new_context << "<context>"
+	<< "<game>tf2</game>"
+	<< "<hostport>" << sHost << "</hostport>"
+	<< "</context>";
+	context = new_context.str();
+
+	/* TODO
+	new_identity << "<identity>"
+			<< "<name>" << "SAS" << "</name>"
+		     << "</identity>";
+	identity = new_identity.str(); */
 
 	// Check to see if you are in a server and spawned
 	if (state == 0 || state == 1 || state == 3)
 		return true; // Deactivate plugin
 
-	ok = calcout(posrot, posrot+3, avatar_pos, avatar_front, avatar_top);
+	ok = calcout(ipos, rot, avatar_pos, avatar_front, avatar_top);
 	if (ok) {
 		for (int i=0;i<3;++i) {
 			camera_pos[i] = avatar_pos[i];
@@ -122,7 +122,7 @@ static int fetch(float *avatar_pos, floa
 }
 
 static int trylock(const std::multimap<std::wstring, unsigned long long int> &pids) {
-	posrotptr = NULL;
+	posptr = rotptr = NULL;
 
 	if (! initialize(pids, L"hl2.exe", L"client.dll"))
 		return false;
@@ -131,21 +131,40 @@ static int trylock(const std::multimap<s
 	if (!mod_engine)
 		return false;
 
+	// Check if we really have TF2 running
+	/*
+		note that these are just examples of memory values, and may not be updated or correct
+		position tuple:		client.dll+0x5753d8  (x,y,z, float)
+		orientation tuple:	client.dll+0x4b691c  (v,h float)
+		ID string:			client.dll+0x4eb30b = "teamJet@@" (9 characters, text)
+		spawn state:        client.dll+0x4EABCC; (0 when at main menu, 1 when spectator, 3 when at team selection menu, and 6 or 9 when on a team (depending on the team side and gamemode), byte)
+		host string: 		engine.dll+0x3c8124  (ip:port zero-terminated string; localhost:27015 if create a server ingame)
+			note that memory addresses in this comment are for example only; the real ones are defined below
+	*/
+
 	// Remember addresses for later
-	posrotptr = pModule + 0x6F76C0;
-	stateptr = pModule + 0x607C64;
+	posptr = pModule + 0x6EFCC0;
+	rotptr = pModule + 0x6F6544;
+	stateptr = pModule + 0x606C64;
 	hostptr = mod_engine + 0x3D3E94;
 
+	/*
+	// Gamecheck
+	char sMagic[9];
+	if (!peekProc(pModule + 0x617DE3, sMagic, 9) || strncmp("teamJet@@", sMagic, 9)!=0)
+		return false;
+	*/
+
 	// Gamecheck
 	char sMagic[13];
-	if (!peekProc(mod_engine + 0x54E668, sMagic) || strncmp("DemomanTaunts", sMagic, sizeof(sMagic))!=0)
+	if (!peekProc(mod_engine + 0x54A670, sMagic, 13) || strncmp("DemomanTaunts", sMagic, 13)!=0)
 		return false;
 
 	// Check if we can get meaningful data from it
 	float apos[3], afront[3], atop[3];
 	float cpos[3], cfront[3], ctop[3];
-	std::wstring sidentity;
-	std::string scontext;
+	wstring sidentity;
+	string scontext;
 
 	if (fetch(apos, afront, atop, cpos, cfront, ctop, scontext, sidentity)) {
 		return true;
@@ -156,10 +175,10 @@ static int trylock(const std::multimap<s
 }
 
 static const std::wstring longdesc() {
-	return std::wstring(L"Supports TF2 build 4426. No identity support yet.");
+	return std::wstring(L"Supports TF2 build 4421. No identity support yet.");
 }
 
-static std::wstring description(L"Team Fortress 2 (Build 4426)");
+static std::wstring description(L"Team Fortress 2 (Build 4421)");
 static std::wstring shortname(L"Team Fortress 2");
 
 static int trylock1() {
--- mumble-1.2.3-87-gf7d8711.orig/plugins/hl2dm/hl2dm.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/hl2dm/hl2dm.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/codmw2so/codmw2so.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/codmw2so/codmw2so.cpp
@@ -1,6 +1,6 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2009-2011, Stefan Hacker <dD0t@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2009-2010, Stefan Hacker <dD0t@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/css/css.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/css/css.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/arma2/arma2.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/arma2/arma2.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/cs/cs.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/cs/cs.cpp
@@ -1,6 +1,6 @@
 /* Copyright (C) 2009-2010, Imre Botos <zokny@users.sourceforge.net>
-   Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/link/link-posix.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/link/link-posix.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/link/link.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/link/link.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/gmod/gmod.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/gmod/gmod.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/manual/manual.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/manual/manual.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2009-2011, Stefan Hacker <dD0t@users.sourceforge.net>
+/* Copyright (C) 2009-2010, Stefan Hacker <dD0t@users.sourceforge.net>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/bf2142/bf2142.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/bf2142/bf2142.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/ut2004/ut2004.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/ut2004/ut2004.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/l4d2/l4d2.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/l4d2/l4d2.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -72,8 +72,8 @@ static int trylock(const std::multimap<s
 	if (! initialize(pids, L"left4dead2.exe", L"client.dll"))
 		return false;
 
-	posptr = pModule + 0x6F9250;
-	rotptr = pModule + 0x641A08;
+	posptr = pModule + 0x6F8340;
+	rotptr = pModule + 0x6AD900;
 	// stateptr = pModule + 0x690A3C;
 
 	float pos[3];
@@ -127,10 +127,10 @@ static int fetch(float *avatar_pos, floa
 }
 
 static const std::wstring longdesc() {
-	return std::wstring(L"Supports L4D2 build 4490. No identity or context support yet.");
+	return std::wstring(L"Supports L4D2 build 4391. No identity or context support yet.");
 }
 
-static std::wstring description(L"Left 4 Dead 2 (Build 4490)");
+static std::wstring description(L"Left 4 Dead 2 (Build 4391)");
 static std::wstring shortname(L"Left 4 Dead 2");
 
 static int trylock1() {
--- mumble-1.2.3-87-gf7d8711.orig/plugins/bf2/bf2.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/bf2/bf2.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/codmw2/codmw2.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/codmw2/codmw2.cpp
@@ -1,6 +1,6 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2009-2011, Stefan Hacker <dD0t@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2009-2010, Stefan Hacker <dD0t@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/cod2/cod2.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/cod2/cod2.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Stefan Hacker <dD0t@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Stefan Hacker <dD0t@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/dys/dys.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/dys/dys.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/ut3/ut3.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/ut3/ut3.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/wow/wow.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/wow/wow.cpp
@@ -1,5 +1,5 @@
 /* Copyright (C) 2009-2010, deKarl <dekarl@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/bfbc2/bfbc2.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/bfbc2/bfbc2.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2010-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/cod4/cod4.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/cod4/cod4.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Stefan Hacker <dD0t@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Stefan Hacker <dD0t@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/bfheroes/bfheroes.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/bfheroes/bfheroes.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/bf1942/bf1942.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/bf1942/bf1942.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Snares <snares@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Snares <snares@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/sto/sto.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/sto/sto.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/wolfet/wolfet.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/wolfet/wolfet.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Stefan Hacker <dD0t@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Stefan Hacker <dD0t@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/plugins/cod5/cod5.cpp
+++ mumble-1.2.3-87-gf7d8711/plugins/cod5/cod5.cpp
@@ -1,5 +1,5 @@
-/* Copyright (C) 2009-2011, Stefan Hacker <dD0t@users.sourceforge.net>
-   Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2009-2010, Stefan Hacker <dD0t@users.sourceforge.net>
+   Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/COPYING
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/COPYING
@@ -12,6 +12,10 @@ notice, this list of conditions and the
 notice, this list of conditions and the following disclaimer in the
 documentation and/or other materials provided with the distribution.
 
+- Neither the name of the Xiph.org Foundation nor the names of its
+contributors may be used to endorse or promote products derived from
+this software without specific prior written permission.
+
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/Doxyfile.devel
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/Doxyfile.devel
@@ -5,7 +5,7 @@
 #---------------------------------------------------------------------------
 DOXYFILE_ENCODING      = UTF-8
 PROJECT_NAME           = CELT
-PROJECT_NUMBER         = 0.11.1
+PROJECT_NUMBER         = 0.11.0
 OUTPUT_DIRECTORY       = doc/devel
 CREATE_SUBDIRS         = NO
 OUTPUT_LANGUAGE        = English
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/configure.ac
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/configure.ac
@@ -6,7 +6,7 @@ AM_CONFIG_HEADER([config.h])
 
 CELT_MAJOR_VERSION=0
 CELT_MINOR_VERSION=11
-CELT_MICRO_VERSION=1
+CELT_MICRO_VERSION=0
 CELT_EXTRA_VERSION=
 CELT_VERSION=$CELT_MAJOR_VERSION.$CELT_MINOR_VERSION.$CELT_MICRO_VERSION$CELT_EXTRA_VERSION
 LIBCELT_SUFFIX=0
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/Doxyfile
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/Doxyfile
@@ -5,7 +5,7 @@
 #---------------------------------------------------------------------------
 DOXYFILE_ENCODING      = UTF-8
 PROJECT_NAME           = CELT
-PROJECT_NUMBER         = 0.11.1
+PROJECT_NUMBER         = 0.11.0
 OUTPUT_DIRECTORY       = doc/API
 CREATE_SUBDIRS         = NO
 OUTPUT_LANGUAGE        = English
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/laplace.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/laplace.h
@@ -13,6 +13,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/cwrs.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/cwrs.h
@@ -14,6 +14,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/pitch.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/pitch.c
@@ -18,6 +18,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/bands.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/bands.h
@@ -14,6 +14,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/c64_fft.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/c64_fft.h
@@ -11,6 +11,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/mdct.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/mdct.c
@@ -13,6 +13,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/_kiss_fft_guts.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/_kiss_fft_guts.h
@@ -7,6 +7,7 @@ Redistribution and use in source and bin
 
     * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
     * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
+    * Neither the author nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission.
 
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/cwrs.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/cwrs.c
@@ -14,6 +14,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/celt.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/celt.c
@@ -14,6 +14,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -772,7 +776,7 @@ static void init_caps(const CELTMode *m,
 }
 
 static int alloc_trim_analysis(const CELTMode *m, const celt_norm *X,
-      const celt_word16 *bandLogE, int end, int LM, int C, int N0)
+      const celt_word16 *bandLogE, int nbEBands, int LM, int C, int N0)
 {
    int i;
    celt_word32 diff=0;
@@ -804,12 +808,12 @@ static int alloc_trim_analysis(const CEL
 
    /* Estimate spectral tilt */
    c=0; do {
-      for (i=0;i<end-1;i++)
+      for (i=0;i<nbEBands-1;i++)
       {
-         diff += bandLogE[i+c*m->nbEBands]*(celt_int32)(2+2*i-m->nbEBands);
+         diff += bandLogE[i+c*nbEBands]*(celt_int32)(2+2*i-nbEBands);
       }
    } while (++c<0);
-   diff /= C*(end-1);
+   diff /= C*(nbEBands-1);
    /*printf("%f\n", diff);*/
    if (diff > QCONST16(2.f, DB_SHIFT))
       trim_index--;
@@ -868,7 +872,7 @@ int celt_encode_with_ec_float(CELTEncode
 {
 #endif
    int i, c, N;
-   celt_int32 bits;
+   int bits;
    ec_enc _enc;
    VARDECL(celt_sig, in);
    VARDECL(celt_sig, freq);
@@ -917,11 +921,9 @@ int celt_encode_with_ec_float(CELTEncode
    int silence=0;
    SAVE_STACK;
 
-   if (nbCompressedBytes<2 || pcm==NULL)
+   if (nbCompressedBytes<2 || nbCompressedBytes>1275 || pcm==NULL)
      return CELT_BAD_ARG;
 
-   /* Can't produce more than 1275 output bytes */
-   nbCompressedBytes = IMIN(nbCompressedBytes,1275);
    frame_size *= st->upsample;
    for (LM=0;LM<=st->mode->maxLM;LM++)
       if (st->mode->shortMdctSize<<LM==frame_size)
@@ -1148,17 +1150,11 @@ int celt_encode_with_ec_float(CELTEncode
 #endif /* ENABLE_POSTFILTER */
 
       c=0; do {
-         int offset = st->mode->shortMdctSize-st->mode->overlap;
          st->prefilter_period=IMAX(st->prefilter_period, COMBFILTER_MINPERIOD);
          CELT_COPY(in+c*(N+st->overlap), st->in_mem+c*(st->overlap), st->overlap);
 #ifdef ENABLE_POSTFILTER
-         if (offset)
-            comb_filter(in+c*(N+st->overlap)+st->overlap, pre[c]+COMBFILTER_MAXPERIOD,
-                  st->prefilter_period, st->prefilter_period, offset, -st->prefilter_gain, -st->prefilter_gain,
-                  st->prefilter_tapset, st->prefilter_tapset, NULL, 0);
-
-         comb_filter(in+c*(N+st->overlap)+st->overlap+offset, pre[c]+COMBFILTER_MAXPERIOD+offset,
-               st->prefilter_period, pitch_index, N-offset, -st->prefilter_gain, -gain1,
+         comb_filter(in+c*(N+st->overlap)+st->overlap, pre[c]+COMBFILTER_MAXPERIOD,
+               st->prefilter_period, pitch_index, N, -st->prefilter_gain, -gain1,
                st->prefilter_tapset, prefilter_tapset, st->mode->window, st->mode->overlap);
 #endif /* ENABLE_POSTFILTER */
          CELT_COPY(st->in_mem+c*(st->overlap), in+c*(N+st->overlap)+N, st->overlap);
@@ -1276,7 +1272,7 @@ int celt_encode_with_ec_float(CELTEncode
          t1 = 2;
          t2 = 4;
       }
-      for (i=st->start+1;i<st->end-1;i++)
+      for (i=1;i<st->mode->nbEBands-1;i++)
       {
          celt_word32 d2;
          d2 = 2*bandLogE[i]-bandLogE[i-1]-bandLogE[i+1];
@@ -1327,7 +1323,7 @@ int celt_encode_with_ec_float(CELTEncode
    if (tell+(6<<BITRES) <= total_bits - total_boost)
    {
       alloc_trim = alloc_trim_analysis(st->mode, X, bandLogE,
-            st->end, LM, C, N);
+            st->mode->nbEBands, LM, C, N);
       ec_enc_icdf(enc, alloc_trim, trim_icdf, 7);
       tell = ec_tell_frac(enc);
    }
@@ -1441,8 +1437,8 @@ int celt_encode_with_ec_float(CELTEncode
    ALLOC(pulses, st->mode->nbEBands, int);
    ALLOC(fine_priority, st->mode->nbEBands, int);
 
-   /* bits =           packet size                    - where we are - safety*/
-   bits = ((celt_int32)nbCompressedBytes*8<<BITRES) - ec_tell_frac(enc) - 1;
+   /* bits =   packet size        -       where we are         - safety*/
+   bits = (nbCompressedBytes*8<<BITRES) - ec_tell_frac(enc) - 1;
    anti_collapse_rsv = isTransient&&LM>=2&&bits>=(LM+2<<BITRES) ? (1<<BITRES) : 0;
    bits -= anti_collapse_rsv;
    codedBands = compute_allocation(st->mode, st->start, st->end, offsets, cap,
@@ -1541,13 +1537,19 @@ int celt_encode_with_ec_float(CELTEncode
       c=0; do {
          st->prefilter_period=IMAX(st->prefilter_period, COMBFILTER_MINPERIOD);
          st->prefilter_period_old=IMAX(st->prefilter_period_old, COMBFILTER_MINPERIOD);
-         comb_filter(out_mem[c], out_mem[c], st->prefilter_period_old, st->prefilter_period, st->mode->shortMdctSize,
-               st->prefilter_gain_old, st->prefilter_gain, st->prefilter_tapset_old, st->prefilter_tapset,
-               st->mode->window, st->overlap);
          if (LM!=0)
-            comb_filter(out_mem[c]+st->mode->shortMdctSize, out_mem[c]+st->mode->shortMdctSize, st->prefilter_period, pitch_index, N-st->mode->shortMdctSize,
+         {
+            comb_filter(out_mem[c], out_mem[c], st->prefilter_period, st->prefilter_period, st->overlap,
+                  st->prefilter_gain, st->prefilter_gain, st->prefilter_tapset, st->prefilter_tapset,
+                  NULL, 0);
+            comb_filter(out_mem[c]+st->overlap, out_mem[c]+st->overlap, st->prefilter_period, pitch_index, N-st->overlap,
                   st->prefilter_gain, gain1, st->prefilter_tapset, prefilter_tapset,
                   st->mode->window, st->mode->overlap);
+         } else {
+            comb_filter(out_mem[c], out_mem[c], st->prefilter_period_old, st->prefilter_period, N,
+                  st->prefilter_gain_old, st->prefilter_gain, st->prefilter_tapset_old, st->prefilter_tapset,
+                  st->mode->window, st->mode->overlap);
+         }
       } while (++c<CC);
 #endif /* ENABLE_POSTFILTER */
 
@@ -1561,14 +1563,6 @@ int celt_encode_with_ec_float(CELTEncode
    st->prefilter_period = pitch_index;
    st->prefilter_gain = gain1;
    st->prefilter_tapset = prefilter_tapset;
-#ifdef RESYNTH
-   if (LM!=0)
-   {
-      st->prefilter_period_old = st->prefilter_period;
-      st->prefilter_gain_old = st->prefilter_gain;
-      st->prefilter_tapset_old = st->prefilter_tapset;
-   }
-#endif
 
    if (CC==2&&C==1) {
       for (i=0;i<st->mode->nbEBands;i++)
@@ -2155,7 +2149,7 @@ int celt_decode_with_ec_float(CELTDecode
 #endif
    int c, i, N;
    int spread_decision;
-   celt_int32 bits;
+   int bits;
    ec_dec _dec;
    VARDECL(celt_sig, freq);
    VARDECL(celt_norm, X);
@@ -2371,7 +2365,7 @@ int celt_decode_with_ec_float(CELTDecode
    alloc_trim = tell+(6<<BITRES) <= total_bits ?
          ec_dec_icdf(dec, trim_icdf, 7) : 5;
 
-   bits = ((celt_int32)len*8<<BITRES) - ec_tell_frac(dec) - 1;
+   bits = (len*8<<BITRES) - ec_tell_frac(dec) - 1;
    anti_collapse_rsv = isTransient&&LM>=2&&bits>=(LM+2<<BITRES) ? (1<<BITRES) : 0;
    bits -= anti_collapse_rsv;
    codedBands = compute_allocation(st->mode, st->start, st->end, offsets, cap,
@@ -2444,14 +2438,19 @@ int celt_decode_with_ec_float(CELTDecode
    c=0; do {
       st->postfilter_period=IMAX(st->postfilter_period, COMBFILTER_MINPERIOD);
       st->postfilter_period_old=IMAX(st->postfilter_period_old, COMBFILTER_MINPERIOD);
-      comb_filter(out_syn[c], out_syn[c], st->postfilter_period_old, st->postfilter_period, st->mode->shortMdctSize,
-            st->postfilter_gain_old, st->postfilter_gain, st->postfilter_tapset_old, st->postfilter_tapset,
-            st->mode->window, st->overlap);
       if (LM!=0)
-         comb_filter(out_syn[c]+st->mode->shortMdctSize, out_syn[c]+st->mode->shortMdctSize, st->postfilter_period, postfilter_pitch, N-st->mode->shortMdctSize,
+      {
+         comb_filter(out_syn[c], out_syn[c], st->postfilter_period, st->postfilter_period, st->overlap,
+               st->postfilter_gain, st->postfilter_gain, st->postfilter_tapset, st->postfilter_tapset,
+               NULL, 0);
+         comb_filter(out_syn[c]+st->overlap, out_syn[c]+st->overlap, st->postfilter_period, postfilter_pitch, N-st->overlap,
                st->postfilter_gain, postfilter_gain, st->postfilter_tapset, postfilter_tapset,
                st->mode->window, st->mode->overlap);
-
+      } else {
+         comb_filter(out_syn[c], out_syn[c], st->postfilter_period_old, st->postfilter_period, N-st->overlap,
+               st->postfilter_gain_old, st->postfilter_gain, st->postfilter_tapset_old, st->postfilter_tapset,
+               st->mode->window, st->mode->overlap);
+      }
    } while (++c<CC);
    st->postfilter_period_old = st->postfilter_period;
    st->postfilter_gain_old = st->postfilter_gain;
@@ -2459,12 +2458,6 @@ int celt_decode_with_ec_float(CELTDecode
    st->postfilter_period = postfilter_pitch;
    st->postfilter_gain = postfilter_gain;
    st->postfilter_tapset = postfilter_tapset;
-   if (LM!=0)
-   {
-      st->postfilter_period_old = st->postfilter_period;
-      st->postfilter_gain_old = st->postfilter_gain;
-      st->postfilter_tapset_old = st->postfilter_tapset;
-   }
 #endif /* ENABLE_POSTFILTER */
 
    if (CC==2&&C==1) {
@@ -2594,7 +2587,7 @@ int celt_decoder_ctl(CELTDecoder * restr
       case CELT_SET_END_BAND_REQUEST:
       {
          celt_int32 value = va_arg(ap, celt_int32);
-         if (value<1 || value>st->mode->nbEBands)
+         if (value<0 || value>=st->mode->nbEBands)
             goto bad_arg;
          st->end = value;
       }
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/plc.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/plc.h
@@ -12,6 +12,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/entcode.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/entcode.c
@@ -12,6 +12,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/fixed_c6x.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/fixed_c6x.h
@@ -15,6 +15,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/entenc.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/entenc.h
@@ -12,6 +12,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -78,22 +82,6 @@ void ec_enc_uint(ec_enc *_this,ec_uint32
         This must be between 0 and 25, inclusive.*/
 void ec_enc_bits(ec_enc *_this,ec_uint32 _fl,unsigned _ftb);
 
-/*Overwrites a few bits at the very start of an existing stream, after they
-   have already been encoded.
-  This makes it possible to have a few flags up front, where it is easy for
-   decoders to access them without parsing the whole stream, even if their
-   values are not determined until late in the encoding process, without having
-   to buffer all the intermediate symbols in the encoder.
-  In order for this to work, at least _nbits bits must have already been
-   encoded using probabilities that are an exact power of two.
-  The encoder can verify the number of encoded bits is sufficient, but cannot
-   check this latter condition.
-  _val:   The bits to encode (in the least _nbits significant bits).
-          They will be decoded in order from most-significant to least.
-  _nbits: The number of bits to overwrite.
-          This must be no more than 8.*/
-void ec_enc_patch_initial_bits(ec_enc *_this,unsigned _val,unsigned _nbits);
-
 /*Compacts the data to fit in the target size.
   This moves up the raw bits at the end of the current buffer so they are at
    the end of the new buffer size.
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/mathops.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/mathops.c
@@ -18,6 +18,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/kiss_fft.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/kiss_fft.c
@@ -10,6 +10,7 @@ Redistribution and use in source and bin
 
     * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
     * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
+    * Neither the author nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission.
 
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/celt_header.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/celt_header.h
@@ -13,6 +13,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/fixed_c5x.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/fixed_c5x.h
@@ -15,6 +15,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/quant_bands.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/quant_bands.h
@@ -13,6 +13,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/entenc.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/entenc.c
@@ -12,6 +12,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -215,29 +219,6 @@ void ec_enc_bits(ec_enc *_this,ec_uint32
   _this->nbits_total+=_bits;
 }
 
-void ec_enc_patch_initial_bits(ec_enc *_this,unsigned _val,unsigned _nbits){
-  int      shift;
-  unsigned mask;
-  celt_assert(_nbits<=EC_SYM_BITS);
-  shift=EC_SYM_BITS-_nbits;
-  mask=(1<<_nbits)-1<<shift;
-  if(_this->offs>0){
-    /*The first byte has been finalized.*/
-    _this->buf[0]=(unsigned char)(_this->buf[0]&~mask|_val<<shift);
-  }
-  else if(_this->rem>=0){
-    /*The first byte is still awaiting carry propagation.*/
-    _this->rem=_this->rem&~mask|_val<<shift;
-  }
-  else if(_this->rng<=EC_CODE_TOP>>shift){
-    /*The renormalization loop has never been run.*/
-    _this->val=_this->val&~((ec_uint32)mask<<EC_CODE_SHIFT)|
-     (ec_uint32)_val<<EC_CODE_SHIFT+shift;
-  }
-  /*The encoder hasn't even encoded _nbits of data yet.*/
-  else _this->error=-1;
-}
-
 void ec_enc_shrink(ec_enc *_this,ec_uint32 _size){
   celt_assert(_this->offs+_this->end_offs<=_size);
   CELT_MOVE(_this->buf+_size-_this->end_offs,
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/stack_alloc.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/stack_alloc.h
@@ -16,6 +16,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/float_cast.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/float_cast.h
@@ -1,27 +1,11 @@
-/* Copyright (C) 2001 Erik de Castro Lopo <erikd AT mega-nerd DOT com> */
 /*
-   Redistribution and use in source and binary forms, with or without
-   modification, are permitted provided that the following conditions
-   are met:
-
-   - Redistributions of source code must retain the above copyright
-   notice, this list of conditions and the following disclaimer.
-
-   - Redistributions in binary form must reproduce the above copyright
-   notice, this list of conditions and the following disclaimer in the
-   documentation and/or other materials provided with the distribution.
-
-   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
-   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
-   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
-   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+** Copyright (C) 2001 Erik de Castro Lopo <erikd AT mega-nerd DOT com>
+**
+** Permission to use, copy, modify, distribute, and sell this file for any 
+** purpose is hereby granted without fee, provided that the above copyright 
+** and this permission notice appear in all copies.  No representations are
+** made about the suitability of this software for any purpose.  It is 
+** provided "as is" without express or implied warranty.
 */
 
 /* Version 1.1 */
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/plc.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/plc.c
@@ -12,6 +12,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/ecintrin.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/ecintrin.h
@@ -12,6 +12,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/modes.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/modes.c
@@ -14,6 +14,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -214,7 +218,7 @@ static void compute_allocation_table(CEL
             if (400*(celt_int32)eband5ms[k] > mode->eBands[j]*(celt_int32)mode->Fs/mode->shortMdctSize)
                break;
          }
-         if (k>maxBands-1)
+         if (k>mode->nbEBands-1)
             allocVectors[i*mode->nbEBands+j] = band_allocation[i*maxBands + maxBands-1];
          else {
             celt_int32 a0, a1;
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/mfrngcod.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/mfrngcod.h
@@ -12,6 +12,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/header.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/header.c
@@ -13,6 +13,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/laplace.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/laplace.c
@@ -13,6 +13,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/bands.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/bands.c
@@ -14,6 +14,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -202,7 +206,7 @@ void denormalise_bands(const CELTMode *m
             x++;
          } while (++j<band_end);
       }
-      for (i=M*eBands[end];i<N;i++)
+      for (i=M*eBands[m->nbEBands];i<N;i++)
          *f++ = 0;
    } while (++c<C);
 }
@@ -1084,14 +1088,7 @@ static unsigned quant_band(int encode, c
                } else {
                   /* Folded spectrum */
                   for (j=0;j<N;j++)
-                  {
-                     celt_word16 tmp;
-                     *seed = lcg_rand(*seed);
-                     /* About 48 dB below the "normal" folding level */
-                     tmp = QCONST16(1.0f/256, 10);
-                     tmp = (*seed)&0x8000 ? tmp : -tmp;
-                     X[j] = lowband[j]+tmp;
-                  }
+                     X[j] = lowband[j];
                   cm = fill;
                }
                renormalise_vector(X, N, gain);
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/vq.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/vq.h
@@ -17,6 +17,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/c64_fft.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/c64_fft.c
@@ -11,6 +11,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/kiss_fft.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/kiss_fft.h
@@ -10,6 +10,7 @@ Redistribution and use in source and bin
 
     * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
     * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
+    * Neither the author nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission.
 
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/mdct.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/mdct.h
@@ -13,6 +13,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/entdec.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/entdec.c
@@ -12,6 +12,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -218,7 +222,7 @@ ec_uint32 ec_dec_uint(ec_dec *_this,ec_u
     ft=(unsigned)(_ft>>ftb)+1;
     s=ec_decode(_this,ft);
     ec_dec_update(_this,s,s+1,ft);
-    t=(ec_uint32)s<<ftb|ec_dec_bits(_this,ftb);
+    t=s<<ftb|ec_dec_bits(_this,ftb);
     if(t<=_ft)return t;
     _this->error=1;
     return _ft;
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/vq.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/vq.c
@@ -13,6 +13,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -68,7 +72,7 @@ static void exp_rotation1(celt_norm *X,
 
 static void exp_rotation(celt_norm *X, int len, int dir, int stride, int K, int spread)
 {
-   static const int SPREAD_FACTOR[3]={15,10,5};
+   static const int SPREAD_FACTOR[3]={5,10,15};
    int i;
    celt_word16 c, s;
    celt_word16 gain, theta;
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/testcelt.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/testcelt.c
@@ -13,6 +13,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/os_support.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/os_support.h
@@ -15,6 +15,9 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 
+   3. The name of the author may not be used to endorse or promote products
+   derived from this software without specific prior written permission.
+
    THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
    IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
    OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/rate.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/rate.h
@@ -13,6 +13,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -101,7 +105,7 @@ celt_int16 **compute_alloc_cache(CELTMod
  @return Total number of bits allocated
 */
 int compute_allocation(const CELTMode *m, int start, int end, const int *offsets, const int *cap, int alloc_trim, int *intensity, int *dual_stero,
-      celt_int32 total, celt_int32 *balance, int *pulses, int *ebits, int *fine_priority, int _C, int LM, ec_ctx *ec, int encode, int prev);
+      int total, celt_int32 *balance, int *pulses, int *ebits, int *fine_priority, int _C, int LM, ec_ctx *ec, int encode, int prev);
 
 
 #endif
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/mathops.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/mathops.h
@@ -18,6 +18,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/modes.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/modes.h
@@ -14,6 +14,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/rate.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/rate.c
@@ -13,6 +13,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -248,11 +252,11 @@ void compute_pulse_cache(CELTMode *m, in
 #define ALLOC_STEPS 6
 
 static inline int interp_bits2pulses(const CELTMode *m, int start, int end, int skip_start,
-      const int *bits1, const int *bits2, const int *thresh, const int *cap, celt_int32 total, celt_int32 *_balance,
+      const int *bits1, const int *bits2, const int *thresh, const int *cap, int total, celt_int32 *_balance,
       int skip_rsv, int *intensity, int intensity_rsv, int *dual_stereo, int dual_stereo_rsv, int *bits,
       int *ebits, int *fine_priority, int _C, int LM, ec_ctx *ec, int encode, int prev)
 {
-   celt_int32 psum;
+   int psum;
    int lo, hi;
    int i, j;
    int logM;
@@ -260,7 +264,7 @@ static inline int interp_bits2pulses(con
    int stereo;
    int codedBands=-1;
    int alloc_floor;
-   celt_int32 left, percoeff;
+   int left, percoeff;
    int done;
    int balance;
    SAVE_STACK;
@@ -278,7 +282,7 @@ static inline int interp_bits2pulses(con
       done = 0;
       for (j=end;j-->start;)
       {
-         int tmp = bits1[j] + (mid*(celt_int32)bits2[j]>>ALLOC_STEPS);
+         int tmp = bits1[j] + (mid*bits2[j]>>ALLOC_STEPS);
          if (tmp >= thresh[j] || done)
          {
             done = 1;
@@ -340,7 +344,7 @@ static inline int interp_bits2pulses(con
       left -= (m->eBands[codedBands]-m->eBands[start])*percoeff;
       rem = IMAX(left-(m->eBands[j]-m->eBands[start]),0);
       band_width = m->eBands[codedBands]-m->eBands[j];
-      band_bits = (int)(bits[j] + percoeff*band_width + rem);
+      band_bits = bits[j] + percoeff*band_width + rem;
       /*Only code a skip decision if we're above the threshold for this band.
         Otherwise it is force-skipped.
         This ensures that we have enough bits to code the skip flag.*/
@@ -416,10 +420,10 @@ static inline int interp_bits2pulses(con
    percoeff = left/(m->eBands[codedBands]-m->eBands[start]);
    left -= (m->eBands[codedBands]-m->eBands[start])*percoeff;
    for (j=start;j<codedBands;j++)
-      bits[j] += ((int)percoeff*(m->eBands[j+1]-m->eBands[j]));
+      bits[j] += percoeff*(m->eBands[j+1]-m->eBands[j]);
    for (j=start;j<codedBands;j++)
    {
-      int tmp = (int)IMIN(left, m->eBands[j+1]-m->eBands[j]);
+      int tmp = IMIN(left, m->eBands[j+1]-m->eBands[j]);
       bits[j] += tmp;
       left -= tmp;
    }
@@ -568,7 +572,7 @@ int compute_allocation(const CELTMode *m
       /* Below this threshold, we're sure not to allocate any PVQ bits */
       thresh[j] = IMAX((C)<<BITRES, (3*(m->eBands[j+1]-m->eBands[j])<<LM<<BITRES)>>4);
       /* Tilt of the allocation curve */
-      trim_offset[j] = C*(m->eBands[j+1]-m->eBands[j])*(alloc_trim-5-LM)*(end-j-1)
+      trim_offset[j] = C*(m->eBands[j+1]-m->eBands[j])*(alloc_trim-5-LM)*(m->nbEBands-j-1)
             <<(LM+BITRES)>>6;
       /* Giving less resolution to single-coefficient bands because they get
          more benefit from having one coarse value per coefficient*/
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/fixed_debug.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/fixed_debug.h
@@ -16,6 +16,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/dump_modes.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/dump_modes.c
@@ -13,6 +13,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/entdec.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/entdec.h
@@ -12,6 +12,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/entcode.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/entcode.h
@@ -12,6 +12,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -37,15 +41,14 @@
 
 typedef celt_int32            ec_int32;
 typedef celt_uint32           ec_uint32;
-typedef celt_uint32           ec_window;
+typedef size_t                ec_window;
 typedef struct ec_ctx         ec_ctx;
 typedef struct ec_ctx         ec_enc;
 typedef struct ec_ctx         ec_dec;
 
 
 
-/*OPT: This must be at least 32 bits, but if you have fast arithmetic on a
-   larger type, you can speed up the decoder by using it for ec_window.*/
+/*This must be at least 32 bits.*/
 # define EC_WINDOW_SIZE ((int)sizeof(ec_window)*CHAR_BIT)
 
 /*The number of bits to use for the range-coded part of unsigned integers.*/
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/celt.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/celt.h
@@ -19,6 +19,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -218,7 +222,7 @@ EXPORT void celt_encoder_destroy(CELTEnc
  *       the length returned be somehow transmitted to the decoder. Otherwise, no
  *       decoding is possible.
 */
-EXPORT int celt_encode_float(CELTEncoder *st, const float *pcm, int frame_size, unsigned char *compressed, int maxCompressedBytes);
+EXPORT int celt_encode_float(CELTEncoder *st, const float *pcm, int frame_size, unsigned char *compressed, int nbCompressedBytes);
 
 /** Encodes a frame of audio.
  @param st Encoder state
@@ -234,7 +238,7 @@ EXPORT int celt_encode_float(CELTEncoder
  *       the length returned be somehow transmitted to the decoder. Otherwise, no
  *       decoding is possible.
  */
-EXPORT int celt_encode(CELTEncoder *st, const celt_int16 *pcm, int frame_size, unsigned char *compressed, int maxCompressedBytes);
+EXPORT int celt_encode(CELTEncoder *st, const celt_int16 *pcm, int frame_size, unsigned char *compressed, int nbCompressedBytes);
 
 /** Query and set encoder parameters 
  @param st Encoder state
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/fixed_generic.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/fixed_generic.h
@@ -17,6 +17,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/quant_bands.c
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/quant_bands.c
@@ -13,6 +13,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -272,7 +276,7 @@ void quant_coarse_energy(const CELTMode
    int badness1=0;
    SAVE_STACK;
 
-   intra = force_intra || (*delayedIntra && nbAvailableBytes > (end-start)*C);
+   intra = force_intra || (*delayedIntra && nbAvailableBytes > end*C);
    if (/*shortBlocks || */intra_decision(eBands, oldEBands, start, effEnd, m->nbEBands, C))
       *delayedIntra = 1;
    else
@@ -295,7 +299,7 @@ void quant_coarse_energy(const CELTMode
 
    ALLOC(oldEBands_intra, C*m->nbEBands, celt_word16);
    ALLOC(error_intra, C*m->nbEBands, celt_word16);
-   CELT_COPY(oldEBands_intra, oldEBands, C*m->nbEBands);
+   CELT_COPY(oldEBands_intra, oldEBands, C*end);
 
    if (two_pass || intra)
    {
@@ -335,12 +339,12 @@ void quant_coarse_energy(const CELTMode
          /* Copy intra bits to bit-stream */
          CELT_COPY(ec_get_buffer(&enc_intra_state) + nstart_bytes,
                intra_bits, nintra_bytes - nstart_bytes);
-         CELT_COPY(oldEBands, oldEBands_intra, C*m->nbEBands);
-         CELT_COPY(error, error_intra, C*m->nbEBands);
+         CELT_COPY(oldEBands, oldEBands_intra, C*end);
+         CELT_COPY(error, error_intra, C*end);
       }
    } else {
-      CELT_COPY(oldEBands, oldEBands_intra, C*m->nbEBands);
-      CELT_COPY(error, error_intra, C*m->nbEBands);
+      CELT_COPY(oldEBands, oldEBands_intra, C*end);
+      CELT_COPY(error, error_intra, C*end);
    }
    RESTORE_STACK;
 }
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/celt_types.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/celt_types.h
@@ -1,31 +1,20 @@
-/* (C) COPYRIGHT 1994-2002 Xiph.Org Foundation */
-/* Modified by Jean-Marc Valin */
-/*
-   Redistribution and use in source and binary forms, with or without
-   modification, are permitted provided that the following conditions
-   are met:
-
-   - Redistributions of source code must retain the above copyright
-   notice, this list of conditions and the following disclaimer.
-
-   - Redistributions in binary form must reproduce the above copyright
-   notice, this list of conditions and the following disclaimer in the
-   documentation and/or other materials provided with the distribution.
-
-   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
-   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
-   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
-   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-*/
 /* celt_types.h taken from libogg */
+/********************************************************************
+ *                                                                  *
+ * THIS FILE IS PART OF THE OggVorbis SOFTWARE CODEC SOURCE CODE.   *
+ * USE, DISTRIBUTION AND REPRODUCTION OF THIS LIBRARY SOURCE IS     *
+ * GOVERNED BY A BSD-STYLE SOURCE LICENSE INCLUDED WITH THIS SOURCE *
+ * IN 'COPYING'. PLEASE READ THESE TERMS BEFORE DISTRIBUTING.       *
+ *                                                                  *
+ * THE OggVorbis SOURCE CODE IS (C) COPYRIGHT 1994-2002             *
+ * by the Xiph.Org Foundation http://www.xiph.org/                  *
+ *                                                                  *
+ ********************************************************************
+
+ function: #ifdef jail to whip a few platforms into the UNIX ideal.
+ last mod: $Id: os_types.h 7524 2004-08-11 04:20:36Z conrad $
 
+ ********************************************************************/
 /**
    @file celt_types.h
    @brief CELT types
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/pitch.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/pitch.h
@@ -18,6 +18,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/celt-0.11.0-src/libcelt/arch.h
+++ mumble-1.2.3-87-gf7d8711/celt-0.11.0-src/libcelt/arch.h
@@ -18,6 +18,10 @@
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    
+   - Neither the name of the Xiph.org Foundation nor the names of its
+   contributors may be used to endorse or promote products derived from
+   this software without specific prior written permission.
+   
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--- mumble-1.2.3-87-gf7d8711.orig/overlay/HardHook.h
+++ mumble-1.2.3-87-gf7d8711/overlay/HardHook.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -47,19 +47,13 @@
 typedef void *(*voidFunc)();
 
 struct HardHook {
-	// Pointer to the place in the original code where replacements happen
 	unsigned char *baseptr;
 	unsigned char orig[6];
 	unsigned char replace[6];
-	// Remembers whether there is a trampoline in place in the target code or
-	// whether restore -> call orig. -> replace has to be used for every intercepted call
 	bool bTrampoline;
-	// Points to the (rest of the) original function when used from the injected function
 	voidFunc call;
 
-	// Pointer to executable code page that holds all trampoline codes
 	static void *pCode;
-	// Offset to next unused addr in pCode
 	static unsigned int uiCode;
 
 	HardHook();
--- mumble-1.2.3-87-gf7d8711.orig/overlay/overlay.pro
+++ mumble-1.2.3-87-gf7d8711/overlay/overlay.pro
@@ -5,8 +5,7 @@ CONFIG -= qt
 CONFIG *= dll shared debug_and_release warn_on
 CONFIG -= embed_manifest_dll
 TARGET = mumble_ol
-SOURCES = lib.cpp d3d9.cpp d3d10.cpp ods.cpp opengl.cpp HardHook.cpp
-HEADERS = lib.h ods.h HardHook.h
+SOURCES = lib.cpp d3d9.cpp d3d10.cpp opengl.cpp HardHook.cpp
 EFFECTS = overlay.fx
 DIST = overlay.h overlay.fx HardHook.h
 
--- mumble-1.2.3-87-gf7d8711.orig/overlay/HardHook.cpp
+++ mumble-1.2.3-87-gf7d8711/overlay/HardHook.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -29,11 +29,34 @@
 */
 
 #include "HardHook.h"
-#include "ods.h"
 
 void *HardHook::pCode = NULL;
 unsigned int HardHook::uiCode = 0;
 
+static void __cdecl ods(const char *format, ...) {
+	char    buf[4096], *p = buf;
+	va_list args;
+
+	va_start(args, format);
+	int len = _vsnprintf_s(p, sizeof(buf) - 1, _TRUNCATE, format, args);
+	va_end(args);
+
+	if (len <= 0)
+		return;
+
+	p += len;
+
+	while (p > buf  &&  isspace(static_cast<unsigned char>(p[-1])))
+		*--p = '\0';
+
+	*p++ = '\r';
+	*p++ = '\n';
+	*p   = '\0';
+
+	OutputDebugStringA(buf);
+}
+
+
 HardHook::HardHook() {
 	int i;
 	baseptr = NULL;
@@ -77,7 +100,6 @@ static unsigned int modrmbytes(unsigned
 }
 
 void *HardHook::cloneCode(void **porig) {
-	DWORD oldProtect, restoreProtect;
 	if (! pCode || uiCode > 4000) {
 		uiCode = 0;
 		pCode = VirtualAlloc(NULL, 4096, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
@@ -88,28 +110,12 @@ void *HardHook::cloneCode(void **porig)
 	n += uiCode;
 	unsigned int idx = 0;
 
-	if (!VirtualProtect(o, 16, PAGE_EXECUTE_READ, &oldProtect)) {
-		fods("HardHook: Failed vprotect (1)");
-		return NULL;
-	}
-
-	while (*o == 0xe9) { // JMP
-		unsigned char *tmp = o;
+	while (*o == 0xe9) {
 		int *iptr = reinterpret_cast<int *>(o+1);
-		// Follow jmp relative to next command. It doesn't make a difference
-		// if we actually perform all the jumps or directly jump after the
-		// chain.
 		o += *iptr + 5;
 
-		fods("HardHook: Chaining from %p to %p", *porig, o);
+		ods("HardHook: Chaining from %p to %p", *porig, o);
 		*porig = o;
-
-		// Assume jump took us out of our read enabled zone, get rights for the new one
-		VirtualProtect(tmp, 16, oldProtect, &restoreProtect);
-		if (!VirtualProtect(o, 16, PAGE_EXECUTE_READ, &oldProtect)) {
-			fods("HardHook: Failed vprotect (2)");
-			return NULL;
-		}
 	}
 
 	do {
@@ -139,7 +145,7 @@ void *HardHook::cloneCode(void **porig)
 			case 0x5e:
 			case 0x5f:
 				break;
-			case 0x68: // PUSH immediate
+			case 0x68:
 				extra = 4;
 				break;
 			case 0x81: // CMP immediate
@@ -152,8 +158,7 @@ void *HardHook::cloneCode(void **porig)
 				extra = modrmbytes(a,b) + 1;
 				break;
 			default:
-				fods("HardHook: Unknown opcode at %d: %2x %2x %2x %2x %2x %2x %2x %2x %2x %2x %2x %2x", idx-1, o[0], o[1], o[2], o[3], o[4], o[5], o[6], o[7], o[8], o[9], o[10], o[11]);
-				VirtualProtect(o, 16, oldProtect, &restoreProtect);
+				ods("HardHook: Unknown opcode at %d: %2x %2x %2x %2x %2x %2x %2x %2x %2x %2x %2x %2x", idx-1, o[0], o[1], o[2], o[3], o[4], o[5], o[6], o[7], o[8], o[9], o[10], o[11]);
 				return NULL;
 				break;
 		}
@@ -162,9 +167,8 @@ void *HardHook::cloneCode(void **porig)
 		idx += extra;
 
 	} while (idx < 6);
-	VirtualProtect(o, 16, oldProtect, &restoreProtect);
 
-	n[idx++] = 0xe9; // Add a relative jmp back to the original code
+	n[idx++] = 0xe9;
 	int offs = o - n - 5;
 
 	int *iptr = reinterpret_cast<int *>(&n[idx]);
@@ -187,22 +191,22 @@ void HardHook::setup(voidFunc func, void
 	unsigned char *fptr = reinterpret_cast<unsigned char *>(func);
 	unsigned char *nptr = reinterpret_cast<unsigned char *>(replacement);
 
-	fods("HardHook: Asked to replace %p with %p", func, replacement);
+	ods("HardHook: Asked to replace %p with %p", func, replacement);
 
-	call = (voidFunc) cloneCode((void **) &fptr);
+	if (VirtualProtect(fptr, 16, PAGE_EXECUTE_READ, &oldProtect)) {
+		call = (voidFunc) cloneCode((void **) &fptr);
 
-	if (call) {
-		bTrampoline = true;
-	} else {
-		bTrampoline = false;
-		call = func;
-	}
+		if (call) {
+			bTrampoline = true;
+		} else {
+			bTrampoline = false;
+			call = func;
+		}
 
-	if (VirtualProtect(fptr, 16, PAGE_EXECUTE_READ, &oldProtect)) {
 		unsigned char **iptr = reinterpret_cast<unsigned char **>(&replace[1]);
 		*iptr = nptr;
-		replace[0] = 0x68; // PUSH (immediate) nptr
-		replace[5] = 0xc3; // RETN
+		replace[0] = 0x68;
+		replace[5] = 0xc3;
 
 		for (i=0;i<6;i++)
 			orig[i]=fptr[i];
@@ -212,12 +216,12 @@ void HardHook::setup(voidFunc func, void
 
 		VirtualProtect(fptr, 16, oldProtect, &restoreProtect);
 	} else {
-		fods("HardHook: Failed vprotect");
+		ods("Failed initial vprotect");
 	}
 }
 
 void HardHook::setupInterface(IUnknown *unkn, LONG funcoffset, voidFunc replacement) {
-	fods("HardHook: Replacing %p function #%ld", unkn, funcoffset);
+	ods("HardHook: Replacing %p function #%ld", unkn, funcoffset);
 	void **ptr = reinterpret_cast<void **>(unkn);
 	ptr = reinterpret_cast<void **>(ptr[0]);
 	setup(reinterpret_cast<voidFunc>(ptr[funcoffset]), replacement);
@@ -234,13 +238,13 @@ void HardHook::inject(bool force) {
 
 	if (VirtualProtect(baseptr, 6, PAGE_EXECUTE_READWRITE, &oldProtect)) {
 		for (i=0;i<6;i++)
-			baseptr[i] = replace[i]; // Replace with jump to new code
+			baseptr[i] = replace[i];
 		VirtualProtect(baseptr, 6, oldProtect, &restoreProtect);
 		FlushInstructionCache(GetCurrentProcess(),baseptr, 6);
 	}
 	for (i=0;i<6;i++)
 		if (baseptr[i] != replace[i])
-			fods("HH: Injection failure at byte %d", i);
+			ods("HH: Injection failure at byte %d", i);
 }
 
 void HardHook::restore(bool force) {
@@ -261,19 +265,19 @@ void HardHook::restore(bool force) {
 }
 
 void HardHook::print() {
-	fods("HardHook: %02x %02x %02x %02x %02x => %02x %02x %02x %02x %02x (%02x %02x %02x %02x %02x)",
-	     orig[0], orig[1], orig[2], orig[3], orig[4],
-	     replace[0], replace[1], replace[2], replace[3], replace[4],
-	     baseptr[0], baseptr[1], baseptr[2], baseptr[3], baseptr[4]);
+	ods("HardHook: %02x %02x %02x %02x %02x => %02x %02x %02x %02x %02x (%02x %02x %02x %02x %02x)",
+	    orig[0], orig[1], orig[2], orig[3], orig[4],
+	    replace[0], replace[1], replace[2], replace[3], replace[4],
+	    baseptr[0], baseptr[1], baseptr[2], baseptr[3], baseptr[4]);
 }
 
 void HardHook::check() {
 	if (memcmp(baseptr, replace, 6) != 0) {
 		if (memcmp(baseptr, orig, 6) == 0) {
-			fods("HH: Restoring function %p", baseptr);
+			ods("HH: Restoring function %p", baseptr);
 			inject(true);
 		} else {
-			fods("HH: Function %p replaced by third party. Lost.");
+			ods("HH: Function %p replaced by third party. Lost.");
 		}
 	}
 }
--- mumble-1.2.3-87-gf7d8711.orig/overlay/overlay.h
+++ mumble-1.2.3-87-gf7d8711/overlay/overlay.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/overlay/lib.cpp
+++ mumble-1.2.3-87-gf7d8711/overlay/lib.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -128,6 +128,44 @@ Mutex::~Mutex() {
 	LeaveCriticalSection(&cs);
 }
 
+void __cdecl _ods_out(const char *format, va_list *args) {
+	char buf[4096], *p = buf + 2;
+
+	buf[0] = 'M'; // Add a prefix
+	buf[1] = ':';
+
+	// Format but be aware of space taken by prefix
+	int len = _vsnprintf_s(p, sizeof(buf) - 3, _TRUNCATE, format, *args);
+
+
+	if (len <= 0)
+		return;
+
+	p += len;
+
+	// Truncate trailing spaces
+	while (p > (buf + 2) && isspace(p[-1]))
+		*--p = '\0';
+
+	// Add custom termination
+	if (p > (buf + sizeof(buf) - 3)) { // Make sure there's space
+		p = buf + sizeof(buf) - 3;
+	}
+	*p++ = '\r';
+	*p++ = '\n';
+	*p   = '\0';
+
+	OutputDebugStringA(buf);
+}
+
+void __cdecl fods(const char *format, ...) {
+	va_list args;
+
+	va_start(args, format);
+	_ods_out(format, &args);
+	va_end(args);
+}
+
 void __cdecl ods(const char *format, ...) {
 #ifndef DEBUG
 	if (!bDebug)
@@ -486,7 +524,7 @@ extern "C" BOOL WINAPI DllMain(HINSTANCE
 				char *p = strrchr(procname, '\\');
 				if (!p) {
 					// No blacklisting if the file has no path
-				} else if (GetProcAddress(NULL, "mumbleSelfDetection") != NULL) {
+				} else if ((_stricmp(p+1, "mumble.exe")==0) || (_stricmp(p+1, "mumble11x.exe")==0)) {
 					ods("Attached to self");
 					bBlackListed = TRUE;
 					bMumble = TRUE;
--- mumble-1.2.3-87-gf7d8711.orig/overlay/opengl.cpp
+++ mumble-1.2.3-87-gf7d8711/overlay/opengl.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/overlay/d3d10.cpp
+++ mumble-1.2.3-87-gf7d8711/overlay/d3d10.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
@@ -587,11 +587,6 @@ void checkDXGIHook(bool preonly) {
 }
 
 extern "C" __declspec(dllexport) void __cdecl PrepareDXGI() {
-	// This function is called by the Mumble client in Mumble's scope
-	// mainly to extract the offsets of various functions in the IDXGISwapChain
-	// and IDXGIObject interfaces that need to be hooked in target
-	// applications. The data is stored in the dxgi shared memory structure.
-
 	if (! dxgi)
 		return;
 
@@ -608,7 +603,7 @@ extern "C" __declspec(dllexport) void __
 	memset(&ovi, 0, sizeof(ovi));
 	ovi.dwOSVersionInfoSize = sizeof(ovi);
 	GetVersionExW(reinterpret_cast<OSVERSIONINFOW *>(&ovi));
-	if ((ovi.dwMajorVersion >= 7) || ((ovi.dwMajorVersion == 6) && (ovi.dwBuildNumber >= 6001))) { // Make sure this is vista or greater as quite a number of <=WinXP users have fake DX10 libs installed
+	if ((ovi.dwMajorVersion >= 7) || ((ovi.dwMajorVersion == 6) && (ovi.dwBuildNumber >= 6001))) {
 		HMODULE hD3D10 = LoadLibrary("D3D10.DLL");
 		HMODULE hDXGI = LoadLibrary("DXGI.DLL");
 
@@ -665,8 +660,6 @@ extern "C" __declspec(dllexport) void __
 
 					if (pDevice && pSwapChain) {
 						HMODULE hRef;
-						// For VC++ the vtable is located at the base addr. of the object and each function entry is a single pointer. Since p.e. the base classes
-						// of IDXGISwapChain have a total of 8 functions the 8+Xth entry points to the Xth added function in the derived interface.
 						void ***vtbl = (void ***) pSwapChain;
 						void *pPresent = (*vtbl)[8];
 						if (! GetModuleHandleEx(GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS | GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT, (char *) pPresent, &hRef)) {
--- mumble-1.2.3-87-gf7d8711.orig/overlay/d3d9.cpp
+++ mumble-1.2.3-87-gf7d8711/overlay/d3d9.cpp
@@ -1,4 +1,4 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
 
    All rights reserved.
 
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/man/mumble11x.1
@@ -0,0 +1,16 @@
+.TH MUMBLE 1 "2008 Januar 07"
+.SH NAME
+mumble \- a low\-latency, high quality voice chat program for gaming.
+.SH SYNOPSIS
+.B mumble11x
+.SH DESCRIPTION
+Mumble is a low\-latency, high quality voice chat utility for
+gaming that runs under X11.
+This is the compatibility client for connecting to server versions 1.1.X.
+.SH SEE ALSO
+.BR mumble\-overlay (1),
+.BR mumble (1).
+.br
+.SH AUTHOR
+mumble and murmurd was written by Thorvald Natvig
+<slicer@users.sourceforge.net>.
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/scripts/murmur.ini.win32
@@ -0,0 +1,150 @@
+# Path to database. If blank, will search for
+# murmur.sqlite in default locations or create it if not found.
+database=
+
+# If you wish to use something other than SQLite, you'll need to set the name
+# of the database above, and also uncomment the below.
+# Sticking with SQLite is strongly recommended, as it's the most well tested
+# and by far the fastest solution.
+#
+#dbDriver=QMYSQL
+#dbUsername=
+#dbPassword=
+#dbHost=
+#dbPort=
+#dbPrefix=murmur_
+#dbOpts=
+
+# Murmur defaults to not using D-Bus. If you wish to use dbus, which is one of the
+# RPC methods available in murmur, please specify so here.
+#
+dbus=session
+
+# Alternate service name. Only use if you are running distinct
+# murmurd processes connected to the same D-Bus daemon.
+#dbusservice=net.sourceforge.mumble.murmur
+
+# If you want to use ZeroC Ice to communicate with Murmur, you need
+# to specify the endpoint to use. Since there is no authentication
+# with ICE, you should only use it if you trust all the users who have
+# shell access to your machine.
+# Please see the ICE documentation on how to specify endpoints.
+ice="tcp -h 127.0.0.1 -p 6502"
+
+# Ice primarily uses local sockets. This means anyone who has a
+# user account on your machine can connect to the Ice services.
+# You can set a plaintext "secret" on the Ice connection, and
+# any script attempting to access must then have this secret
+# (as context with name "secret").
+# Access is split in read (look only) and write (modify) 
+# operations. Write access always includes read access,
+# unless read is explicitly denied (see note below).
+#
+# Note that if this is uncommented and with empty content,
+# access will be denied.
+
+#icesecretread=
+icesecretwrite=
+
+# How many login attempts do we tolerate from one IP
+# inside a given timeframe before we ban the connection?
+# Note that this is global (shared between all virtual servers), and that
+# it counts both successfull and unsuccessfull connection attempts.
+# Set either Attempts or Timeframe to 0 to disable.
+#autobanAttempts = 10
+#autobanTimeframe = 120
+#autobanTime = 300
+
+# Murmur default to logging to murmur.log. If you leave this blank,
+# murmur will log to the console (linux) or through message boxes (win32).
+#logfile=murmur.log
+
+# If set, murmur will write its process ID to this file.
+#pidfile=
+
+# The below will be used as defaults for new configured servers.
+# If you're just running one server (the default), it's easier to
+# configure it here than through D-Bus or Ice.
+#
+# Welcome message sent to clients when they connect
+welcometext="<br />Welcome to this server running <b>Murmur</b>.<br />Enjoy your stay!<br />"
+
+# Port to bind TCP and UDP sockets to
+port=64738
+
+# Specific IP or hostname to bind to.
+# If this is left blank (default), murmur will bind to all available addresses.
+#host=
+
+# Password to join server
+serverpassword=
+
+# Maximum bandwidth (in bits per second) clients are allowed
+# to send speech at.
+bandwidth=72000
+
+# Maximum number of concurrent clients allowed.
+users=100
+
+# Regular expression used to validate channel names
+# (note that you have to escape backslashes with \ )
+#channelname=[ \\-=\\w\\#\\[\\]\\{\\}\\(\\)\\@\\|]+
+
+# Regular expression used to validate user names
+# (note that you have to escape backslashes with \ )
+#username=[-=\\w\\[\\]\\{\\}\\(\\)\\@\\|\\.]+
+
+# Maximum length of text messages in characters. 0 for no limit.
+#textmessagelength=5000
+
+# Maximum length of text messages in characters, with image data. 0 for no limit.
+#imagemessagelength=131072
+
+# Allow clients to use HTML in messages, user comments and channel descriptions?
+#allowhtml=true
+
+# Murmur retains the per-server log entries in an internal database which
+# allows it to be accessed over D-Bus/ICE.
+# How many days should such entries be kept?
+# Set to 0 to keep forever, or -1 to disable logging to the DB
+#logdays=31
+
+# To enable public server registration, the serverpassword must be blank, and
+# this must all be filled out.
+# The password here is used to create a registry for the server name; subsequent
+# updates will need the same password. Don't lose your password.
+# The URL is your own website, and only set the registerHostname for static IP
+# addresses.
+# Only uncomment the 'registerName' parameter if you wish to give your "Root" channel a custom name.
+#
+#registerName=Mumble Server
+#registerPassword=secret
+#registerUrl=http://mumble.sourceforge.net/
+#registerHostname=
+
+# To enable bonjour service discovery uncomment the following line.
+# To change the name announced by bonjour adjust the registerName variable.
+# See http://developer.apple.com/networking/bonjour/index.html for more information
+# about bonjour.
+#bonjour=True
+
+# If you have a proper SSL certificate, you can provide the filenames here.
+# Otherwise, Murmur will create it's own certificate automatically.
+#sslCert=
+#sslKey=
+
+# If murmur is started as root, which user should it switch to?
+# This option is ignored if murmur isn't started with root privileges.
+#uname=
+
+# If this options is enabled, only clients which have a certificate are allowed
+# to connect.
+#certrequired=False
+
+# You can configure any of the configuration options for Ice here. We recommend
+# leave the defaults as they are.
+# Please note that this section has to be last in the configuration file.
+#
+[Ice]
+Ice.Warn.UnknownProperties=1
+Ice.MessageSizeMax=65536
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/scripts/murmur.ini.osx
@@ -0,0 +1,150 @@
+# Path to database. If blank, will search for
+# murmur.sqlite in default locations or create it if not found.
+database=
+
+# If you wish to use something other than SQLite, you'll need to set the name
+# of the database above, and also uncomment the below.
+# Sticking with SQLite is strongly recommended, as it's the most well tested
+# and by far the fastest solution.
+#
+#dbDriver=QMYSQL
+#dbUsername=
+#dbPassword=
+#dbHost=
+#dbPort=
+#dbPrefix=murmur_
+#dbOpts=
+
+# Murmur defaults to not using D-Bus. If you wish to use dbus, which is one of the
+# RPC methods available in murmur, please specify so here.
+#
+#dbussession
+
+# Alternate service name. Only use if you are running distinct
+# murmurd processes connected to the same D-Bus daemon.
+#dbusservice=net.sourceforge.mumble.murmur
+
+# If you want to use ZeroC Ice to communicate with Murmur, you need
+# to specify the endpoint to use. Since there is no authentication
+# with ICE, you should only use it if you trust all the users who have
+# shell access to your machine.
+# Please see the ICE documentation on how to specify endpoints.
+ice="tcp -h 127.0.0.1 -p 6502"
+
+# Ice primarily uses local sockets. This means anyone who has a
+# user account on your machine can connect to the Ice services.
+# You can set a plaintext "secret" on the Ice connection, and
+# any script attempting to access must then have this secret
+# (as context with name "secret").
+# Access is split in read (look only) and write (modify) 
+# operations. Write access always includes read access,
+# unless read is explicitly denied (see note below).
+#
+# Note that if this is uncommented and with empty content,
+# access will be denied.
+
+#icesecretread=
+icesecretwrite=
+
+# How many login attempts do we tolerate from one IP
+# inside a given timeframe before we ban the connection?
+# Note that this is global (shared between all virtual servers), and that
+# it counts both successfull and unsuccessfull connection attempts.
+# Set either Attempts or Timeframe to 0 to disable.
+#autobanAttempts = 10
+#autobanTimeframe = 120
+#autobanTime = 300
+
+# Murmur default to logging to murmur.log. If you leave this blank,
+# murmur will log to the console (linux) or through message boxes (win32).
+#logfile=murmur.log
+
+# If set, murmur will write its process ID to this file.
+#pidfile=
+
+# The below will be used as defaults for new configured servers.
+# If you're just running one server (the default), it's easier to
+# configure it here than through D-Bus or Ice.
+#
+# Welcome message sent to clients when they connect
+welcometext="<br />Welcome to this server running <b>Murmur</b>.<br />Enjoy your stay!<br />"
+
+# Port to bind TCP and UDP sockets to
+port=64738
+
+# Specific IP or hostname to bind to.
+# If this is left blank (default), murmur will bind to all available addresses.
+#host=
+
+# Password to join server
+serverpassword=
+
+# Maximum bandwidth (in bits per second) clients are allowed
+# to send speech at.
+bandwidth=72000
+
+# Maximum number of concurrent clients allowed.
+users=100
+
+# Regular expression used to validate channel names
+# (note that you have to escape backslashes with \ )
+#channelname=[ \\-=\\w\\#\\[\\]\\{\\}\\(\\)\\@\\|]+
+
+# Regular expression used to validate user names
+# (note that you have to escape backslashes with \ )
+#username=[-=\\w\\[\\]\\{\\}\\(\\)\\@\\|\\.]+
+
+# Maximum length of text messages in characters. 0 for no limit.
+#textmessagelength=5000
+
+# Maximum length of text messages in characters, with image data. 0 for no limit.
+#imagemessagelength=131072
+
+# Allow clients to use HTML in messages, user comments and channel descriptions?
+#allowhtml=true
+
+# Murmur retains the per-server log entries in an internal database which
+# allows it to be accessed over D-Bus/ICE.
+# How many days should such entries be kept?
+# Set to 0 to keep forever, or -1 to disable logging to the DB
+#logdays=31
+
+# To enable public server registration, the serverpassword must be blank, and
+# this must all be filled out.
+# The password here is used to create a registry for the server name; subsequent
+# updates will need the same password. Don't lose your password.
+# The URL is your own website, and only set the registerHostname for static IP
+# addresses.
+# Only uncomment the 'registerName' parameter if you wish to give your "Root" channel a custom name.
+#
+#registerName=Mumble Server
+#registerPassword=secret
+#registerUrl=http://mumble.sourceforge.net/
+#registerHostname=
+
+# To enable bonjour service discovery uncomment the following line.
+# To change the name announced by bonjour adjust the registerName variable.
+# See http://developer.apple.com/networking/bonjour/index.html for more information
+# about bonjour.
+#bonjour=True
+
+# If you have a proper SSL certificate, you can provide the filenames here.
+# Otherwise, Murmur will create it's own certificate automatically.
+#sslCert=
+#sslKey=
+
+# If murmur is started as root, which user should it switch to?
+# This option is ignored if murmur isn't started with root privileges.
+#uname=
+
+# If this options is enabled, only clients which have a certificate are allowed
+# to connect.
+#certrequired=False
+
+# You can configure any of the configuration options for Ice here. We recommend
+# leave the defaults as they are.
+# Please note that this section has to be last in the configuration file.
+#
+[Ice]
+Ice.Warn.UnknownProperties=1
+Ice.MessageSizeMax=65536
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/scripts/mkini.sh
@@ -0,0 +1,19 @@
+#! /bin/bash
+
+cp murmur.ini murmur.ini.win32
+cp murmur.ini murmur.ini.osx
+cp murmur.ini murmur.ini.system
+
+perl -pi.bak -e 's!^(#|)ice=!ice=!' murmur.ini.win32
+
+perl -pi.bak -e 's!^(#|)ice=!ice=!' murmur.ini.osx
+perl -pi.bak -e 's!^(#|)dbus=!#dbus!' murmur.ini.osx
+
+perl -pi.bak -e 's!^(#|)ice=!ice=!' murmur.ini.system
+perl -pi.bak -e 's/^(#|)dbus=.*$/dbus=system/' murmur.ini.system
+perl -pi.bak -e 's/^(#|)logfile=.*$/logfile=\/var\/log\/mumble-server\/mumble-server.log/' murmur.ini.system
+perl -pi.bak -e 's/^(#|)pidfile=.*$/pidfile=\/var\/run\/mumble-server\/mumble-server.pid/' murmur.ini.system
+perl -pi.bak -e 's/^(#|)database=.*$/database=\/var\/lib\/mumble-server\/mumble-server.sqlite/' murmur.ini.system
+perl -pi.bak -e 's/^(#|)uname=.*$/uname=mumble-server/' murmur.ini.system
+
+perl -pi.bak -e 'BEGIN{undef $/;} s/\n/\r\n/smg' murmur.ini.win32
--- mumble-1.2.3-87-gf7d8711.orig/g15helper/g15helper_macx.c
+++ mumble-1.2.3-87-gf7d8711/g15helper/g15helper_macx.c
@@ -1,4 +1,4 @@
-/* Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/g15helper/g15helper.c
+++ mumble-1.2.3-87-gf7d8711/g15helper/g15helper.c
@@ -1,4 +1,4 @@
-/* Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/g15helper/g15helper.rc
+++ mumble-1.2.3-87-gf7d8711/g15helper/g15helper.rc
@@ -8,15 +8,15 @@ IDI_ICON1               ICON    DISCARDA
 #define VER_DEBUG                   VS_FF_DEBUG
 #endif
 
-#ifdef SNAPSHOT_BUILD
+#ifndef RELEASE_BUILD
 #define	VER_RELEASE	VS_FF_SPECIALBUILD|VS_FF_PRERELEASE
 #else
 #define VER_RELEASE 0L
 #endif
 
 VS_VERSION_INFO VERSIONINFO
-	FILEVERSION		1,2,4,0
-	PRODUCTVERSION	1,2,4,0
+	FILEVERSION		1,2,3,0
+	PRODUCTVERSION	1,2,3,0
 	FILEFLAGSMASK	VS_FFI_FILEFLAGSMASK
 	FILEFLAGS		(VER_DEBUG|VER_RELEASE)
 	FILEOS			VOS_NT_WINDOWS32
@@ -29,12 +29,12 @@ VS_VERSION_INFO VERSIONINFO
 			BEGIN
 				VALUE "CompanyName", "Mikkel Krautz"
 				VALUE "FileDescription", "Mumble G15 LCD Helper"
-				VALUE "FileVersion", "1.2.4"
-				VALUE "ProductVersion", "1.2.4"
-				VALUE "LegalCopyright", "Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>"
+				VALUE "FileVersion", "1.2.3"
+				VALUE "ProductVersion", "1.2.3"
+				VALUE "LegalCopyright", "Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>"
 				VALUE "OriginalFilename", "mumble-g15-helper.exe"
 				VALUE "ProductName", "Mumble G15 LCD Helper"
-#ifdef SNAPSHOT_BUILD
+#ifndef RELEASE_BUILD
 				VALUE "SpecialBuild", "Snapshot development release"
 #endif
 			END
--- mumble-1.2.3-87-gf7d8711.orig/g15helper/g15helper.h
+++ mumble-1.2.3-87-gf7d8711/g15helper/g15helper.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2008-2009, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/g15helper/g15helper.plist
+++ mumble-1.2.3-87-gf7d8711/g15helper/g15helper.plist
@@ -13,7 +13,7 @@
 	<key>CFBundleSignature</key>
 	<string>G15H</string>
 	<key>CFBundleVersion</key>
-	<string>1.2.4</string>
+	<string>1.2.3</string>
 	<key>NSHumanReadableCopyright</key>
 	<string>Copyright (c) 2009 Mikkel Krautz &lt;mikkel@krautz.dk&gt;</string>
 </dict>
--- mumble-1.2.3-87-gf7d8711.orig/macx/macx.pro
+++ mumble-1.2.3-87-gf7d8711/macx/macx.pro
@@ -1,4 +1,4 @@
 TEMPLATE = subdirs
 
 CONFIG += debug_and_release
-SUBDIRS = overlay compat osax
+SUBDIRS = compat osax
--- mumble-1.2.3-87-gf7d8711.orig/macx/common.pri
+++ mumble-1.2.3-87-gf7d8711/macx/common.pri
@@ -1,6 +1,6 @@
 # Common OSX overlay settings.
 
-VERSION = 1.2.4
+VERSION = 1.2.3
 
 DEFINES *= VERSION=\\\"$$VERSION\\\"
 
--- mumble-1.2.3-87-gf7d8711.orig/macx/osax/osax.plist
+++ mumble-1.2.3-87-gf7d8711/macx/osax/osax.plist
@@ -13,7 +13,7 @@
 	<key>CFBundlePackageType</key>
 	<string>osax</string>
 	<key>CFbundleVersion</key>
-	<string>1.2.4</string>
+	<string>1.2.3</string>
 	<key>CFBundleSignature</key>
 	<string>MUOL</string>
 	<key>CSResourcesFileMapped</key>
--- mumble-1.2.3-87-gf7d8711.orig/macx/osax/osax.m
+++ mumble-1.2.3-87-gf7d8711/macx/osax/osax.m
@@ -1,4 +1,4 @@
-/* Copyright (C) 2010-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2010, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- mumble-1.2.3-87-gf7d8711.orig/macx/overlay/overlay.m
+++ mumble-1.2.3-87-gf7d8711/macx/overlay/overlay.m
@@ -1,5 +1,5 @@
-/* Copyright (C) 2005-2011, Thorvald Natvig <thorvald@natvig.com>
-   Copyright (C) 2008-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2005-2010, Thorvald Natvig <thorvald@natvig.com>
+   Copyright (C) 2008-2010, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
--- /dev/null
+++ mumble-1.2.3-87-gf7d8711/macx/scripts/osxdist.py
@@ -0,0 +1,561 @@
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+#
+# Simple Mac OS X Application Bundler for Mumble
+#
+# Loosely based on original bash-version by Sebastian Schlingmann (based, again, on a OSX application bundler
+# by Thomas Keller).
+#
+
+import sys, os, string, re, shutil, plistlib, tempfile, exceptions, datetime, tarfile
+from subprocess import Popen, PIPE
+from optparse import OptionParser
+
+options = None
+
+def gitrev():
+	'''Get git revision of the current Mumble build.'''
+	return os.popen('git describe').read()[:-1]
+
+def codesign(path):
+	'''Call the codesign executable.'''
+
+	if hasattr(path, 'isalpha'):
+		path = (path,)
+	for p in path:
+		p = Popen(('codesign', '--keychain', options.codesign_keychain, '--signature-size', '6400', '-vvvv', '-s', options.codesign, p))
+		retval = p.wait()
+		if retval != 0:
+			return retval
+	return 0
+
+def create_overlay_package():
+	return
+	print '* Creating overlay installer'
+
+	bundle = os.path.join('release', 'MumbleOverlay.osax')
+	overlaylib = os.path.join('release', 'libmumbleoverlay.dylib')
+	if options.codesign:
+		codesign(bundle)
+		codesign(overlaylib)
+	os.system('/Developer/Applications/Utilities/PackageMaker.app/Contents/MacOS/PackageMaker --doc macx/overlay-installer/MumbleOverlayInstaller.pmdoc --info macx/overlay-installer/PackageInfo --out release/MumbleOverlay.pkg')
+	if options.codesign:
+		os.system('xar-sign release/MumbleOverlay.pkg')
+
+class AppBundle(object):
+
+	def is_system_lib(self, lib):
+		'''
+			Is the library a system library, meaning that we should not include it in our bundle?
+		'''
+		if lib.startswith('/System/Library/'):
+			return True
+		if lib.startswith('/usr/lib/'):
+			return True
+
+		return False
+
+	def is_dylib(self, lib):
+		'''
+			Is the library a dylib?
+		'''
+		return lib.endswith('.dylib')
+
+	def get_framework_base(self, fw):
+		'''
+			Extracts the base .framework bundle path from a library in an abitrary place in a framework.
+		'''
+		paths = fw.split('/')
+		for i, str in enumerate(paths):
+			if str.endswith('.framework'):
+				return '/'.join(paths[:i+1])
+		return None
+
+	def is_framework(self, lib):
+		'''
+			Is the library a framework?
+		'''
+		return bool(self.get_framework_base(lib))
+
+	def get_binary_libs(self, path):
+		'''
+			Get a list of libraries that we depend on.
+		'''
+		m = re.compile('^\t(.*)\ \(.*$')
+		libs = Popen(['otool', '-L', path], stdout=PIPE).communicate()[0]
+		libs = string.split(libs, '\n')
+		ret = []
+		bn = os.path.basename(path)
+		for line in libs:
+			g = m.match(line)
+			if g is not None:
+				lib = g.groups()[0]
+				if lib != bn:
+					ret.append(lib)
+		return ret
+
+	def handle_libs(self):
+		'''
+			Copy non-system libraries that we depend on into our bundle, and fix linker
+			paths so they are relative to our bundle.
+		'''
+		print ' * Taking care of libraries'
+
+		# Does our fwpath exist?
+		fwpath = os.path.join(os.path.abspath(self.bundle), 'Contents', 'Frameworks')
+		if not os.path.exists(fwpath):
+			os.mkdir(fwpath)
+
+		self.handle_binary_libs()
+
+		murmurd = os.path.join(os.path.abspath(self.bundle), 'Contents', 'MacOS', 'murmurd')
+		if os.path.exists(murmurd):
+			self.handle_binary_libs(murmurd)
+
+		g15 = os.path.join(os.path.abspath(self.bundle), 'Contents', 'MacOS', 'mumble-g15-helper')
+		if os.path.exists(g15):
+			self.handle_binary_libs(g15)
+
+		actd = os.path.join(os.path.abspath(self.bundle), 'Contents', 'MacOS', 'actd')
+		if os.path.exists(actd):
+			self.handle_binary_libs(actd)
+
+		manual = os.path.join(os.path.abspath(self.bundle), 'Contents', 'Plugins', 'libmanual.dylib')
+		if os.path.exists(manual):
+			self.handle_binary_libs(manual)
+
+	def handle_binary_libs(self, macho=None):
+		'''
+			Fix up dylib depends for a specific binary.
+		'''
+		print "macho is ", macho
+		# Does our fwpath exist already? If not, create it.
+		if not self.framework_path:
+			self.framework_path = self.bundle + '/Contents/Frameworks'
+			if not os.path.exists(self.framework_path):
+				os.mkdir(self.framework_path)
+			else:
+				shutil.rmtree(self.framework_path)
+				os.mkdir(self.framework_path)
+
+		# If we weren't explicitly told which binary to operate on, pick the
+		# bundle's default executable from its property list.
+		if macho is None:
+			macho = os.path.abspath(self.binary)
+		else:
+			macho = os.path.abspath(macho)
+
+		libs = self.get_binary_libs(macho)
+
+		for lib in libs:
+
+			# Skip system libraries
+			if self.is_system_lib(lib):
+				continue
+
+			# Frameworks are 'special'.
+			if self.is_framework(lib):
+				fw_path = self.get_framework_base(lib)
+				basename = os.path.basename(fw_path)
+				name = basename.split('.framework')[0]
+				rel = basename + '/' + name
+
+				abs = self.framework_path + '/' + rel
+
+				if not basename in self.handled_libs:
+					dst = self.framework_path + '/' + basename
+					shutil.copytree(fw_path, dst, symlinks=True)
+					if name.startswith('Qt'):
+						os.remove(dst + '/Headers')
+						os.remove(dst + '/' + name + '.prl')
+						os.remove(dst + '/' + name + '_debug')
+						os.remove(dst + '/' + name + '_debug.prl')
+						shutil.rmtree(dst + '/Versions/4/Headers')
+						os.remove(dst + '/Versions/4/' + name + '_debug')
+						os.chmod(abs, 0755)
+						os.system('install_name_tool -id @executable_path/../Frameworks/%s %s' % (rel, abs))
+						self.handled_libs[basename] = True
+						self.handle_binary_libs(abs)
+				os.chmod(macho, 0755)
+				os.system('install_name_tool -change %s @executable_path/../Frameworks/%s %s' % (lib, rel, macho))
+
+			# Regular dylibs
+			else:
+				basename = os.path.basename(lib)
+				rel = basename
+
+				if not basename in self.handled_libs:
+					# Hack to work with non-rpath Ice (for 10.4 compat)
+					if lib.startswith('libIce'):
+						iceprefix = os.environ.get('ICE_PREFIX', None)
+						if not iceprefix:
+							raise Exception('No ICE_PREFIX set')
+						lib = iceprefix + '/lib/' + basename
+					print lib
+					print self.framework_path + '/' + basename
+					shutil.copy(lib, self.framework_path  + '/' + basename)
+					abs = self.framework_path + '/' + rel
+					os.chmod(abs, 0755)
+					os.system('install_name_tool -id @executable_path/../Frameworks/%s %s' % (rel, abs))
+					self.handled_libs[basename] = True
+					self.handle_binary_libs(abs)
+				os.chmod(macho, 0755)
+				os.system('install_name_tool -change %s @executable_path/../Frameworks/%s %s' % (lib, rel, macho))
+
+	def copy_murmur(self):
+		'''
+			Copy the murmurd binary into our Mumble app bundle
+		'''
+		print ' * Copying murmurd binary'
+		src = os.path.join(self.bundle, '..', 'murmurd')
+		dst = os.path.join(self.bundle, 'Contents', 'MacOS', 'murmurd')
+		shutil.copy(src, dst)
+
+		print ' * Copying murmurd configuration'
+		dst = os.path.join(self.bundle, 'Contents', 'MacOS', 'murmur.ini')
+		shutil.copy('scripts/murmur.ini.osx', dst)
+	
+	def copy_actd(self):
+		''' 
+			Copy actd binary into our Mumble app bundle
+		'''
+		print ' * Copying actd binary'
+		src = os.path.join(self.bundle, '..', 'actd.app', 'Contents', 'MacOS', 'actd')
+		dst = os.path.join(self.bundle, 'Contents', 'MacOS', 'actd')
+		shutil.copy(src, dst)
+
+	def copy_g15helper(self):
+		'''
+			Copy the Mumble G15 helper daemon into our Mumble app bundle.
+		'''
+		if os.path.exists(os.path.join(self.bundle, '..', 'mumble-g15-helper')):
+			print ' * Copying G15 helper'
+			src = os.path.join(self.bundle, '..', 'mumble-g15-helper')
+			dst = os.path.join(self.bundle, 'Contents', 'MacOS', 'mumble-g15-helper')
+			shutil.copy(src, dst)
+		else:
+			print ' * No G15 helper found, skipping...'
+
+	def copy_resources(self, rsrcs):
+		'''
+			Copy needed resources into our bundle.
+		'''
+		print ' * Copying needed resources'
+		rsrcpath = os.path.join(self.bundle, 'Contents', 'Resources')
+		if not os.path.exists(rsrcpath):
+			os.mkdir(rsrcpath)
+
+		# Copy resources already in the bundle
+		for rsrc in rsrcs:
+			b = os.path.basename(rsrc)
+			if os.path.isdir(rsrc):
+	                        shutil.copytree(rsrc, os.path.join(rsrcpath, b), symlinks=True)
+			elif os.path.isfile(rsrc):
+				shutil.copy(rsrc, os.path.join(rsrcpath, b))
+
+		return
+		# Extras
+		shutil.copy('release/MumbleOverlay.pkg', os.path.join(rsrcpath, 'MumbleOverlay.pkg'))
+
+	def copy_codecs(self):
+		'''
+			Copy over dynamic CELT libraries.
+		'''
+		print ' * Copying CELT libraries.'
+		dst = os.path.join(self.bundle, 'Contents', 'Codecs')
+		if not os.path.exists(dst):
+			os.makedirs(dst)
+		shutil.copy('release/libcelt0.0.7.0.dylib', dst)
+		shutil.copy('release/libcelt0.0.11.0.dylib', dst)
+
+	def copy_plugins(self):
+		return
+		'''
+			Copy over any built Mumble plugins.
+		'''
+		print ' * Copying positional audio plugins'
+		dst = os.path.join(self.bundle, 'Contents', 'Plugins')
+		if os.path.exists(dst):
+			shutil.rmtree(dst)
+		shutil.copytree('release/plugins/', dst, symlinks=True)
+
+	def copy_qt_plugins(self):
+		'''
+			Copy over any needed Qt plugins.
+		'''
+
+		print ' * Copying Qt and preparing plugins'
+
+		src = os.popen('qmake -query QT_INSTALL_PREFIX').read().strip() + '/plugins'
+		dst = os.path.join(self.bundle, 'Contents', 'QtPlugins')
+		shutil.copytree(src, dst, symlinks=False)
+
+		top = dst
+		files = {}
+
+		def cb(arg, dirname, fnames):
+			if dirname == top:
+				return
+			files[os.path.basename(dirname)] = fnames
+
+		os.path.walk(top, cb, None)
+
+		exclude = ( 'phonon_backend', 'designer', 'script' )
+
+		for dir, files in files.items():
+			absdir = dst + '/' + dir
+			if dir in exclude:
+				shutil.rmtree(absdir)
+				continue
+			for file in files:
+				abs = absdir + '/' + file
+				if file.endswith('_debug.dylib'):
+					os.remove(abs)
+				else:
+					os.system('install_name_tool -id %s %s' % (file, abs))
+					self.handle_binary_libs(abs)
+
+	def update_plist(self):
+		'''
+			Modify our bundle's Info.plist to make it ready for release.
+		'''
+		if self.version is not None:
+			print ' * Changing version in Info.plist'
+			p = self.infoplist
+			p['CFBundleVersion'] = self.version
+			p['CFBundleExecutable'] = "actd"
+			p['CFBundleIconFile'] = 'actd.icns'
+			p['CFBundleGetInfoString'] = '''
+			An adapted version of mumble which runs over NDN as our audio conference tool
+				'''
+			plistlib.writePlist(p, self.infopath)
+
+	def add_compat_warning(self):
+		'''
+			Add compat binary for when our binary is run on i386 or ppc.
+			The compat binary displays a warning dialog telling the user that they need to download a universal version of Mumble
+		'''
+		print ' * Splicing Mumble.compat into main bundle executable'
+		os.system('lipo -create release/Mumble.compat -arch x86_64 %s -output %s' % (self.binary, self.binary))
+
+	def set_min_macosx_version(self, version):
+		'''
+			Set the minimum version of Mac OS X version that this App will run on.
+		'''
+		print ' * Setting minimum Mac OS X version to: %s' % (version)
+		self.infoplist['LSMinimumSystemVersion'] = version
+
+	def done(self):
+		plistlib.writePlist(self.infoplist, self.infopath)
+		print ' * Done!'
+		print ''
+
+	def __init__(self, bundle, version=None):
+		self.framework_path = ''
+		self.handled_libs = {}
+		self.bundle = bundle
+		self.version = version
+		self.infopath = os.path.join(os.path.abspath(bundle), 'Contents', 'Info.plist')
+		self.infoplist = plistlib.readPlist(self.infopath)
+		self.binary = os.path.join(os.path.abspath(bundle), 'Contents', 'MacOS', self.infoplist['CFBundleExecutable'])
+		print ' * Preparing AppBundle'
+
+
+class FolderObject(object):
+
+	class Exception(exceptions.Exception):
+		pass
+
+	def __init__(self):
+		self.tmp = tempfile.mkdtemp()
+
+	def copy(self, src, dst='/'):
+		'''
+			Copy a file or directory into the folder.
+		'''
+		asrc = os.path.abspath(src)
+
+		if dst[0] != '/':
+			raise self.Exception
+
+		# Determine destination
+		if dst[-1] == '/':
+			adst = os.path.abspath(self.tmp + '/' + dst + os.path.basename(src))
+		else:
+			adst = os.path.abspath(self.tmp + '/' + dst)
+
+		if os.path.isdir(asrc):
+			print ' * Copying directory: %s' % os.path.basename(asrc)
+			shutil.copytree(asrc, adst, symlinks=True)
+		elif os.path.isfile(asrc):
+			print ' * Copying file: %s' % os.path.basename(asrc)
+			shutil.copy(asrc, adst)
+
+	def symlink(self, src, dst):
+		'''
+			Create a symlink inside the folder.
+		'''
+		asrc = os.path.abspath(src)
+		adst = self.tmp + '/' + dst
+		print ' * Creating symlink %s' % os.path.basename(asrc)
+		os.symlink(asrc, adst)
+
+	def mkdir(self, name):
+		'''
+			Create a directory inside the folder.
+		'''
+		print ' * Creating directory %s' % os.path.basename(name)
+		adst = self.tmp + '/'  + name
+		os.makedirs(adst)
+
+
+class DiskImage(FolderObject):
+
+	def __init__(self, filename, volname):
+		FolderObject.__init__(self)
+		print ' * Preparing to create diskimage'
+		self.filename = filename
+		self.volname = volname
+
+	def create(self):
+		'''
+			Create the disk image itself.
+		'''
+		print ' * Creating diskimage. Please wait...'
+		if os.path.exists(self.filename):
+			shutil.rmtree(self.filename)
+		p = Popen(['hdiutil', 'create',
+		           '-srcfolder', self.tmp,
+		           '-format', 'UDBZ',
+		           '-volname', self.volname,
+		           self.filename])
+		retval = p.wait()
+		print ' * Removing temporary directory.'
+		shutil.rmtree(self.tmp)
+		print ' * Done!'
+
+
+if __name__ == '__main__':
+	parser = OptionParser()
+	parser.add_option('', '--release', dest='release', help='Build a release. This determines the version number of the release.')
+	parser.add_option('', '--snapshot', dest='snapshot', help='Build a snapshot release. This determines the \'snapshot version\'.')
+	parser.add_option('', '--git', dest='git', help='Build a snapshot release. Use the git revision number as the \'snapshot version\'.', action='store_true', default=False)
+	parser.add_option('', '--universal', dest='universal', help='Build an universal snapshot.', action='store_true', default=False)
+	parser.add_option('', '--only-appbundle', dest='only_appbundle', help='Only prepare the appbundle. Do not package.', action='store_true', default=False)
+	parser.add_option('', '--only-overlay', dest='only_overlay', help='Only create the overlay installer.', action='store_true', default=False)
+	parser.add_option('', '--codesign', dest='codesign', help='Identity to use for code signing. (If not set, no code signing will occur)')
+	parser.add_option('', '--codesign-keychain', dest='codesign_keychain', help='The keychain to use when invoking the codesign utility.')
+
+	options, args = parser.parse_args()
+
+	# Release
+	if options.release:
+		ver = options.release
+		if options.universal:
+			fn = 'release/Mumble-Universal-%s.dmg' % ver
+			title = 'Mumble %s (Universal) ' %ver
+		else:
+			fn = 'release/Mumble-%s.dmg' % ver
+			title = 'Mumble %s ' % ver
+	# Snapshot
+	elif options.snapshot or options.git:
+		if not options.git:
+			ver = options.snapshot
+		else:
+			ver = gitrev()	
+		if options.universal:
+			fn = 'release/Mumble-Universal-Snapshot-%s.dmg' % ver
+			title = 'Mumble Snapshot %s (Universal)' % ver
+		else:
+			fn = 'release/Mumble-Snapshot-%s.dmg' % ver
+			title = 'Mumble Snapshot %s' % ver
+	else:
+		print 'Neither snapshot or release selected. Bailing.'
+		sys.exit(1)
+
+	if not os.path.exists('release'):
+		print 'This script needs to be run from the root of the Mumble source tree.'
+		sys.exit(1)
+
+	# Fix overlay installer package
+	create_overlay_package()
+	if options.only_overlay:
+		sys.exit(0)
+
+	# Fix .ini files
+	os.system('cd scripts && sh mkini.sh')
+
+	# Do the finishing touches to our Application bundle before release
+	a = AppBundle('release/Mumble.app', ver)
+	a.copy_murmur()
+	a.copy_g15helper()
+	a.copy_actd()
+	a.copy_codecs()
+	a.copy_plugins()
+	a.copy_qt_plugins()
+	a.handle_libs()
+	a.copy_resources(['icons/mumble.icns', 'scripts/qt.conf', 'src/actd/actd.icns'])
+	a.update_plist()
+	if not options.universal:
+		a.add_compat_warning()
+		a.set_min_macosx_version('10.5.0')
+	else:
+		a.set_min_macosx_version('10.4.8')
+	a.done()
+
+	# Sign our binaries, etc.
+	if options.codesign:
+		print ' * Signing binaries with identity `%s\'' % options.codesign
+		binaries = (
+			# 1.2.x
+			'release/Mumble.app',
+			'release/Mumble.app/Contents/MacOS/murmurd',
+			'release/Mumble.app/Contents/MacOS/mumble-g15-helper',
+			'release/Mumble.app/Contents/Plugins/liblink.dylib',
+			'release/Mumble.app/Contents/Plugins/libmanual.dylib',
+			'release/Mumble.app/Contents/Codecs/libcelt0.0.7.0.dylib',
+			'release/Mumble.app/Contents/Codecs/libcelt0.0.11.0.dylib',
+			'release/Mumble.app/Contents/MacOS/actd',
+		)
+
+		codesign(binaries)
+		print ''
+
+	if options.only_appbundle:
+		sys.exit(0)
+
+	# Create diskimage
+	d = DiskImage(fn, title)
+	d.copy('macx/scripts/DS_Store', '/.DS_Store')
+	d.mkdir('.background')
+	d.copy('icons/mumble.osx.installer.png', '/.background/background.png')
+	d.symlink('/Applications', '/Applications')
+	d.copy('release/Mumble.app')
+	d.copy('README', '/ReadMe.txt')
+	d.copy('CHANGES', '/Changes.txt')
+	d.mkdir('Licenses')
+	d.copy('LICENSE', '/Licenses/Mumble.txt')
+	d.copy('installer/lgpl.txt', '/Licenses/Qt.txt')
+	d.copy('installer/speex.txt', '/Licenses/Speex.txt')
+	d.copy('installer/portaudio.txt', '/Licenses/PortAudio.txt')
+	d.copy('installer/gpl.txt', '/Licenses/ZeroC-Ice.txt')
+	d.mkdir('Murmur Extras')
+	d.copy('scripts/murmur.ini.osx', '/Murmur Extras/murmur.ini')
+	d.copy('scripts/murmur.conf', '/Murmur Extras/')
+	d.copy('scripts/dbusauth.pl', '/Murmur Extras/')
+	d.copy('scripts/murmur.pl', '/Murmur Extras/')
+	d.copy('scripts/weblist.pl', '/Murmur Extras/')
+	d.copy('scripts/weblist.php', '/Murmur Extras/')
+	d.copy('scripts/icedemo.php', '/Murmur Extras/')
+	d.copy('scripts/ListUsers.cs', '/Murmur Extras/')
+	d.copy('scripts/mumble-auth.py', '/Murmur Extras/')
+	d.copy('scripts/rubytest.rb', '/Murmur Extras')
+	d.copy('scripts/simpleregister.php', '/Murmur Extras/')
+	d.copy('scripts/testcallback.py', '/Murmur Extras/')
+	d.copy('scripts/testauth.py', '/Murmur Extras/')
+	d.copy('scripts/addban.php', '/Murmur Extras/')
+	d.copy('scripts/php.ini', '/Murmur Extras/')
+	d.copy('src/murmur/Murmur.ice', '/Murmur Extras/')
+	d.copy('scripts/phpBB3auth.ini', '/Murmur Extras/')
+	d.copy('scripts/phpBB3auth.py', '/Murmur Extras/')
+	d.create()
--- mumble-1.2.3-87-gf7d8711.orig/macx/compat/compat.m
+++ mumble-1.2.3-87-gf7d8711/macx/compat/compat.m
@@ -1,4 +1,4 @@
-/* Copyright (C) 2010-2011, Mikkel Krautz <mikkel@krautz.dk>
+/* Copyright (C) 2010, Mikkel Krautz <mikkel@krautz.dk>
 
    All rights reserved.
 
